// Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2018.3 (lin64) Build 2405991 Thu Dec  6 23:36:41 MST 2018
// Date        : Fri May 17 13:37:13 2019
// Host        : AndoUbuntu running 64-bit Ubuntu 16.04.6 LTS
// Command     : write_verilog -force -mode funcsim gig_eth_mac_axi.vm
// Design      : gig_eth_mac_axi
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xc7z020clg484-1
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* CHECK_LICENSE_TYPE = "gig_eth_fifo_async_17x32,fifo_generator_v13_2_3,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "fifo_generator_v13_2_3,Vivado 2018.3" *) 
module gig_eth_fifo_async_17x32
   (rst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en,
    dout,
    full,
    almost_full,
    empty,
    valid,
    rd_data_count,
    wr_data_count);
  input rst;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 write_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME write_clk, FREQ_HZ 100000000, PHASE 0.000, INSERT_VIP 0" *) input wr_clk;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 read_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME read_clk, FREQ_HZ 100000000, PHASE 0.000, INSERT_VIP 0" *) input rd_clk;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_DATA" *) input [16:0]din;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_DATA" *) output [16:0]dout;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE ALMOST_FULL" *) output almost_full;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;
  output valid;
  output [5:0]rd_data_count;
  output [5:0]wr_data_count;

  wire almost_full;
  wire [16:0]din;
  wire [16:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire [5:0]rd_data_count;
  wire rd_en;
  wire rst;
  wire valid;
  wire wr_clk;
  wire [5:0]wr_data_count;
  wire wr_en;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_overflow_UNCONNECTED;
  wire NLW_U0_prog_empty_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_rd_rst_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_underflow_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire NLW_U0_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_data_count_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;

  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "0" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "5" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "17" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "17" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FULL_FLAGS_RST_VAL = "1" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "1" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "0" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "1" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "1" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "0" *) 
  (* C_HAS_UNDERFLOW = "0" *) 
  (* C_HAS_VALID = "1" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "1" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "2" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "1" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "0" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) 
  (* C_PROG_EMPTY_TYPE = "0" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "31" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "30" *) 
  (* C_PROG_FULL_TYPE = "0" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "6" *) 
  (* C_RD_DEPTH = "32" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "5" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "0" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "1" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "6" *) 
  (* C_WR_DEPTH = "32" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "5" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  gig_eth_fifo_async_17x32_fifo_generator_v13_2_3 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(almost_full),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_U0_data_count_UNCONNECTED[4:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_U0_overflow_UNCONNECTED),
        .prog_empty(NLW_U0_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_U0_rd_rst_busy_UNCONNECTED),
        .rst(rst),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(1'b0),
        .underflow(NLW_U0_underflow_UNCONNECTED),
        .valid(valid),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_U0_wr_rst_busy_UNCONNECTED));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) 
(* INV_DEF_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_cdc_async_rst" *) (* RST_ACTIVE_HIGH = "1" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "ASYNC_RST" *) 
module gig_eth_fifo_async_17x32_xpm_cdc_async_rst
   (src_arst,
    dest_clk,
    dest_arst);
  input src_arst;
  input dest_clk;
  output dest_arst;

  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ASYNC_RST" *) wire [1:0]arststages_ff;
  wire dest_clk;
  wire src_arst;

  assign dest_arst = arststages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDPE #(
    .INIT(1'b0)) 
    \arststages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(src_arst),
        .Q(arststages_ff[0]));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDPE #(
    .INIT(1'b0)) 
    \arststages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(arststages_ff[0]),
        .PRE(src_arst),
        .Q(arststages_ff[1]));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) 
(* INV_DEF_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_cdc_async_rst" *) (* RST_ACTIVE_HIGH = "1" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "ASYNC_RST" *) 
module gig_eth_fifo_async_17x32_xpm_cdc_async_rst__2
   (src_arst,
    dest_clk,
    dest_arst);
  input src_arst;
  input dest_clk;
  output dest_arst;

  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ASYNC_RST" *) wire [1:0]arststages_ff;
  wire dest_clk;
  wire src_arst;

  assign dest_arst = arststages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDPE #(
    .INIT(1'b0)) 
    \arststages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(src_arst),
        .Q(arststages_ff[0]));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDPE #(
    .INIT(1'b0)) 
    \arststages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(arststages_ff[0]),
        .PRE(src_arst),
        .Q(arststages_ff[1]));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "1" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module gig_eth_fifo_async_17x32_xpm_cdc_gray
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire [3:0]binval;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  wire [4:0]dest_out_bin;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin_ff[0]_i_1 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(\dest_graysync_ff[1] [2]),
        .I2(\dest_graysync_ff[1] [4]),
        .I3(\dest_graysync_ff[1] [3]),
        .I4(\dest_graysync_ff[1] [1]),
        .O(binval[0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[1]_i_1 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(\dest_graysync_ff[1] [3]),
        .I2(\dest_graysync_ff[1] [4]),
        .I3(\dest_graysync_ff[1] [2]),
        .O(binval[1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[2]_i_1 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(\dest_graysync_ff[1] [4]),
        .I2(\dest_graysync_ff[1] [3]),
        .O(binval[2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[3]_i_1 
       (.I0(\dest_graysync_ff[1] [3]),
        .I1(\dest_graysync_ff[1] [4]),
        .O(binval[3]));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[0]),
        .Q(dest_out_bin[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[1]),
        .Q(dest_out_bin[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[2]),
        .Q(dest_out_bin[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[3]),
        .Q(dest_out_bin[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(dest_out_bin[4]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "1" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module gig_eth_fifo_async_17x32_xpm_cdc_gray__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire [3:0]binval;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  wire [4:0]dest_out_bin;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin_ff[0]_i_1 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(\dest_graysync_ff[1] [2]),
        .I2(\dest_graysync_ff[1] [4]),
        .I3(\dest_graysync_ff[1] [3]),
        .I4(\dest_graysync_ff[1] [1]),
        .O(binval[0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[1]_i_1 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(\dest_graysync_ff[1] [3]),
        .I2(\dest_graysync_ff[1] [4]),
        .I3(\dest_graysync_ff[1] [2]),
        .O(binval[1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[2]_i_1 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(\dest_graysync_ff[1] [4]),
        .I2(\dest_graysync_ff[1] [3]),
        .O(binval[2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[3]_i_1 
       (.I0(\dest_graysync_ff[1] [3]),
        .I1(\dest_graysync_ff[1] [4]),
        .O(binval[3]));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[0]),
        .Q(dest_out_bin[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[1]),
        .Q(dest_out_bin[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[2]),
        .Q(dest_out_bin[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[3]),
        .Q(dest_out_bin[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(dest_out_bin[4]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "4" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module gig_eth_fifo_async_17x32_xpm_cdc_single
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [3:0]syncstages_ff;

  assign dest_out = syncstages_ff[3];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "4" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module gig_eth_fifo_async_17x32_xpm_cdc_single__2
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [3:0]syncstages_ff;

  assign dest_out = syncstages_ff[3];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "gig_eth_fifo_async_36x128,fifo_generator_v13_2_3,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "fifo_generator_v13_2_3,Vivado 2018.3" *) 
module gig_eth_fifo_async_36x128
   (rst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en,
    dout,
    full,
    almost_full,
    empty,
    valid,
    rd_data_count,
    wr_data_count);
  input rst;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 write_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME write_clk, FREQ_HZ 100000000, PHASE 0.000, INSERT_VIP 0" *) input wr_clk;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 read_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME read_clk, FREQ_HZ 100000000, PHASE 0.000, INSERT_VIP 0" *) input rd_clk;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_DATA" *) input [35:0]din;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_DATA" *) output [35:0]dout;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE ALMOST_FULL" *) output almost_full;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;
  output valid;
  output [7:0]rd_data_count;
  output [7:0]wr_data_count;

  wire almost_full;
  wire [35:0]din;
  wire [35:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rst;
  wire valid;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_overflow_UNCONNECTED;
  wire NLW_U0_prog_empty_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_rd_rst_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_underflow_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire NLW_U0_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [6:0]NLW_U0_data_count_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;

  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "0" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "7" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "36" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "36" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FULL_FLAGS_RST_VAL = "1" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "1" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "0" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "1" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "1" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "0" *) 
  (* C_HAS_UNDERFLOW = "0" *) 
  (* C_HAS_VALID = "1" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "1" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "2" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "1" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "0" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) 
  (* C_PROG_EMPTY_TYPE = "0" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "127" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "126" *) 
  (* C_PROG_FULL_TYPE = "0" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "8" *) 
  (* C_RD_DEPTH = "128" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "7" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "0" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "1" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "8" *) 
  (* C_WR_DEPTH = "128" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "7" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  gig_eth_fifo_async_36x128_fifo_generator_v13_2_3 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(almost_full),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_U0_data_count_UNCONNECTED[6:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_U0_overflow_UNCONNECTED),
        .prog_empty(NLW_U0_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_U0_rd_rst_busy_UNCONNECTED),
        .rst(rst),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(1'b0),
        .underflow(NLW_U0_underflow_UNCONNECTED),
        .valid(valid),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_U0_wr_rst_busy_UNCONNECTED));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) 
(* INV_DEF_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_cdc_async_rst" *) (* RST_ACTIVE_HIGH = "1" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "ASYNC_RST" *) 
module gig_eth_fifo_async_36x128_xpm_cdc_async_rst
   (src_arst,
    dest_clk,
    dest_arst);
  input src_arst;
  input dest_clk;
  output dest_arst;

  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ASYNC_RST" *) wire [1:0]arststages_ff;
  wire dest_clk;
  wire src_arst;

  assign dest_arst = arststages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDPE #(
    .INIT(1'b0)) 
    \arststages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(src_arst),
        .Q(arststages_ff[0]));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDPE #(
    .INIT(1'b0)) 
    \arststages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(arststages_ff[0]),
        .PRE(src_arst),
        .Q(arststages_ff[1]));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) 
(* INV_DEF_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_cdc_async_rst" *) (* RST_ACTIVE_HIGH = "1" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "ASYNC_RST" *) 
module gig_eth_fifo_async_36x128_xpm_cdc_async_rst__2
   (src_arst,
    dest_clk,
    dest_arst);
  input src_arst;
  input dest_clk;
  output dest_arst;

  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ASYNC_RST" *) wire [1:0]arststages_ff;
  wire dest_clk;
  wire src_arst;

  assign dest_arst = arststages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDPE #(
    .INIT(1'b0)) 
    \arststages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(src_arst),
        .Q(arststages_ff[0]));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDPE #(
    .INIT(1'b0)) 
    \arststages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(arststages_ff[0]),
        .PRE(src_arst),
        .Q(arststages_ff[1]));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "1" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "7" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module gig_eth_fifo_async_36x128_xpm_cdc_gray
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [6:0]src_in_bin;
  input dest_clk;
  output [6:0]dest_out_bin;

  wire [6:0]async_path;
  wire [5:0]binval;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [6:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [6:0]\dest_graysync_ff[1] ;
  wire [6:0]dest_out_bin;
  wire [5:0]gray_enc;
  wire src_clk;
  wire [6:0]src_in_bin;

  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[0]_i_1 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(binval[1]),
        .O(binval[0]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin_ff[1]_i_1 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(\dest_graysync_ff[1] [3]),
        .I2(\dest_graysync_ff[1] [5]),
        .I3(\dest_graysync_ff[1] [6]),
        .I4(\dest_graysync_ff[1] [4]),
        .I5(\dest_graysync_ff[1] [2]),
        .O(binval[1]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin_ff[2]_i_1 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(\dest_graysync_ff[1] [4]),
        .I2(\dest_graysync_ff[1] [6]),
        .I3(\dest_graysync_ff[1] [5]),
        .I4(\dest_graysync_ff[1] [3]),
        .O(binval[2]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[3]_i_1 
       (.I0(\dest_graysync_ff[1] [3]),
        .I1(\dest_graysync_ff[1] [5]),
        .I2(\dest_graysync_ff[1] [6]),
        .I3(\dest_graysync_ff[1] [4]),
        .O(binval[3]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[4]_i_1 
       (.I0(\dest_graysync_ff[1] [4]),
        .I1(\dest_graysync_ff[1] [6]),
        .I2(\dest_graysync_ff[1] [5]),
        .O(binval[4]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[5]_i_1 
       (.I0(\dest_graysync_ff[1] [5]),
        .I1(\dest_graysync_ff[1] [6]),
        .O(binval[5]));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[0]),
        .Q(dest_out_bin[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[1]),
        .Q(dest_out_bin[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[2]),
        .Q(dest_out_bin[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[3]),
        .Q(dest_out_bin[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[4]),
        .Q(dest_out_bin[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[5]),
        .Q(dest_out_bin[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(dest_out_bin[6]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[6]),
        .Q(async_path[6]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "1" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "7" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module gig_eth_fifo_async_36x128_xpm_cdc_gray__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [6:0]src_in_bin;
  input dest_clk;
  output [6:0]dest_out_bin;

  wire [6:0]async_path;
  wire [5:0]binval;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [6:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [6:0]\dest_graysync_ff[1] ;
  wire [6:0]dest_out_bin;
  wire [5:0]gray_enc;
  wire src_clk;
  wire [6:0]src_in_bin;

  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[0]_i_1 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(binval[1]),
        .O(binval[0]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin_ff[1]_i_1 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(\dest_graysync_ff[1] [3]),
        .I2(\dest_graysync_ff[1] [5]),
        .I3(\dest_graysync_ff[1] [6]),
        .I4(\dest_graysync_ff[1] [4]),
        .I5(\dest_graysync_ff[1] [2]),
        .O(binval[1]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin_ff[2]_i_1 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(\dest_graysync_ff[1] [4]),
        .I2(\dest_graysync_ff[1] [6]),
        .I3(\dest_graysync_ff[1] [5]),
        .I4(\dest_graysync_ff[1] [3]),
        .O(binval[2]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[3]_i_1 
       (.I0(\dest_graysync_ff[1] [3]),
        .I1(\dest_graysync_ff[1] [5]),
        .I2(\dest_graysync_ff[1] [6]),
        .I3(\dest_graysync_ff[1] [4]),
        .O(binval[3]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[4]_i_1 
       (.I0(\dest_graysync_ff[1] [4]),
        .I1(\dest_graysync_ff[1] [6]),
        .I2(\dest_graysync_ff[1] [5]),
        .O(binval[4]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[5]_i_1 
       (.I0(\dest_graysync_ff[1] [5]),
        .I1(\dest_graysync_ff[1] [6]),
        .O(binval[5]));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[0]),
        .Q(dest_out_bin[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[1]),
        .Q(dest_out_bin[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[2]),
        .Q(dest_out_bin[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[3]),
        .Q(dest_out_bin[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[4]),
        .Q(dest_out_bin[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[5]),
        .Q(dest_out_bin[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(dest_out_bin[6]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[6]),
        .Q(async_path[6]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "4" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module gig_eth_fifo_async_36x128_xpm_cdc_single
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [3:0]syncstages_ff;

  assign dest_out = syncstages_ff[3];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "4" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module gig_eth_fifo_async_36x128_xpm_cdc_single__2
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [3:0]syncstages_ff;

  assign dest_out = syncstages_ff[3];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "gig_eth_fifo_async_36x256,fifo_generator_v13_2_3,{}" *) (* downgradeipidentifiedwarnings = "yes" *) (* x_core_info = "fifo_generator_v13_2_3,Vivado 2018.3" *) 
module gig_eth_fifo_async_36x256
   (rst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en,
    dout,
    full,
    almost_full,
    empty,
    valid,
    rd_data_count,
    wr_data_count);
  input rst;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 write_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME write_clk, FREQ_HZ 100000000, PHASE 0.000, INSERT_VIP 0" *) input wr_clk;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 read_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME read_clk, FREQ_HZ 100000000, PHASE 0.000, INSERT_VIP 0" *) input rd_clk;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_DATA" *) input [35:0]din;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_DATA" *) output [35:0]dout;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE ALMOST_FULL" *) output almost_full;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;
  output valid;
  output [8:0]rd_data_count;
  output [8:0]wr_data_count;

  wire almost_full;
  wire [35:0]din;
  wire [35:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire rst;
  wire valid;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_overflow_UNCONNECTED;
  wire NLW_U0_prog_empty_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_rd_rst_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_underflow_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire NLW_U0_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [7:0]NLW_U0_data_count_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;

  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "0" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "8" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "36" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "36" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FULL_FLAGS_RST_VAL = "1" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "1" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "0" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "1" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "1" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "0" *) 
  (* C_HAS_UNDERFLOW = "0" *) 
  (* C_HAS_VALID = "1" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "1" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "2" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "1" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "0" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) 
  (* C_PROG_EMPTY_TYPE = "0" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "255" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "254" *) 
  (* C_PROG_FULL_TYPE = "0" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "9" *) 
  (* C_RD_DEPTH = "256" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "8" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "0" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "1" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "9" *) 
  (* C_WR_DEPTH = "256" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "8" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  gig_eth_fifo_async_36x256_fifo_generator_v13_2_3 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(almost_full),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_U0_data_count_UNCONNECTED[7:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_U0_overflow_UNCONNECTED),
        .prog_empty(NLW_U0_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_U0_rd_rst_busy_UNCONNECTED),
        .rst(rst),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(1'b0),
        .underflow(NLW_U0_underflow_UNCONNECTED),
        .valid(valid),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_U0_wr_rst_busy_UNCONNECTED));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) 
(* INV_DEF_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_cdc_async_rst" *) (* RST_ACTIVE_HIGH = "1" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "ASYNC_RST" *) 
module gig_eth_fifo_async_36x256_xpm_cdc_async_rst
   (src_arst,
    dest_clk,
    dest_arst);
  input src_arst;
  input dest_clk;
  output dest_arst;

  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ASYNC_RST" *) wire [1:0]arststages_ff;
  wire dest_clk;
  wire src_arst;

  assign dest_arst = arststages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDPE #(
    .INIT(1'b0)) 
    \arststages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(src_arst),
        .Q(arststages_ff[0]));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDPE #(
    .INIT(1'b0)) 
    \arststages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(arststages_ff[0]),
        .PRE(src_arst),
        .Q(arststages_ff[1]));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) 
(* INV_DEF_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_cdc_async_rst" *) (* RST_ACTIVE_HIGH = "1" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* xpm_cdc = "ASYNC_RST" *) 
module gig_eth_fifo_async_36x256_xpm_cdc_async_rst__2
   (src_arst,
    dest_clk,
    dest_arst);
  input src_arst;
  input dest_clk;
  output dest_arst;

  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ASYNC_RST" *) wire [1:0]arststages_ff;
  wire dest_clk;
  wire src_arst;

  assign dest_arst = arststages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDPE #(
    .INIT(1'b0)) 
    \arststages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(src_arst),
        .Q(arststages_ff[0]));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDPE #(
    .INIT(1'b0)) 
    \arststages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(arststages_ff[0]),
        .PRE(src_arst),
        .Q(arststages_ff[1]));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "1" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module gig_eth_fifo_async_36x256_xpm_cdc_gray
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire [6:0]binval;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  wire [7:0]dest_out_bin;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[0]_i_1 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(binval[2]),
        .I2(\dest_graysync_ff[1] [1]),
        .O(binval[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[1]_i_1 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(binval[2]),
        .O(binval[1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin_ff[2]_i_1 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(\dest_graysync_ff[1] [4]),
        .I2(\dest_graysync_ff[1] [6]),
        .I3(\dest_graysync_ff[1] [7]),
        .I4(\dest_graysync_ff[1] [5]),
        .I5(\dest_graysync_ff[1] [3]),
        .O(binval[2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin_ff[3]_i_1 
       (.I0(\dest_graysync_ff[1] [3]),
        .I1(\dest_graysync_ff[1] [5]),
        .I2(\dest_graysync_ff[1] [7]),
        .I3(\dest_graysync_ff[1] [6]),
        .I4(\dest_graysync_ff[1] [4]),
        .O(binval[3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[4]_i_1 
       (.I0(\dest_graysync_ff[1] [4]),
        .I1(\dest_graysync_ff[1] [6]),
        .I2(\dest_graysync_ff[1] [7]),
        .I3(\dest_graysync_ff[1] [5]),
        .O(binval[4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[5]_i_1 
       (.I0(\dest_graysync_ff[1] [5]),
        .I1(\dest_graysync_ff[1] [7]),
        .I2(\dest_graysync_ff[1] [6]),
        .O(binval[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[6]_i_1 
       (.I0(\dest_graysync_ff[1] [6]),
        .I1(\dest_graysync_ff[1] [7]),
        .O(binval[6]));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[0]),
        .Q(dest_out_bin[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[1]),
        .Q(dest_out_bin[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[2]),
        .Q(dest_out_bin[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[3]),
        .Q(dest_out_bin[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[4]),
        .Q(dest_out_bin[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[5]),
        .Q(dest_out_bin[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[6]),
        .Q(dest_out_bin[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(dest_out_bin[7]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "1" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* xpm_cdc = "GRAY" *) 
module gig_eth_fifo_async_36x256_xpm_cdc_gray__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire [6:0]binval;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  wire [7:0]dest_out_bin;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[0]_i_1 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(binval[2]),
        .I2(\dest_graysync_ff[1] [1]),
        .O(binval[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[1]_i_1 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(binval[2]),
        .O(binval[1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin_ff[2]_i_1 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(\dest_graysync_ff[1] [4]),
        .I2(\dest_graysync_ff[1] [6]),
        .I3(\dest_graysync_ff[1] [7]),
        .I4(\dest_graysync_ff[1] [5]),
        .I5(\dest_graysync_ff[1] [3]),
        .O(binval[2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin_ff[3]_i_1 
       (.I0(\dest_graysync_ff[1] [3]),
        .I1(\dest_graysync_ff[1] [5]),
        .I2(\dest_graysync_ff[1] [7]),
        .I3(\dest_graysync_ff[1] [6]),
        .I4(\dest_graysync_ff[1] [4]),
        .O(binval[3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin_ff[4]_i_1 
       (.I0(\dest_graysync_ff[1] [4]),
        .I1(\dest_graysync_ff[1] [6]),
        .I2(\dest_graysync_ff[1] [7]),
        .I3(\dest_graysync_ff[1] [5]),
        .O(binval[4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin_ff[5]_i_1 
       (.I0(\dest_graysync_ff[1] [5]),
        .I1(\dest_graysync_ff[1] [7]),
        .I2(\dest_graysync_ff[1] [6]),
        .O(binval[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin_ff[6]_i_1 
       (.I0(\dest_graysync_ff[1] [6]),
        .I1(\dest_graysync_ff[1] [7]),
        .O(binval[6]));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[0]),
        .Q(dest_out_bin[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[1]),
        .Q(dest_out_bin[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[2]),
        .Q(dest_out_bin[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[3]),
        .Q(dest_out_bin[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[4]),
        .Q(dest_out_bin[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[5]),
        .Q(dest_out_bin[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(binval[6]),
        .Q(dest_out_bin[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dest_out_bin_ff_reg[7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(dest_out_bin[7]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "4" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module gig_eth_fifo_async_36x256_xpm_cdc_single
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [3:0]syncstages_ff;

  assign dest_out = syncstages_ff[3];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "4" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module gig_eth_fifo_async_36x256_xpm_cdc_single__2
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [3:0]syncstages_ff;

  assign dest_out = syncstages_ff[3];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[2]),
        .Q(syncstages_ff[3]),
        .R(1'b0));
endmodule

(* ACLK_FREQ = "100000000" *) (* AXI_MST_ID = "0" *) (* AXI_WIDTH_AD = "32" *) 
(* AXI_WIDTH_CID = "4" *) (* AXI_WIDTH_DA = "32" *) (* AXI_WIDTH_DS = "4" *) 
(* AXI_WIDTH_ID = "4" *) (* AXI_WIDTH_SID = "8" *) (* FPGA_FAMILY = "64'b0101101001011001010011100101000100110111001100000011000000110000" *) 
(* MAC_ADDR = "48'b000000100001001000110100010101100111100000000000" *) (* MAC_RTL_VERSION = "538510083" *) (* P_RX_DESCRIPTOR_FAW = "4" *) 
(* P_RX_FIFO_AW = "8" *) (* P_RX_FIFO_BNUM_FAW = "5" *) (* P_RX_FIFO_DEPTH = "256" *) 
(* P_TXCLK_INV = "1'b0" *) (* P_TX_DESCRIPTOR_FAW = "4" *) (* P_TX_FIFO_AW = "7" *) 
(* P_TX_FIFO_DEPTH = "128" *) 
(* NotValidForBitStream *)
module gig_eth_mac_axi
   (ARESETn,
    ACLK,
    M_MID,
    M_AWID,
    M_AWADDR,
    M_AWLEN,
    M_AWLOCK,
    M_AWSIZE,
    M_AWBURST,
    M_AWCACHE,
    M_AWPROT,
    M_AWVALID,
    M_AWREADY,
    M_AWQOS,
    M_AWREGION,
    M_WID,
    M_WDATA,
    M_WSTRB,
    M_WLAST,
    M_WVALID,
    M_WREADY,
    M_BID,
    M_BRESP,
    M_BVALID,
    M_BREADY,
    M_ARID,
    M_ARADDR,
    M_ARLEN,
    M_ARLOCK,
    M_ARSIZE,
    M_ARBURST,
    M_ARCACHE,
    M_ARPROT,
    M_ARVALID,
    M_ARREADY,
    M_ARQOS,
    M_ARREGION,
    M_RID,
    M_RDATA,
    M_RRESP,
    M_RLAST,
    M_RVALID,
    M_RREADY,
    S_AWID,
    S_AWADDR,
    S_AWLEN,
    S_AWLOCK,
    S_AWSIZE,
    S_AWBURST,
    S_AWCACHE,
    S_AWPROT,
    S_AWVALID,
    S_AWREADY,
    S_AWQOS,
    S_AWREGION,
    S_WID,
    S_WDATA,
    S_WSTRB,
    S_WLAST,
    S_WVALID,
    S_WREADY,
    S_BID,
    S_BRESP,
    S_BVALID,
    S_BREADY,
    S_ARID,
    S_ARADDR,
    S_ARLEN,
    S_ARLOCK,
    S_ARSIZE,
    S_ARBURST,
    S_ARCACHE,
    S_ARPROT,
    S_ARVALID,
    S_ARREADY,
    S_ARQOS,
    S_ARREGION,
    S_RID,
    S_RDATA,
    S_RRESP,
    S_RLAST,
    S_RVALID,
    S_RREADY,
    IRQ,
    gmii_gtxc,
    gmii_txd,
    gmii_txen,
    gmii_txer,
    gmii_rxc,
    gmii_rxd,
    gmii_rxdv,
    gmii_rxer,
    gmii_col,
    gmii_crs,
    gtx_clk,
    gtx_clk_stable,
    gbe_phy_reset_n);
  input ARESETn;
  input ACLK;
  output [3:0]M_MID;
  output [3:0]M_AWID;
  output [31:0]M_AWADDR;
  output [7:0]M_AWLEN;
  output M_AWLOCK;
  output [2:0]M_AWSIZE;
  output [1:0]M_AWBURST;
  output [3:0]M_AWCACHE;
  output [2:0]M_AWPROT;
  output M_AWVALID;
  input M_AWREADY;
  output [3:0]M_AWQOS;
  output [3:0]M_AWREGION;
  output [3:0]M_WID;
  output [31:0]M_WDATA;
  output [3:0]M_WSTRB;
  output M_WLAST;
  output M_WVALID;
  input M_WREADY;
  input [3:0]M_BID;
  input [1:0]M_BRESP;
  input M_BVALID;
  output M_BREADY;
  output [3:0]M_ARID;
  output [31:0]M_ARADDR;
  output [7:0]M_ARLEN;
  output M_ARLOCK;
  output [2:0]M_ARSIZE;
  output [1:0]M_ARBURST;
  output [3:0]M_ARCACHE;
  output [2:0]M_ARPROT;
  output M_ARVALID;
  input M_ARREADY;
  output [3:0]M_ARQOS;
  output [3:0]M_ARREGION;
  input [3:0]M_RID;
  input [31:0]M_RDATA;
  input [1:0]M_RRESP;
  input M_RLAST;
  input M_RVALID;
  output M_RREADY;
  input [7:0]S_AWID;
  input [31:0]S_AWADDR;
  input [7:0]S_AWLEN;
  input S_AWLOCK;
  input [2:0]S_AWSIZE;
  input [1:0]S_AWBURST;
  input [3:0]S_AWCACHE;
  input [2:0]S_AWPROT;
  input S_AWVALID;
  output S_AWREADY;
  input [3:0]S_AWQOS;
  input [3:0]S_AWREGION;
  input [7:0]S_WID;
  input [31:0]S_WDATA;
  input [3:0]S_WSTRB;
  input S_WLAST;
  input S_WVALID;
  output S_WREADY;
  output [7:0]S_BID;
  output [1:0]S_BRESP;
  output S_BVALID;
  input S_BREADY;
  input [7:0]S_ARID;
  input [31:0]S_ARADDR;
  input [7:0]S_ARLEN;
  input S_ARLOCK;
  input [2:0]S_ARSIZE;
  input [1:0]S_ARBURST;
  input [3:0]S_ARCACHE;
  input [2:0]S_ARPROT;
  input S_ARVALID;
  output S_ARREADY;
  input [3:0]S_ARQOS;
  input [3:0]S_ARREGION;
  output [7:0]S_RID;
  output [31:0]S_RDATA;
  output [1:0]S_RRESP;
  output S_RLAST;
  output S_RVALID;
  input S_RREADY;
  output IRQ;
  output gmii_gtxc;
  output [7:0]gmii_txd;
  output gmii_txen;
  output gmii_txer;
  input gmii_rxc;
  input [7:0]gmii_rxd;
  input gmii_rxdv;
  input gmii_rxer;
  input gmii_col;
  input gmii_crs;
  input gtx_clk;
  input gtx_clk_stable;
  output gbe_phy_reset_n;

  wire \<const0> ;
  wire \<const1> ;
  wire ACLK;
  wire ARESETn;
  wire IRQ;
  wire [31:0]M_ARADDR;
  wire [3:0]M_ARID;
  wire [7:0]M_ARLEN;
  wire M_ARREADY;
  wire [1:1]\^M_ARSIZE ;
  wire M_ARVALID;
  wire [31:0]M_AWADDR;
  wire [3:0]M_AWID;
  wire [7:0]M_AWLEN;
  wire M_AWREADY;
  wire [1:1]\^M_AWSIZE ;
  wire M_AWVALID;
  wire M_BREADY;
  wire M_BVALID;
  wire [31:0]M_RDATA;
  wire M_RREADY;
  wire M_RVALID;
  wire [31:0]M_WDATA;
  wire [3:0]M_WID;
  wire M_WLAST;
  wire M_WREADY;
  wire [3:0]M_WSTRB;
  wire M_WVALID;
  wire \RX_BLK_256.u_fifo_rx0 ;
  wire R_addr1;
  wire [31:0]R_addr2;
  wire R_empty0;
  wire R_empty00_out;
  wire R_full14_out;
  wire [0:0]R_len;
  wire [31:0]S_ARADDR;
  wire [1:0]S_ARBURST;
  wire [7:0]S_ARID;
  wire [7:0]S_ARLEN;
  wire S_ARREADY;
  wire [2:0]S_ARSIZE;
  wire S_ARVALID;
  wire [31:0]S_AWADDR;
  wire [1:0]S_AWBURST;
  wire [7:0]S_AWID;
  wire [7:0]S_AWLEN;
  wire S_AWREADY;
  wire [2:0]S_AWSIZE;
  wire S_AWVALID;
  wire [7:0]S_BID;
  wire S_BREADY;
  wire [1:1]\^S_BRESP ;
  wire S_BVALID;
  wire [31:0]S_RDATA;
  wire [7:0]S_RID;
  wire S_RLAST;
  wire S_RREADY;
  wire [1:1]\^S_RRESP ;
  wire S_RVALID;
  wire [31:0]S_WDATA;
  wire [7:0]S_WID;
  wire S_WLAST;
  wire S_WREADY;
  wire [3:0]S_WSTRB;
  wire S_WVALID;
  wire \TX_BLK_128.u_fifo_tx_n_10 ;
  wire \TX_BLK_128.u_fifo_tx_n_11 ;
  wire \TX_BLK_128.u_fifo_tx_n_12 ;
  wire \TX_BLK_128.u_fifo_tx_n_13 ;
  wire \TX_BLK_128.u_fifo_tx_n_14 ;
  wire \TX_BLK_128.u_fifo_tx_n_15 ;
  wire \TX_BLK_128.u_fifo_tx_n_16 ;
  wire \TX_BLK_128.u_fifo_tx_n_17 ;
  wire \TX_BLK_128.u_fifo_tx_n_18 ;
  wire \TX_BLK_128.u_fifo_tx_n_19 ;
  wire \TX_BLK_128.u_fifo_tx_n_20 ;
  wire \TX_BLK_128.u_fifo_tx_n_21 ;
  wire \TX_BLK_128.u_fifo_tx_n_22 ;
  wire \TX_BLK_128.u_fifo_tx_n_23 ;
  wire \TX_BLK_128.u_fifo_tx_n_24 ;
  wire \TX_BLK_128.u_fifo_tx_n_25 ;
  wire \TX_BLK_128.u_fifo_tx_n_26 ;
  wire \TX_BLK_128.u_fifo_tx_n_27 ;
  wire \TX_BLK_128.u_fifo_tx_n_28 ;
  wire \TX_BLK_128.u_fifo_tx_n_29 ;
  wire \TX_BLK_128.u_fifo_tx_n_30 ;
  wire \TX_BLK_128.u_fifo_tx_n_31 ;
  wire \TX_BLK_128.u_fifo_tx_n_32 ;
  wire \TX_BLK_128.u_fifo_tx_n_33 ;
  wire \TX_BLK_128.u_fifo_tx_n_34 ;
  wire \TX_BLK_128.u_fifo_tx_n_35 ;
  wire \TX_BLK_128.u_fifo_tx_n_4 ;
  wire \TX_BLK_128.u_fifo_tx_n_5 ;
  wire \TX_BLK_128.u_fifo_tx_n_6 ;
  wire \TX_BLK_128.u_fifo_tx_n_7 ;
  wire \TX_BLK_128.u_fifo_tx_n_8 ;
  wire \TX_BLK_128.u_fifo_tx_n_9 ;
  wire W_addr1;
  wire [31:0]W_addr2;
  wire [15:0]W_bxxx;
  wire W_empty;
  wire W_go0;
  (* RTL_KEEP = "true" *) wire client_rx_bnum_empty;
  (* RTL_KEEP = "true" *) wire client_rx_bnum_full;
  (* RTL_KEEP = "true" *) wire [15:0]client_rx_bnum_items;
  (* RTL_KEEP = "true" *) wire [15:0]client_rx_bnum_items_W;
  wire client_rx_bnum_wr_rdy_n;
  wire client_rx_full;
  wire [8:0]client_rx_items;
  (* RTL_KEEP = "true" *) wire [15:0]client_rx_rd_bnum;
  (* RTL_KEEP = "true" *) wire client_rx_rd_bnum_rdy;
  (* RTL_KEEP = "true" *) wire client_rx_rd_bnum_vld;
  wire [3:0]client_rx_rd_ctl;
  (* RTL_KEEP = "true" *) wire client_rx_rd_goodframe;
  wire client_rx_rd_vld;
  (* RTL_KEEP = "true" *) wire [15:0]client_rx_wr_bnum;
  (* RTL_KEEP = "true" *) wire client_rx_wr_bnum_rdy;
  (* RTL_KEEP = "true" *) wire client_rx_wr_bnum_vld;
  wire [3:0]client_rx_wr_ctl;
  wire [31:0]client_rx_wr_dat;
  (* RTL_KEEP = "true" *) wire client_rx_wr_goodframe;
  wire client_rx_wr_rdy_n;
  wire client_rx_wr_vld;
  wire client_tx_empty;
  wire [7:0]client_tx_items;
  wire [3:0]client_tx_rd_ctl;
  wire client_tx_rd_rdy;
  wire client_tx_rd_vld;
  wire [3:0]client_tx_wr_ctl;
  wire [31:0]client_tx_wr_dat;
  wire client_tx_wr_rdy_n;
  wire [47:0]conf_mac_addr;
  wire conf_rx_en;
  wire conf_rx_en_sync;
  wire conf_rx_jumbo_en;
  wire conf_rx_jumbo_en_sync;
  wire conf_rx_no_chk_crc;
  wire conf_rx_no_chk_crc_sync;
  wire conf_rx_promiscuous;
  wire conf_rx_promiscuous_sync;
  wire conf_rx_reset;
  wire conf_rx_reset_sync;
  wire conf_tx_en;
  wire conf_tx_en_sync;
  wire conf_tx_jumbo_en;
  wire conf_tx_jumbo_en_sync;
  wire conf_tx_no_gen_crc;
  wire conf_tx_no_gen_crc_sync;
  wire conf_tx_reset;
  wire conf_tx_reset_sync;
  wire crc_err;
  wire crc_err_sync;
  wire [15:0]desc_rx_bnum;
  wire [31:0]desc_rx_dst;
  wire desc_rx_full;
  wire desc_rx_ready;
  wire desc_rx_valid;
  wire desc_tx_ready;
  wire desc_tx_valid;
  wire gbe_phy_reset_n;
  wire [10:0]get_rooms_return;
  wire [15:11]get_rooms_return__0;
  wire gmii_rxc;
  wire [7:0]gmii_rxd;
  wire gmii_rxdv;
  wire gmii_rxer;
  wire [7:0]gmii_txd;
  wire gmii_txen;
  wire gmii_txer;
  wire gtx_clk;
  wire gtx_clk_stable;
  wire p_0_in;
  wire [29:0]p_1_in;
  wire [1:1]p_1_in_0;
  wire rx_addr_empty;
  wire [31:2]rx_addr_end;
  wire [31:0]rx_addr_head;
  wire rx_addr_head_update;
  wire [31:0]rx_addr_start;
  wire [31:0]rx_addr_tail;
  wire sig_in0;
  wire tx_addr_empty;
  wire [31:0]tx_addr_end;
  wire [31:0]tx_addr_head;
  wire [31:0]tx_addr_start;
  wire [31:0]tx_addr_tail;
  wire tx_addr_tail_update;
  wire u_conf_rx_reset_n_1;
  wire u_conf_tx_reset_n_1;
  wire u_csr_axi_n_0;
  wire u_csr_axi_n_1;
  wire u_csr_axi_n_118;
  wire u_csr_axi_n_119;
  wire u_csr_axi_n_120;
  wire u_csr_axi_n_121;
  wire u_csr_axi_n_122;
  wire u_csr_axi_n_123;
  wire u_csr_axi_n_124;
  wire u_csr_axi_n_125;
  wire u_csr_axi_n_126;
  wire u_csr_axi_n_127;
  wire u_csr_axi_n_128;
  wire u_csr_axi_n_129;
  wire u_csr_axi_n_130;
  wire u_csr_axi_n_131;
  wire u_csr_axi_n_132;
  wire u_csr_axi_n_133;
  wire u_csr_axi_n_134;
  wire u_csr_axi_n_135;
  wire u_csr_axi_n_136;
  wire u_csr_axi_n_137;
  wire u_csr_axi_n_138;
  wire u_csr_axi_n_139;
  wire u_csr_axi_n_140;
  wire u_csr_axi_n_141;
  wire u_csr_axi_n_142;
  wire u_csr_axi_n_143;
  wire u_csr_axi_n_144;
  wire u_csr_axi_n_145;
  wire u_csr_axi_n_146;
  wire u_csr_axi_n_147;
  wire u_csr_axi_n_148;
  wire u_csr_axi_n_149;
  wire u_csr_axi_n_150;
  wire u_csr_axi_n_151;
  wire u_csr_axi_n_153;
  wire u_csr_axi_n_154;
  wire u_csr_axi_n_155;
  wire u_csr_axi_n_156;
  wire u_csr_axi_n_157;
  wire u_csr_axi_n_158;
  wire u_csr_axi_n_159;
  wire u_csr_axi_n_160;
  wire u_csr_axi_n_161;
  wire u_csr_axi_n_162;
  wire u_csr_axi_n_163;
  wire u_csr_axi_n_164;
  wire u_csr_axi_n_165;
  wire u_csr_axi_n_166;
  wire u_csr_axi_n_167;
  wire u_csr_axi_n_168;
  wire u_csr_axi_n_169;
  wire u_csr_axi_n_170;
  wire u_csr_axi_n_171;
  wire u_csr_axi_n_172;
  wire u_csr_axi_n_173;
  wire u_csr_axi_n_174;
  wire u_csr_axi_n_175;
  wire u_csr_axi_n_176;
  wire u_csr_axi_n_177;
  wire u_csr_axi_n_178;
  wire u_csr_axi_n_179;
  wire u_csr_axi_n_180;
  wire u_csr_axi_n_181;
  wire u_csr_axi_n_182;
  wire u_csr_axi_n_183;
  wire u_csr_axi_n_184;
  wire u_csr_axi_n_185;
  wire u_csr_axi_n_186;
  wire u_csr_axi_n_187;
  wire u_csr_axi_n_188;
  wire u_csr_axi_n_189;
  wire u_csr_axi_n_190;
  wire u_csr_axi_n_191;
  wire u_csr_axi_n_192;
  wire u_csr_axi_n_193;
  wire u_csr_axi_n_194;
  wire u_csr_axi_n_195;
  wire u_csr_axi_n_196;
  wire u_csr_axi_n_197;
  wire u_csr_axi_n_198;
  wire u_csr_axi_n_199;
  wire u_csr_axi_n_200;
  wire u_csr_axi_n_201;
  wire u_csr_axi_n_202;
  wire u_csr_axi_n_203;
  wire u_csr_axi_n_204;
  wire u_csr_axi_n_205;
  wire u_csr_axi_n_206;
  wire u_csr_axi_n_207;
  wire u_csr_axi_n_208;
  wire u_csr_axi_n_209;
  wire u_csr_axi_n_210;
  wire u_csr_axi_n_211;
  wire u_csr_axi_n_212;
  wire u_csr_axi_n_213;
  wire u_csr_axi_n_214;
  wire u_csr_axi_n_215;
  wire u_csr_axi_n_216;
  wire u_csr_axi_n_217;
  wire u_csr_axi_n_218;
  wire u_csr_axi_n_219;
  wire u_csr_axi_n_220;
  wire u_csr_axi_n_221;
  wire u_csr_axi_n_222;
  wire u_csr_axi_n_223;
  wire u_csr_axi_n_224;
  wire u_csr_axi_n_225;
  wire u_csr_axi_n_226;
  wire u_csr_axi_n_227;
  wire u_csr_axi_n_228;
  wire u_csr_axi_n_229;
  wire u_csr_axi_n_230;
  wire u_csr_axi_n_231;
  wire u_csr_axi_n_232;
  wire u_csr_axi_n_233;
  wire u_csr_axi_n_234;
  wire u_csr_axi_n_235;
  wire u_csr_axi_n_236;
  wire u_csr_axi_n_240;
  wire u_csr_axi_n_241;
  wire u_csr_axi_n_242;
  wire u_csr_axi_n_243;
  wire u_csr_axi_n_245;
  wire u_csr_axi_n_252;
  wire u_csr_axi_n_34;
  wire u_csr_axi_n_35;
  wire u_csr_axi_n_359;
  wire u_csr_axi_n_360;
  wire u_csr_axi_n_361;
  wire u_csr_axi_n_362;
  wire u_csr_axi_n_363;
  wire u_csr_axi_n_364;
  wire u_csr_axi_n_365;
  wire u_csr_axi_n_366;
  wire u_csr_axi_n_367;
  wire u_csr_axi_n_368;
  wire u_csr_axi_n_369;
  wire u_csr_axi_n_370;
  wire u_csr_axi_n_371;
  wire u_csr_axi_n_372;
  wire u_csr_axi_n_373;
  wire u_csr_axi_n_374;
  wire u_csr_axi_n_375;
  wire u_csr_axi_n_376;
  wire u_csr_axi_n_377;
  wire u_csr_axi_n_378;
  wire u_csr_axi_n_379;
  wire u_csr_axi_n_380;
  wire u_csr_axi_n_381;
  wire u_csr_axi_n_382;
  wire u_csr_axi_n_383;
  wire u_csr_axi_n_384;
  wire u_csr_axi_n_385;
  wire u_csr_axi_n_386;
  wire u_csr_axi_n_387;
  wire u_csr_axi_n_388;
  wire u_csr_axi_n_389;
  wire u_csr_axi_n_390;
  wire u_csr_axi_n_391;
  wire u_csr_axi_n_392;
  wire u_csr_axi_n_393;
  wire u_csr_axi_n_394;
  wire u_csr_axi_n_395;
  wire u_csr_axi_n_396;
  wire u_csr_axi_n_397;
  wire u_csr_axi_n_398;
  wire u_csr_axi_n_399;
  wire u_csr_axi_n_400;
  wire u_csr_axi_n_401;
  wire u_csr_axi_n_402;
  wire u_csr_axi_n_403;
  wire u_csr_axi_n_404;
  wire u_csr_axi_n_405;
  wire u_csr_axi_n_406;
  wire u_csr_axi_n_407;
  wire u_csr_axi_n_408;
  wire u_csr_axi_n_409;
  wire u_csr_axi_n_410;
  wire u_csr_axi_n_411;
  wire u_csr_axi_n_412;
  wire u_csr_axi_n_413;
  wire u_csr_axi_n_414;
  wire u_csr_axi_n_415;
  wire u_csr_axi_n_416;
  wire u_csr_axi_n_417;
  wire u_csr_axi_n_418;
  wire u_csr_axi_n_419;
  wire u_csr_axi_n_420;
  wire u_csr_axi_n_421;
  wire u_csr_axi_n_422;
  wire u_csr_axi_n_423;
  wire u_csr_axi_n_424;
  wire u_csr_axi_n_425;
  wire u_csr_axi_n_426;
  wire u_csr_axi_n_427;
  wire u_csr_axi_n_428;
  wire u_csr_axi_n_429;
  wire u_csr_axi_n_430;
  wire u_csr_axi_n_431;
  wire u_csr_axi_n_432;
  wire u_csr_axi_n_433;
  wire u_csr_axi_n_434;
  wire u_csr_axi_n_435;
  wire u_csr_axi_n_436;
  wire u_csr_axi_n_437;
  wire u_csr_axi_n_438;
  wire u_csr_axi_n_439;
  wire u_csr_axi_n_440;
  wire u_csr_axi_n_441;
  wire u_csr_axi_n_442;
  wire u_csr_axi_n_443;
  wire u_csr_axi_n_444;
  wire u_csr_axi_n_445;
  wire u_csr_axi_n_446;
  wire u_csr_axi_n_447;
  wire u_csr_axi_n_448;
  wire u_csr_axi_n_449;
  wire u_csr_axi_n_450;
  wire u_csr_axi_n_451;
  wire u_csr_axi_n_452;
  wire u_csr_axi_n_453;
  wire u_csr_axi_n_454;
  wire u_csr_axi_n_455;
  wire u_csr_axi_n_456;
  wire u_csr_axi_n_457;
  wire u_csr_axi_n_458;
  wire u_csr_axi_n_459;
  wire u_csr_axi_n_460;
  wire u_csr_axi_n_461;
  wire u_csr_axi_n_462;
  wire u_csr_axi_n_463;
  wire u_csr_axi_n_464;
  wire u_csr_axi_n_465;
  wire u_csr_axi_n_466;
  wire u_csr_axi_n_467;
  wire u_csr_axi_n_468;
  wire u_csr_axi_n_469;
  wire u_csr_axi_n_470;
  wire u_csr_axi_n_471;
  wire u_csr_axi_n_472;
  wire u_csr_axi_n_473;
  wire u_csr_axi_n_474;
  wire u_csr_axi_n_475;
  wire u_csr_axi_n_476;
  wire u_csr_axi_n_477;
  wire u_csr_axi_n_478;
  wire u_csr_axi_n_479;
  wire u_csr_axi_n_480;
  wire u_csr_axi_n_481;
  wire u_csr_axi_n_482;
  wire u_csr_axi_n_483;
  wire u_csr_axi_n_484;
  wire u_csr_axi_n_485;
  wire u_csr_axi_n_486;
  wire u_csr_axi_n_487;
  wire u_csr_axi_n_488;
  wire u_csr_axi_n_489;
  wire u_csr_axi_n_490;
  wire u_csr_axi_n_491;
  wire u_csr_axi_n_492;
  wire u_csr_axi_n_493;
  wire u_csr_axi_n_494;
  wire u_csr_axi_n_495;
  wire u_csr_axi_n_496;
  wire u_csr_axi_n_497;
  wire u_csr_axi_n_498;
  wire u_csr_axi_n_499;
  wire u_csr_axi_n_500;
  wire u_csr_axi_n_501;
  wire u_csr_axi_n_502;
  wire u_csr_axi_n_503;
  wire u_csr_axi_n_504;
  wire u_csr_axi_n_505;
  wire u_csr_axi_n_506;
  wire u_csr_axi_n_507;
  wire u_csr_axi_n_508;
  wire u_csr_axi_n_509;
  wire u_csr_axi_n_510;
  wire u_csr_axi_n_511;
  wire u_csr_axi_n_512;
  wire u_csr_axi_n_513;
  wire u_csr_axi_n_514;
  wire u_csr_axi_n_515;
  wire u_csr_axi_n_516;
  wire u_csr_axi_n_517;
  wire u_csr_axi_n_518;
  wire u_csr_axi_n_519;
  wire u_csr_axi_n_520;
  wire u_csr_axi_n_521;
  wire u_csr_axi_n_522;
  wire u_csr_axi_n_523;
  wire u_csr_axi_n_525;
  wire u_csr_axi_n_526;
  wire u_csr_axi_n_527;
  wire u_csr_axi_n_528;
  wire u_csr_axi_n_529;
  wire u_csr_axi_n_530;
  wire u_csr_axi_n_531;
  wire u_csr_axi_n_532;
  wire u_csr_axi_n_533;
  wire u_csr_axi_n_534;
  wire u_csr_axi_n_535;
  wire u_csr_axi_n_536;
  wire u_csr_axi_n_537;
  wire u_csr_axi_n_538;
  wire u_csr_axi_n_539;
  wire u_csr_axi_n_540;
  wire u_csr_axi_n_541;
  wire u_csr_axi_n_545;
  wire u_csr_axi_n_547;
  wire u_csr_axi_n_548;
  wire u_csr_axi_n_549;
  wire u_csr_axi_n_550;
  wire u_csr_axi_n_551;
  wire u_csr_axi_n_552;
  wire u_csr_axi_n_553;
  wire u_csr_axi_n_554;
  wire u_csr_axi_n_555;
  wire u_csr_axi_n_556;
  wire u_csr_axi_n_557;
  wire u_csr_axi_n_558;
  wire u_csr_axi_n_559;
  wire u_csr_axi_n_560;
  wire u_csr_axi_n_561;
  wire u_csr_axi_n_562;
  wire u_csr_axi_n_563;
  wire u_csr_axi_n_564;
  wire u_csr_axi_n_565;
  wire u_csr_axi_n_566;
  wire u_csr_axi_n_567;
  wire u_csr_axi_n_568;
  wire u_csr_axi_n_569;
  wire u_csr_axi_n_570;
  wire u_csr_axi_n_571;
  wire u_csr_axi_n_572;
  wire u_csr_axi_n_573;
  wire u_csr_axi_n_574;
  wire u_csr_axi_n_575;
  wire u_csr_axi_n_576;
  wire u_csr_axi_n_577;
  wire u_csr_axi_n_578;
  wire u_csr_axi_n_579;
  wire u_csr_axi_n_580;
  wire u_csr_axi_n_581;
  wire u_csr_axi_n_582;
  wire u_csr_axi_n_583;
  wire u_csr_axi_n_584;
  wire u_csr_axi_n_585;
  wire u_csr_axi_n_586;
  wire u_csr_axi_n_587;
  wire u_csr_axi_n_588;
  wire u_csr_axi_n_589;
  wire u_csr_axi_n_590;
  wire u_csr_axi_n_591;
  wire u_csr_axi_n_592;
  wire u_csr_axi_n_593;
  wire u_csr_axi_n_594;
  wire u_csr_axi_n_595;
  wire u_csr_axi_n_596;
  wire u_csr_axi_n_597;
  wire u_csr_axi_n_598;
  wire u_csr_axi_n_599;
  wire u_csr_axi_n_600;
  wire u_csr_axi_n_601;
  wire u_csr_axi_n_602;
  wire u_csr_axi_n_603;
  wire u_csr_axi_n_604;
  wire u_csr_axi_n_605;
  wire u_csr_axi_n_606;
  wire u_csr_axi_n_607;
  wire u_csr_axi_n_608;
  wire u_csr_axi_n_609;
  wire u_csr_axi_n_610;
  wire u_csr_axi_n_611;
  wire u_csr_axi_n_612;
  wire u_csr_axi_n_613;
  wire u_csr_axi_n_614;
  wire u_csr_axi_n_615;
  wire u_csr_axi_n_616;
  wire u_csr_axi_n_617;
  wire u_csr_axi_n_618;
  wire u_csr_axi_n_619;
  wire u_csr_axi_n_620;
  wire u_csr_axi_n_621;
  wire u_csr_axi_n_622;
  wire u_csr_axi_n_623;
  wire u_csr_axi_n_624;
  wire u_csr_axi_n_625;
  wire u_csr_axi_n_626;
  wire u_csr_axi_n_627;
  wire u_csr_axi_n_628;
  wire u_csr_axi_n_629;
  wire u_csr_axi_n_630;
  wire u_csr_axi_n_631;
  wire u_csr_axi_n_632;
  wire u_csr_axi_n_633;
  wire u_csr_axi_n_634;
  wire u_csr_axi_n_635;
  wire u_csr_axi_n_636;
  wire u_csr_axi_n_637;
  wire u_csr_axi_n_638;
  wire u_csr_axi_n_639;
  wire u_csr_axi_n_640;
  wire u_csr_axi_n_641;
  wire u_csr_axi_n_642;
  wire u_csr_axi_n_643;
  wire u_csr_axi_n_644;
  wire u_csr_axi_n_645;
  wire u_csr_axi_n_646;
  wire u_csr_axi_n_647;
  wire u_csr_axi_n_648;
  wire u_csr_axi_n_649;
  wire u_csr_axi_n_650;
  wire u_csr_axi_n_651;
  wire u_csr_axi_n_652;
  wire u_csr_axi_n_653;
  wire u_csr_axi_n_654;
  wire u_csr_axi_n_655;
  wire u_csr_axi_n_656;
  wire u_csr_axi_n_657;
  wire u_csr_axi_n_658;
  wire u_csr_axi_n_659;
  wire u_csr_axi_n_660;
  wire u_csr_axi_n_661;
  wire u_csr_axi_n_662;
  wire u_csr_axi_n_663;
  wire u_csr_axi_n_664;
  wire u_csr_axi_n_665;
  wire u_csr_axi_n_666;
  wire u_csr_axi_n_667;
  wire u_csr_axi_n_668;
  wire u_csr_axi_n_669;
  wire u_csr_axi_n_670;
  wire u_csr_axi_n_671;
  wire u_csr_axi_n_672;
  wire u_csr_axi_n_673;
  wire u_csr_axi_n_674;
  wire u_csr_axi_n_675;
  wire u_csr_axi_n_676;
  wire u_csr_axi_n_677;
  wire u_csr_axi_n_68;
  wire u_csr_axi_n_69;
  wire u_csr_axi_n_70;
  wire u_csr_axi_n_71;
  wire u_csr_axi_n_72;
  wire u_csr_axi_n_73;
  wire u_csr_axi_n_74;
  wire u_csr_axi_n_75;
  wire u_csr_axi_n_76;
  wire u_csr_axi_n_77;
  wire u_csr_axi_n_78;
  wire u_csr_axi_n_79;
  wire u_csr_axi_n_80;
  wire u_csr_axi_n_81;
  wire u_csr_axi_n_82;
  wire u_csr_axi_n_83;
  wire u_dma_rx_n_1;
  wire u_dma_rx_n_10;
  wire u_dma_rx_n_108;
  wire u_dma_rx_n_109;
  wire u_dma_rx_n_110;
  wire u_dma_rx_n_111;
  wire u_dma_rx_n_112;
  wire u_dma_rx_n_113;
  wire u_dma_rx_n_114;
  wire u_dma_rx_n_115;
  wire u_dma_rx_n_116;
  wire u_dma_rx_n_117;
  wire u_dma_rx_n_118;
  wire u_dma_rx_n_119;
  wire u_dma_rx_n_120;
  wire u_dma_rx_n_121;
  wire u_dma_rx_n_122;
  wire u_dma_rx_n_123;
  wire u_dma_rx_n_124;
  wire u_dma_rx_n_125;
  wire u_dma_rx_n_126;
  wire u_dma_rx_n_127;
  wire u_dma_rx_n_128;
  wire u_dma_rx_n_129;
  wire u_dma_rx_n_130;
  wire u_dma_rx_n_131;
  wire u_dma_rx_n_132;
  wire u_dma_rx_n_133;
  wire u_dma_rx_n_134;
  wire u_dma_rx_n_135;
  wire u_dma_rx_n_136;
  wire u_dma_rx_n_137;
  wire u_dma_rx_n_138;
  wire u_dma_rx_n_139;
  wire u_dma_rx_n_140;
  wire u_dma_rx_n_141;
  wire u_dma_rx_n_142;
  wire u_dma_rx_n_143;
  wire u_dma_rx_n_144;
  wire u_dma_rx_n_145;
  wire u_dma_rx_n_146;
  wire u_dma_rx_n_147;
  wire u_dma_rx_n_148;
  wire u_dma_rx_n_149;
  wire u_dma_rx_n_150;
  wire u_dma_rx_n_151;
  wire u_dma_rx_n_152;
  wire u_dma_rx_n_153;
  wire u_dma_rx_n_154;
  wire u_dma_rx_n_155;
  wire u_dma_rx_n_156;
  wire u_dma_rx_n_160;
  wire u_dma_rx_n_161;
  wire u_dma_rx_n_162;
  wire u_dma_rx_n_163;
  wire u_dma_rx_n_164;
  wire u_dma_rx_n_165;
  wire u_dma_rx_n_166;
  wire u_dma_rx_n_167;
  wire u_dma_rx_n_168;
  wire u_dma_rx_n_169;
  wire u_dma_rx_n_170;
  wire u_dma_rx_n_171;
  wire u_dma_rx_n_172;
  wire u_dma_rx_n_173;
  wire u_dma_rx_n_174;
  wire u_dma_rx_n_176;
  wire u_dma_rx_n_177;
  wire u_dma_rx_n_2;
  wire u_dma_rx_n_3;
  wire u_dma_rx_n_4;
  wire u_dma_rx_n_5;
  wire u_dma_rx_n_73;
  wire u_dma_rx_n_74;
  wire u_dma_rx_n_75;
  wire u_dma_rx_n_76;
  wire u_dma_rx_n_77;
  wire u_dma_rx_n_78;
  wire u_dma_rx_n_79;
  wire u_dma_rx_n_8;
  wire u_dma_rx_n_80;
  wire u_dma_rx_n_81;
  wire u_dma_rx_n_82;
  wire u_dma_rx_n_83;
  wire u_dma_rx_n_84;
  wire u_dma_rx_n_85;
  wire u_dma_rx_n_86;
  wire u_dma_rx_n_87;
  wire u_dma_rx_n_88;
  wire u_dma_rx_n_89;
  wire u_dma_rx_n_9;
  wire u_dma_rx_n_90;
  wire u_dma_rx_n_91;
  wire u_dma_tx_n_0;
  wire u_dma_tx_n_106;
  wire u_dma_tx_n_107;
  wire u_dma_tx_n_108;
  wire u_dma_tx_n_109;
  wire u_dma_tx_n_110;
  wire u_dma_tx_n_111;
  wire u_dma_tx_n_112;
  wire u_dma_tx_n_113;
  wire u_dma_tx_n_114;
  wire u_dma_tx_n_115;
  wire u_dma_tx_n_116;
  wire u_dma_tx_n_117;
  wire u_dma_tx_n_118;
  wire u_dma_tx_n_119;
  wire u_dma_tx_n_120;
  wire u_dma_tx_n_121;
  wire u_dma_tx_n_122;
  wire u_dma_tx_n_123;
  wire u_dma_tx_n_124;
  wire u_dma_tx_n_125;
  wire u_dma_tx_n_126;
  wire u_dma_tx_n_127;
  wire u_dma_tx_n_128;
  wire u_dma_tx_n_129;
  wire u_dma_tx_n_130;
  wire u_dma_tx_n_131;
  wire u_dma_tx_n_132;
  wire u_dma_tx_n_133;
  wire u_dma_tx_n_134;
  wire u_dma_tx_n_135;
  wire u_dma_tx_n_136;
  wire u_dma_tx_n_137;
  wire u_dma_tx_n_138;
  wire u_dma_tx_n_139;
  wire u_dma_tx_n_140;
  wire u_dma_tx_n_141;
  wire u_dma_tx_n_142;
  wire u_dma_tx_n_143;
  wire u_dma_tx_n_144;
  wire u_dma_tx_n_145;
  wire u_dma_tx_n_146;
  wire u_dma_tx_n_147;
  wire u_dma_tx_n_148;
  wire u_dma_tx_n_149;
  wire u_dma_tx_n_150;
  wire u_dma_tx_n_151;
  wire u_dma_tx_n_152;
  wire u_dma_tx_n_153;
  wire u_dma_tx_n_154;
  wire u_dma_tx_n_155;
  wire u_dma_tx_n_156;
  wire u_dma_tx_n_195;
  wire u_dma_tx_n_196;
  wire u_dma_tx_n_197;
  wire u_dma_tx_n_198;
  wire u_dma_tx_n_199;
  wire u_dma_tx_n_2;
  wire u_dma_tx_n_200;
  wire u_dma_tx_n_201;
  wire u_dma_tx_n_202;
  wire u_dma_tx_n_203;
  wire u_dma_tx_n_204;
  wire u_dma_tx_n_205;
  wire u_dma_tx_n_206;
  wire u_dma_tx_n_207;
  wire u_dma_tx_n_208;
  wire u_dma_tx_n_209;
  wire u_dma_tx_n_210;
  wire u_dma_tx_n_211;
  wire u_dma_tx_n_212;
  wire u_dma_tx_n_213;
  wire u_dma_tx_n_214;
  wire u_dma_tx_n_215;
  wire u_dma_tx_n_216;
  wire u_dma_tx_n_217;
  wire u_dma_tx_n_218;
  wire u_dma_tx_n_219;
  wire u_dma_tx_n_220;
  wire u_dma_tx_n_221;
  wire u_dma_tx_n_222;
  wire u_dma_tx_n_223;
  wire u_dma_tx_n_224;
  wire u_dma_tx_n_225;
  wire u_dma_tx_n_226;
  wire u_dma_tx_n_227;
  wire u_dma_tx_n_228;
  wire u_dma_tx_n_229;
  wire u_dma_tx_n_230;
  wire u_dma_tx_n_231;
  wire u_dma_tx_n_232;
  wire u_dma_tx_n_233;
  wire u_dma_tx_n_234;
  wire u_dma_tx_n_235;
  wire u_dma_tx_n_236;
  wire u_dma_tx_n_237;
  wire u_dma_tx_n_238;
  wire u_dma_tx_n_239;
  wire u_dma_tx_n_240;
  wire u_dma_tx_n_241;
  wire u_dma_tx_n_242;
  wire u_dma_tx_n_243;
  wire u_dma_tx_n_244;
  wire u_dma_tx_n_245;
  wire u_dma_tx_n_246;
  wire u_dma_tx_n_247;
  wire u_dma_tx_n_248;
  wire u_dma_tx_n_249;
  wire u_dma_tx_n_250;
  wire u_dma_tx_n_251;
  wire u_dma_tx_n_252;
  wire u_dma_tx_n_253;
  wire u_dma_tx_n_254;
  wire u_dma_tx_n_255;
  wire u_dma_tx_n_256;
  wire u_dma_tx_n_257;
  wire u_dma_tx_n_258;
  wire u_dma_tx_n_259;
  wire u_dma_tx_n_260;
  wire u_dma_tx_n_261;
  wire u_dma_tx_n_262;
  wire u_dma_tx_n_263;
  wire u_dma_tx_n_264;
  wire u_dma_tx_n_265;
  wire u_dma_tx_n_266;
  wire u_dma_tx_n_267;
  wire u_dma_tx_n_268;
  wire u_dma_tx_n_269;
  wire u_dma_tx_n_270;
  wire u_dma_tx_n_271;
  wire u_dma_tx_n_272;
  wire u_dma_tx_n_273;
  wire u_dma_tx_n_274;
  wire u_dma_tx_n_275;
  wire u_dma_tx_n_276;
  wire u_dma_tx_n_277;
  wire u_dma_tx_n_278;
  wire u_dma_tx_n_279;
  wire u_dma_tx_n_280;
  wire u_dma_tx_n_281;
  wire u_dma_tx_n_282;
  wire u_dma_tx_n_283;
  wire u_dma_tx_n_284;
  wire u_dma_tx_n_285;
  wire u_dma_tx_n_286;
  wire u_dma_tx_n_287;
  wire u_dma_tx_n_288;
  wire u_dma_tx_n_289;
  wire u_dma_tx_n_290;
  wire u_dma_tx_n_291;
  wire u_dma_tx_n_292;
  wire u_dma_tx_n_293;
  wire u_dma_tx_n_294;
  wire u_dma_tx_n_295;
  wire u_dma_tx_n_296;
  wire u_dma_tx_n_297;
  wire u_dma_tx_n_298;
  wire u_dma_tx_n_299;
  wire u_dma_tx_n_300;
  wire u_dma_tx_n_301;
  wire u_dma_tx_n_302;
  wire u_dma_tx_n_303;
  wire u_dma_tx_n_304;
  wire u_dma_tx_n_305;
  wire u_dma_tx_n_306;
  wire u_dma_tx_n_307;
  wire u_dma_tx_n_308;
  wire u_dma_tx_n_309;
  wire u_dma_tx_n_311;
  wire u_dma_tx_n_312;
  wire u_dma_tx_n_313;
  wire u_dma_tx_n_314;
  wire u_dma_tx_n_4;
  wire u_dma_tx_n_40;
  wire u_dma_tx_n_41;
  wire u_dma_tx_n_42;
  wire u_dma_tx_n_43;
  wire u_dma_tx_n_44;
  wire u_dma_tx_n_45;
  wire u_dma_tx_n_46;
  wire u_dma_tx_n_47;
  wire u_dma_tx_n_48;
  wire u_dma_tx_n_49;
  wire u_dma_tx_n_5;
  wire u_dma_tx_n_50;
  wire u_dma_tx_n_51;
  wire u_dma_tx_n_52;
  wire u_dma_tx_n_53;
  wire u_dma_tx_n_54;
  wire u_dma_tx_n_55;
  wire u_dma_tx_n_56;
  wire u_dma_tx_n_57;
  wire u_dma_tx_n_58;
  wire u_dma_tx_n_59;
  wire u_dma_tx_n_6;
  wire u_dma_tx_n_60;
  wire u_dma_tx_n_61;
  wire u_dma_tx_n_62;
  wire u_dma_tx_n_63;
  wire u_dma_tx_n_64;
  wire u_dma_tx_n_65;
  wire u_dma_tx_n_66;
  wire u_dma_tx_n_67;
  wire u_dma_tx_n_68;
  wire u_dma_tx_n_69;
  wire u_dma_tx_n_7;
  wire u_dma_tx_n_70;
  wire u_dma_tx_n_71;
  wire u_dma_tx_n_72;
  wire u_dma_tx_n_73;
  wire \NLW_RX_BLK_256.u_fifo_rx_empty_UNCONNECTED ;
  wire [8:0]\NLW_RX_BLK_256.u_fifo_rx_wr_data_count_UNCONNECTED ;
  wire \NLW_TX_BLK_128.u_fifo_tx_almost_full_UNCONNECTED ;
  wire [7:0]\NLW_TX_BLK_128.u_fifo_tx_rd_data_count_UNCONNECTED ;

  assign M_ARBURST[1] = \<const0> ;
  assign M_ARBURST[0] = \<const1> ;
  assign M_ARCACHE[3] = \<const0> ;
  assign M_ARCACHE[2] = \<const0> ;
  assign M_ARCACHE[1] = \<const0> ;
  assign M_ARCACHE[0] = \<const0> ;
  assign M_ARLOCK = \<const0> ;
  assign M_ARPROT[2] = \<const0> ;
  assign M_ARPROT[1] = \<const1> ;
  assign M_ARPROT[0] = \<const0> ;
  assign M_ARQOS[3] = \<const0> ;
  assign M_ARQOS[2] = \<const0> ;
  assign M_ARQOS[1] = \<const0> ;
  assign M_ARQOS[0] = \<const0> ;
  assign M_ARREGION[3] = \<const0> ;
  assign M_ARREGION[2] = \<const0> ;
  assign M_ARREGION[1] = \<const0> ;
  assign M_ARREGION[0] = \<const0> ;
  assign M_ARSIZE[2] = \<const0> ;
  assign M_ARSIZE[1] = \^M_ARSIZE [1];
  assign M_ARSIZE[0] = \<const0> ;
  assign M_AWBURST[1] = \<const0> ;
  assign M_AWBURST[0] = \<const1> ;
  assign M_AWCACHE[3] = \<const0> ;
  assign M_AWCACHE[2] = \<const0> ;
  assign M_AWCACHE[1] = \<const0> ;
  assign M_AWCACHE[0] = \<const0> ;
  assign M_AWLOCK = \<const0> ;
  assign M_AWPROT[2] = \<const0> ;
  assign M_AWPROT[1] = \<const1> ;
  assign M_AWPROT[0] = \<const0> ;
  assign M_AWQOS[3] = \<const0> ;
  assign M_AWQOS[2] = \<const0> ;
  assign M_AWQOS[1] = \<const0> ;
  assign M_AWQOS[0] = \<const0> ;
  assign M_AWREGION[3] = \<const0> ;
  assign M_AWREGION[2] = \<const0> ;
  assign M_AWREGION[1] = \<const0> ;
  assign M_AWREGION[0] = \<const0> ;
  assign M_AWSIZE[2] = \<const0> ;
  assign M_AWSIZE[1] = \^M_AWSIZE [1];
  assign M_AWSIZE[0] = \<const0> ;
  assign M_MID[3] = \<const0> ;
  assign M_MID[2] = \<const0> ;
  assign M_MID[1] = \<const0> ;
  assign M_MID[0] = \<const0> ;
  assign S_BRESP[1] = \^S_BRESP [1];
  assign S_BRESP[0] = \<const0> ;
  assign S_RRESP[1] = \^S_RRESP [1];
  assign S_RRESP[0] = \<const0> ;
  assign gmii_gtxc = gtx_clk;
  GND GND
       (.G(\<const0> ));
  (* black_box_pad_pin = "rst,wr_clk,rd_clk,din[35:0],wr_en,rd_en,dout[35:0],full,almost_full,empty,valid,rd_data_count[8:0],wr_data_count[8:0]" *) 
  (* syn_black_box = "1" *) 
  (* x_core_info = "fifo_generator_v13_2_3,Vivado 2018.3" *) 
  gig_eth_fifo_async_36x256 \RX_BLK_256.u_fifo_rx 
       (.almost_full(client_rx_full),
        .din({client_rx_wr_ctl,client_rx_wr_dat}),
        .dout({client_rx_rd_ctl,M_WDATA}),
        .empty(\NLW_RX_BLK_256.u_fifo_rx_empty_UNCONNECTED ),
        .full(client_rx_wr_rdy_n),
        .rd_clk(ACLK),
        .rd_data_count(client_rx_items),
        .rd_en(\RX_BLK_256.u_fifo_rx0 ),
        .rst(conf_rx_reset_sync),
        .valid(client_rx_rd_vld),
        .wr_clk(gmii_rxc),
        .wr_data_count(\NLW_RX_BLK_256.u_fifo_rx_wr_data_count_UNCONNECTED [8:0]),
        .wr_en(client_rx_wr_vld));
  (* KEEP = "yes" *) 
  (* black_box_pad_pin = "rst,wr_clk,rd_clk,din[16:0],wr_en,rd_en,dout[16:0],full,almost_full,empty,valid,rd_data_count[5:0],wr_data_count[5:0]" *) 
  (* syn_black_box = "1" *) 
  (* x_core_info = "fifo_generator_v13_2_3,Vivado 2018.3" *) 
  gig_eth_fifo_async_17x32 \RX_BNUM_32.u_fifo_rx_bnum 
       (.almost_full(client_rx_bnum_full),
        .din({client_rx_wr_goodframe,client_rx_wr_bnum}),
        .dout({client_rx_rd_goodframe,client_rx_rd_bnum}),
        .empty(client_rx_bnum_empty),
        .full(client_rx_bnum_wr_rdy_n),
        .rd_clk(ACLK),
        .rd_data_count(client_rx_bnum_items[5:0]),
        .rd_en(client_rx_rd_bnum_rdy),
        .rst(conf_rx_reset_sync),
        .valid(client_rx_rd_bnum_vld),
        .wr_clk(gmii_rxc),
        .wr_data_count(client_rx_bnum_items_W[5:0]),
        .wr_en(client_rx_wr_bnum_vld));
  (* black_box_pad_pin = "rst,wr_clk,rd_clk,din[35:0],wr_en,rd_en,dout[35:0],full,almost_full,empty,valid,rd_data_count[7:0],wr_data_count[7:0]" *) 
  (* syn_black_box = "1" *) 
  (* x_core_info = "fifo_generator_v13_2_3,Vivado 2018.3" *) 
  gig_eth_fifo_async_36x128 \TX_BLK_128.u_fifo_tx 
       (.almost_full(\NLW_TX_BLK_128.u_fifo_tx_almost_full_UNCONNECTED ),
        .din({client_tx_wr_ctl,client_tx_wr_dat}),
        .dout({client_tx_rd_ctl,\TX_BLK_128.u_fifo_tx_n_4 ,\TX_BLK_128.u_fifo_tx_n_5 ,\TX_BLK_128.u_fifo_tx_n_6 ,\TX_BLK_128.u_fifo_tx_n_7 ,\TX_BLK_128.u_fifo_tx_n_8 ,\TX_BLK_128.u_fifo_tx_n_9 ,\TX_BLK_128.u_fifo_tx_n_10 ,\TX_BLK_128.u_fifo_tx_n_11 ,\TX_BLK_128.u_fifo_tx_n_12 ,\TX_BLK_128.u_fifo_tx_n_13 ,\TX_BLK_128.u_fifo_tx_n_14 ,\TX_BLK_128.u_fifo_tx_n_15 ,\TX_BLK_128.u_fifo_tx_n_16 ,\TX_BLK_128.u_fifo_tx_n_17 ,\TX_BLK_128.u_fifo_tx_n_18 ,\TX_BLK_128.u_fifo_tx_n_19 ,\TX_BLK_128.u_fifo_tx_n_20 ,\TX_BLK_128.u_fifo_tx_n_21 ,\TX_BLK_128.u_fifo_tx_n_22 ,\TX_BLK_128.u_fifo_tx_n_23 ,\TX_BLK_128.u_fifo_tx_n_24 ,\TX_BLK_128.u_fifo_tx_n_25 ,\TX_BLK_128.u_fifo_tx_n_26 ,\TX_BLK_128.u_fifo_tx_n_27 ,\TX_BLK_128.u_fifo_tx_n_28 ,\TX_BLK_128.u_fifo_tx_n_29 ,\TX_BLK_128.u_fifo_tx_n_30 ,\TX_BLK_128.u_fifo_tx_n_31 ,\TX_BLK_128.u_fifo_tx_n_32 ,\TX_BLK_128.u_fifo_tx_n_33 ,\TX_BLK_128.u_fifo_tx_n_34 ,\TX_BLK_128.u_fifo_tx_n_35 }),
        .empty(client_tx_empty),
        .full(client_tx_wr_rdy_n),
        .rd_clk(gtx_clk),
        .rd_data_count(\NLW_TX_BLK_128.u_fifo_tx_rd_data_count_UNCONNECTED [7:0]),
        .rd_en(client_tx_rd_rdy),
        .rst(conf_tx_reset_sync),
        .valid(client_tx_rd_vld),
        .wr_clk(ACLK),
        .wr_data_count(client_tx_items),
        .wr_en(u_dma_tx_n_311));
  VCC VCC
       (.P(\<const1> ));
  LUT1 #(
    .INIT(2'h1)) 
    client_rx_wr_bnum_rdy_inferred_i_1
       (.I0(client_rx_bnum_wr_rdy_n),
        .O(client_rx_wr_bnum_rdy));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(client_rx_bnum_items[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(client_rx_bnum_items[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(client_rx_bnum_items_W[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(client_rx_bnum_items_W[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(client_rx_bnum_items_W[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(client_rx_bnum_items_W[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(client_rx_bnum_items_W[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(client_rx_bnum_items_W[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(client_rx_bnum_items_W[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(client_rx_bnum_items_W[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(client_rx_bnum_items_W[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(client_rx_bnum_items_W[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(client_rx_bnum_items[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(client_rx_bnum_items[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(client_rx_bnum_items[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(client_rx_bnum_items[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(client_rx_bnum_items[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(client_rx_bnum_items[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(client_rx_bnum_items[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(client_rx_bnum_items[6]));
  gig_eth_mac_sync__parameterized0 u_conf_rx_en
       (.conf_rx_en(conf_rx_en),
        .gmii_rxc(gmii_rxc),
        .\sync_reg[2]_0 (conf_rx_en_sync));
  gig_eth_mac_sync__parameterized0_0 u_conf_rx_jumbo_en
       (.conf_rx_jumbo_en(conf_rx_jumbo_en),
        .gmii_rxc(gmii_rxc),
        .\sync_reg[2]_0 (conf_rx_jumbo_en_sync));
  gig_eth_mac_sync__parameterized0_1 u_conf_rx_no_chk_crc
       (.conf_rx_no_chk_crc(conf_rx_no_chk_crc),
        .gmii_rxc(gmii_rxc),
        .\sync_reg[2]_0 (conf_rx_no_chk_crc_sync));
  gig_eth_mac_sync__parameterized0_2 u_conf_rx_promiscuous
       (.conf_rx_promiscuous(conf_rx_promiscuous),
        .gmii_rxc(gmii_rxc),
        .\sync_reg[2]_0 (conf_rx_promiscuous_sync));
  gig_eth_mac_sync u_conf_rx_reset
       (.conf_rx_reset(conf_rx_reset),
        .gmii_rxc(gmii_rxc),
        .rst(conf_rx_reset_sync),
        .rx_reset_n(u_conf_rx_reset_n_1));
  gig_eth_mac_sync__parameterized0_3 u_conf_tx_en
       (.conf_tx_en(conf_tx_en),
        .gtx_clk(gtx_clk),
        .\sync_reg[2]_0 (conf_tx_en_sync));
  gig_eth_mac_sync__parameterized0_4 u_conf_tx_jumbo_en
       (.conf_tx_jumbo_en(conf_tx_jumbo_en),
        .gtx_clk(gtx_clk),
        .\sync_reg[2]_0 (conf_tx_jumbo_en_sync));
  gig_eth_mac_sync__parameterized0_5 u_conf_tx_no_gen_crc
       (.conf_tx_no_gen_crc(conf_tx_no_gen_crc),
        .gtx_clk(gtx_clk),
        .\sync_reg[2]_0 (conf_tx_no_gen_crc_sync));
  gig_eth_mac_sync_6 u_conf_tx_reset
       (.gtx_clk(gtx_clk),
        .rst(conf_tx_reset_sync),
        .sig_in0(sig_in0),
        .tx_reset_n(u_conf_tx_reset_n_1));
  gig_eth_mac_sync__parameterized0_7 u_crc_err
       (.ACLK(ACLK),
        .crc_err(crc_err),
        .\sync_reg[2]_0 (crc_err_sync));
  gig_eth_mac_csr_axi u_csr_axi
       (.ACLK(ACLK),
        .ACLK_0(u_csr_axi_n_153),
        .ARESETn(ARESETn),
        .\CID_reg[0] (u_dma_tx_n_229),
        .CO(u_csr_axi_n_130),
        .D(u_csr_axi_n_186),
        .DI({u_dma_tx_n_106,u_dma_tx_n_107,u_dma_tx_n_108}),
        .\DMA_ADDR_HEAD_reg[0]_C (u_dma_rx_n_8),
        .\DMA_ADDR_HEAD_reg[0]_C_0 (u_dma_rx_n_10),
        .\DMA_ADDR_HEAD_reg[1]_C (u_dma_rx_n_9),
        .\DMA_ADDR_HEAD_reg[2]_P (u_dma_rx_n_177),
        .\DMA_ADDR_HEAD_reg[31]_P ({p_1_in,u_dma_rx_n_73,u_dma_rx_n_74}),
        .\DMA_BREM_reg[11] ({u_dma_tx_n_238,u_dma_tx_n_239,u_dma_tx_n_240,u_dma_tx_n_241}),
        .\DMA_BREM_reg[15] ({u_csr_axi_n_132,u_csr_axi_n_133,u_csr_axi_n_134,u_csr_axi_n_135}),
        .\DMA_BREM_reg[15]_0 ({u_dma_tx_n_242,u_dma_tx_n_243,u_dma_tx_n_244,u_dma_tx_n_245}),
        .\DMA_BREM_reg[3] ({u_dma_tx_n_230,u_dma_tx_n_231,u_dma_tx_n_232,u_dma_tx_n_233}),
        .\DMA_BREM_reg[7] ({u_csr_axi_n_143,u_csr_axi_n_144,u_csr_axi_n_145,u_csr_axi_n_146}),
        .\DMA_BREM_reg[7]_0 ({u_dma_tx_n_234,u_dma_tx_n_235,u_dma_tx_n_236,u_dma_tx_n_237}),
        .IRQ(IRQ),
        .\M_ARLEN_reg[0] (R_len),
        .\M_ARSIZE_reg[1] (u_dma_tx_n_2),
        .\M_AWLEN_reg[0] (u_dma_rx_n_160),
        .M_BREADY_reg(u_dma_rx_n_5),
        .\M_WID_reg[3] ({u_dma_rx_n_170,u_dma_rx_n_171,u_dma_rx_n_172,u_dma_rx_n_173}),
        .O({u_csr_axi_n_464,u_csr_axi_n_465,u_csr_axi_n_466}),
        .Q({u_dma_tx_n_42,u_dma_tx_n_43,u_dma_tx_n_44,u_dma_tx_n_45,u_dma_tx_n_46,u_dma_tx_n_47,u_dma_tx_n_48,u_dma_tx_n_49,u_dma_tx_n_50,u_dma_tx_n_51,u_dma_tx_n_52,u_dma_tx_n_53,u_dma_tx_n_54,u_dma_tx_n_55,u_dma_tx_n_56,u_dma_tx_n_57,u_dma_tx_n_58,u_dma_tx_n_59,u_dma_tx_n_60,u_dma_tx_n_61,u_dma_tx_n_62,u_dma_tx_n_63,u_dma_tx_n_64,u_dma_tx_n_65,u_dma_tx_n_66,u_dma_tx_n_67,u_dma_tx_n_68,u_dma_tx_n_69,u_dma_tx_n_70,u_dma_tx_n_71,u_dma_tx_n_72,u_dma_tx_n_73}),
        .R_addr2(R_addr2),
        .\R_addr_reg[0] (u_dma_tx_n_41),
        .\R_addr_reg[10] (u_csr_axi_n_163),
        .\R_addr_reg[10]_0 (u_dma_tx_n_217),
        .\R_addr_reg[11] (u_csr_axi_n_676),
        .\R_addr_reg[11]_0 (u_dma_tx_n_216),
        .\R_addr_reg[12] (u_csr_axi_n_185),
        .\R_addr_reg[12]_0 (u_dma_tx_n_215),
        .\R_addr_reg[13] (u_csr_axi_n_164),
        .\R_addr_reg[13]_0 (u_dma_tx_n_214),
        .\R_addr_reg[14] (u_csr_axi_n_165),
        .\R_addr_reg[14]_0 (u_dma_tx_n_213),
        .\R_addr_reg[15] (u_csr_axi_n_166),
        .\R_addr_reg[15]_0 (u_dma_tx_n_212),
        .\R_addr_reg[16] (u_csr_axi_n_167),
        .\R_addr_reg[16]_0 (u_dma_tx_n_211),
        .\R_addr_reg[17] (u_csr_axi_n_168),
        .\R_addr_reg[17]_0 (u_dma_tx_n_210),
        .\R_addr_reg[18] (u_csr_axi_n_169),
        .\R_addr_reg[18]_0 (u_dma_tx_n_209),
        .\R_addr_reg[19] (u_csr_axi_n_170),
        .\R_addr_reg[19]_0 (u_dma_tx_n_208),
        .\R_addr_reg[1] (u_dma_tx_n_226),
        .\R_addr_reg[20] (u_csr_axi_n_171),
        .\R_addr_reg[20]_0 (u_dma_tx_n_207),
        .\R_addr_reg[21] (u_csr_axi_n_172),
        .\R_addr_reg[21]_0 (u_dma_tx_n_206),
        .\R_addr_reg[22] (u_csr_axi_n_173),
        .\R_addr_reg[22]_0 (u_dma_tx_n_205),
        .\R_addr_reg[23] (u_csr_axi_n_174),
        .\R_addr_reg[23]_0 (u_dma_tx_n_204),
        .\R_addr_reg[24] (u_csr_axi_n_175),
        .\R_addr_reg[24]_0 (u_dma_tx_n_203),
        .\R_addr_reg[25] (u_csr_axi_n_176),
        .\R_addr_reg[25]_0 (u_dma_tx_n_202),
        .\R_addr_reg[26] (u_csr_axi_n_177),
        .\R_addr_reg[26]_0 (u_dma_tx_n_201),
        .\R_addr_reg[27] (u_csr_axi_n_178),
        .\R_addr_reg[27]_0 (u_dma_tx_n_200),
        .\R_addr_reg[28] (u_csr_axi_n_179),
        .\R_addr_reg[28]_0 (u_dma_tx_n_199),
        .\R_addr_reg[29] (u_csr_axi_n_180),
        .\R_addr_reg[29]_0 (u_dma_tx_n_198),
        .\R_addr_reg[2] (u_csr_axi_n_154),
        .\R_addr_reg[2]_0 (u_dma_tx_n_225),
        .\R_addr_reg[30] (u_csr_axi_n_181),
        .\R_addr_reg[30]_0 (u_dma_tx_n_197),
        .\R_addr_reg[31] (u_csr_axi_n_182),
        .\R_addr_reg[31]_0 (u_dma_tx_n_196),
        .\R_addr_reg[3] (u_csr_axi_n_156),
        .\R_addr_reg[3]_0 (u_dma_tx_n_224),
        .\R_addr_reg[4] (u_csr_axi_n_157),
        .\R_addr_reg[4]_0 (u_dma_tx_n_223),
        .\R_addr_reg[5] (u_csr_axi_n_158),
        .\R_addr_reg[5]_0 (u_dma_tx_n_222),
        .\R_addr_reg[6] (u_csr_axi_n_159),
        .\R_addr_reg[6]_0 (u_dma_tx_n_221),
        .\R_addr_reg[7] (u_csr_axi_n_160),
        .\R_addr_reg[7]_0 (u_dma_tx_n_220),
        .\R_addr_reg[8] (u_csr_axi_n_161),
        .\R_addr_reg[8]_0 (u_dma_tx_n_219),
        .\R_addr_reg[9] (u_csr_axi_n_162),
        .\R_addr_reg[9]_0 (u_dma_tx_n_218),
        .\R_bmove_reg[0] (u_dma_tx_n_228),
        .\R_brem[15]_i_121_0 ({u_dma_tx_n_278,u_dma_tx_n_279,u_dma_tx_n_280,u_dma_tx_n_281}),
        .\R_brem[15]_i_121_1 ({u_dma_tx_n_282,u_dma_tx_n_283,u_dma_tx_n_284,u_dma_tx_n_285}),
        .\R_brem[15]_i_123_0 ({u_dma_tx_n_286,u_dma_tx_n_287,u_dma_tx_n_288,u_dma_tx_n_289}),
        .\R_brem[15]_i_123_1 ({u_dma_tx_n_290,u_dma_tx_n_291,u_dma_tx_n_292,u_dma_tx_n_293}),
        .\R_brem[15]_i_151 (u_dma_tx_n_314),
        .\R_brem[15]_i_151_0 (u_dma_tx_n_0),
        .\R_brem[15]_i_171_0 ({u_dma_tx_n_294,u_dma_tx_n_295,u_dma_tx_n_296,u_dma_tx_n_297}),
        .\R_brem[15]_i_171_1 ({u_dma_tx_n_298,u_dma_tx_n_299,u_dma_tx_n_300,u_dma_tx_n_301}),
        .\R_brem[15]_i_173_0 ({u_dma_tx_n_302,u_dma_tx_n_303,u_dma_tx_n_304,u_dma_tx_n_305}),
        .\R_brem[15]_i_173_1 ({u_dma_tx_n_306,u_dma_tx_n_307,u_dma_tx_n_308,u_dma_tx_n_309}),
        .\R_brem[15]_i_32_0 ({u_dma_tx_n_4,u_dma_tx_n_5,u_dma_tx_n_6,u_dma_tx_n_7}),
        .\R_brem[15]_i_32_1 ({u_dma_tx_n_250,u_dma_tx_n_251,u_dma_tx_n_252,u_dma_tx_n_253}),
        .\R_brem[15]_i_34_0 ({u_dma_tx_n_258,u_dma_tx_n_259,u_dma_tx_n_260,u_dma_tx_n_261}),
        .\R_brem[15]_i_34_1 ({u_dma_tx_n_254,u_dma_tx_n_255,u_dma_tx_n_256,u_dma_tx_n_257}),
        .\R_brem[15]_i_72_0 ({u_dma_tx_n_266,u_dma_tx_n_267,u_dma_tx_n_268,u_dma_tx_n_269}),
        .\R_brem[15]_i_72_1 ({u_dma_tx_n_262,u_dma_tx_n_263,u_dma_tx_n_264,u_dma_tx_n_265}),
        .\R_brem[15]_i_74_0 ({u_dma_tx_n_274,u_dma_tx_n_275,u_dma_tx_n_276,u_dma_tx_n_277}),
        .\R_brem[15]_i_74_1 ({u_dma_tx_n_270,u_dma_tx_n_271,u_dma_tx_n_272,u_dma_tx_n_273}),
        .\R_brem[15]_i_82_0 (u_dma_tx_n_313),
        .\R_brem[15]_i_82_1 (u_dma_tx_n_312),
        .\R_brem_reg[0] (u_dma_tx_n_155),
        .\R_brem_reg[10] (u_dma_tx_n_145),
        .\R_brem_reg[11] (u_dma_tx_n_146),
        .\R_brem_reg[12] (u_dma_tx_n_143),
        .\R_brem_reg[13] (u_dma_tx_n_144),
        .\R_brem_reg[14] (u_dma_tx_n_249),
        .\R_brem_reg[14]_0 (u_dma_tx_n_125),
        .\R_brem_reg[15] ({u_csr_axi_n_136,u_csr_axi_n_137,u_csr_axi_n_138,u_csr_axi_n_139}),
        .\R_brem_reg[15]_0 (u_dma_tx_n_142),
        .\R_brem_reg[15]_i_144 ({u_dma_tx_n_126,u_dma_tx_n_127,u_dma_tx_n_128,u_dma_tx_n_129,u_dma_tx_n_130,u_dma_tx_n_131,u_dma_tx_n_132,u_dma_tx_n_133,u_dma_tx_n_134,u_dma_tx_n_135,u_dma_tx_n_136,u_dma_tx_n_137,u_dma_tx_n_138,u_dma_tx_n_139,u_dma_tx_n_140,u_dma_tx_n_141}),
        .\R_brem_reg[15]_i_35_0 (u_dma_tx_n_248),
        .\R_brem_reg[15]_i_41 ({u_dma_tx_n_109,u_dma_tx_n_110,u_dma_tx_n_111,u_dma_tx_n_112,u_dma_tx_n_113,u_dma_tx_n_114,u_dma_tx_n_115,u_dma_tx_n_116,u_dma_tx_n_117,u_dma_tx_n_118,u_dma_tx_n_119,u_dma_tx_n_120,u_dma_tx_n_121,u_dma_tx_n_122,u_dma_tx_n_123,u_dma_tx_n_124}),
        .\R_brem_reg[15]_i_4_0 (u_dma_tx_n_227),
        .\R_brem_reg[15]_i_4_1 (u_dma_tx_n_247),
        .\R_brem_reg[1] (u_dma_tx_n_156),
        .\R_brem_reg[2] (u_dma_tx_n_153),
        .\R_brem_reg[3] (u_dma_tx_n_154),
        .\R_brem_reg[4] (u_dma_tx_n_151),
        .\R_brem_reg[5] (u_dma_tx_n_152),
        .\R_brem_reg[6] (u_dma_tx_n_149),
        .\R_brem_reg[7] ({u_csr_axi_n_147,u_csr_axi_n_148,u_csr_axi_n_149,u_csr_axi_n_150}),
        .\R_brem_reg[7]_0 (u_dma_tx_n_150),
        .\R_brem_reg[8] (u_dma_tx_n_147),
        .\R_brem_reg[9] (u_dma_tx_n_148),
        .R_empty_i_38(u_dma_tx_n_246),
        .R_empty_reg(u_csr_axi_n_0),
        .R_empty_reg_0(u_csr_axi_n_118),
        .R_empty_reg_1(u_csr_axi_n_240),
        .R_empty_reg_2(u_csr_axi_n_241),
        .R_empty_reg_3(u_dma_tx_n_40),
        .R_full14_out(R_full14_out),
        .R_full_reg(u_csr_axi_n_1),
        .R_full_reg_0(u_csr_axi_n_119),
        .R_full_reg_1(u_csr_axi_n_120),
        .R_full_reg_10(u_csr_axi_n_129),
        .R_full_reg_11(u_csr_axi_n_131),
        .R_full_reg_12(u_csr_axi_n_140),
        .R_full_reg_13(u_csr_axi_n_141),
        .R_full_reg_14(u_csr_axi_n_142),
        .R_full_reg_15(u_csr_axi_n_151),
        .R_full_reg_2(u_csr_axi_n_121),
        .R_full_reg_3(u_csr_axi_n_122),
        .R_full_reg_4(u_csr_axi_n_123),
        .R_full_reg_5(u_csr_axi_n_124),
        .R_full_reg_6(u_csr_axi_n_125),
        .R_full_reg_7(u_csr_axi_n_126),
        .R_full_reg_8(u_csr_axi_n_127),
        .R_full_reg_9(u_csr_axi_n_128),
        .S({u_csr_axi_n_34,u_csr_axi_n_35}),
        .S_ARADDR(S_ARADDR[7:0]),
        .S_ARBURST(S_ARBURST),
        .S_ARID(S_ARID),
        .S_ARLEN(S_ARLEN),
        .S_ARREADY_reg_0(S_ARREADY),
        .S_ARSIZE(S_ARSIZE),
        .S_ARVALID(S_ARVALID),
        .S_AWADDR(S_AWADDR[7:0]),
        .S_AWBURST(S_AWBURST),
        .S_AWID(S_AWID),
        .S_AWLEN(S_AWLEN),
        .S_AWREADY_reg_0(S_AWREADY),
        .S_AWSIZE(S_AWSIZE),
        .S_AWVALID(S_AWVALID),
        .S_BID(S_BID),
        .S_BREADY(S_BREADY),
        .S_BRESP(\^S_BRESP ),
        .S_BVALID(S_BVALID),
        .S_RDATA(S_RDATA),
        .S_RID(S_RID),
        .S_RLAST(S_RLAST),
        .S_RREADY(S_RREADY),
        .S_RRESP(\^S_RRESP ),
        .S_RVALID(S_RVALID),
        .S_WDATA(S_WDATA),
        .S_WID(S_WID),
        .S_WLAST(S_WLAST),
        .S_WREADY(S_WREADY),
        .S_WSTRB(S_WSTRB),
        .S_WVALID(S_WVALID),
        .\T_RDATA[14]_i_2 (desc_rx_bnum),
        .\T_RDATA[2]_i_8 (desc_rx_dst),
        .W_addr2(W_addr2),
        .\W_bmove[15]_i_25 ({u_dma_rx_n_152,u_dma_rx_n_153,u_dma_rx_n_154,u_dma_rx_n_155}),
        .\W_bmove[15]_i_51_0 (u_csr_axi_n_377),
        .\W_bmove[15]_i_6_0 (p_0_in),
        .\W_bmove[1]_i_22_0 (u_csr_axi_n_375),
        .\W_bmove[1]_i_27_0 (u_csr_axi_n_374),
        .\W_bmove[1]_i_56_0 (u_dma_rx_n_139),
        .\W_bmove[1]_i_58_0 (u_csr_axi_n_376),
        .\W_bmove_reg[14] (u_dma_rx_n_162),
        .\W_bmove_reg[15]_i_89_0 ({u_dma_rx_n_108,u_dma_rx_n_109,u_dma_rx_n_110,u_dma_rx_n_111,u_dma_rx_n_112,u_dma_rx_n_113,u_dma_rx_n_114,u_dma_rx_n_115,u_dma_rx_n_116,u_dma_rx_n_117,u_dma_rx_n_118,u_dma_rx_n_119,u_dma_rx_n_120,u_dma_rx_n_121,u_dma_rx_n_122,u_dma_rx_n_123}),
        .\W_bmove_reg[15]_i_89_1 (u_dma_rx_n_128),
        .\W_bmove_reg[1]_i_11_0 ({u_dma_rx_n_148,u_dma_rx_n_149,u_dma_rx_n_150,u_dma_rx_n_151}),
        .\W_bmove_reg[1]_i_18_0 ({u_dma_rx_n_166,u_dma_rx_n_167,u_dma_rx_n_168,u_dma_rx_n_169}),
        .\W_bmove_reg[1]_i_23_0 ({u_dma_rx_n_124,u_dma_rx_n_125,u_dma_rx_n_126,u_dma_rx_n_127}),
        .\W_bmove_reg[1]_i_36_0 ({u_dma_rx_n_144,u_dma_rx_n_145,u_dma_rx_n_146,u_dma_rx_n_147}),
        .\W_bmove_reg[1]_i_54_0 ({u_dma_rx_n_131,u_dma_rx_n_132,u_dma_rx_n_133,u_dma_rx_n_134}),
        .\W_bmove_reg[1]_i_59_0 ({u_dma_rx_n_75,u_dma_rx_n_76,u_dma_rx_n_77,u_dma_rx_n_78,u_dma_rx_n_79,u_dma_rx_n_80,u_dma_rx_n_81,u_dma_rx_n_82,u_dma_rx_n_83,u_dma_rx_n_84,u_dma_rx_n_85,u_dma_rx_n_86,u_dma_rx_n_87,u_dma_rx_n_88}),
        .\W_bmove_reg[1]_i_59_1 ({u_dma_rx_n_163,u_dma_rx_n_164,u_dma_rx_n_165}),
        .\W_bmove_reg[1]_i_64_0 ({u_dma_rx_n_89,u_dma_rx_n_90,u_dma_rx_n_91}),
        .\W_bmove_reg[1]_i_69_0 ({u_dma_rx_n_140,u_dma_rx_n_141,u_dma_rx_n_142,u_dma_rx_n_143}),
        .\W_bmove_reg[1]_i_86_0 ({u_dma_rx_n_135,u_dma_rx_n_136,u_dma_rx_n_137,u_dma_rx_n_138}),
        .\W_bmove_reg[1]_i_8_0 (u_dma_rx_n_176),
        .\W_bmove_reg[1]_i_8_1 (u_dma_rx_n_174),
        .W_bxxx(W_bxxx),
        .W_empty(W_empty),
        .W_full_i_3_0(u_dma_rx_n_156),
        .W_full_i_5_0({u_dma_rx_n_2,u_dma_rx_n_3,u_dma_rx_n_4}),
        .W_full_reg(u_csr_axi_n_242),
        .W_full_reg_0(get_rooms_return__0),
        .W_full_reg_1(get_rooms_return),
        .W_full_reg_2({u_csr_axi_n_467,u_csr_axi_n_468,u_csr_axi_n_469,u_csr_axi_n_470}),
        .W_full_reg_3({u_csr_axi_n_471,u_csr_axi_n_472}),
        .W_full_reg_4(u_dma_rx_n_129),
        .W_full_reg_5(u_dma_rx_n_1),
        .W_go0(W_go0),
        .W_go_reg(u_dma_rx_n_161),
        .W_go_reg_0(u_dma_rx_n_130),
        .client_bnum_rdy_reg_C(client_rx_rd_bnum_rdy),
        .conf_mac_addr(conf_mac_addr),
        .conf_rx_en(conf_rx_en),
        .conf_rx_en_reg(u_csr_axi_n_243),
        .conf_rx_en_reg_0(u_csr_axi_n_245),
        .conf_rx_en_reg_1(u_csr_axi_n_359),
        .conf_rx_en_reg_2({u_csr_axi_n_360,u_csr_axi_n_361,u_csr_axi_n_362,u_csr_axi_n_363,u_csr_axi_n_364,u_csr_axi_n_365,u_csr_axi_n_366,u_csr_axi_n_367,u_csr_axi_n_368,u_csr_axi_n_369,u_csr_axi_n_370,u_csr_axi_n_371,u_csr_axi_n_372,u_csr_axi_n_373}),
        .conf_rx_en_reg_3({u_csr_axi_n_409,u_csr_axi_n_410,u_csr_axi_n_411,u_csr_axi_n_412,u_csr_axi_n_413,u_csr_axi_n_414,u_csr_axi_n_415,u_csr_axi_n_416,u_csr_axi_n_417,u_csr_axi_n_418,u_csr_axi_n_419,u_csr_axi_n_420,u_csr_axi_n_421,u_csr_axi_n_422,u_csr_axi_n_423,u_csr_axi_n_424}),
        .conf_rx_en_reg_4(u_csr_axi_n_426),
        .conf_rx_en_reg_5(u_csr_axi_n_427),
        .conf_rx_en_reg_6({u_csr_axi_n_428,u_csr_axi_n_429,u_csr_axi_n_430}),
        .conf_rx_en_reg_7({u_csr_axi_n_431,u_csr_axi_n_432,u_csr_axi_n_433,u_csr_axi_n_434,u_csr_axi_n_435,u_csr_axi_n_436,u_csr_axi_n_437,u_csr_axi_n_438,u_csr_axi_n_439,u_csr_axi_n_440,u_csr_axi_n_441,u_csr_axi_n_442,u_csr_axi_n_443,u_csr_axi_n_444,u_csr_axi_n_445,u_csr_axi_n_446,u_csr_axi_n_447,u_csr_axi_n_448,u_csr_axi_n_449,u_csr_axi_n_450,u_csr_axi_n_451,u_csr_axi_n_452,u_csr_axi_n_453,u_csr_axi_n_454,u_csr_axi_n_455,u_csr_axi_n_456,u_csr_axi_n_457,u_csr_axi_n_458,u_csr_axi_n_459,u_csr_axi_n_460,u_csr_axi_n_461,u_csr_axi_n_462}),
        .conf_rx_en_reg_8(u_csr_axi_n_463),
        .conf_rx_jumbo_en(conf_rx_jumbo_en),
        .conf_rx_no_chk_crc(conf_rx_no_chk_crc),
        .conf_rx_promiscuous(conf_rx_promiscuous),
        .conf_rx_reset(conf_rx_reset),
        .conf_tx_en(conf_tx_en),
        .conf_tx_en_reg({u_csr_axi_n_187,u_csr_axi_n_188}),
        .conf_tx_en_reg_0({u_csr_axi_n_189,u_csr_axi_n_190,u_csr_axi_n_191,u_csr_axi_n_192,u_csr_axi_n_193,u_csr_axi_n_194,u_csr_axi_n_195,u_csr_axi_n_196,u_csr_axi_n_197,u_csr_axi_n_198,u_csr_axi_n_199,u_csr_axi_n_200,u_csr_axi_n_201,u_csr_axi_n_202,u_csr_axi_n_203,u_csr_axi_n_204,u_csr_axi_n_205,u_csr_axi_n_206,u_csr_axi_n_207,u_csr_axi_n_208,u_csr_axi_n_209,u_csr_axi_n_210,u_csr_axi_n_211,u_csr_axi_n_212,u_csr_axi_n_213,u_csr_axi_n_214,u_csr_axi_n_215,u_csr_axi_n_216,u_csr_axi_n_217,u_csr_axi_n_218,u_csr_axi_n_219,u_csr_axi_n_220}),
        .conf_tx_en_reg_1({u_csr_axi_n_221,u_csr_axi_n_222,u_csr_axi_n_223,u_csr_axi_n_224,u_csr_axi_n_225,u_csr_axi_n_226,u_csr_axi_n_227,u_csr_axi_n_228,u_csr_axi_n_229,u_csr_axi_n_230,u_csr_axi_n_231,u_csr_axi_n_232,u_csr_axi_n_233,u_csr_axi_n_234}),
        .conf_tx_en_reg_2(u_csr_axi_n_235),
        .conf_tx_en_reg_3(u_csr_axi_n_236),
        .conf_tx_en_reg_4(u_csr_axi_n_677),
        .conf_tx_jumbo_en(conf_tx_jumbo_en),
        .conf_tx_no_gen_crc(conf_tx_no_gen_crc),
        .conf_tx_reset(conf_tx_reset),
        .crc_err(crc_err_sync),
        .csr_rx_reset_reg(u_csr_axi_n_545),
        .csr_rx_reset_reg_0(u_csr_axi_n_547),
        .\desc_bnum_reg[15] (client_rx_rd_bnum),
        .desc_ready_reg(u_dma_tx_n_195),
        .dout(client_rx_rd_ctl),
        .gbe_phy_reset_n(gbe_phy_reset_n),
        .gtx_clk_stable(gtx_clk_stable),
        .\item_cnt_reg[4] (u_csr_axi_n_541),
        .out(p_1_in_0),
        .rx_addr_empty(rx_addr_empty),
        .\rx_addr_end_reg[30] (W_addr1),
        .\rx_addr_end_reg[31] (rx_addr_end),
        .rx_addr_head(rx_addr_head),
        .rx_addr_head_update(rx_addr_head_update),
        .rx_addr_start(rx_addr_start),
        .\rx_addr_start_reg[0] (u_csr_axi_n_408),
        .\rx_addr_start_reg[0]_0 (u_csr_axi_n_473),
        .\rx_addr_start_reg[0]_1 (u_csr_axi_n_548),
        .\rx_addr_start_reg[0]_2 (u_csr_axi_n_549),
        .\rx_addr_start_reg[10] (u_csr_axi_n_386),
        .\rx_addr_start_reg[10]_0 (u_csr_axi_n_568),
        .\rx_addr_start_reg[10]_1 (u_csr_axi_n_569),
        .\rx_addr_start_reg[11] (u_csr_axi_n_387),
        .\rx_addr_start_reg[11]_0 (u_csr_axi_n_570),
        .\rx_addr_start_reg[11]_1 (u_csr_axi_n_571),
        .\rx_addr_start_reg[12] (u_csr_axi_n_388),
        .\rx_addr_start_reg[12]_0 (u_csr_axi_n_572),
        .\rx_addr_start_reg[12]_1 (u_csr_axi_n_573),
        .\rx_addr_start_reg[13] (u_csr_axi_n_389),
        .\rx_addr_start_reg[13]_0 (u_csr_axi_n_574),
        .\rx_addr_start_reg[13]_1 (u_csr_axi_n_575),
        .\rx_addr_start_reg[14] (u_csr_axi_n_390),
        .\rx_addr_start_reg[14]_0 (u_csr_axi_n_576),
        .\rx_addr_start_reg[14]_1 (u_csr_axi_n_577),
        .\rx_addr_start_reg[15] (u_csr_axi_n_391),
        .\rx_addr_start_reg[15]_0 (u_csr_axi_n_578),
        .\rx_addr_start_reg[15]_1 (u_csr_axi_n_579),
        .\rx_addr_start_reg[16] (u_csr_axi_n_392),
        .\rx_addr_start_reg[16]_0 (u_csr_axi_n_580),
        .\rx_addr_start_reg[16]_1 (u_csr_axi_n_581),
        .\rx_addr_start_reg[17] (u_csr_axi_n_393),
        .\rx_addr_start_reg[17]_0 (u_csr_axi_n_582),
        .\rx_addr_start_reg[17]_1 (u_csr_axi_n_583),
        .\rx_addr_start_reg[18] (u_csr_axi_n_394),
        .\rx_addr_start_reg[18]_0 (u_csr_axi_n_584),
        .\rx_addr_start_reg[18]_1 (u_csr_axi_n_585),
        .\rx_addr_start_reg[19] (u_csr_axi_n_395),
        .\rx_addr_start_reg[19]_0 (u_csr_axi_n_586),
        .\rx_addr_start_reg[19]_1 (u_csr_axi_n_587),
        .\rx_addr_start_reg[1] (u_csr_axi_n_407),
        .\rx_addr_start_reg[1]_0 (u_csr_axi_n_474),
        .\rx_addr_start_reg[1]_1 (u_csr_axi_n_550),
        .\rx_addr_start_reg[1]_2 (u_csr_axi_n_551),
        .\rx_addr_start_reg[20] (u_csr_axi_n_425),
        .\rx_addr_start_reg[20]_0 (u_csr_axi_n_588),
        .\rx_addr_start_reg[20]_1 (u_csr_axi_n_589),
        .\rx_addr_start_reg[21] (u_csr_axi_n_396),
        .\rx_addr_start_reg[21]_0 (u_csr_axi_n_590),
        .\rx_addr_start_reg[21]_1 (u_csr_axi_n_591),
        .\rx_addr_start_reg[22] (u_csr_axi_n_397),
        .\rx_addr_start_reg[22]_0 (u_csr_axi_n_592),
        .\rx_addr_start_reg[22]_1 (u_csr_axi_n_593),
        .\rx_addr_start_reg[23] (u_csr_axi_n_398),
        .\rx_addr_start_reg[23]_0 (u_csr_axi_n_594),
        .\rx_addr_start_reg[23]_1 (u_csr_axi_n_595),
        .\rx_addr_start_reg[24] (u_csr_axi_n_399),
        .\rx_addr_start_reg[24]_0 (u_csr_axi_n_596),
        .\rx_addr_start_reg[24]_1 (u_csr_axi_n_597),
        .\rx_addr_start_reg[25] (u_csr_axi_n_400),
        .\rx_addr_start_reg[25]_0 (u_csr_axi_n_598),
        .\rx_addr_start_reg[25]_1 (u_csr_axi_n_599),
        .\rx_addr_start_reg[26] (u_csr_axi_n_401),
        .\rx_addr_start_reg[26]_0 (u_csr_axi_n_600),
        .\rx_addr_start_reg[26]_1 (u_csr_axi_n_601),
        .\rx_addr_start_reg[27] (u_csr_axi_n_402),
        .\rx_addr_start_reg[27]_0 (u_csr_axi_n_602),
        .\rx_addr_start_reg[27]_1 (u_csr_axi_n_603),
        .\rx_addr_start_reg[28] (u_csr_axi_n_403),
        .\rx_addr_start_reg[28]_0 (u_csr_axi_n_604),
        .\rx_addr_start_reg[28]_1 (u_csr_axi_n_605),
        .\rx_addr_start_reg[29] (u_csr_axi_n_404),
        .\rx_addr_start_reg[29]_0 (u_csr_axi_n_606),
        .\rx_addr_start_reg[29]_1 (u_csr_axi_n_607),
        .\rx_addr_start_reg[2] (u_csr_axi_n_378),
        .\rx_addr_start_reg[2]_0 (u_csr_axi_n_552),
        .\rx_addr_start_reg[2]_1 (u_csr_axi_n_553),
        .\rx_addr_start_reg[30] (u_csr_axi_n_405),
        .\rx_addr_start_reg[30]_0 (u_csr_axi_n_608),
        .\rx_addr_start_reg[30]_1 (u_csr_axi_n_609),
        .\rx_addr_start_reg[31] (u_csr_axi_n_406),
        .\rx_addr_start_reg[31]_0 (u_csr_axi_n_610),
        .\rx_addr_start_reg[31]_1 (u_csr_axi_n_611),
        .\rx_addr_start_reg[3] (u_csr_axi_n_379),
        .\rx_addr_start_reg[3]_0 (u_csr_axi_n_554),
        .\rx_addr_start_reg[3]_1 (u_csr_axi_n_555),
        .\rx_addr_start_reg[4] (u_csr_axi_n_380),
        .\rx_addr_start_reg[4]_0 (u_csr_axi_n_556),
        .\rx_addr_start_reg[4]_1 (u_csr_axi_n_557),
        .\rx_addr_start_reg[5] (u_csr_axi_n_381),
        .\rx_addr_start_reg[5]_0 (u_csr_axi_n_558),
        .\rx_addr_start_reg[5]_1 (u_csr_axi_n_559),
        .\rx_addr_start_reg[6] (u_csr_axi_n_382),
        .\rx_addr_start_reg[6]_0 (u_csr_axi_n_560),
        .\rx_addr_start_reg[6]_1 (u_csr_axi_n_561),
        .\rx_addr_start_reg[7] (u_csr_axi_n_383),
        .\rx_addr_start_reg[7]_0 (u_csr_axi_n_562),
        .\rx_addr_start_reg[7]_1 (u_csr_axi_n_563),
        .\rx_addr_start_reg[8] (u_csr_axi_n_384),
        .\rx_addr_start_reg[8]_0 (u_csr_axi_n_564),
        .\rx_addr_start_reg[8]_1 (u_csr_axi_n_565),
        .\rx_addr_start_reg[9] (u_csr_axi_n_385),
        .\rx_addr_start_reg[9]_0 (u_csr_axi_n_566),
        .\rx_addr_start_reg[9]_1 (u_csr_axi_n_567),
        .rx_addr_tail(rx_addr_tail),
        .\rx_addr_tail_reg[31] (u_csr_axi_n_252),
        .rx_descriptor_full(desc_rx_full),
        .rx_descriptor_wr_rdy(desc_rx_ready),
        .rx_descriptor_wr_vld(desc_rx_valid),
        .sig_in0(sig_in0),
        .\state_reg[1] ({u_csr_axi_n_475,u_csr_axi_n_476,u_csr_axi_n_477,u_csr_axi_n_478,u_csr_axi_n_479,u_csr_axi_n_480,u_csr_axi_n_481,u_csr_axi_n_482,u_csr_axi_n_483,u_csr_axi_n_484,u_csr_axi_n_485,u_csr_axi_n_486,u_csr_axi_n_487,u_csr_axi_n_488,u_csr_axi_n_489,u_csr_axi_n_490,u_csr_axi_n_491,u_csr_axi_n_492,u_csr_axi_n_493,u_csr_axi_n_494,u_csr_axi_n_495,u_csr_axi_n_496,u_csr_axi_n_497,u_csr_axi_n_498,u_csr_axi_n_499,u_csr_axi_n_500,u_csr_axi_n_501,u_csr_axi_n_502,u_csr_axi_n_503,u_csr_axi_n_504,u_csr_axi_n_505,u_csr_axi_n_506}),
        .\state_reg[1]_0 ({u_csr_axi_n_507,u_csr_axi_n_508,u_csr_axi_n_509,u_csr_axi_n_510,u_csr_axi_n_511,u_csr_axi_n_512,u_csr_axi_n_513,u_csr_axi_n_514,u_csr_axi_n_515,u_csr_axi_n_516,u_csr_axi_n_517,u_csr_axi_n_518,u_csr_axi_n_519,u_csr_axi_n_520,u_csr_axi_n_521,u_csr_axi_n_522}),
        .\state_reg[1]_1 (u_csr_axi_n_523),
        .\state_reg[1]_2 ({u_csr_axi_n_525,u_csr_axi_n_526,u_csr_axi_n_527,u_csr_axi_n_528,u_csr_axi_n_529,u_csr_axi_n_530,u_csr_axi_n_531,u_csr_axi_n_532,u_csr_axi_n_533,u_csr_axi_n_534,u_csr_axi_n_535,u_csr_axi_n_536,u_csr_axi_n_537,u_csr_axi_n_538,u_csr_axi_n_539,u_csr_axi_n_540}),
        .tx_addr_empty(tx_addr_empty),
        .tx_addr_end(tx_addr_end),
        .\tx_addr_end_reg[29] (u_csr_axi_n_155),
        .\tx_addr_end_reg[30] (R_addr1),
        .tx_addr_head(tx_addr_head),
        .\tx_addr_head_reg[14] ({u_csr_axi_n_72,u_csr_axi_n_73,u_csr_axi_n_74,u_csr_axi_n_75}),
        .\tx_addr_head_reg[20] ({u_csr_axi_n_76,u_csr_axi_n_77}),
        .\tx_addr_head_reg[23] ({u_csr_axi_n_78,u_csr_axi_n_79,u_csr_axi_n_80,u_csr_axi_n_81}),
        .\tx_addr_head_reg[31] ({u_csr_axi_n_82,u_csr_axi_n_83}),
        .\tx_addr_head_reg[31]_0 (R_empty0),
        .\tx_addr_head_reg[31]_1 (R_empty00_out),
        .\tx_addr_head_reg[7] ({u_csr_axi_n_68,u_csr_axi_n_69,u_csr_axi_n_70,u_csr_axi_n_71}),
        .tx_addr_start(tx_addr_start),
        .\tx_addr_start_reg[0] (u_csr_axi_n_184),
        .\tx_addr_start_reg[0]_0 (u_csr_axi_n_612),
        .\tx_addr_start_reg[0]_1 (u_csr_axi_n_613),
        .\tx_addr_start_reg[10] (u_csr_axi_n_632),
        .\tx_addr_start_reg[10]_0 (u_csr_axi_n_633),
        .\tx_addr_start_reg[11] (u_csr_axi_n_634),
        .\tx_addr_start_reg[11]_0 (u_csr_axi_n_635),
        .\tx_addr_start_reg[12] (u_csr_axi_n_636),
        .\tx_addr_start_reg[12]_0 (u_csr_axi_n_637),
        .\tx_addr_start_reg[13] (u_csr_axi_n_638),
        .\tx_addr_start_reg[13]_0 (u_csr_axi_n_639),
        .\tx_addr_start_reg[14] (u_csr_axi_n_640),
        .\tx_addr_start_reg[14]_0 (u_csr_axi_n_641),
        .\tx_addr_start_reg[15] (u_csr_axi_n_642),
        .\tx_addr_start_reg[15]_0 (u_csr_axi_n_643),
        .\tx_addr_start_reg[16] (u_csr_axi_n_644),
        .\tx_addr_start_reg[16]_0 (u_csr_axi_n_645),
        .\tx_addr_start_reg[17] (u_csr_axi_n_646),
        .\tx_addr_start_reg[17]_0 (u_csr_axi_n_647),
        .\tx_addr_start_reg[18] (u_csr_axi_n_648),
        .\tx_addr_start_reg[18]_0 (u_csr_axi_n_649),
        .\tx_addr_start_reg[19] (u_csr_axi_n_650),
        .\tx_addr_start_reg[19]_0 (u_csr_axi_n_651),
        .\tx_addr_start_reg[1] (u_csr_axi_n_183),
        .\tx_addr_start_reg[1]_0 (u_csr_axi_n_614),
        .\tx_addr_start_reg[1]_1 (u_csr_axi_n_615),
        .\tx_addr_start_reg[20] (u_csr_axi_n_652),
        .\tx_addr_start_reg[20]_0 (u_csr_axi_n_653),
        .\tx_addr_start_reg[21] (u_csr_axi_n_654),
        .\tx_addr_start_reg[21]_0 (u_csr_axi_n_655),
        .\tx_addr_start_reg[22] (u_csr_axi_n_656),
        .\tx_addr_start_reg[22]_0 (u_csr_axi_n_657),
        .\tx_addr_start_reg[23] (u_csr_axi_n_658),
        .\tx_addr_start_reg[23]_0 (u_csr_axi_n_659),
        .\tx_addr_start_reg[24] (u_csr_axi_n_660),
        .\tx_addr_start_reg[24]_0 (u_csr_axi_n_661),
        .\tx_addr_start_reg[25] (u_csr_axi_n_662),
        .\tx_addr_start_reg[25]_0 (u_csr_axi_n_663),
        .\tx_addr_start_reg[26] (u_csr_axi_n_664),
        .\tx_addr_start_reg[26]_0 (u_csr_axi_n_665),
        .\tx_addr_start_reg[27] (u_csr_axi_n_666),
        .\tx_addr_start_reg[27]_0 (u_csr_axi_n_667),
        .\tx_addr_start_reg[28] (u_csr_axi_n_668),
        .\tx_addr_start_reg[28]_0 (u_csr_axi_n_669),
        .\tx_addr_start_reg[29] (u_csr_axi_n_670),
        .\tx_addr_start_reg[29]_0 (u_csr_axi_n_671),
        .\tx_addr_start_reg[2] (u_csr_axi_n_616),
        .\tx_addr_start_reg[2]_0 (u_csr_axi_n_617),
        .\tx_addr_start_reg[30] (u_csr_axi_n_672),
        .\tx_addr_start_reg[30]_0 (u_csr_axi_n_673),
        .\tx_addr_start_reg[31] (u_csr_axi_n_674),
        .\tx_addr_start_reg[31]_0 (u_csr_axi_n_675),
        .\tx_addr_start_reg[3] (u_csr_axi_n_618),
        .\tx_addr_start_reg[3]_0 (u_csr_axi_n_619),
        .\tx_addr_start_reg[4] (u_csr_axi_n_620),
        .\tx_addr_start_reg[4]_0 (u_csr_axi_n_621),
        .\tx_addr_start_reg[5] (u_csr_axi_n_622),
        .\tx_addr_start_reg[5]_0 (u_csr_axi_n_623),
        .\tx_addr_start_reg[6] (u_csr_axi_n_624),
        .\tx_addr_start_reg[6]_0 (u_csr_axi_n_625),
        .\tx_addr_start_reg[7] (u_csr_axi_n_626),
        .\tx_addr_start_reg[7]_0 (u_csr_axi_n_627),
        .\tx_addr_start_reg[8] (u_csr_axi_n_628),
        .\tx_addr_start_reg[8]_0 (u_csr_axi_n_629),
        .\tx_addr_start_reg[9] (u_csr_axi_n_630),
        .\tx_addr_start_reg[9]_0 (u_csr_axi_n_631),
        .tx_addr_tail(tx_addr_tail),
        .tx_addr_tail_update(tx_addr_tail_update),
        .tx_descriptor_rd_rdy(desc_tx_ready),
        .tx_descriptor_rd_vld(desc_tx_valid));
  gig_eth_mac_rx_dma_axi u_dma_rx
       (.ACLK(ACLK),
        .\CID_reg[0]_0 (u_csr_axi_n_426),
        .\CID_reg[3]_0 ({u_dma_rx_n_170,u_dma_rx_n_171,u_dma_rx_n_172,u_dma_rx_n_173}),
        .D({u_csr_axi_n_360,u_csr_axi_n_361,u_csr_axi_n_362,u_csr_axi_n_363,u_csr_axi_n_364,u_csr_axi_n_365,u_csr_axi_n_366,u_csr_axi_n_367,u_csr_axi_n_368,u_csr_axi_n_369,u_csr_axi_n_370,u_csr_axi_n_371,u_csr_axi_n_372,u_csr_axi_n_373}),
        .\DMA_ADDR_HEAD_reg[0]_C_0 (u_dma_rx_n_10),
        .\DMA_ADDR_HEAD_reg[0]_C_1 (u_csr_axi_n_548),
        .\DMA_ADDR_HEAD_reg[0]_C_2 (u_csr_axi_n_473),
        .\DMA_ADDR_HEAD_reg[0]_P_0 (u_csr_axi_n_549),
        .\DMA_ADDR_HEAD_reg[0]_P_1 (u_csr_axi_n_408),
        .\DMA_ADDR_HEAD_reg[10]_C_0 (u_csr_axi_n_568),
        .\DMA_ADDR_HEAD_reg[10]_P_0 (u_csr_axi_n_569),
        .\DMA_ADDR_HEAD_reg[10]_P_1 (u_csr_axi_n_386),
        .\DMA_ADDR_HEAD_reg[11]_C_0 (u_csr_axi_n_570),
        .\DMA_ADDR_HEAD_reg[11]_P_0 (u_csr_axi_n_571),
        .\DMA_ADDR_HEAD_reg[11]_P_1 (u_csr_axi_n_387),
        .\DMA_ADDR_HEAD_reg[12]_C_0 (u_csr_axi_n_572),
        .\DMA_ADDR_HEAD_reg[12]_P_0 (u_csr_axi_n_573),
        .\DMA_ADDR_HEAD_reg[12]_P_1 (u_csr_axi_n_388),
        .\DMA_ADDR_HEAD_reg[13]_C_0 (u_csr_axi_n_574),
        .\DMA_ADDR_HEAD_reg[13]_P_0 (u_csr_axi_n_575),
        .\DMA_ADDR_HEAD_reg[13]_P_1 (u_csr_axi_n_389),
        .\DMA_ADDR_HEAD_reg[14]_C_0 (u_csr_axi_n_576),
        .\DMA_ADDR_HEAD_reg[14]_P_0 (u_csr_axi_n_577),
        .\DMA_ADDR_HEAD_reg[14]_P_1 (u_csr_axi_n_390),
        .\DMA_ADDR_HEAD_reg[15]_C_0 (u_csr_axi_n_578),
        .\DMA_ADDR_HEAD_reg[15]_P_0 (u_csr_axi_n_579),
        .\DMA_ADDR_HEAD_reg[15]_P_1 (u_csr_axi_n_391),
        .\DMA_ADDR_HEAD_reg[16]_C_0 (u_csr_axi_n_580),
        .\DMA_ADDR_HEAD_reg[16]_P_0 (u_csr_axi_n_581),
        .\DMA_ADDR_HEAD_reg[16]_P_1 (u_csr_axi_n_392),
        .\DMA_ADDR_HEAD_reg[17]_C_0 (u_csr_axi_n_582),
        .\DMA_ADDR_HEAD_reg[17]_P_0 (u_csr_axi_n_583),
        .\DMA_ADDR_HEAD_reg[17]_P_1 (u_csr_axi_n_393),
        .\DMA_ADDR_HEAD_reg[18]_C_0 (u_csr_axi_n_584),
        .\DMA_ADDR_HEAD_reg[18]_P_0 (u_csr_axi_n_585),
        .\DMA_ADDR_HEAD_reg[18]_P_1 (u_csr_axi_n_394),
        .\DMA_ADDR_HEAD_reg[19]_C_0 (u_csr_axi_n_586),
        .\DMA_ADDR_HEAD_reg[19]_P_0 (u_csr_axi_n_587),
        .\DMA_ADDR_HEAD_reg[19]_P_1 (u_csr_axi_n_395),
        .\DMA_ADDR_HEAD_reg[1]_C_0 (u_dma_rx_n_9),
        .\DMA_ADDR_HEAD_reg[1]_C_1 (u_csr_axi_n_550),
        .\DMA_ADDR_HEAD_reg[1]_C_2 (u_csr_axi_n_474),
        .\DMA_ADDR_HEAD_reg[1]_P_0 (u_csr_axi_n_551),
        .\DMA_ADDR_HEAD_reg[1]_P_1 (u_csr_axi_n_407),
        .\DMA_ADDR_HEAD_reg[20]_C_0 (u_csr_axi_n_588),
        .\DMA_ADDR_HEAD_reg[20]_P_0 (u_csr_axi_n_589),
        .\DMA_ADDR_HEAD_reg[20]_P_1 (u_csr_axi_n_425),
        .\DMA_ADDR_HEAD_reg[21]_C_0 (u_csr_axi_n_590),
        .\DMA_ADDR_HEAD_reg[21]_P_0 (u_csr_axi_n_591),
        .\DMA_ADDR_HEAD_reg[21]_P_1 (u_csr_axi_n_396),
        .\DMA_ADDR_HEAD_reg[22]_C_0 (u_csr_axi_n_592),
        .\DMA_ADDR_HEAD_reg[22]_P_0 (u_csr_axi_n_593),
        .\DMA_ADDR_HEAD_reg[22]_P_1 (u_csr_axi_n_397),
        .\DMA_ADDR_HEAD_reg[23]_C_0 (u_csr_axi_n_594),
        .\DMA_ADDR_HEAD_reg[23]_P_0 (u_csr_axi_n_595),
        .\DMA_ADDR_HEAD_reg[23]_P_1 (u_csr_axi_n_398),
        .\DMA_ADDR_HEAD_reg[24]_C_0 (u_csr_axi_n_596),
        .\DMA_ADDR_HEAD_reg[24]_P_0 (u_csr_axi_n_597),
        .\DMA_ADDR_HEAD_reg[24]_P_1 (u_csr_axi_n_399),
        .\DMA_ADDR_HEAD_reg[25]_C_0 (u_csr_axi_n_598),
        .\DMA_ADDR_HEAD_reg[25]_P_0 (u_csr_axi_n_599),
        .\DMA_ADDR_HEAD_reg[25]_P_1 (u_csr_axi_n_400),
        .\DMA_ADDR_HEAD_reg[26]_C_0 (u_csr_axi_n_600),
        .\DMA_ADDR_HEAD_reg[26]_P_0 (u_csr_axi_n_601),
        .\DMA_ADDR_HEAD_reg[26]_P_1 (u_csr_axi_n_401),
        .\DMA_ADDR_HEAD_reg[27]_C_0 (u_csr_axi_n_602),
        .\DMA_ADDR_HEAD_reg[27]_P_0 (u_csr_axi_n_603),
        .\DMA_ADDR_HEAD_reg[27]_P_1 (u_csr_axi_n_402),
        .\DMA_ADDR_HEAD_reg[28]_C_0 (u_csr_axi_n_604),
        .\DMA_ADDR_HEAD_reg[28]_P_0 (u_csr_axi_n_605),
        .\DMA_ADDR_HEAD_reg[28]_P_1 (u_csr_axi_n_403),
        .\DMA_ADDR_HEAD_reg[29]_C_0 (u_csr_axi_n_606),
        .\DMA_ADDR_HEAD_reg[29]_P_0 (u_csr_axi_n_607),
        .\DMA_ADDR_HEAD_reg[29]_P_1 (u_csr_axi_n_404),
        .\DMA_ADDR_HEAD_reg[2]_C_0 (u_csr_axi_n_552),
        .\DMA_ADDR_HEAD_reg[2]_P_0 (u_csr_axi_n_553),
        .\DMA_ADDR_HEAD_reg[2]_P_1 (u_csr_axi_n_378),
        .\DMA_ADDR_HEAD_reg[30]_C_0 (u_csr_axi_n_608),
        .\DMA_ADDR_HEAD_reg[30]_P_0 (u_csr_axi_n_609),
        .\DMA_ADDR_HEAD_reg[30]_P_1 (u_csr_axi_n_405),
        .\DMA_ADDR_HEAD_reg[31]_C_0 (u_csr_axi_n_610),
        .\DMA_ADDR_HEAD_reg[31]_P_0 (u_csr_axi_n_611),
        .\DMA_ADDR_HEAD_reg[31]_P_1 (u_csr_axi_n_406),
        .\DMA_ADDR_HEAD_reg[3]_C_0 (u_csr_axi_n_554),
        .\DMA_ADDR_HEAD_reg[3]_P_0 (u_csr_axi_n_555),
        .\DMA_ADDR_HEAD_reg[3]_P_1 (u_csr_axi_n_379),
        .\DMA_ADDR_HEAD_reg[4]_C_0 (u_csr_axi_n_556),
        .\DMA_ADDR_HEAD_reg[4]_P_0 (u_csr_axi_n_557),
        .\DMA_ADDR_HEAD_reg[4]_P_1 (u_csr_axi_n_380),
        .\DMA_ADDR_HEAD_reg[5]_C_0 (u_csr_axi_n_558),
        .\DMA_ADDR_HEAD_reg[5]_P_0 (u_csr_axi_n_559),
        .\DMA_ADDR_HEAD_reg[5]_P_1 (u_csr_axi_n_381),
        .\DMA_ADDR_HEAD_reg[6]_C_0 (u_csr_axi_n_560),
        .\DMA_ADDR_HEAD_reg[6]_P_0 (u_csr_axi_n_561),
        .\DMA_ADDR_HEAD_reg[6]_P_1 (u_csr_axi_n_382),
        .\DMA_ADDR_HEAD_reg[7]_C_0 (u_csr_axi_n_562),
        .\DMA_ADDR_HEAD_reg[7]_P_0 (u_csr_axi_n_563),
        .\DMA_ADDR_HEAD_reg[7]_P_1 (u_csr_axi_n_383),
        .\DMA_ADDR_HEAD_reg[8]_C_0 (u_csr_axi_n_564),
        .\DMA_ADDR_HEAD_reg[8]_P_0 (u_csr_axi_n_565),
        .\DMA_ADDR_HEAD_reg[8]_P_1 (u_csr_axi_n_384),
        .\DMA_ADDR_HEAD_reg[9]_C_0 (u_csr_axi_n_566),
        .\DMA_ADDR_HEAD_reg[9]_P_0 (u_csr_axi_n_567),
        .\DMA_ADDR_HEAD_reg[9]_P_1 (u_csr_axi_n_385),
        .\DMA_WCHUNK_reg[13]_0 ({u_dma_rx_n_75,u_dma_rx_n_76,u_dma_rx_n_77,u_dma_rx_n_78,u_dma_rx_n_79,u_dma_rx_n_80,u_dma_rx_n_81,u_dma_rx_n_82,u_dma_rx_n_83,u_dma_rx_n_84,u_dma_rx_n_85,u_dma_rx_n_86,u_dma_rx_n_87,u_dma_rx_n_88}),
        .\DMA_WCHUNK_reg[13]_1 ({u_dma_rx_n_124,u_dma_rx_n_125,u_dma_rx_n_126,u_dma_rx_n_127}),
        .\DMA_WCHUNK_reg[13]_2 ({u_dma_rx_n_166,u_dma_rx_n_167,u_dma_rx_n_168,u_dma_rx_n_169}),
        .\DMA_WCHUNK_reg[5]_0 ({u_dma_rx_n_89,u_dma_rx_n_90,u_dma_rx_n_91}),
        .\DMA_WCHUNK_reg[5]_1 ({u_dma_rx_n_163,u_dma_rx_n_164,u_dma_rx_n_165}),
        .M_AWADDR(M_AWADDR),
        .\M_AWADDR_reg[31]_0 ({u_csr_axi_n_431,u_csr_axi_n_432,u_csr_axi_n_433,u_csr_axi_n_434,u_csr_axi_n_435,u_csr_axi_n_436,u_csr_axi_n_437,u_csr_axi_n_438,u_csr_axi_n_439,u_csr_axi_n_440,u_csr_axi_n_441,u_csr_axi_n_442,u_csr_axi_n_443,u_csr_axi_n_444,u_csr_axi_n_445,u_csr_axi_n_446,u_csr_axi_n_447,u_csr_axi_n_448,u_csr_axi_n_449,u_csr_axi_n_450,u_csr_axi_n_451,u_csr_axi_n_452,u_csr_axi_n_453,u_csr_axi_n_454,u_csr_axi_n_455,u_csr_axi_n_456,u_csr_axi_n_457,u_csr_axi_n_458,u_csr_axi_n_459,u_csr_axi_n_460,u_csr_axi_n_461,u_csr_axi_n_462}),
        .M_AWID(M_AWID),
        .M_AWLEN(M_AWLEN),
        .\M_AWLEN_reg[0]_0 (u_csr_axi_n_463),
        .M_AWREADY(M_AWREADY),
        .M_AWSIZE(\^M_AWSIZE ),
        .M_AWVALID(M_AWVALID),
        .M_BREADY(M_BREADY),
        .M_BREADY_reg_0(u_csr_axi_n_243),
        .M_BVALID(M_BVALID),
        .M_WID(M_WID),
        .\M_WID_reg[3]_0 ({u_csr_axi_n_428,u_csr_axi_n_429,u_csr_axi_n_430}),
        .M_WLAST(M_WLAST),
        .M_WREADY(M_WREADY),
        .M_WSTRB(M_WSTRB),
        .M_WVALID(M_WVALID),
        .O({u_csr_axi_n_464,u_csr_axi_n_465,u_csr_axi_n_466}),
        .Q({p_1_in,u_dma_rx_n_73,u_dma_rx_n_74}),
        .W_addr2(W_addr2),
        .\W_addr_reg[0]_0 (W_addr1),
        .\W_addr_reg[14]_0 ({u_dma_rx_n_144,u_dma_rx_n_145,u_dma_rx_n_146,u_dma_rx_n_147}),
        .\W_addr_reg[23]_0 ({u_dma_rx_n_148,u_dma_rx_n_149,u_dma_rx_n_150,u_dma_rx_n_151}),
        .\W_addr_reg[30]_0 ({u_dma_rx_n_152,u_dma_rx_n_153,u_dma_rx_n_154,u_dma_rx_n_155}),
        .\W_addr_reg[30]_1 (u_dma_rx_n_156),
        .\W_addr_reg[31]_0 (u_dma_rx_n_139),
        .\W_addr_reg[31]_1 (u_dma_rx_n_177),
        .\W_addr_reg[7]_0 ({u_dma_rx_n_140,u_dma_rx_n_141,u_dma_rx_n_142,u_dma_rx_n_143}),
        .\W_bmove[1]_i_24 (u_csr_axi_n_252),
        .\W_bmove_reg[0]_0 (u_csr_axi_n_376),
        .\W_bmove_reg[0]_1 (u_csr_axi_n_375),
        .\W_bmove_reg[0]_2 (u_csr_axi_n_374),
        .\W_bmove_reg[10]_0 (get_rooms_return),
        .\W_bmove_reg[14]_0 (u_csr_axi_n_427),
        .\W_bmove_reg[15]_0 (get_rooms_return__0),
        .\W_bmove_reg[15]_i_28 (rx_addr_end),
        .\W_brem_reg[15]_0 ({u_dma_rx_n_108,u_dma_rx_n_109,u_dma_rx_n_110,u_dma_rx_n_111,u_dma_rx_n_112,u_dma_rx_n_113,u_dma_rx_n_114,u_dma_rx_n_115,u_dma_rx_n_116,u_dma_rx_n_117,u_dma_rx_n_118,u_dma_rx_n_119,u_dma_rx_n_120,u_dma_rx_n_121,u_dma_rx_n_122,u_dma_rx_n_123}),
        .\W_brem_reg[15]_i_4_0 (client_rx_rd_bnum),
        .\W_brem_reg[1]_0 (u_dma_rx_n_128),
        .W_bxxx(W_bxxx),
        .W_empty(W_empty),
        .W_full_reg_0(u_dma_rx_n_1),
        .W_full_reg_1({u_dma_rx_n_131,u_dma_rx_n_132,u_dma_rx_n_133,u_dma_rx_n_134}),
        .W_full_reg_2({u_dma_rx_n_135,u_dma_rx_n_136,u_dma_rx_n_137,u_dma_rx_n_138}),
        .W_full_reg_3(u_dma_rx_n_174),
        .W_full_reg_4(u_dma_rx_n_176),
        .W_full_reg_5(u_csr_axi_n_242),
        .W_go0(W_go0),
        .W_go_reg_0(u_csr_axi_n_245),
        .W_goodframe_reg_0(u_dma_rx_n_8),
        .W_goodframe_reg_1(client_rx_rd_goodframe),
        .\W_len_reg[0]_0 (u_dma_rx_n_160),
        .\W_len_reg[6]_0 ({u_csr_axi_n_467,u_csr_axi_n_468,u_csr_axi_n_469,u_csr_axi_n_470}),
        .\W_len_reg[8]_0 (u_csr_axi_n_377),
        .\W_len_reg[8]_1 ({u_csr_axi_n_471,u_csr_axi_n_472}),
        .bbstub_valid(p_0_in),
        .client_bnum_rdy_reg_C_0(u_csr_axi_n_545),
        .client_bnum_rdy_reg_P_0(u_csr_axi_n_547),
        .client_rx_rd_bnum_rdy(client_rx_rd_bnum_rdy),
        .conf_rx_en(conf_rx_en),
        .conf_rx_reset(conf_rx_reset),
        .\desc_bnum_reg[15]_0 (desc_rx_bnum),
        .\desc_bnum_reg[15]_1 ({u_csr_axi_n_409,u_csr_axi_n_410,u_csr_axi_n_411,u_csr_axi_n_412,u_csr_axi_n_413,u_csr_axi_n_414,u_csr_axi_n_415,u_csr_axi_n_416,u_csr_axi_n_417,u_csr_axi_n_418,u_csr_axi_n_419,u_csr_axi_n_420,u_csr_axi_n_421,u_csr_axi_n_422,u_csr_axi_n_423,u_csr_axi_n_424}),
        .\desc_dst_reg[31]_0 (desc_rx_dst),
        .dout(client_rx_rd_ctl),
        .out(client_rx_rd_bnum_vld),
        .rd_data_count(client_rx_items),
        .rd_en(\RX_BLK_256.u_fifo_rx0 ),
        .rx_addr_empty(rx_addr_empty),
        .rx_addr_head(rx_addr_head),
        .rx_addr_head_update(rx_addr_head_update),
        .rx_addr_start(rx_addr_start),
        .rx_addr_tail(rx_addr_tail),
        .rx_descriptor_full(desc_rx_full),
        .rx_descriptor_wr_rdy(desc_rx_ready),
        .rx_descriptor_wr_vld(desc_rx_valid),
        .\state_reg[0]_0 (u_dma_rx_n_129),
        .\state_reg[1]_0 (u_dma_rx_n_130),
        .\state_reg[1]_1 (u_dma_rx_n_162),
        .\state_reg[2]_0 ({u_dma_rx_n_2,u_dma_rx_n_3,u_dma_rx_n_4}),
        .\state_reg[2]_1 (u_dma_rx_n_161),
        .\state_reg[2]_2 (u_csr_axi_n_359),
        .\state_reg[2]_3 (u_csr_axi_n_541),
        .\state_write_reg[0]_0 (u_dma_rx_n_5),
        .valid(client_rx_rd_vld));
  gig_eth_mac_tx_dma_axi u_dma_tx
       (.ACLK(ACLK),
        .\CID_reg[0]_0 (u_dma_tx_n_229),
        .\CID_reg[0]_1 (u_csr_axi_n_186),
        .CO(u_csr_axi_n_130),
        .D({u_csr_axi_n_221,u_csr_axi_n_222,u_csr_axi_n_223,u_csr_axi_n_224,u_csr_axi_n_225,u_csr_axi_n_226,u_csr_axi_n_227,u_csr_axi_n_228,u_csr_axi_n_229,u_csr_axi_n_230,u_csr_axi_n_231,u_csr_axi_n_232,u_csr_axi_n_233,u_csr_axi_n_234}),
        .DI({u_dma_tx_n_106,u_dma_tx_n_107,u_dma_tx_n_108}),
        .\DMA_ADDR_TAIL_reg[0]_C_0 (u_csr_axi_n_612),
        .\DMA_ADDR_TAIL_reg[0]_P_0 (u_csr_axi_n_613),
        .\DMA_ADDR_TAIL_reg[0]_P_1 (u_csr_axi_n_184),
        .\DMA_ADDR_TAIL_reg[10]_C_0 (u_csr_axi_n_632),
        .\DMA_ADDR_TAIL_reg[10]_P_0 (u_csr_axi_n_633),
        .\DMA_ADDR_TAIL_reg[10]_P_1 (u_csr_axi_n_163),
        .\DMA_ADDR_TAIL_reg[11]_C_0 (u_csr_axi_n_634),
        .\DMA_ADDR_TAIL_reg[11]_P_0 (u_csr_axi_n_635),
        .\DMA_ADDR_TAIL_reg[11]_P_1 (u_csr_axi_n_676),
        .\DMA_ADDR_TAIL_reg[12]_C_0 (u_csr_axi_n_636),
        .\DMA_ADDR_TAIL_reg[12]_P_0 (u_csr_axi_n_637),
        .\DMA_ADDR_TAIL_reg[12]_P_1 (u_csr_axi_n_185),
        .\DMA_ADDR_TAIL_reg[13]_C_0 (u_csr_axi_n_638),
        .\DMA_ADDR_TAIL_reg[13]_P_0 (u_csr_axi_n_639),
        .\DMA_ADDR_TAIL_reg[13]_P_1 (u_csr_axi_n_164),
        .\DMA_ADDR_TAIL_reg[14]_C_0 (u_csr_axi_n_640),
        .\DMA_ADDR_TAIL_reg[14]_P_0 (u_csr_axi_n_641),
        .\DMA_ADDR_TAIL_reg[14]_P_1 (u_csr_axi_n_165),
        .\DMA_ADDR_TAIL_reg[15]_C_0 (u_csr_axi_n_642),
        .\DMA_ADDR_TAIL_reg[15]_P_0 (u_csr_axi_n_643),
        .\DMA_ADDR_TAIL_reg[15]_P_1 (u_csr_axi_n_166),
        .\DMA_ADDR_TAIL_reg[16]_C_0 (u_csr_axi_n_644),
        .\DMA_ADDR_TAIL_reg[16]_P_0 (u_csr_axi_n_645),
        .\DMA_ADDR_TAIL_reg[16]_P_1 (u_csr_axi_n_167),
        .\DMA_ADDR_TAIL_reg[17]_C_0 (u_csr_axi_n_646),
        .\DMA_ADDR_TAIL_reg[17]_P_0 (u_csr_axi_n_647),
        .\DMA_ADDR_TAIL_reg[17]_P_1 (u_csr_axi_n_168),
        .\DMA_ADDR_TAIL_reg[18]_C_0 (u_csr_axi_n_648),
        .\DMA_ADDR_TAIL_reg[18]_P_0 (u_csr_axi_n_649),
        .\DMA_ADDR_TAIL_reg[18]_P_1 (u_csr_axi_n_169),
        .\DMA_ADDR_TAIL_reg[19]_C_0 (u_csr_axi_n_650),
        .\DMA_ADDR_TAIL_reg[19]_P_0 ({u_dma_tx_n_274,u_dma_tx_n_275,u_dma_tx_n_276,u_dma_tx_n_277}),
        .\DMA_ADDR_TAIL_reg[19]_P_1 (u_csr_axi_n_651),
        .\DMA_ADDR_TAIL_reg[19]_P_2 (u_csr_axi_n_170),
        .\DMA_ADDR_TAIL_reg[1]_C_0 (u_csr_axi_n_614),
        .\DMA_ADDR_TAIL_reg[1]_P_0 (u_csr_axi_n_615),
        .\DMA_ADDR_TAIL_reg[1]_P_1 (u_csr_axi_n_183),
        .\DMA_ADDR_TAIL_reg[20]_C_0 (u_csr_axi_n_652),
        .\DMA_ADDR_TAIL_reg[20]_P_0 (u_csr_axi_n_653),
        .\DMA_ADDR_TAIL_reg[20]_P_1 (u_csr_axi_n_171),
        .\DMA_ADDR_TAIL_reg[21]_C_0 (u_csr_axi_n_654),
        .\DMA_ADDR_TAIL_reg[21]_P_0 (u_csr_axi_n_655),
        .\DMA_ADDR_TAIL_reg[21]_P_1 (u_csr_axi_n_172),
        .\DMA_ADDR_TAIL_reg[22]_C_0 (u_csr_axi_n_656),
        .\DMA_ADDR_TAIL_reg[22]_P_0 (u_csr_axi_n_657),
        .\DMA_ADDR_TAIL_reg[22]_P_1 (u_csr_axi_n_173),
        .\DMA_ADDR_TAIL_reg[23]_C_0 (u_csr_axi_n_658),
        .\DMA_ADDR_TAIL_reg[23]_P_0 ({u_dma_tx_n_266,u_dma_tx_n_267,u_dma_tx_n_268,u_dma_tx_n_269}),
        .\DMA_ADDR_TAIL_reg[23]_P_1 (u_csr_axi_n_659),
        .\DMA_ADDR_TAIL_reg[23]_P_2 (u_csr_axi_n_174),
        .\DMA_ADDR_TAIL_reg[24]_C_0 (u_csr_axi_n_660),
        .\DMA_ADDR_TAIL_reg[24]_P_0 (u_csr_axi_n_661),
        .\DMA_ADDR_TAIL_reg[24]_P_1 (u_csr_axi_n_175),
        .\DMA_ADDR_TAIL_reg[25]_C_0 (u_csr_axi_n_662),
        .\DMA_ADDR_TAIL_reg[25]_P_0 (u_csr_axi_n_663),
        .\DMA_ADDR_TAIL_reg[25]_P_1 (u_csr_axi_n_176),
        .\DMA_ADDR_TAIL_reg[26]_C_0 (u_csr_axi_n_664),
        .\DMA_ADDR_TAIL_reg[26]_P_0 (u_csr_axi_n_665),
        .\DMA_ADDR_TAIL_reg[26]_P_1 (u_csr_axi_n_177),
        .\DMA_ADDR_TAIL_reg[27]_C_0 (u_csr_axi_n_666),
        .\DMA_ADDR_TAIL_reg[27]_P_0 ({u_dma_tx_n_258,u_dma_tx_n_259,u_dma_tx_n_260,u_dma_tx_n_261}),
        .\DMA_ADDR_TAIL_reg[27]_P_1 (u_csr_axi_n_667),
        .\DMA_ADDR_TAIL_reg[27]_P_2 (u_csr_axi_n_178),
        .\DMA_ADDR_TAIL_reg[28]_C_0 (u_csr_axi_n_668),
        .\DMA_ADDR_TAIL_reg[28]_P_0 (u_csr_axi_n_669),
        .\DMA_ADDR_TAIL_reg[28]_P_1 (u_csr_axi_n_179),
        .\DMA_ADDR_TAIL_reg[29]_C_0 (u_csr_axi_n_670),
        .\DMA_ADDR_TAIL_reg[29]_P_0 (u_csr_axi_n_671),
        .\DMA_ADDR_TAIL_reg[29]_P_1 (u_csr_axi_n_180),
        .\DMA_ADDR_TAIL_reg[2]_C_0 (u_csr_axi_n_616),
        .\DMA_ADDR_TAIL_reg[2]_C_1 (u_csr_axi_n_155),
        .\DMA_ADDR_TAIL_reg[2]_P_0 (u_csr_axi_n_617),
        .\DMA_ADDR_TAIL_reg[2]_P_1 (u_csr_axi_n_154),
        .\DMA_ADDR_TAIL_reg[30]_C_0 (u_csr_axi_n_672),
        .\DMA_ADDR_TAIL_reg[30]_P_0 (u_csr_axi_n_673),
        .\DMA_ADDR_TAIL_reg[30]_P_1 (u_csr_axi_n_181),
        .\DMA_ADDR_TAIL_reg[31]_C_0 (u_csr_axi_n_674),
        .\DMA_ADDR_TAIL_reg[31]_P_0 ({u_dma_tx_n_4,u_dma_tx_n_5,u_dma_tx_n_6,u_dma_tx_n_7}),
        .\DMA_ADDR_TAIL_reg[31]_P_1 (u_csr_axi_n_675),
        .\DMA_ADDR_TAIL_reg[31]_P_2 (u_csr_axi_n_182),
        .\DMA_ADDR_TAIL_reg[3]_C_0 (u_csr_axi_n_618),
        .\DMA_ADDR_TAIL_reg[3]_P_0 (u_csr_axi_n_619),
        .\DMA_ADDR_TAIL_reg[3]_P_1 (u_csr_axi_n_156),
        .\DMA_ADDR_TAIL_reg[4]_C_0 (u_csr_axi_n_620),
        .\DMA_ADDR_TAIL_reg[4]_P_0 (u_csr_axi_n_621),
        .\DMA_ADDR_TAIL_reg[4]_P_1 (u_csr_axi_n_157),
        .\DMA_ADDR_TAIL_reg[5]_C_0 (u_csr_axi_n_622),
        .\DMA_ADDR_TAIL_reg[5]_P_0 (u_csr_axi_n_623),
        .\DMA_ADDR_TAIL_reg[5]_P_1 (u_csr_axi_n_158),
        .\DMA_ADDR_TAIL_reg[6]_C_0 (u_csr_axi_n_624),
        .\DMA_ADDR_TAIL_reg[6]_P_0 (u_csr_axi_n_625),
        .\DMA_ADDR_TAIL_reg[6]_P_1 (u_csr_axi_n_159),
        .\DMA_ADDR_TAIL_reg[7]_C_0 (u_csr_axi_n_626),
        .\DMA_ADDR_TAIL_reg[7]_P_0 (u_csr_axi_n_627),
        .\DMA_ADDR_TAIL_reg[7]_P_1 (u_csr_axi_n_160),
        .\DMA_ADDR_TAIL_reg[8]_C_0 (u_csr_axi_n_628),
        .\DMA_ADDR_TAIL_reg[8]_P_0 (u_csr_axi_n_629),
        .\DMA_ADDR_TAIL_reg[8]_P_1 (u_csr_axi_n_161),
        .\DMA_ADDR_TAIL_reg[9]_C_0 (u_csr_axi_n_630),
        .\DMA_ADDR_TAIL_reg[9]_P_0 (u_csr_axi_n_631),
        .\DMA_ADDR_TAIL_reg[9]_P_1 (u_csr_axi_n_162),
        .\DMA_BREM_reg[0]_0 (u_dma_tx_n_155),
        .\DMA_BREM_reg[10]_0 (u_dma_tx_n_145),
        .\DMA_BREM_reg[11]_0 (u_dma_tx_n_146),
        .\DMA_BREM_reg[11]_1 ({u_dma_tx_n_238,u_dma_tx_n_239,u_dma_tx_n_240,u_dma_tx_n_241}),
        .\DMA_BREM_reg[12]_0 (u_dma_tx_n_143),
        .\DMA_BREM_reg[13]_0 (u_dma_tx_n_144),
        .\DMA_BREM_reg[14]_0 (u_dma_tx_n_125),
        .\DMA_BREM_reg[14]_1 ({u_dma_tx_n_242,u_dma_tx_n_243,u_dma_tx_n_244,u_dma_tx_n_245}),
        .\DMA_BREM_reg[15]_0 ({u_dma_tx_n_126,u_dma_tx_n_127,u_dma_tx_n_128,u_dma_tx_n_129,u_dma_tx_n_130,u_dma_tx_n_131,u_dma_tx_n_132,u_dma_tx_n_133,u_dma_tx_n_134,u_dma_tx_n_135,u_dma_tx_n_136,u_dma_tx_n_137,u_dma_tx_n_138,u_dma_tx_n_139,u_dma_tx_n_140,u_dma_tx_n_141}),
        .\DMA_BREM_reg[15]_1 (u_dma_tx_n_142),
        .\DMA_BREM_reg[15]_2 (u_dma_tx_n_248),
        .\DMA_BREM_reg[15]_3 (u_csr_axi_n_153),
        .\DMA_BREM_reg[15]_4 ({u_csr_axi_n_525,u_csr_axi_n_526,u_csr_axi_n_527,u_csr_axi_n_528,u_csr_axi_n_529,u_csr_axi_n_530,u_csr_axi_n_531,u_csr_axi_n_532,u_csr_axi_n_533,u_csr_axi_n_534,u_csr_axi_n_535,u_csr_axi_n_536,u_csr_axi_n_537,u_csr_axi_n_538,u_csr_axi_n_539,u_csr_axi_n_540}),
        .\DMA_BREM_reg[1]_0 (u_dma_tx_n_156),
        .\DMA_BREM_reg[2]_0 (u_dma_tx_n_153),
        .\DMA_BREM_reg[3]_0 (u_dma_tx_n_154),
        .\DMA_BREM_reg[3]_1 ({u_dma_tx_n_230,u_dma_tx_n_231,u_dma_tx_n_232,u_dma_tx_n_233}),
        .\DMA_BREM_reg[4]_0 (u_dma_tx_n_151),
        .\DMA_BREM_reg[5]_0 (u_dma_tx_n_152),
        .\DMA_BREM_reg[6]_0 (u_dma_tx_n_149),
        .\DMA_BREM_reg[7]_0 (u_dma_tx_n_150),
        .\DMA_BREM_reg[7]_1 ({u_dma_tx_n_234,u_dma_tx_n_235,u_dma_tx_n_236,u_dma_tx_n_237}),
        .\DMA_BREM_reg[8]_0 (u_dma_tx_n_147),
        .\DMA_BREM_reg[9]_0 (u_dma_tx_n_148),
        .M_ARADDR(M_ARADDR),
        .\M_ARADDR_reg[31]_0 ({u_csr_axi_n_189,u_csr_axi_n_190,u_csr_axi_n_191,u_csr_axi_n_192,u_csr_axi_n_193,u_csr_axi_n_194,u_csr_axi_n_195,u_csr_axi_n_196,u_csr_axi_n_197,u_csr_axi_n_198,u_csr_axi_n_199,u_csr_axi_n_200,u_csr_axi_n_201,u_csr_axi_n_202,u_csr_axi_n_203,u_csr_axi_n_204,u_csr_axi_n_205,u_csr_axi_n_206,u_csr_axi_n_207,u_csr_axi_n_208,u_csr_axi_n_209,u_csr_axi_n_210,u_csr_axi_n_211,u_csr_axi_n_212,u_csr_axi_n_213,u_csr_axi_n_214,u_csr_axi_n_215,u_csr_axi_n_216,u_csr_axi_n_217,u_csr_axi_n_218,u_csr_axi_n_219,u_csr_axi_n_220}),
        .M_ARID(M_ARID),
        .M_ARLEN(M_ARLEN),
        .\M_ARLEN_reg[0]_0 (u_csr_axi_n_235),
        .M_ARREADY(M_ARREADY),
        .M_ARSIZE(\^M_ARSIZE ),
        .\M_ARSIZE_reg[1]_0 (u_csr_axi_n_236),
        .M_ARVALID(M_ARVALID),
        .M_RDATA(M_RDATA),
        .M_RREADY(M_RREADY),
        .M_RVALID(M_RVALID),
        .Q({u_dma_tx_n_42,u_dma_tx_n_43,u_dma_tx_n_44,u_dma_tx_n_45,u_dma_tx_n_46,u_dma_tx_n_47,u_dma_tx_n_48,u_dma_tx_n_49,u_dma_tx_n_50,u_dma_tx_n_51,u_dma_tx_n_52,u_dma_tx_n_53,u_dma_tx_n_54,u_dma_tx_n_55,u_dma_tx_n_56,u_dma_tx_n_57,u_dma_tx_n_58,u_dma_tx_n_59,u_dma_tx_n_60,u_dma_tx_n_61,u_dma_tx_n_62,u_dma_tx_n_63,u_dma_tx_n_64,u_dma_tx_n_65,u_dma_tx_n_66,u_dma_tx_n_67,u_dma_tx_n_68,u_dma_tx_n_69,u_dma_tx_n_70,u_dma_tx_n_71,u_dma_tx_n_72,u_dma_tx_n_73}),
        .R_addr2(R_addr2),
        .\R_addr_reg[0]_0 (u_dma_tx_n_41),
        .\R_addr_reg[0]_1 (R_addr1),
        .\R_addr_reg[23]_0 (u_dma_tx_n_246),
        .\R_addr_reg[31]_0 (u_dma_tx_n_312),
        .\R_addr_reg[31]_1 (u_dma_tx_n_313),
        .\R_addr_reg[31]_2 ({u_csr_axi_n_475,u_csr_axi_n_476,u_csr_axi_n_477,u_csr_axi_n_478,u_csr_axi_n_479,u_csr_axi_n_480,u_csr_axi_n_481,u_csr_axi_n_482,u_csr_axi_n_483,u_csr_axi_n_484,u_csr_axi_n_485,u_csr_axi_n_486,u_csr_axi_n_487,u_csr_axi_n_488,u_csr_axi_n_489,u_csr_axi_n_490,u_csr_axi_n_491,u_csr_axi_n_492,u_csr_axi_n_493,u_csr_axi_n_494,u_csr_axi_n_495,u_csr_axi_n_496,u_csr_axi_n_497,u_csr_axi_n_498,u_csr_axi_n_499,u_csr_axi_n_500,u_csr_axi_n_501,u_csr_axi_n_502,u_csr_axi_n_503,u_csr_axi_n_504,u_csr_axi_n_505,u_csr_axi_n_506}),
        .\R_bmove_reg[1]_0 ({u_csr_axi_n_187,u_csr_axi_n_188}),
        .\R_brem_reg[0]_0 (u_csr_axi_n_118),
        .\R_brem_reg[0]_1 (u_csr_axi_n_240),
        .\R_brem_reg[0]_2 (u_csr_axi_n_121),
        .\R_brem_reg[10]_0 (u_csr_axi_n_141),
        .\R_brem_reg[11]_0 (u_csr_axi_n_140),
        .\R_brem_reg[12]_0 (u_csr_axi_n_128),
        .\R_brem_reg[13]_0 (u_csr_axi_n_125),
        .\R_brem_reg[14]_0 (u_csr_axi_n_241),
        .\R_brem_reg[14]_1 (u_csr_axi_n_127),
        .\R_brem_reg[15]_0 ({u_dma_tx_n_109,u_dma_tx_n_110,u_dma_tx_n_111,u_dma_tx_n_112,u_dma_tx_n_113,u_dma_tx_n_114,u_dma_tx_n_115,u_dma_tx_n_116,u_dma_tx_n_117,u_dma_tx_n_118,u_dma_tx_n_119,u_dma_tx_n_120,u_dma_tx_n_121,u_dma_tx_n_122,u_dma_tx_n_123,u_dma_tx_n_124}),
        .\R_brem_reg[15]_1 (u_dma_tx_n_228),
        .\R_brem_reg[15]_2 (u_dma_tx_n_247),
        .\R_brem_reg[15]_3 (u_csr_axi_n_1),
        .\R_brem_reg[15]_4 ({u_csr_axi_n_507,u_csr_axi_n_508,u_csr_axi_n_509,u_csr_axi_n_510,u_csr_axi_n_511,u_csr_axi_n_512,u_csr_axi_n_513,u_csr_axi_n_514,u_csr_axi_n_515,u_csr_axi_n_516,u_csr_axi_n_517,u_csr_axi_n_518,u_csr_axi_n_519,u_csr_axi_n_520,u_csr_axi_n_521,u_csr_axi_n_522}),
        .\R_brem_reg[15]_i_13 ({u_csr_axi_n_136,u_csr_axi_n_137,u_csr_axi_n_138,u_csr_axi_n_139}),
        .\R_brem_reg[15]_i_144_0 ({u_csr_axi_n_143,u_csr_axi_n_144,u_csr_axi_n_145,u_csr_axi_n_146}),
        .\R_brem_reg[15]_i_41_0 ({u_csr_axi_n_147,u_csr_axi_n_148,u_csr_axi_n_149,u_csr_axi_n_150}),
        .\R_brem_reg[15]_i_80 ({u_csr_axi_n_132,u_csr_axi_n_133,u_csr_axi_n_134,u_csr_axi_n_135}),
        .\R_brem_reg[1]_0 (u_csr_axi_n_120),
        .\R_brem_reg[2]_0 (u_csr_axi_n_151),
        .\R_brem_reg[3]_0 (u_csr_axi_n_122),
        .\R_brem_reg[4]_0 (u_csr_axi_n_123),
        .\R_brem_reg[5]_0 (u_csr_axi_n_131),
        .\R_brem_reg[6]_0 (u_csr_axi_n_129),
        .\R_brem_reg[7]_0 (u_csr_axi_n_126),
        .\R_brem_reg[8]_0 (u_csr_axi_n_124),
        .\R_brem_reg[9]_0 (u_csr_axi_n_142),
        .R_done_reg_0(u_dma_tx_n_195),
        .R_empty_i_17_0({u_csr_axi_n_82,u_csr_axi_n_83}),
        .R_empty_reg_0(u_dma_tx_n_314),
        .R_empty_reg_1(R_empty0),
        .R_empty_reg_2(R_empty00_out),
        .R_empty_reg_3(u_csr_axi_n_119),
        .R_empty_reg_4(u_csr_axi_n_0),
        .R_empty_reg_i_128_0({u_csr_axi_n_68,u_csr_axi_n_69,u_csr_axi_n_70,u_csr_axi_n_71}),
        .R_empty_reg_i_32({u_csr_axi_n_78,u_csr_axi_n_79,u_csr_axi_n_80,u_csr_axi_n_81}),
        .R_empty_reg_i_44_0({u_csr_axi_n_76,u_csr_axi_n_77}),
        .R_empty_reg_i_63_0({u_csr_axi_n_72,u_csr_axi_n_73,u_csr_axi_n_74,u_csr_axi_n_75}),
        .R_first_reg_0(u_csr_axi_n_523),
        .R_full14_out(R_full14_out),
        .R_full_reg_0(u_dma_tx_n_0),
        .R_full_reg_1(u_dma_tx_n_227),
        .\R_len_reg[0]_0 (R_len),
        .\R_size_reg[2]_0 (u_dma_tx_n_2),
        .S({u_csr_axi_n_34,u_csr_axi_n_35}),
        .conf_tx_en(conf_tx_en),
        .conf_tx_reset(conf_tx_reset),
        .desc_ready_reg_0(u_csr_axi_n_677),
        .din({client_tx_wr_ctl,client_tx_wr_dat}),
        .full(client_tx_wr_rdy_n),
        .out(p_1_in_0),
        .\state_reg[0]_0 (u_dma_tx_n_196),
        .\state_reg[0]_1 (u_dma_tx_n_197),
        .\state_reg[0]_10 (u_dma_tx_n_206),
        .\state_reg[0]_11 (u_dma_tx_n_207),
        .\state_reg[0]_12 (u_dma_tx_n_208),
        .\state_reg[0]_13 (u_dma_tx_n_209),
        .\state_reg[0]_14 (u_dma_tx_n_210),
        .\state_reg[0]_15 (u_dma_tx_n_211),
        .\state_reg[0]_16 (u_dma_tx_n_212),
        .\state_reg[0]_17 (u_dma_tx_n_213),
        .\state_reg[0]_18 (u_dma_tx_n_214),
        .\state_reg[0]_19 (u_dma_tx_n_215),
        .\state_reg[0]_2 (u_dma_tx_n_198),
        .\state_reg[0]_20 (u_dma_tx_n_216),
        .\state_reg[0]_21 (u_dma_tx_n_217),
        .\state_reg[0]_22 (u_dma_tx_n_218),
        .\state_reg[0]_23 (u_dma_tx_n_219),
        .\state_reg[0]_24 (u_dma_tx_n_220),
        .\state_reg[0]_25 (u_dma_tx_n_221),
        .\state_reg[0]_26 (u_dma_tx_n_222),
        .\state_reg[0]_27 (u_dma_tx_n_223),
        .\state_reg[0]_28 (u_dma_tx_n_224),
        .\state_reg[0]_29 (u_dma_tx_n_225),
        .\state_reg[0]_3 (u_dma_tx_n_199),
        .\state_reg[0]_30 (u_dma_tx_n_226),
        .\state_reg[0]_4 (u_dma_tx_n_200),
        .\state_reg[0]_5 (u_dma_tx_n_201),
        .\state_reg[0]_6 (u_dma_tx_n_202),
        .\state_reg[0]_7 (u_dma_tx_n_203),
        .\state_reg[0]_8 (u_dma_tx_n_204),
        .\state_reg[0]_9 (u_dma_tx_n_205),
        .\state_reg[2]_0 (u_dma_tx_n_40),
        .tx_addr_empty(tx_addr_empty),
        .tx_addr_end(tx_addr_end),
        .\tx_addr_end_reg[11] ({u_dma_tx_n_290,u_dma_tx_n_291,u_dma_tx_n_292,u_dma_tx_n_293}),
        .\tx_addr_end_reg[15] ({u_dma_tx_n_282,u_dma_tx_n_283,u_dma_tx_n_284,u_dma_tx_n_285}),
        .\tx_addr_end_reg[19] ({u_dma_tx_n_270,u_dma_tx_n_271,u_dma_tx_n_272,u_dma_tx_n_273}),
        .\tx_addr_end_reg[23] ({u_dma_tx_n_262,u_dma_tx_n_263,u_dma_tx_n_264,u_dma_tx_n_265}),
        .\tx_addr_end_reg[27] ({u_dma_tx_n_254,u_dma_tx_n_255,u_dma_tx_n_256,u_dma_tx_n_257}),
        .\tx_addr_end_reg[31] ({u_dma_tx_n_250,u_dma_tx_n_251,u_dma_tx_n_252,u_dma_tx_n_253}),
        .\tx_addr_end_reg[3] ({u_dma_tx_n_306,u_dma_tx_n_307,u_dma_tx_n_308,u_dma_tx_n_309}),
        .\tx_addr_end_reg[7] ({u_dma_tx_n_298,u_dma_tx_n_299,u_dma_tx_n_300,u_dma_tx_n_301}),
        .tx_addr_head(tx_addr_head),
        .\tx_addr_head_reg[11] ({u_dma_tx_n_286,u_dma_tx_n_287,u_dma_tx_n_288,u_dma_tx_n_289}),
        .\tx_addr_head_reg[15] ({u_dma_tx_n_278,u_dma_tx_n_279,u_dma_tx_n_280,u_dma_tx_n_281}),
        .\tx_addr_head_reg[31] (u_dma_tx_n_249),
        .\tx_addr_head_reg[3] ({u_dma_tx_n_302,u_dma_tx_n_303,u_dma_tx_n_304,u_dma_tx_n_305}),
        .\tx_addr_head_reg[7] ({u_dma_tx_n_294,u_dma_tx_n_295,u_dma_tx_n_296,u_dma_tx_n_297}),
        .tx_addr_start(tx_addr_start),
        .tx_addr_tail(tx_addr_tail),
        .tx_addr_tail_update(tx_addr_tail_update),
        .tx_descriptor_rd_rdy(desc_tx_ready),
        .tx_descriptor_rd_vld(desc_tx_valid),
        .wr_en(u_dma_tx_n_311));
  gig_eth_mac_core u_mac_core
       (.client_rx_bnum(client_rx_wr_bnum),
        .client_rx_bnum_full(client_rx_bnum_full),
        .client_rx_bnum_rdy(client_rx_wr_bnum_rdy),
        .client_rx_bnum_vld(client_rx_wr_bnum_vld),
        .client_rx_full(client_rx_full),
        .client_rx_goodframe(client_rx_wr_goodframe),
        .client_rx_vld(client_rx_wr_vld),
        .client_tx_rdy(client_tx_rd_rdy),
        .client_tx_vld(client_tx_rd_vld),
        .conf_mac_addr(conf_mac_addr),
        .conf_rx_en(conf_rx_en_sync),
        .conf_rx_jumbo_en(conf_rx_jumbo_en_sync),
        .conf_rx_no_chk_crc(conf_rx_no_chk_crc_sync),
        .conf_rx_promiscuous(conf_rx_promiscuous_sync),
        .conf_tx_en(conf_tx_en_sync),
        .conf_tx_jumbo_en(conf_tx_jumbo_en_sync),
        .conf_tx_no_gen_crc(conf_tx_no_gen_crc_sync),
        .crc_err(crc_err),
        .din({client_rx_wr_ctl,client_rx_wr_dat}),
        .dout({client_tx_rd_ctl,\TX_BLK_128.u_fifo_tx_n_4 ,\TX_BLK_128.u_fifo_tx_n_5 ,\TX_BLK_128.u_fifo_tx_n_6 ,\TX_BLK_128.u_fifo_tx_n_7 ,\TX_BLK_128.u_fifo_tx_n_8 ,\TX_BLK_128.u_fifo_tx_n_9 ,\TX_BLK_128.u_fifo_tx_n_10 ,\TX_BLK_128.u_fifo_tx_n_11 ,\TX_BLK_128.u_fifo_tx_n_12 ,\TX_BLK_128.u_fifo_tx_n_13 ,\TX_BLK_128.u_fifo_tx_n_14 ,\TX_BLK_128.u_fifo_tx_n_15 ,\TX_BLK_128.u_fifo_tx_n_16 ,\TX_BLK_128.u_fifo_tx_n_17 ,\TX_BLK_128.u_fifo_tx_n_18 ,\TX_BLK_128.u_fifo_tx_n_19 ,\TX_BLK_128.u_fifo_tx_n_20 ,\TX_BLK_128.u_fifo_tx_n_21 ,\TX_BLK_128.u_fifo_tx_n_22 ,\TX_BLK_128.u_fifo_tx_n_23 ,\TX_BLK_128.u_fifo_tx_n_24 ,\TX_BLK_128.u_fifo_tx_n_25 ,\TX_BLK_128.u_fifo_tx_n_26 ,\TX_BLK_128.u_fifo_tx_n_27 ,\TX_BLK_128.u_fifo_tx_n_28 ,\TX_BLK_128.u_fifo_tx_n_29 ,\TX_BLK_128.u_fifo_tx_n_30 ,\TX_BLK_128.u_fifo_tx_n_31 ,\TX_BLK_128.u_fifo_tx_n_32 ,\TX_BLK_128.u_fifo_tx_n_33 ,\TX_BLK_128.u_fifo_tx_n_34 ,\TX_BLK_128.u_fifo_tx_n_35 }),
        .full(client_rx_wr_rdy_n),
        .gmii_rxc(gmii_rxc),
        .gmii_rxd(gmii_rxd),
        .gmii_rxdv(gmii_rxdv),
        .gmii_rxer(gmii_rxer),
        .gmii_txd(gmii_txd),
        .gmii_txen(gmii_txen),
        .gmii_txer(gmii_txer),
        .gtx_clk(gtx_clk),
        .rx_reset_n(u_conf_rx_reset_n_1),
        .tx_reset_n(u_conf_tx_reset_n_1));
endmodule

module gig_eth_mac_core
   (client_tx_rdy,
    gmii_txd,
    gmii_txen,
    gmii_txer,
    client_rx_vld,
    din,
    client_rx_bnum_vld,
    client_rx_bnum,
    client_rx_goodframe,
    crc_err,
    full,
    tx_reset_n,
    gtx_clk,
    conf_tx_en,
    conf_tx_no_gen_crc,
    conf_tx_jumbo_en,
    client_tx_vld,
    dout,
    rx_reset_n,
    gmii_rxc,
    conf_rx_en,
    conf_rx_no_chk_crc,
    conf_rx_jumbo_en,
    conf_rx_promiscuous,
    conf_mac_addr,
    client_rx_full,
    client_rx_bnum_rdy,
    client_rx_bnum_full,
    gmii_rxd,
    gmii_rxdv,
    gmii_rxer);
  output client_tx_rdy;
  output [7:0]gmii_txd;
  output gmii_txen;
  output gmii_txer;
  output client_rx_vld;
  output [35:0]din;
  output client_rx_bnum_vld;
  output [15:0]client_rx_bnum;
  output client_rx_goodframe;
  output crc_err;
  input full;
  input tx_reset_n;
  input gtx_clk;
  input conf_tx_en;
  input conf_tx_no_gen_crc;
  input conf_tx_jumbo_en;
  input client_tx_vld;
  input [35:0]dout;
  input rx_reset_n;
  input gmii_rxc;
  input conf_rx_en;
  input conf_rx_no_chk_crc;
  input conf_rx_jumbo_en;
  input conf_rx_promiscuous;
  input [47:0]conf_mac_addr;
  input client_rx_full;
  input client_rx_bnum_rdy;
  input client_rx_bnum_full;
  input [7:0]gmii_rxd;
  input gmii_rxdv;
  input gmii_rxer;

  wire [15:0]client_rx_bnum;
  wire client_rx_bnum_full;
  wire client_rx_bnum_rdy;
  wire client_rx_bnum_vld;
  wire client_rx_full;
  wire client_rx_goodframe;
  wire client_rx_vld;
  wire client_rx_wr_rdy;
  wire client_tx_rdy;
  wire client_tx_vld;
  wire [47:0]conf_mac_addr;
  wire conf_rx_en;
  wire conf_rx_jumbo_en;
  wire conf_rx_no_chk_crc;
  wire conf_rx_promiscuous;
  wire conf_tx_en;
  wire conf_tx_jumbo_en;
  wire conf_tx_no_gen_crc;
  wire crc_err;
  wire [35:0]din;
  wire [35:0]dout;
  wire full;
  wire gmii_rxc;
  wire [7:0]gmii_rxd;
  wire gmii_rxdv;
  wire gmii_rxer;
  wire [7:0]gmii_txd;
  wire gmii_txen;
  wire gmii_txer;
  wire gtx_clk;
  wire rx_reset_n;
  wire tx_reset_n;

  (* MAX_FRAME_SIZE_JUMBO = "9018" *) 
  (* MAX_FRAME_SIZE_STANDARD = "1518" *) 
  (* ST_BNUM = "6" *) 
  (* ST_CRC_CAL = "1" *) 
  (* ST_CRC_CHK = "2" *) 
  (* ST_CRC_DROP = "3" *) 
  (* ST_CRC_READY = "0" *) 
  (* ST_DATA0 = "1" *) 
  (* ST_DATA1 = "2" *) 
  (* ST_DATA2 = "3" *) 
  (* ST_DATA3 = "4" *) 
  (* ST_DROP = "8" *) 
  (* ST_END = "5" *) 
  (* ST_ERROR = "7" *) 
  (* ST_FULL = "9" *) 
  (* ST_READY = "0" *) 
  gig_eth_mac_core_rx u_rx
       (.client_bnum(client_rx_bnum),
        .client_bnum_full(client_rx_bnum_full),
        .client_bnum_rdy(client_rx_bnum_rdy),
        .client_bnum_vld(client_rx_bnum_vld),
        .client_ctl(din[35:32]),
        .client_dat(din[31:0]),
        .client_full(client_rx_full),
        .client_goodframe(client_rx_goodframe),
        .client_rdy(client_rx_wr_rdy),
        .client_vld(client_rx_vld),
        .conf_mac_addr(conf_mac_addr),
        .conf_rx_en(conf_rx_en),
        .conf_rx_jumbo_en(conf_rx_jumbo_en),
        .conf_rx_no_chk_crc(conf_rx_no_chk_crc),
        .conf_rx_promiscuous(conf_rx_promiscuous),
        .crc_err(crc_err),
        .gmii_rxd(gmii_rxd),
        .gmii_rxdv(gmii_rxdv),
        .gmii_rxer(gmii_rxer),
        .reset_n(rx_reset_n),
        .rx_clk(gmii_rxc));
  LUT1 #(
    .INIT(2'h1)) 
    u_rx_i_2
       (.I0(full),
        .O(client_rx_wr_rdy));
  (* MAX_FRAME_SIZE_JUMBO = "9018" *) 
  (* MAX_FRAME_SIZE_STANDARD = "1518" *) 
  (* MIN_FRAME_SIZE = "64" *) 
  (* P_CNT_IFG = "9" *) 
  (* P_WIDTH_DCNT = "14" *) 
  (* ST_BNUM = "1" *) 
  (* ST_CRC0 = "7" *) 
  (* ST_CRC1 = "8" *) 
  (* ST_CRC2 = "9" *) 
  (* ST_CRC3 = "10" *) 
  (* ST_DATA0 = "3" *) 
  (* ST_DATA1 = "4" *) 
  (* ST_DATA2 = "5" *) 
  (* ST_DATA3 = "6" *) 
  (* ST_DROP = "14" *) 
  (* ST_DROP_ALL = "15" *) 
  (* ST_ERROR = "12" *) 
  (* ST_IFG = "11" *) 
  (* ST_PAD = "13" *) 
  (* ST_PRE = "2" *) 
  (* ST_READY = "0" *) 
  git_eth_mac_core_tx u_tx
       (.client_ctl(dout[35:32]),
        .client_dat(dout[31:0]),
        .client_rdy(client_tx_rdy),
        .client_vld(client_tx_vld),
        .conf_tx_en(conf_tx_en),
        .conf_tx_jumbo_en(conf_tx_jumbo_en),
        .conf_tx_no_gen_crc(conf_tx_no_gen_crc),
        .gmii_txd(gmii_txd),
        .gmii_txen(gmii_txen),
        .gmii_txer(gmii_txer),
        .reset_n(tx_reset_n),
        .tx_clk(gtx_clk));
endmodule

(* MAX_FRAME_SIZE_JUMBO = "9018" *) (* MAX_FRAME_SIZE_STANDARD = "1518" *) (* ST_BNUM = "6" *) 
(* ST_CRC_CAL = "1" *) (* ST_CRC_CHK = "2" *) (* ST_CRC_DROP = "3" *) 
(* ST_CRC_READY = "0" *) (* ST_DATA0 = "1" *) (* ST_DATA1 = "2" *) 
(* ST_DATA2 = "3" *) (* ST_DATA3 = "4" *) (* ST_DROP = "8" *) 
(* ST_END = "5" *) (* ST_ERROR = "7" *) (* ST_FULL = "9" *) 
(* ST_READY = "0" *) 
module gig_eth_mac_core_rx
   (reset_n,
    rx_clk,
    conf_rx_en,
    conf_rx_no_chk_crc,
    conf_rx_jumbo_en,
    conf_rx_promiscuous,
    conf_mac_addr,
    client_rdy,
    client_vld,
    client_ctl,
    client_dat,
    client_full,
    client_bnum_rdy,
    client_bnum_vld,
    client_bnum,
    client_goodframe,
    client_bnum_full,
    gmii_rxd,
    gmii_rxdv,
    gmii_rxer,
    crc_err);
  input reset_n;
  input rx_clk;
  input conf_rx_en;
  input conf_rx_no_chk_crc;
  input conf_rx_jumbo_en;
  input conf_rx_promiscuous;
  input [47:0]conf_mac_addr;
  input client_rdy;
  output client_vld;
  output [3:0]client_ctl;
  output [31:0]client_dat;
  input client_full;
  input client_bnum_rdy;
  output client_bnum_vld;
  output [15:0]client_bnum;
  output client_goodframe;
  input client_bnum_full;
  (* mark_debug = "true" *) input [7:0]gmii_rxd;
  (* mark_debug = "true" *) input gmii_rxdv;
  (* mark_debug = "true" *) input gmii_rxer;
  (* keep = "true" *) output crc_err;

  wire [15:0]client_bnum;
  wire \client_bnum[0]_i_1_n_0 ;
  wire \client_bnum[10]_i_1_n_0 ;
  wire \client_bnum[11]_i_1_n_0 ;
  wire \client_bnum[12]_i_1_n_0 ;
  wire \client_bnum[13]_i_1_n_0 ;
  wire \client_bnum[14]_i_1_n_0 ;
  wire \client_bnum[15]_i_10_n_0 ;
  wire \client_bnum[15]_i_1_n_0 ;
  wire \client_bnum[15]_i_2_n_0 ;
  wire \client_bnum[15]_i_3_n_0 ;
  wire \client_bnum[15]_i_4_n_0 ;
  wire \client_bnum[15]_i_5_n_0 ;
  wire \client_bnum[15]_i_6_n_0 ;
  wire \client_bnum[15]_i_7_n_0 ;
  wire \client_bnum[15]_i_8_n_0 ;
  wire \client_bnum[1]_i_1_n_0 ;
  wire \client_bnum[2]_i_1_n_0 ;
  wire \client_bnum[3]_i_1_n_0 ;
  wire \client_bnum[4]_i_1_n_0 ;
  wire \client_bnum[5]_i_1_n_0 ;
  wire \client_bnum[6]_i_1_n_0 ;
  wire \client_bnum[7]_i_1_n_0 ;
  wire \client_bnum[8]_i_1_n_0 ;
  wire \client_bnum[8]_i_2_n_0 ;
  wire \client_bnum[9]_i_1_n_0 ;
  wire client_bnum_full;
  wire \client_bnum_reg[0]_i_1_n_0 ;
  wire \client_bnum_reg[10]_i_1_n_0 ;
  wire \client_bnum_reg[11]_i_1_n_0 ;
  wire \client_bnum_reg[12]_i_1_n_0 ;
  wire \client_bnum_reg[12]_i_2_n_0 ;
  wire \client_bnum_reg[12]_i_2_n_1 ;
  wire \client_bnum_reg[12]_i_2_n_2 ;
  wire \client_bnum_reg[12]_i_2_n_3 ;
  wire \client_bnum_reg[12]_i_2_n_4 ;
  wire \client_bnum_reg[12]_i_2_n_5 ;
  wire \client_bnum_reg[12]_i_2_n_6 ;
  wire \client_bnum_reg[12]_i_2_n_7 ;
  wire \client_bnum_reg[13]_i_1_n_0 ;
  wire \client_bnum_reg[14]_i_1_n_0 ;
  wire \client_bnum_reg[15]_i_1_n_0 ;
  wire \client_bnum_reg[15]_i_2_n_0 ;
  wire \client_bnum_reg[15]_i_3_n_0 ;
  wire \client_bnum_reg[15]_i_9_n_2 ;
  wire \client_bnum_reg[15]_i_9_n_3 ;
  wire \client_bnum_reg[15]_i_9_n_5 ;
  wire \client_bnum_reg[15]_i_9_n_6 ;
  wire \client_bnum_reg[15]_i_9_n_7 ;
  wire \client_bnum_reg[1]_i_1_n_0 ;
  wire \client_bnum_reg[2]_i_1_n_0 ;
  wire \client_bnum_reg[3]_i_1_n_0 ;
  wire \client_bnum_reg[4]_i_1_n_0 ;
  wire \client_bnum_reg[4]_i_2_n_0 ;
  wire \client_bnum_reg[4]_i_2_n_1 ;
  wire \client_bnum_reg[4]_i_2_n_2 ;
  wire \client_bnum_reg[4]_i_2_n_3 ;
  wire \client_bnum_reg[4]_i_2_n_4 ;
  wire \client_bnum_reg[4]_i_2_n_5 ;
  wire \client_bnum_reg[4]_i_2_n_6 ;
  wire \client_bnum_reg[4]_i_2_n_7 ;
  wire \client_bnum_reg[5]_i_1_n_0 ;
  wire \client_bnum_reg[6]_i_1_n_0 ;
  wire \client_bnum_reg[7]_i_1_n_0 ;
  wire \client_bnum_reg[8]_i_1_n_0 ;
  wire \client_bnum_reg[8]_i_3_n_0 ;
  wire \client_bnum_reg[8]_i_3_n_1 ;
  wire \client_bnum_reg[8]_i_3_n_2 ;
  wire \client_bnum_reg[8]_i_3_n_3 ;
  wire \client_bnum_reg[8]_i_3_n_4 ;
  wire \client_bnum_reg[8]_i_3_n_5 ;
  wire \client_bnum_reg[8]_i_3_n_6 ;
  wire \client_bnum_reg[8]_i_3_n_7 ;
  wire \client_bnum_reg[9]_i_1_n_0 ;
  wire [15:0]client_bnum_reg__0;
  wire client_bnum_vld;
  wire client_bnum_vld_i_10_n_0;
  wire client_bnum_vld_i_11_n_0;
  wire client_bnum_vld_i_12_n_0;
  wire client_bnum_vld_i_1_n_0;
  wire client_bnum_vld_i_2_n_0;
  wire client_bnum_vld_i_3_n_0;
  wire client_bnum_vld_i_4_n_0;
  wire client_bnum_vld_i_5_n_0;
  wire client_bnum_vld_i_6_n_0;
  wire client_bnum_vld_i_7_n_0;
  wire client_bnum_vld_i_8_n_0;
  wire client_bnum_vld_i_9_n_0;
  wire [3:0]client_ctl;
  wire \client_ctl[0]_i_1_n_0 ;
  wire \client_ctl[1]_i_1_n_0 ;
  wire \client_ctl[1]_i_2_n_0 ;
  wire \client_ctl[2]_i_1_n_0 ;
  wire \client_ctl[2]_i_2_n_0 ;
  wire \client_ctl[2]_i_3_n_0 ;
  wire \client_ctl[2]_i_4_n_0 ;
  wire \client_ctl[2]_i_5_n_0 ;
  wire \client_ctl[2]_i_6_n_0 ;
  wire \client_ctl[2]_i_7_n_0 ;
  wire \client_ctl[3]_i_10_n_0 ;
  wire \client_ctl[3]_i_1_n_0 ;
  wire \client_ctl[3]_i_2_n_0 ;
  wire \client_ctl[3]_i_3_n_0 ;
  wire \client_ctl[3]_i_4_n_0 ;
  wire \client_ctl[3]_i_5_n_0 ;
  wire \client_ctl[3]_i_7_n_0 ;
  wire \client_ctl[3]_i_8_n_0 ;
  wire \client_ctl[3]_i_9_n_0 ;
  wire [31:0]client_dat;
  wire \client_dat[0]_i_1_n_0 ;
  wire \client_dat[10]_i_1_n_0 ;
  wire \client_dat[11]_i_1_n_0 ;
  wire \client_dat[12]_i_1_n_0 ;
  wire \client_dat[13]_i_1_n_0 ;
  wire \client_dat[14]_i_1_n_0 ;
  wire \client_dat[15]_i_1_n_0 ;
  wire \client_dat[15]_i_2_n_0 ;
  wire \client_dat[16]_i_1_n_0 ;
  wire \client_dat[17]_i_1_n_0 ;
  wire \client_dat[18]_i_1_n_0 ;
  wire \client_dat[19]_i_1_n_0 ;
  wire \client_dat[1]_i_1_n_0 ;
  wire \client_dat[20]_i_1_n_0 ;
  wire \client_dat[21]_i_1_n_0 ;
  wire \client_dat[22]_i_1_n_0 ;
  wire \client_dat[23]_i_1_n_0 ;
  wire \client_dat[23]_i_2_n_0 ;
  wire \client_dat[24]_i_1_n_0 ;
  wire \client_dat[25]_i_1_n_0 ;
  wire \client_dat[26]_i_1_n_0 ;
  wire \client_dat[27]_i_1_n_0 ;
  wire \client_dat[28]_i_1_n_0 ;
  wire \client_dat[29]_i_1_n_0 ;
  wire \client_dat[2]_i_1_n_0 ;
  wire \client_dat[30]_i_1_n_0 ;
  wire \client_dat[31]_i_1_n_0 ;
  wire \client_dat[31]_i_2_n_0 ;
  wire \client_dat[3]_i_1_n_0 ;
  wire \client_dat[4]_i_1_n_0 ;
  wire \client_dat[5]_i_1_n_0 ;
  wire \client_dat[6]_i_1_n_0 ;
  wire \client_dat[7]_i_1_n_0 ;
  wire \client_dat[7]_i_2_n_0 ;
  wire \client_dat[8]_i_1_n_0 ;
  wire \client_dat[9]_i_1_n_0 ;
  wire client_full;
  wire client_goodframe;
  wire client_goodframe1_out;
  wire client_goodframe_i_1_n_0;
  wire client_goodframe_i_3_n_0;
  wire client_goodframe_i_4_n_0;
  wire client_goodframe_i_5_n_0;
  wire client_goodframe_i_6_n_0;
  wire client_rdy;
  wire client_vld;
  wire client_vld13_out;
  wire client_vld_i_10_n_0;
  wire client_vld_i_11_n_0;
  wire client_vld_i_12_n_0;
  wire client_vld_i_13_n_0;
  wire client_vld_i_14_n_0;
  wire client_vld_i_15_n_0;
  wire client_vld_i_16_n_0;
  wire client_vld_i_17_n_0;
  wire client_vld_i_1_n_0;
  wire client_vld_i_2_n_0;
  wire client_vld_i_4_n_0;
  wire client_vld_i_5_n_0;
  wire client_vld_i_6_n_0;
  wire client_vld_i_7_n_0;
  wire client_vld_i_8_n_0;
  wire client_vld_i_9_n_0;
  wire [47:0]conf_mac_addr;
  wire conf_rx_en;
  wire conf_rx_no_chk_crc;
  wire conf_rx_promiscuous;
  (* RTL_KEEP = "true" *) wire crc_chk_err;
  wire crc_chk_err_inferred_i_2_n_0;
  wire crc_chk_err_inferred_i_3_n_0;
  wire crc_chk_err_inferred_i_4_n_0;
  wire crc_chk_err_inferred_i_5_n_0;
  wire crc_chk_err_inferred_i_6_n_0;
  wire crc_chk_err_inferred_i_7_n_0;
  (* RTL_KEEP = "true" *) wire crc_chk_vld;
  (* RTL_KEEP = "true" *) wire crc_err;
  wire crc_err0_out;
  wire \crc_reg[0]_i_1_n_0 ;
  wire \crc_reg[10]_i_1_n_0 ;
  wire \crc_reg[11]_i_1_n_0 ;
  wire \crc_reg[11]_i_2_n_0 ;
  wire \crc_reg[12]_i_1_n_0 ;
  wire \crc_reg[12]_i_2_n_0 ;
  wire \crc_reg[13]_i_1_n_0 ;
  wire \crc_reg[13]_i_2_n_0 ;
  wire \crc_reg[14]_i_1_n_0 ;
  wire \crc_reg[14]_i_2_n_0 ;
  wire \crc_reg[15]_i_1_n_0 ;
  wire \crc_reg[15]_i_2_n_0 ;
  wire \crc_reg[16]_i_1_n_0 ;
  wire \crc_reg[17]_i_1_n_0 ;
  wire \crc_reg[17]_i_2_n_0 ;
  wire \crc_reg[18]_i_1_n_0 ;
  wire \crc_reg[19]_i_1_n_0 ;
  wire \crc_reg[1]_i_1_n_0 ;
  wire \crc_reg[20]_i_1_n_0 ;
  wire \crc_reg[21]_i_1_n_0 ;
  wire \crc_reg[22]_i_1_n_0 ;
  wire \crc_reg[23]_i_1_n_0 ;
  wire \crc_reg[23]_i_2_n_0 ;
  wire \crc_reg[24]_i_1_n_0 ;
  wire \crc_reg[25]_i_1_n_0 ;
  wire \crc_reg[26]_i_1_n_0 ;
  wire \crc_reg[27]_i_1_n_0 ;
  wire \crc_reg[27]_i_2_n_0 ;
  wire \crc_reg[27]_i_3_n_0 ;
  wire \crc_reg[27]_i_4_n_0 ;
  wire \crc_reg[27]_i_5_n_0 ;
  wire \crc_reg[28]_i_1_n_0 ;
  wire \crc_reg[28]_i_2_n_0 ;
  wire \crc_reg[29]_i_1_n_0 ;
  wire \crc_reg[29]_i_2_n_0 ;
  wire \crc_reg[29]_i_3_n_0 ;
  wire \crc_reg[2]_i_1_n_0 ;
  wire \crc_reg[30]_i_1_n_0 ;
  wire \crc_reg[30]_i_2_n_0 ;
  wire \crc_reg[31]_i_1_n_0 ;
  wire \crc_reg[3]_i_1_n_0 ;
  wire \crc_reg[3]_i_2_n_0 ;
  wire \crc_reg[4]_i_1_n_0 ;
  wire \crc_reg[5]_i_1_n_0 ;
  wire \crc_reg[5]_i_2_n_0 ;
  wire \crc_reg[6]_i_1_n_0 ;
  wire \crc_reg[7]_i_1_n_0 ;
  wire \crc_reg[8]_i_1_n_0 ;
  wire \crc_reg[9]_i_1_n_0 ;
  wire \crc_reg_reg_n_0_[0] ;
  wire \crc_reg_reg_n_0_[10] ;
  wire \crc_reg_reg_n_0_[18] ;
  wire \crc_reg_reg_n_0_[23] ;
  wire \crc_reg_reg_n_0_[24] ;
  wire \crc_reg_reg_n_0_[30] ;
  wire \crc_reg_reg_n_0_[31] ;
  wire first3_out;
  wire first_i_1_n_0;
  wire first_i_3_n_0;
  wire first_i_4_n_0;
  wire first_i_5_n_0;
  wire first_reg_n_0;
  wire [0:0]func_crc32_d8_return;
  (* MARK_DEBUG *) wire [7:0]gmii_rxd;
  (* MARK_DEBUG *) wire gmii_rxdv;
  (* MARK_DEBUG *) wire gmii_rxer;
  (* MARK_DEBUG *) wire mac_broadcast;
  wire mac_broadcast_i_1_n_0;
  wire mac_broadcast_i_2_n_0;
  wire [47:0]mac_dst;
  wire \mac_dst[10]_i_1_n_0 ;
  wire \mac_dst[11]_i_1_n_0 ;
  wire \mac_dst[12]_i_1_n_0 ;
  wire \mac_dst[13]_i_1_n_0 ;
  wire \mac_dst[14]_i_1_n_0 ;
  wire \mac_dst[15]_i_1_n_0 ;
  wire \mac_dst[16]_i_1_n_0 ;
  wire \mac_dst[17]_i_1_n_0 ;
  wire \mac_dst[18]_i_1_n_0 ;
  wire \mac_dst[19]_i_1_n_0 ;
  wire \mac_dst[20]_i_1_n_0 ;
  wire \mac_dst[21]_i_1_n_0 ;
  wire \mac_dst[22]_i_1_n_0 ;
  wire \mac_dst[23]_i_1_n_0 ;
  wire \mac_dst[24]_i_1_n_0 ;
  wire \mac_dst[25]_i_1_n_0 ;
  wire \mac_dst[26]_i_1_n_0 ;
  wire \mac_dst[27]_i_1_n_0 ;
  wire \mac_dst[28]_i_1_n_0 ;
  wire \mac_dst[29]_i_1_n_0 ;
  wire \mac_dst[30]_i_1_n_0 ;
  wire \mac_dst[31]_i_1_n_0 ;
  wire \mac_dst[32]_i_1_n_0 ;
  wire \mac_dst[33]_i_1_n_0 ;
  wire \mac_dst[34]_i_1_n_0 ;
  wire \mac_dst[35]_i_1_n_0 ;
  wire \mac_dst[36]_i_1_n_0 ;
  wire \mac_dst[37]_i_1_n_0 ;
  wire \mac_dst[38]_i_1_n_0 ;
  wire \mac_dst[39]_i_1_n_0 ;
  wire \mac_dst[40]_i_1_n_0 ;
  wire \mac_dst[41]_i_1_n_0 ;
  wire \mac_dst[42]_i_1_n_0 ;
  wire \mac_dst[43]_i_1_n_0 ;
  wire \mac_dst[44]_i_1_n_0 ;
  wire \mac_dst[45]_i_1_n_0 ;
  wire \mac_dst[46]_i_1_n_0 ;
  wire \mac_dst[47]_i_1_n_0 ;
  wire \mac_dst[47]_i_2_n_0 ;
  wire \mac_dst[8]_i_1_n_0 ;
  wire \mac_dst[9]_i_1_n_0 ;
  (* MARK_DEBUG *) wire mac_dst_hit;
  wire mac_dst_hit0;
  wire mac_dst_hit_i_10_n_0;
  wire mac_dst_hit_i_11_n_0;
  wire mac_dst_hit_i_12_n_0;
  wire mac_dst_hit_i_14_n_0;
  wire mac_dst_hit_i_15_n_0;
  wire mac_dst_hit_i_16_n_0;
  wire mac_dst_hit_i_17_n_0;
  wire mac_dst_hit_i_18_n_0;
  wire mac_dst_hit_i_19_n_0;
  wire mac_dst_hit_i_1_n_0;
  wire mac_dst_hit_i_20_n_0;
  wire mac_dst_hit_i_21_n_0;
  wire mac_dst_hit_i_4_n_0;
  wire mac_dst_hit_i_5_n_0;
  wire mac_dst_hit_i_6_n_0;
  wire mac_dst_hit_i_7_n_0;
  wire mac_dst_hit_i_9_n_0;
  wire mac_dst_hit_reg_i_13_n_0;
  wire mac_dst_hit_reg_i_13_n_1;
  wire mac_dst_hit_reg_i_13_n_2;
  wire mac_dst_hit_reg_i_13_n_3;
  wire mac_dst_hit_reg_i_2_n_1;
  wire mac_dst_hit_reg_i_2_n_2;
  wire mac_dst_hit_reg_i_2_n_3;
  wire mac_dst_hit_reg_i_3_n_0;
  wire mac_dst_hit_reg_i_3_n_1;
  wire mac_dst_hit_reg_i_3_n_2;
  wire mac_dst_hit_reg_i_3_n_3;
  wire mac_dst_hit_reg_i_8_n_0;
  wire mac_dst_hit_reg_i_8_n_1;
  wire mac_dst_hit_reg_i_8_n_2;
  wire mac_dst_hit_reg_i_8_n_3;
  wire [47:0]mac_src;
  wire \mac_src[0]_i_1_n_0 ;
  wire \mac_src[10]_i_1_n_0 ;
  wire \mac_src[11]_i_1_n_0 ;
  wire \mac_src[12]_i_1_n_0 ;
  wire \mac_src[13]_i_1_n_0 ;
  wire \mac_src[14]_i_1_n_0 ;
  wire \mac_src[15]_i_1_n_0 ;
  wire \mac_src[16]_i_1_n_0 ;
  wire \mac_src[17]_i_1_n_0 ;
  wire \mac_src[18]_i_1_n_0 ;
  wire \mac_src[19]_i_1_n_0 ;
  wire \mac_src[1]_i_1_n_0 ;
  wire \mac_src[20]_i_1_n_0 ;
  wire \mac_src[21]_i_1_n_0 ;
  wire \mac_src[22]_i_1_n_0 ;
  wire \mac_src[23]_i_1_n_0 ;
  wire \mac_src[24]_i_1_n_0 ;
  wire \mac_src[25]_i_1_n_0 ;
  wire \mac_src[26]_i_1_n_0 ;
  wire \mac_src[27]_i_1_n_0 ;
  wire \mac_src[28]_i_1_n_0 ;
  wire \mac_src[29]_i_1_n_0 ;
  wire \mac_src[2]_i_1_n_0 ;
  wire \mac_src[30]_i_1_n_0 ;
  wire \mac_src[31]_i_1_n_0 ;
  wire \mac_src[32]_i_1_n_0 ;
  wire \mac_src[33]_i_1_n_0 ;
  wire \mac_src[34]_i_1_n_0 ;
  wire \mac_src[35]_i_1_n_0 ;
  wire \mac_src[36]_i_1_n_0 ;
  wire \mac_src[37]_i_1_n_0 ;
  wire \mac_src[38]_i_1_n_0 ;
  wire \mac_src[39]_i_1_n_0 ;
  wire \mac_src[3]_i_1_n_0 ;
  wire \mac_src[40]_i_1_n_0 ;
  wire \mac_src[41]_i_1_n_0 ;
  wire \mac_src[42]_i_1_n_0 ;
  wire \mac_src[43]_i_1_n_0 ;
  wire \mac_src[44]_i_1_n_0 ;
  wire \mac_src[45]_i_1_n_0 ;
  wire \mac_src[46]_i_1_n_0 ;
  wire \mac_src[47]_i_1_n_0 ;
  wire \mac_src[47]_i_2_n_0 ;
  wire \mac_src[47]_i_3_n_0 ;
  wire \mac_src[4]_i_1_n_0 ;
  wire \mac_src[5]_i_1_n_0 ;
  wire \mac_src[6]_i_1_n_0 ;
  wire \mac_src[7]_i_1_n_0 ;
  wire \mac_src[8]_i_1_n_0 ;
  wire \mac_src[9]_i_1_n_0 ;
  (* MARK_DEBUG *) wire mac_src_hit;
  wire mac_src_hit0;
  wire mac_src_hit_i_10_n_0;
  wire mac_src_hit_i_11_n_0;
  wire mac_src_hit_i_12_n_0;
  wire mac_src_hit_i_14_n_0;
  wire mac_src_hit_i_15_n_0;
  wire mac_src_hit_i_16_n_0;
  wire mac_src_hit_i_17_n_0;
  wire mac_src_hit_i_18_n_0;
  wire mac_src_hit_i_19_n_0;
  wire mac_src_hit_i_1_n_0;
  wire mac_src_hit_i_20_n_0;
  wire mac_src_hit_i_21_n_0;
  wire mac_src_hit_i_4_n_0;
  wire mac_src_hit_i_5_n_0;
  wire mac_src_hit_i_6_n_0;
  wire mac_src_hit_i_7_n_0;
  wire mac_src_hit_i_9_n_0;
  wire mac_src_hit_reg_i_13_n_0;
  wire mac_src_hit_reg_i_13_n_1;
  wire mac_src_hit_reg_i_13_n_2;
  wire mac_src_hit_reg_i_13_n_3;
  wire mac_src_hit_reg_i_2_n_1;
  wire mac_src_hit_reg_i_2_n_2;
  wire mac_src_hit_reg_i_2_n_3;
  wire mac_src_hit_reg_i_3_n_0;
  wire mac_src_hit_reg_i_3_n_1;
  wire mac_src_hit_reg_i_3_n_2;
  wire mac_src_hit_reg_i_3_n_3;
  wire mac_src_hit_reg_i_8_n_0;
  wire mac_src_hit_reg_i_8_n_1;
  wire mac_src_hit_reg_i_8_n_2;
  wire mac_src_hit_reg_i_8_n_3;
  wire p_10_in;
  wire p_12_in;
  wire p_14_in;
  wire p_16_in;
  wire p_17_in;
  wire p_18_in;
  wire p_19_in;
  wire p_20_in;
  wire p_21_in;
  wire p_22_in;
  wire p_23_in;
  wire p_24_in;
  wire p_26_in;
  wire p_27_in;
  wire p_28_in;
  wire p_29_in;
  wire p_30_in;
  wire p_31_in;
  wire p_32_in;
  wire p_34_in;
  wire p_35_in;
  wire p_36_in;
  wire p_37_in;
  wire p_4_in;
  wire p_8_in;
  (* MARK_DEBUG *) wire [47:0]reg_conf_mac_addr;
  wire \reg_conf_mac_addr[0]_i_1_n_0 ;
  wire \reg_conf_mac_addr[10]_i_1_n_0 ;
  wire \reg_conf_mac_addr[11]_i_1_n_0 ;
  wire \reg_conf_mac_addr[12]_i_1_n_0 ;
  wire \reg_conf_mac_addr[13]_i_1_n_0 ;
  wire \reg_conf_mac_addr[14]_i_1_n_0 ;
  wire \reg_conf_mac_addr[15]_i_1_n_0 ;
  wire \reg_conf_mac_addr[16]_i_1_n_0 ;
  wire \reg_conf_mac_addr[17]_i_1_n_0 ;
  wire \reg_conf_mac_addr[18]_i_1_n_0 ;
  wire \reg_conf_mac_addr[19]_i_1_n_0 ;
  wire \reg_conf_mac_addr[1]_i_1_n_0 ;
  wire \reg_conf_mac_addr[20]_i_1_n_0 ;
  wire \reg_conf_mac_addr[21]_i_1_n_0 ;
  wire \reg_conf_mac_addr[22]_i_1_n_0 ;
  wire \reg_conf_mac_addr[23]_i_1_n_0 ;
  wire \reg_conf_mac_addr[24]_i_1_n_0 ;
  wire \reg_conf_mac_addr[25]_i_1_n_0 ;
  wire \reg_conf_mac_addr[26]_i_1_n_0 ;
  wire \reg_conf_mac_addr[27]_i_1_n_0 ;
  wire \reg_conf_mac_addr[28]_i_1_n_0 ;
  wire \reg_conf_mac_addr[29]_i_1_n_0 ;
  wire \reg_conf_mac_addr[2]_i_1_n_0 ;
  wire \reg_conf_mac_addr[30]_i_1_n_0 ;
  wire \reg_conf_mac_addr[31]_i_1_n_0 ;
  wire \reg_conf_mac_addr[32]_i_1_n_0 ;
  wire \reg_conf_mac_addr[33]_i_1_n_0 ;
  wire \reg_conf_mac_addr[34]_i_1_n_0 ;
  wire \reg_conf_mac_addr[35]_i_1_n_0 ;
  wire \reg_conf_mac_addr[36]_i_1_n_0 ;
  wire \reg_conf_mac_addr[37]_i_1_n_0 ;
  wire \reg_conf_mac_addr[38]_i_1_n_0 ;
  wire \reg_conf_mac_addr[39]_i_1_n_0 ;
  wire \reg_conf_mac_addr[3]_i_1_n_0 ;
  wire \reg_conf_mac_addr[40]_i_1_n_0 ;
  wire \reg_conf_mac_addr[41]_i_1_n_0 ;
  wire \reg_conf_mac_addr[42]_i_1_n_0 ;
  wire \reg_conf_mac_addr[43]_i_1_n_0 ;
  wire \reg_conf_mac_addr[44]_i_1_n_0 ;
  wire \reg_conf_mac_addr[45]_i_1_n_0 ;
  wire \reg_conf_mac_addr[46]_i_1_n_0 ;
  wire \reg_conf_mac_addr[47]_i_1_n_0 ;
  wire \reg_conf_mac_addr[4]_i_1_n_0 ;
  wire \reg_conf_mac_addr[5]_i_1_n_0 ;
  wire \reg_conf_mac_addr[6]_i_1_n_0 ;
  wire \reg_conf_mac_addr[7]_i_1_n_0 ;
  wire \reg_conf_mac_addr[8]_i_1_n_0 ;
  wire \reg_conf_mac_addr[9]_i_1_n_0 ;
  wire reg_conf_rx_en;
  wire reg_conf_rx_en_i_1_n_0;
  wire reg_conf_rx_en_reg_n_0;
  wire reg_conf_rx_no_chk_crc_i_1_n_0;
  wire reg_conf_rx_no_chk_crc_reg_n_0;
  wire reg_conf_rx_promiscuous_i_1_n_0;
  wire reg_conf_rx_promiscuous_reg_n_0;
  wire reset_n;
  wire rx_clk;
  wire rxd0_reg_c_n_0;
  wire rxd1_reg_c_n_0;
  wire \rxd2_reg[0]_srl3_rxd2_reg_c_n_0 ;
  wire \rxd2_reg[1]_srl3_rxd2_reg_c_n_0 ;
  wire \rxd2_reg[2]_srl3_rxd2_reg_c_n_0 ;
  wire \rxd2_reg[3]_srl3_rxd2_reg_c_n_0 ;
  wire \rxd2_reg[4]_srl3_rxd2_reg_c_n_0 ;
  wire \rxd2_reg[5]_srl3_rxd2_reg_c_n_0 ;
  wire \rxd2_reg[6]_srl3_rxd2_reg_c_n_0 ;
  wire \rxd2_reg[7]_srl3_rxd2_reg_c_n_0 ;
  wire rxd2_reg_c_n_0;
  wire \rxd3_reg[0]_rxd3_reg_c_n_0 ;
  wire \rxd3_reg[1]_rxd3_reg_c_n_0 ;
  wire \rxd3_reg[2]_rxd3_reg_c_n_0 ;
  wire \rxd3_reg[3]_rxd3_reg_c_n_0 ;
  wire \rxd3_reg[4]_rxd3_reg_c_n_0 ;
  wire \rxd3_reg[5]_rxd3_reg_c_n_0 ;
  wire \rxd3_reg[6]_rxd3_reg_c_n_0 ;
  wire \rxd3_reg[7]_rxd3_reg_c_n_0 ;
  wire rxd3_reg_c_n_0;
  wire rxd3_reg_gate__0_n_0;
  wire rxd3_reg_gate__1_n_0;
  wire rxd3_reg_gate__2_n_0;
  wire rxd3_reg_gate__3_n_0;
  wire rxd3_reg_gate__4_n_0;
  wire rxd3_reg_gate__5_n_0;
  wire rxd3_reg_gate__6_n_0;
  wire rxd3_reg_gate_n_0;
  wire [7:0]rxd4;
  wire rxdv00;
  wire rxdv1_reg_srl2_rxd1_reg_c_n_0;
  wire rxdv2_reg_gate_n_0;
  wire rxdv2_reg_rxd2_reg_c_n_0;
  wire rxdv3;
  wire rxdv4;
  wire rxer2_reg_srl3_rxd2_reg_c_n_0;
  wire rxer3_reg_gate_n_0;
  wire rxer3_reg_rxd3_reg_c_n_0;
  wire rxer4;
  (* MARK_DEBUG *) (* RTL_KEEP = "true" *) wire [3:0]state;
  wire \state[0]_i_1_n_0 ;
  wire \state[0]_i_2_n_0 ;
  wire \state[0]_i_3_n_0 ;
  wire \state[0]_i_4_n_0 ;
  wire \state[0]_i_5_n_0 ;
  wire \state[1]_i_10_n_0 ;
  wire \state[1]_i_11_n_0 ;
  wire \state[1]_i_1_n_0 ;
  wire \state[1]_i_2_n_0 ;
  wire \state[1]_i_3_n_0 ;
  wire \state[1]_i_4_n_0 ;
  wire \state[1]_i_5_n_0 ;
  wire \state[1]_i_6_n_0 ;
  wire \state[1]_i_7_n_0 ;
  wire \state[1]_i_8_n_0 ;
  wire \state[1]_i_9_n_0 ;
  wire \state[2]_i_10_n_0 ;
  wire \state[2]_i_11_n_0 ;
  wire \state[2]_i_12_n_0 ;
  wire \state[2]_i_1_n_0 ;
  wire \state[2]_i_2_n_0 ;
  wire \state[2]_i_3_n_0 ;
  wire \state[2]_i_4_n_0 ;
  wire \state[2]_i_5_n_0 ;
  wire \state[2]_i_6_n_0 ;
  wire \state[2]_i_7_n_0 ;
  wire \state[2]_i_8_n_0 ;
  wire \state[2]_i_9_n_0 ;
  wire \state[3]_i_1_n_0 ;
  wire \state[3]_i_2_n_0 ;
  wire \state[3]_i_3_n_0 ;
  wire \state[3]_i_4_n_0 ;
  wire \state[3]_i_5_n_0 ;
  wire \state[3]_i_6_n_0 ;
  wire \state[3]_i_7_n_0 ;
  wire \state[3]_i_8_n_0 ;
  (* RTL_KEEP = "true" *) wire [1:0]state_crc;
  wire \state_crc[0]_i_1_n_0 ;
  wire \state_crc[0]_i_2_n_0 ;
  wire \state_crc[0]_i_3_n_0 ;
  wire \state_crc[1]_i_1_n_0 ;
  wire \state_crc[1]_i_2_n_0 ;
  wire \state_crc[1]_i_3_n_0 ;
  wire [3:2]\NLW_client_bnum_reg[15]_i_9_CO_UNCONNECTED ;
  wire [3:3]\NLW_client_bnum_reg[15]_i_9_O_UNCONNECTED ;
  wire [3:0]NLW_mac_dst_hit_reg_i_13_O_UNCONNECTED;
  wire [3:0]NLW_mac_dst_hit_reg_i_2_O_UNCONNECTED;
  wire [3:0]NLW_mac_dst_hit_reg_i_3_O_UNCONNECTED;
  wire [3:0]NLW_mac_dst_hit_reg_i_8_O_UNCONNECTED;
  wire [3:0]NLW_mac_src_hit_reg_i_13_O_UNCONNECTED;
  wire [3:0]NLW_mac_src_hit_reg_i_2_O_UNCONNECTED;
  wire [3:0]NLW_mac_src_hit_reg_i_3_O_UNCONNECTED;
  wire [3:0]NLW_mac_src_hit_reg_i_8_O_UNCONNECTED;

  LUT6 #(
    .INIT(64'hAA33333000000000)) 
    \client_bnum[0]_i_1 
       (.I0(client_bnum_reg__0[0]),
        .I1(client_bnum[0]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(state[1]),
        .I5(reg_conf_rx_en_reg_n_0),
        .O(\client_bnum[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCCCC000000000)) 
    \client_bnum[10]_i_1 
       (.I0(client_bnum_reg__0[10]),
        .I1(\client_bnum_reg[12]_i_2_n_6 ),
        .I2(state[0]),
        .I3(state[2]),
        .I4(state[1]),
        .I5(reg_conf_rx_en_reg_n_0),
        .O(\client_bnum[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCCCC000000000)) 
    \client_bnum[11]_i_1 
       (.I0(client_bnum_reg__0[11]),
        .I1(\client_bnum_reg[12]_i_2_n_5 ),
        .I2(state[0]),
        .I3(state[2]),
        .I4(state[1]),
        .I5(reg_conf_rx_en_reg_n_0),
        .O(\client_bnum[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCCCC000000000)) 
    \client_bnum[12]_i_1 
       (.I0(client_bnum_reg__0[12]),
        .I1(\client_bnum_reg[12]_i_2_n_4 ),
        .I2(state[0]),
        .I3(state[2]),
        .I4(state[1]),
        .I5(reg_conf_rx_en_reg_n_0),
        .O(\client_bnum[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCCCC000000000)) 
    \client_bnum[13]_i_1 
       (.I0(client_bnum_reg__0[13]),
        .I1(\client_bnum_reg[15]_i_9_n_7 ),
        .I2(state[0]),
        .I3(state[2]),
        .I4(state[1]),
        .I5(reg_conf_rx_en_reg_n_0),
        .O(\client_bnum[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCCCC000000000)) 
    \client_bnum[14]_i_1 
       (.I0(client_bnum_reg__0[14]),
        .I1(\client_bnum_reg[15]_i_9_n_6 ),
        .I2(state[0]),
        .I3(state[2]),
        .I4(state[1]),
        .I5(reg_conf_rx_en_reg_n_0),
        .O(\client_bnum[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \client_bnum[15]_i_1 
       (.I0(\client_bnum[15]_i_3_n_0 ),
        .I1(\client_bnum[15]_i_4_n_0 ),
        .I2(\client_bnum[15]_i_5_n_0 ),
        .I3(\client_bnum[15]_i_6_n_0 ),
        .I4(\client_bnum[15]_i_7_n_0 ),
        .I5(\client_bnum[15]_i_8_n_0 ),
        .O(\client_bnum[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    \client_bnum[15]_i_10 
       (.I0(rxd4[4]),
        .I1(rxd4[5]),
        .I2(rxd4[6]),
        .I3(rxer4),
        .O(\client_bnum[15]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAACCCCC000000000)) 
    \client_bnum[15]_i_2 
       (.I0(client_bnum_reg__0[15]),
        .I1(\client_bnum_reg[15]_i_9_n_5 ),
        .I2(state[0]),
        .I3(state[2]),
        .I4(state[1]),
        .I5(reg_conf_rx_en_reg_n_0),
        .O(\client_bnum[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \client_bnum[15]_i_3 
       (.I0(state[2]),
        .I1(state[0]),
        .I2(state[3]),
        .O(\client_bnum[15]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \client_bnum[15]_i_4 
       (.I0(client_bnum_vld_i_10_n_0),
        .I1(client_bnum_vld_i_9_n_0),
        .I2(client_bnum_vld_i_8_n_0),
        .I3(client_bnum_vld_i_7_n_0),
        .O(\client_bnum[15]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \client_bnum[15]_i_5 
       (.I0(state[3]),
        .I1(state[1]),
        .I2(state[0]),
        .O(\client_bnum[15]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000200000)) 
    \client_bnum[15]_i_6 
       (.I0(rxd4[7]),
        .I1(\client_bnum[15]_i_10_n_0 ),
        .I2(rxd4[0]),
        .I3(rxd4[1]),
        .I4(rxd4[2]),
        .I5(rxd4[3]),
        .O(\client_bnum[15]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \client_bnum[15]_i_7 
       (.I0(rxdv4),
        .I1(state[0]),
        .I2(state[3]),
        .I3(state[1]),
        .O(\client_bnum[15]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'h33373F33)) 
    \client_bnum[15]_i_8 
       (.I0(state[0]),
        .I1(reg_conf_rx_en_reg_n_0),
        .I2(state[3]),
        .I3(state[1]),
        .I4(state[2]),
        .O(\client_bnum[15]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAACCCCC000000000)) 
    \client_bnum[1]_i_1 
       (.I0(client_bnum_reg__0[1]),
        .I1(\client_bnum_reg[4]_i_2_n_7 ),
        .I2(state[0]),
        .I3(state[2]),
        .I4(state[1]),
        .I5(reg_conf_rx_en_reg_n_0),
        .O(\client_bnum[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCCCC000000000)) 
    \client_bnum[2]_i_1 
       (.I0(client_bnum_reg__0[2]),
        .I1(\client_bnum_reg[4]_i_2_n_6 ),
        .I2(state[0]),
        .I3(state[2]),
        .I4(state[1]),
        .I5(reg_conf_rx_en_reg_n_0),
        .O(\client_bnum[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCCCC000000000)) 
    \client_bnum[3]_i_1 
       (.I0(client_bnum_reg__0[3]),
        .I1(\client_bnum_reg[4]_i_2_n_5 ),
        .I2(state[0]),
        .I3(state[2]),
        .I4(state[1]),
        .I5(reg_conf_rx_en_reg_n_0),
        .O(\client_bnum[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCCCC000000000)) 
    \client_bnum[4]_i_1 
       (.I0(client_bnum_reg__0[4]),
        .I1(\client_bnum_reg[4]_i_2_n_4 ),
        .I2(state[0]),
        .I3(state[2]),
        .I4(state[1]),
        .I5(reg_conf_rx_en_reg_n_0),
        .O(\client_bnum[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCCCC000000000)) 
    \client_bnum[5]_i_1 
       (.I0(client_bnum_reg__0[5]),
        .I1(\client_bnum_reg[8]_i_3_n_7 ),
        .I2(state[0]),
        .I3(state[2]),
        .I4(state[1]),
        .I5(reg_conf_rx_en_reg_n_0),
        .O(\client_bnum[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCCCC000000000)) 
    \client_bnum[6]_i_1 
       (.I0(client_bnum_reg__0[6]),
        .I1(\client_bnum_reg[8]_i_3_n_6 ),
        .I2(state[0]),
        .I3(state[2]),
        .I4(state[1]),
        .I5(reg_conf_rx_en_reg_n_0),
        .O(\client_bnum[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCCCC000000000)) 
    \client_bnum[7]_i_1 
       (.I0(client_bnum_reg__0[7]),
        .I1(\client_bnum_reg[8]_i_3_n_5 ),
        .I2(state[0]),
        .I3(state[2]),
        .I4(state[1]),
        .I5(reg_conf_rx_en_reg_n_0),
        .O(\client_bnum[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCCCC000000000)) 
    \client_bnum[8]_i_1 
       (.I0(client_bnum_reg__0[8]),
        .I1(\client_bnum_reg[8]_i_3_n_4 ),
        .I2(state[0]),
        .I3(state[2]),
        .I4(state[1]),
        .I5(reg_conf_rx_en_reg_n_0),
        .O(\client_bnum[8]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \client_bnum[8]_i_2 
       (.I0(reset_n),
        .O(\client_bnum[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAACCCCC000000000)) 
    \client_bnum[9]_i_1 
       (.I0(client_bnum_reg__0[9]),
        .I1(\client_bnum_reg[12]_i_2_n_7 ),
        .I2(state[0]),
        .I3(state[2]),
        .I4(state[1]),
        .I5(reg_conf_rx_en_reg_n_0),
        .O(\client_bnum[9]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg[0] 
       (.C(rx_clk),
        .CE(\client_bnum[15]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\client_bnum[0]_i_1_n_0 ),
        .Q(client_bnum[0]));
  LUT6 #(
    .INIT(64'h8888888888888880)) 
    \client_bnum_reg[0]_i_1 
       (.I0(client_bnum[0]),
        .I1(reg_conf_rx_en_reg_n_0),
        .I2(state[2]),
        .I3(state[0]),
        .I4(state[3]),
        .I5(state[1]),
        .O(\client_bnum_reg[0]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg[10] 
       (.C(rx_clk),
        .CE(\client_bnum[15]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\client_bnum[10]_i_1_n_0 ),
        .Q(client_bnum[10]));
  LUT6 #(
    .INIT(64'h8888888888888880)) 
    \client_bnum_reg[10]_i_1 
       (.I0(client_bnum[10]),
        .I1(reg_conf_rx_en_reg_n_0),
        .I2(state[2]),
        .I3(state[0]),
        .I4(state[3]),
        .I5(state[1]),
        .O(\client_bnum_reg[10]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg[11] 
       (.C(rx_clk),
        .CE(\client_bnum[15]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\client_bnum[11]_i_1_n_0 ),
        .Q(client_bnum[11]));
  LUT6 #(
    .INIT(64'h8888888888888880)) 
    \client_bnum_reg[11]_i_1 
       (.I0(client_bnum[11]),
        .I1(reg_conf_rx_en_reg_n_0),
        .I2(state[2]),
        .I3(state[0]),
        .I4(state[3]),
        .I5(state[1]),
        .O(\client_bnum_reg[11]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg[12] 
       (.C(rx_clk),
        .CE(\client_bnum[15]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\client_bnum[12]_i_1_n_0 ),
        .Q(client_bnum[12]));
  LUT6 #(
    .INIT(64'h8888888888888880)) 
    \client_bnum_reg[12]_i_1 
       (.I0(client_bnum[12]),
        .I1(reg_conf_rx_en_reg_n_0),
        .I2(state[2]),
        .I3(state[0]),
        .I4(state[3]),
        .I5(state[1]),
        .O(\client_bnum_reg[12]_i_1_n_0 ));
  CARRY4 \client_bnum_reg[12]_i_2 
       (.CI(\client_bnum_reg[8]_i_3_n_0 ),
        .CO({\client_bnum_reg[12]_i_2_n_0 ,\client_bnum_reg[12]_i_2_n_1 ,\client_bnum_reg[12]_i_2_n_2 ,\client_bnum_reg[12]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\client_bnum_reg[12]_i_2_n_4 ,\client_bnum_reg[12]_i_2_n_5 ,\client_bnum_reg[12]_i_2_n_6 ,\client_bnum_reg[12]_i_2_n_7 }),
        .S(client_bnum[12:9]));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg[13] 
       (.C(rx_clk),
        .CE(\client_bnum[15]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\client_bnum[13]_i_1_n_0 ),
        .Q(client_bnum[13]));
  LUT6 #(
    .INIT(64'h8888888888888880)) 
    \client_bnum_reg[13]_i_1 
       (.I0(client_bnum[13]),
        .I1(reg_conf_rx_en_reg_n_0),
        .I2(state[2]),
        .I3(state[0]),
        .I4(state[3]),
        .I5(state[1]),
        .O(\client_bnum_reg[13]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg[14] 
       (.C(rx_clk),
        .CE(\client_bnum[15]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\client_bnum[14]_i_1_n_0 ),
        .Q(client_bnum[14]));
  LUT6 #(
    .INIT(64'h8888888888888880)) 
    \client_bnum_reg[14]_i_1 
       (.I0(client_bnum[14]),
        .I1(reg_conf_rx_en_reg_n_0),
        .I2(state[2]),
        .I3(state[0]),
        .I4(state[3]),
        .I5(state[1]),
        .O(\client_bnum_reg[14]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg[15] 
       (.C(rx_clk),
        .CE(\client_bnum[15]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\client_bnum[15]_i_2_n_0 ),
        .Q(client_bnum[15]));
  LUT4 #(
    .INIT(16'h8FFF)) 
    \client_bnum_reg[15]_i_1 
       (.I0(client_vld),
        .I1(client_rdy),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\client_bnum_reg[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8888888888888880)) 
    \client_bnum_reg[15]_i_2 
       (.I0(client_bnum[15]),
        .I1(reg_conf_rx_en_reg_n_0),
        .I2(state[2]),
        .I3(state[0]),
        .I4(state[3]),
        .I5(state[1]),
        .O(\client_bnum_reg[15]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \client_bnum_reg[15]_i_3 
       (.I0(state[2]),
        .I1(state[0]),
        .I2(state[3]),
        .I3(state[1]),
        .O(\client_bnum_reg[15]_i_3_n_0 ));
  CARRY4 \client_bnum_reg[15]_i_9 
       (.CI(\client_bnum_reg[12]_i_2_n_0 ),
        .CO({\NLW_client_bnum_reg[15]_i_9_CO_UNCONNECTED [3:2],\client_bnum_reg[15]_i_9_n_2 ,\client_bnum_reg[15]_i_9_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_client_bnum_reg[15]_i_9_O_UNCONNECTED [3],\client_bnum_reg[15]_i_9_n_5 ,\client_bnum_reg[15]_i_9_n_6 ,\client_bnum_reg[15]_i_9_n_7 }),
        .S({1'b0,client_bnum[15:13]}));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg[1] 
       (.C(rx_clk),
        .CE(\client_bnum[15]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\client_bnum[1]_i_1_n_0 ),
        .Q(client_bnum[1]));
  LUT6 #(
    .INIT(64'h8888888888888880)) 
    \client_bnum_reg[1]_i_1 
       (.I0(client_bnum[1]),
        .I1(reg_conf_rx_en_reg_n_0),
        .I2(state[2]),
        .I3(state[0]),
        .I4(state[3]),
        .I5(state[1]),
        .O(\client_bnum_reg[1]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg[2] 
       (.C(rx_clk),
        .CE(\client_bnum[15]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\client_bnum[2]_i_1_n_0 ),
        .Q(client_bnum[2]));
  LUT6 #(
    .INIT(64'h8888888888888880)) 
    \client_bnum_reg[2]_i_1 
       (.I0(client_bnum[2]),
        .I1(reg_conf_rx_en_reg_n_0),
        .I2(state[2]),
        .I3(state[0]),
        .I4(state[3]),
        .I5(state[1]),
        .O(\client_bnum_reg[2]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg[3] 
       (.C(rx_clk),
        .CE(\client_bnum[15]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\client_bnum[3]_i_1_n_0 ),
        .Q(client_bnum[3]));
  LUT6 #(
    .INIT(64'h8888888888888880)) 
    \client_bnum_reg[3]_i_1 
       (.I0(client_bnum[3]),
        .I1(reg_conf_rx_en_reg_n_0),
        .I2(state[2]),
        .I3(state[0]),
        .I4(state[3]),
        .I5(state[1]),
        .O(\client_bnum_reg[3]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg[4] 
       (.C(rx_clk),
        .CE(\client_bnum[15]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\client_bnum[4]_i_1_n_0 ),
        .Q(client_bnum[4]));
  LUT6 #(
    .INIT(64'h8888888888888880)) 
    \client_bnum_reg[4]_i_1 
       (.I0(client_bnum[4]),
        .I1(reg_conf_rx_en_reg_n_0),
        .I2(state[2]),
        .I3(state[0]),
        .I4(state[3]),
        .I5(state[1]),
        .O(\client_bnum_reg[4]_i_1_n_0 ));
  CARRY4 \client_bnum_reg[4]_i_2 
       (.CI(1'b0),
        .CO({\client_bnum_reg[4]_i_2_n_0 ,\client_bnum_reg[4]_i_2_n_1 ,\client_bnum_reg[4]_i_2_n_2 ,\client_bnum_reg[4]_i_2_n_3 }),
        .CYINIT(client_bnum[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\client_bnum_reg[4]_i_2_n_4 ,\client_bnum_reg[4]_i_2_n_5 ,\client_bnum_reg[4]_i_2_n_6 ,\client_bnum_reg[4]_i_2_n_7 }),
        .S(client_bnum[4:1]));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg[5] 
       (.C(rx_clk),
        .CE(\client_bnum[15]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\client_bnum[5]_i_1_n_0 ),
        .Q(client_bnum[5]));
  LUT6 #(
    .INIT(64'h8888888888888880)) 
    \client_bnum_reg[5]_i_1 
       (.I0(client_bnum[5]),
        .I1(reg_conf_rx_en_reg_n_0),
        .I2(state[2]),
        .I3(state[0]),
        .I4(state[3]),
        .I5(state[1]),
        .O(\client_bnum_reg[5]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg[6] 
       (.C(rx_clk),
        .CE(\client_bnum[15]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\client_bnum[6]_i_1_n_0 ),
        .Q(client_bnum[6]));
  LUT6 #(
    .INIT(64'h8888888888888880)) 
    \client_bnum_reg[6]_i_1 
       (.I0(client_bnum[6]),
        .I1(reg_conf_rx_en_reg_n_0),
        .I2(state[2]),
        .I3(state[0]),
        .I4(state[3]),
        .I5(state[1]),
        .O(\client_bnum_reg[6]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg[7] 
       (.C(rx_clk),
        .CE(\client_bnum[15]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\client_bnum[7]_i_1_n_0 ),
        .Q(client_bnum[7]));
  LUT6 #(
    .INIT(64'h8888888888888880)) 
    \client_bnum_reg[7]_i_1 
       (.I0(client_bnum[7]),
        .I1(reg_conf_rx_en_reg_n_0),
        .I2(state[2]),
        .I3(state[0]),
        .I4(state[3]),
        .I5(state[1]),
        .O(\client_bnum_reg[7]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg[8] 
       (.C(rx_clk),
        .CE(\client_bnum[15]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\client_bnum[8]_i_1_n_0 ),
        .Q(client_bnum[8]));
  LUT6 #(
    .INIT(64'h8888888888888880)) 
    \client_bnum_reg[8]_i_1 
       (.I0(client_bnum[8]),
        .I1(reg_conf_rx_en_reg_n_0),
        .I2(state[2]),
        .I3(state[0]),
        .I4(state[3]),
        .I5(state[1]),
        .O(\client_bnum_reg[8]_i_1_n_0 ));
  CARRY4 \client_bnum_reg[8]_i_3 
       (.CI(\client_bnum_reg[4]_i_2_n_0 ),
        .CO({\client_bnum_reg[8]_i_3_n_0 ,\client_bnum_reg[8]_i_3_n_1 ,\client_bnum_reg[8]_i_3_n_2 ,\client_bnum_reg[8]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\client_bnum_reg[8]_i_3_n_4 ,\client_bnum_reg[8]_i_3_n_5 ,\client_bnum_reg[8]_i_3_n_6 ,\client_bnum_reg[8]_i_3_n_7 }),
        .S(client_bnum[8:5]));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg[9] 
       (.C(rx_clk),
        .CE(\client_bnum[15]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\client_bnum[9]_i_1_n_0 ),
        .Q(client_bnum[9]));
  LUT6 #(
    .INIT(64'h8888888888888880)) 
    \client_bnum_reg[9]_i_1 
       (.I0(client_bnum[9]),
        .I1(reg_conf_rx_en_reg_n_0),
        .I2(state[2]),
        .I3(state[0]),
        .I4(state[3]),
        .I5(state[1]),
        .O(\client_bnum_reg[9]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg_reg[0] 
       (.C(rx_clk),
        .CE(\client_bnum_reg[15]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\client_bnum_reg[0]_i_1_n_0 ),
        .Q(client_bnum_reg__0[0]));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg_reg[10] 
       (.C(rx_clk),
        .CE(\client_bnum_reg[15]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\client_bnum_reg[10]_i_1_n_0 ),
        .Q(client_bnum_reg__0[10]));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg_reg[11] 
       (.C(rx_clk),
        .CE(\client_bnum_reg[15]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\client_bnum_reg[11]_i_1_n_0 ),
        .Q(client_bnum_reg__0[11]));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg_reg[12] 
       (.C(rx_clk),
        .CE(\client_bnum_reg[15]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\client_bnum_reg[12]_i_1_n_0 ),
        .Q(client_bnum_reg__0[12]));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg_reg[13] 
       (.C(rx_clk),
        .CE(\client_bnum_reg[15]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\client_bnum_reg[13]_i_1_n_0 ),
        .Q(client_bnum_reg__0[13]));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg_reg[14] 
       (.C(rx_clk),
        .CE(\client_bnum_reg[15]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\client_bnum_reg[14]_i_1_n_0 ),
        .Q(client_bnum_reg__0[14]));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg_reg[15] 
       (.C(rx_clk),
        .CE(\client_bnum_reg[15]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\client_bnum_reg[15]_i_2_n_0 ),
        .Q(client_bnum_reg__0[15]));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg_reg[1] 
       (.C(rx_clk),
        .CE(\client_bnum_reg[15]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\client_bnum_reg[1]_i_1_n_0 ),
        .Q(client_bnum_reg__0[1]));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg_reg[2] 
       (.C(rx_clk),
        .CE(\client_bnum_reg[15]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\client_bnum_reg[2]_i_1_n_0 ),
        .Q(client_bnum_reg__0[2]));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg_reg[3] 
       (.C(rx_clk),
        .CE(\client_bnum_reg[15]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\client_bnum_reg[3]_i_1_n_0 ),
        .Q(client_bnum_reg__0[3]));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg_reg[4] 
       (.C(rx_clk),
        .CE(\client_bnum_reg[15]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\client_bnum_reg[4]_i_1_n_0 ),
        .Q(client_bnum_reg__0[4]));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg_reg[5] 
       (.C(rx_clk),
        .CE(\client_bnum_reg[15]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\client_bnum_reg[5]_i_1_n_0 ),
        .Q(client_bnum_reg__0[5]));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg_reg[6] 
       (.C(rx_clk),
        .CE(\client_bnum_reg[15]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\client_bnum_reg[6]_i_1_n_0 ),
        .Q(client_bnum_reg__0[6]));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg_reg[7] 
       (.C(rx_clk),
        .CE(\client_bnum_reg[15]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\client_bnum_reg[7]_i_1_n_0 ),
        .Q(client_bnum_reg__0[7]));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg_reg[8] 
       (.C(rx_clk),
        .CE(\client_bnum_reg[15]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\client_bnum_reg[8]_i_1_n_0 ),
        .Q(client_bnum_reg__0[8]));
  FDCE #(
    .INIT(1'b0)) 
    \client_bnum_reg_reg[9] 
       (.C(rx_clk),
        .CE(\client_bnum_reg[15]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\client_bnum_reg[9]_i_1_n_0 ),
        .Q(client_bnum_reg__0[9]));
  LUT6 #(
    .INIT(64'hEEEEEEEFEEEEEEE0)) 
    client_bnum_vld_i_1
       (.I0(client_bnum_vld_i_2_n_0),
        .I1(client_bnum_vld_i_3_n_0),
        .I2(client_bnum_vld_i_4_n_0),
        .I3(client_bnum_vld_i_5_n_0),
        .I4(client_bnum_vld_i_6_n_0),
        .I5(client_bnum_vld),
        .O(client_bnum_vld_i_1_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    client_bnum_vld_i_10
       (.I0(client_bnum_reg__0[5]),
        .I1(client_bnum_reg__0[4]),
        .I2(client_bnum_reg__0[7]),
        .I3(client_bnum_reg__0[6]),
        .O(client_bnum_vld_i_10_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    client_bnum_vld_i_11
       (.I0(state[1]),
        .I1(reg_conf_rx_en_reg_n_0),
        .O(client_bnum_vld_i_11_n_0));
  LUT3 #(
    .INIT(8'h40)) 
    client_bnum_vld_i_12
       (.I0(state[3]),
        .I1(state[1]),
        .I2(state[2]),
        .O(client_bnum_vld_i_12_n_0));
  LUT6 #(
    .INIT(64'hFFFE000000000000)) 
    client_bnum_vld_i_2
       (.I0(client_bnum_vld_i_7_n_0),
        .I1(client_bnum_vld_i_8_n_0),
        .I2(client_bnum_vld_i_9_n_0),
        .I3(client_bnum_vld_i_10_n_0),
        .I4(state[0]),
        .I5(client_bnum_vld_i_11_n_0),
        .O(client_bnum_vld_i_2_n_0));
  LUT6 #(
    .INIT(64'h5050000050700000)) 
    client_bnum_vld_i_3
       (.I0(state[2]),
        .I1(rxdv4),
        .I2(state[0]),
        .I3(state[1]),
        .I4(reg_conf_rx_en_reg_n_0),
        .I5(client_vld),
        .O(client_bnum_vld_i_3_n_0));
  LUT6 #(
    .INIT(64'hAAAAAAA8FFFFFFFF)) 
    client_bnum_vld_i_4
       (.I0(client_bnum_vld_i_12_n_0),
        .I1(client_bnum_vld_i_10_n_0),
        .I2(client_bnum_vld_i_9_n_0),
        .I3(client_bnum_vld_i_8_n_0),
        .I4(client_bnum_vld_i_7_n_0),
        .I5(reg_conf_rx_en_reg_n_0),
        .O(client_bnum_vld_i_4_n_0));
  LUT6 #(
    .INIT(64'h0000220001002200)) 
    client_bnum_vld_i_5
       (.I0(state[1]),
        .I1(state[3]),
        .I2(client_vld),
        .I3(state[2]),
        .I4(state[0]),
        .I5(rxdv4),
        .O(client_bnum_vld_i_5_n_0));
  LUT5 #(
    .INIT(32'h00040000)) 
    client_bnum_vld_i_6
       (.I0(state[1]),
        .I1(state[3]),
        .I2(rxdv4),
        .I3(state[2]),
        .I4(state[0]),
        .O(client_bnum_vld_i_6_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    client_bnum_vld_i_7
       (.I0(client_bnum_reg__0[9]),
        .I1(client_bnum_reg__0[8]),
        .I2(client_bnum_reg__0[11]),
        .I3(client_bnum_reg__0[10]),
        .O(client_bnum_vld_i_7_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    client_bnum_vld_i_8
       (.I0(client_bnum_reg__0[13]),
        .I1(client_bnum_reg__0[12]),
        .I2(client_bnum_reg__0[15]),
        .I3(client_bnum_reg__0[14]),
        .O(client_bnum_vld_i_8_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    client_bnum_vld_i_9
       (.I0(client_bnum_reg__0[1]),
        .I1(client_bnum_reg__0[0]),
        .I2(client_bnum_reg__0[3]),
        .I3(client_bnum_reg__0[2]),
        .O(client_bnum_vld_i_9_n_0));
  FDCE #(
    .INIT(1'b0)) 
    client_bnum_vld_reg
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(client_bnum_vld_i_1_n_0),
        .Q(client_bnum_vld));
  LUT5 #(
    .INIT(32'hFFFF0020)) 
    \client_ctl[0]_i_1 
       (.I0(\client_ctl[1]_i_2_n_0 ),
        .I1(state[1]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(state[2]),
        .I4(\client_ctl[2]_i_3_n_0 ),
        .O(\client_ctl[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF0008)) 
    \client_ctl[1]_i_1 
       (.I0(\client_ctl[1]_i_2_n_0 ),
        .I1(reg_conf_rx_en_reg_n_0),
        .I2(state[2]),
        .I3(state[0]),
        .I4(\client_ctl[2]_i_3_n_0 ),
        .O(\client_ctl[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \client_ctl[1]_i_2 
       (.I0(reg_conf_rx_no_chk_crc_reg_n_0),
        .I1(rxdv3),
        .I2(rxdv4),
        .O(\client_ctl[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00002AAA)) 
    \client_ctl[2]_i_1 
       (.I0(\client_ctl[2]_i_2_n_0 ),
        .I1(rxdv4),
        .I2(rxdv3),
        .I3(reg_conf_rx_no_chk_crc_reg_n_0),
        .I4(state[2]),
        .I5(\client_ctl[2]_i_3_n_0 ),
        .O(\client_ctl[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \client_ctl[2]_i_2 
       (.I0(reg_conf_rx_en_reg_n_0),
        .I1(state[1]),
        .I2(state[0]),
        .O(\client_ctl[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFEFEFEFEFE)) 
    \client_ctl[2]_i_3 
       (.I0(\client_ctl[2]_i_4_n_0 ),
        .I1(\client_ctl[2]_i_5_n_0 ),
        .I2(\client_ctl[3]_i_8_n_0 ),
        .I3(\client_ctl[2]_i_6_n_0 ),
        .I4(\client_ctl[2]_i_7_n_0 ),
        .I5(client_full),
        .O(\client_ctl[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h4040004040404040)) 
    \client_ctl[2]_i_4 
       (.I0(reg_conf_rx_no_chk_crc_reg_n_0),
        .I1(crc_chk_err),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(state[2]),
        .I4(gmii_rxer),
        .I5(gmii_rxdv),
        .O(\client_ctl[2]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00800000)) 
    \client_ctl[2]_i_5 
       (.I0(reg_conf_rx_en_reg_n_0),
        .I1(first_reg_n_0),
        .I2(state[2]),
        .I3(gmii_rxer),
        .I4(gmii_rxdv),
        .O(\client_ctl[2]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h0800)) 
    \client_ctl[2]_i_6 
       (.I0(reg_conf_rx_en_reg_n_0),
        .I1(state[2]),
        .I2(gmii_rxer),
        .I3(gmii_rxdv),
        .O(\client_ctl[2]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \client_ctl[2]_i_7 
       (.I0(reg_conf_rx_en_reg_n_0),
        .I1(state[2]),
        .I2(rxdv4),
        .I3(rxdv3),
        .I4(reg_conf_rx_no_chk_crc_reg_n_0),
        .O(\client_ctl[2]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0200)) 
    \client_ctl[3]_i_1 
       (.I0(client_vld_i_6_n_0),
        .I1(\client_ctl[3]_i_4_n_0 ),
        .I2(state[0]),
        .I3(rxdv4),
        .I4(\client_ctl[3]_i_5_n_0 ),
        .I5(reg_conf_rx_en),
        .O(\client_ctl[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \client_ctl[3]_i_10 
       (.I0(state[2]),
        .I1(reg_conf_rx_en_reg_n_0),
        .O(\client_ctl[3]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEEEEEEEEEFEEE)) 
    \client_ctl[3]_i_2 
       (.I0(\client_ctl[3]_i_7_n_0 ),
        .I1(\client_ctl[3]_i_8_n_0 ),
        .I2(first_reg_n_0),
        .I3(reg_conf_rx_en_reg_n_0),
        .I4(client_full),
        .I5(\client_ctl[3]_i_9_n_0 ),
        .O(\client_ctl[3]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \client_ctl[3]_i_3 
       (.I0(reset_n),
        .O(\client_ctl[3]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \client_ctl[3]_i_4 
       (.I0(state[1]),
        .I1(state[3]),
        .O(\client_ctl[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00450045004500CF)) 
    \client_ctl[3]_i_5 
       (.I0(state[2]),
        .I1(gmii_rxer),
        .I2(gmii_rxdv),
        .I3(state[3]),
        .I4(state[1]),
        .I5(state[0]),
        .O(\client_ctl[3]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h0001FFFF)) 
    \client_ctl[3]_i_6 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(reg_conf_rx_en_reg_n_0),
        .O(reg_conf_rx_en));
  LUT6 #(
    .INIT(64'h0008880888088808)) 
    \client_ctl[3]_i_7 
       (.I0(client_vld_i_8_n_0),
        .I1(\client_ctl[3]_i_10_n_0 ),
        .I2(crc_chk_err),
        .I3(reg_conf_rx_no_chk_crc_reg_n_0),
        .I4(rxdv4),
        .I5(rxdv3),
        .O(\client_ctl[3]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \client_ctl[3]_i_8 
       (.I0(state[1]),
        .I1(reg_conf_rx_en_reg_n_0),
        .I2(state[2]),
        .I3(state[0]),
        .O(\client_ctl[3]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'hDF)) 
    \client_ctl[3]_i_9 
       (.I0(gmii_rxdv),
        .I1(gmii_rxer),
        .I2(state[2]),
        .O(\client_ctl[3]_i_9_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \client_ctl_reg[0] 
       (.C(rx_clk),
        .CE(\client_ctl[3]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_ctl[0]_i_1_n_0 ),
        .Q(client_ctl[0]));
  FDCE #(
    .INIT(1'b0)) 
    \client_ctl_reg[1] 
       (.C(rx_clk),
        .CE(\client_ctl[3]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_ctl[1]_i_1_n_0 ),
        .Q(client_ctl[1]));
  FDCE #(
    .INIT(1'b0)) 
    \client_ctl_reg[2] 
       (.C(rx_clk),
        .CE(\client_ctl[3]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_ctl[2]_i_1_n_0 ),
        .Q(client_ctl[2]));
  FDCE #(
    .INIT(1'b0)) 
    \client_ctl_reg[3] 
       (.C(rx_clk),
        .CE(\client_ctl[3]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_ctl[3]_i_2_n_0 ),
        .Q(client_ctl[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \client_dat[0]_i_1 
       (.I0(rxd4[0]),
        .I1(reg_conf_rx_en_reg_n_0),
        .O(\client_dat[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \client_dat[10]_i_1 
       (.I0(reg_conf_rx_en_reg_n_0),
        .I1(state[1]),
        .I2(rxd4[2]),
        .O(\client_dat[10]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \client_dat[11]_i_1 
       (.I0(reg_conf_rx_en_reg_n_0),
        .I1(state[1]),
        .I2(rxd4[3]),
        .O(\client_dat[11]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \client_dat[12]_i_1 
       (.I0(reg_conf_rx_en_reg_n_0),
        .I1(state[1]),
        .I2(rxd4[4]),
        .O(\client_dat[12]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \client_dat[13]_i_1 
       (.I0(reg_conf_rx_en_reg_n_0),
        .I1(state[1]),
        .I2(rxd4[5]),
        .O(\client_dat[13]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \client_dat[14]_i_1 
       (.I0(reg_conf_rx_en_reg_n_0),
        .I1(state[1]),
        .I2(rxd4[6]),
        .O(\client_dat[14]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0006FFFF)) 
    \client_dat[15]_i_1 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(state[3]),
        .I4(reg_conf_rx_en_reg_n_0),
        .O(\client_dat[15]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \client_dat[15]_i_2 
       (.I0(reg_conf_rx_en_reg_n_0),
        .I1(state[1]),
        .I2(rxd4[7]),
        .O(\client_dat[15]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \client_dat[16]_i_1 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(rxd4[0]),
        .O(\client_dat[16]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \client_dat[17]_i_1 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(rxd4[1]),
        .O(\client_dat[17]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \client_dat[18]_i_1 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(rxd4[2]),
        .O(\client_dat[18]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \client_dat[19]_i_1 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(rxd4[3]),
        .O(\client_dat[19]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \client_dat[1]_i_1 
       (.I0(reg_conf_rx_en_reg_n_0),
        .I1(rxd4[1]),
        .O(\client_dat[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \client_dat[20]_i_1 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(rxd4[4]),
        .O(\client_dat[20]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \client_dat[21]_i_1 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(rxd4[5]),
        .O(\client_dat[21]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \client_dat[22]_i_1 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(rxd4[6]),
        .O(\client_dat[22]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h55555F5D)) 
    \client_dat[23]_i_1 
       (.I0(reg_conf_rx_en_reg_n_0),
        .I1(state[1]),
        .I2(state[3]),
        .I3(state[0]),
        .I4(state[2]),
        .O(\client_dat[23]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \client_dat[23]_i_2 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(rxd4[7]),
        .O(\client_dat[23]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \client_dat[24]_i_1 
       (.I0(reg_conf_rx_en_reg_n_0),
        .I1(state[2]),
        .I2(rxd4[0]),
        .O(\client_dat[24]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \client_dat[25]_i_1 
       (.I0(reg_conf_rx_en_reg_n_0),
        .I1(state[2]),
        .I2(rxd4[1]),
        .O(\client_dat[25]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \client_dat[26]_i_1 
       (.I0(reg_conf_rx_en_reg_n_0),
        .I1(state[2]),
        .I2(rxd4[2]),
        .O(\client_dat[26]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \client_dat[27]_i_1 
       (.I0(reg_conf_rx_en_reg_n_0),
        .I1(state[2]),
        .I2(rxd4[3]),
        .O(\client_dat[27]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \client_dat[28]_i_1 
       (.I0(reg_conf_rx_en_reg_n_0),
        .I1(state[2]),
        .I2(rxd4[4]),
        .O(\client_dat[28]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \client_dat[29]_i_1 
       (.I0(reg_conf_rx_en_reg_n_0),
        .I1(state[2]),
        .I2(rxd4[5]),
        .O(\client_dat[29]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \client_dat[2]_i_1 
       (.I0(rxd4[2]),
        .I1(reg_conf_rx_en_reg_n_0),
        .O(\client_dat[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \client_dat[30]_i_1 
       (.I0(reg_conf_rx_en_reg_n_0),
        .I1(state[2]),
        .I2(rxd4[6]),
        .O(\client_dat[30]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h55555F7D)) 
    \client_dat[31]_i_1 
       (.I0(reg_conf_rx_en_reg_n_0),
        .I1(state[1]),
        .I2(state[2]),
        .I3(state[0]),
        .I4(state[3]),
        .O(\client_dat[31]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \client_dat[31]_i_2 
       (.I0(reg_conf_rx_en_reg_n_0),
        .I1(state[2]),
        .I2(rxd4[7]),
        .O(\client_dat[31]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \client_dat[3]_i_1 
       (.I0(rxd4[3]),
        .I1(reg_conf_rx_en_reg_n_0),
        .O(\client_dat[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \client_dat[4]_i_1 
       (.I0(rxd4[4]),
        .I1(reg_conf_rx_en_reg_n_0),
        .O(\client_dat[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \client_dat[5]_i_1 
       (.I0(rxd4[5]),
        .I1(reg_conf_rx_en_reg_n_0),
        .O(\client_dat[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \client_dat[6]_i_1 
       (.I0(reg_conf_rx_en_reg_n_0),
        .I1(rxd4[6]),
        .O(\client_dat[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0010FFFF)) 
    \client_dat[7]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(reg_conf_rx_en_reg_n_0),
        .O(\client_dat[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \client_dat[7]_i_2 
       (.I0(reg_conf_rx_en_reg_n_0),
        .I1(rxd4[7]),
        .O(\client_dat[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \client_dat[8]_i_1 
       (.I0(reg_conf_rx_en_reg_n_0),
        .I1(state[1]),
        .I2(rxd4[0]),
        .O(\client_dat[8]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \client_dat[9]_i_1 
       (.I0(reg_conf_rx_en_reg_n_0),
        .I1(state[1]),
        .I2(rxd4[1]),
        .O(\client_dat[9]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[0] 
       (.C(rx_clk),
        .CE(\client_dat[7]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[0]_i_1_n_0 ),
        .Q(client_dat[0]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[10] 
       (.C(rx_clk),
        .CE(\client_dat[15]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[10]_i_1_n_0 ),
        .Q(client_dat[10]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[11] 
       (.C(rx_clk),
        .CE(\client_dat[15]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[11]_i_1_n_0 ),
        .Q(client_dat[11]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[12] 
       (.C(rx_clk),
        .CE(\client_dat[15]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[12]_i_1_n_0 ),
        .Q(client_dat[12]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[13] 
       (.C(rx_clk),
        .CE(\client_dat[15]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[13]_i_1_n_0 ),
        .Q(client_dat[13]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[14] 
       (.C(rx_clk),
        .CE(\client_dat[15]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[14]_i_1_n_0 ),
        .Q(client_dat[14]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[15] 
       (.C(rx_clk),
        .CE(\client_dat[15]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[15]_i_2_n_0 ),
        .Q(client_dat[15]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[16] 
       (.C(rx_clk),
        .CE(\client_dat[23]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[16]_i_1_n_0 ),
        .Q(client_dat[16]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[17] 
       (.C(rx_clk),
        .CE(\client_dat[23]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[17]_i_1_n_0 ),
        .Q(client_dat[17]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[18] 
       (.C(rx_clk),
        .CE(\client_dat[23]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[18]_i_1_n_0 ),
        .Q(client_dat[18]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[19] 
       (.C(rx_clk),
        .CE(\client_dat[23]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[19]_i_1_n_0 ),
        .Q(client_dat[19]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[1] 
       (.C(rx_clk),
        .CE(\client_dat[7]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[1]_i_1_n_0 ),
        .Q(client_dat[1]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[20] 
       (.C(rx_clk),
        .CE(\client_dat[23]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[20]_i_1_n_0 ),
        .Q(client_dat[20]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[21] 
       (.C(rx_clk),
        .CE(\client_dat[23]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[21]_i_1_n_0 ),
        .Q(client_dat[21]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[22] 
       (.C(rx_clk),
        .CE(\client_dat[23]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[22]_i_1_n_0 ),
        .Q(client_dat[22]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[23] 
       (.C(rx_clk),
        .CE(\client_dat[23]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[23]_i_2_n_0 ),
        .Q(client_dat[23]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[24] 
       (.C(rx_clk),
        .CE(\client_dat[31]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[24]_i_1_n_0 ),
        .Q(client_dat[24]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[25] 
       (.C(rx_clk),
        .CE(\client_dat[31]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[25]_i_1_n_0 ),
        .Q(client_dat[25]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[26] 
       (.C(rx_clk),
        .CE(\client_dat[31]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[26]_i_1_n_0 ),
        .Q(client_dat[26]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[27] 
       (.C(rx_clk),
        .CE(\client_dat[31]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[27]_i_1_n_0 ),
        .Q(client_dat[27]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[28] 
       (.C(rx_clk),
        .CE(\client_dat[31]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[28]_i_1_n_0 ),
        .Q(client_dat[28]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[29] 
       (.C(rx_clk),
        .CE(\client_dat[31]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[29]_i_1_n_0 ),
        .Q(client_dat[29]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[2] 
       (.C(rx_clk),
        .CE(\client_dat[7]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[2]_i_1_n_0 ),
        .Q(client_dat[2]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[30] 
       (.C(rx_clk),
        .CE(\client_dat[31]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[30]_i_1_n_0 ),
        .Q(client_dat[30]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[31] 
       (.C(rx_clk),
        .CE(\client_dat[31]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[31]_i_2_n_0 ),
        .Q(client_dat[31]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[3] 
       (.C(rx_clk),
        .CE(\client_dat[7]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[3]_i_1_n_0 ),
        .Q(client_dat[3]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[4] 
       (.C(rx_clk),
        .CE(\client_dat[7]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[4]_i_1_n_0 ),
        .Q(client_dat[4]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[5] 
       (.C(rx_clk),
        .CE(\client_dat[7]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[5]_i_1_n_0 ),
        .Q(client_dat[5]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[6] 
       (.C(rx_clk),
        .CE(\client_dat[7]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[6]_i_1_n_0 ),
        .Q(client_dat[6]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[7] 
       (.C(rx_clk),
        .CE(\client_dat[7]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[7]_i_2_n_0 ),
        .Q(client_dat[7]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[8] 
       (.C(rx_clk),
        .CE(\client_dat[15]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[8]_i_1_n_0 ),
        .Q(client_dat[8]));
  FDCE #(
    .INIT(1'b0)) 
    \client_dat_reg[9] 
       (.C(rx_clk),
        .CE(\client_dat[15]_i_1_n_0 ),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(\client_dat[9]_i_1_n_0 ),
        .Q(client_dat[9]));
  LUT5 #(
    .INIT(32'hAAABAAA8)) 
    client_goodframe_i_1
       (.I0(client_goodframe1_out),
        .I1(client_bnum_vld_i_4_n_0),
        .I2(client_goodframe_i_3_n_0),
        .I3(client_goodframe_i_4_n_0),
        .I4(client_goodframe),
        .O(client_goodframe_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFD0FFF0FFF0FFF0)) 
    client_goodframe_i_2
       (.I0(client_ctl[0]),
        .I1(client_ctl[3]),
        .I2(client_goodframe_i_5_n_0),
        .I3(client_goodframe_i_6_n_0),
        .I4(client_ctl[1]),
        .I5(client_ctl[2]),
        .O(client_goodframe1_out));
  LUT5 #(
    .INIT(32'h00000008)) 
    client_goodframe_i_3
       (.I0(state[0]),
        .I1(state[3]),
        .I2(state[2]),
        .I3(rxdv4),
        .I4(state[1]),
        .O(client_goodframe_i_3_n_0));
  LUT4 #(
    .INIT(16'h0440)) 
    client_goodframe_i_4
       (.I0(state[3]),
        .I1(state[2]),
        .I2(state[1]),
        .I3(state[0]),
        .O(client_goodframe_i_4_n_0));
  LUT5 #(
    .INIT(32'h00101010)) 
    client_goodframe_i_5
       (.I0(state[1]),
        .I1(state[3]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(client_full),
        .I4(client_rdy),
        .O(client_goodframe_i_5_n_0));
  LUT4 #(
    .INIT(16'h0800)) 
    client_goodframe_i_6
       (.I0(state[3]),
        .I1(reg_conf_rx_en_reg_n_0),
        .I2(state[1]),
        .I3(rxdv4),
        .O(client_goodframe_i_6_n_0));
  FDCE #(
    .INIT(1'b0)) 
    client_goodframe_reg
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(\client_ctl[3]_i_3_n_0 ),
        .D(client_goodframe_i_1_n_0),
        .Q(client_goodframe));
  LUT6 #(
    .INIT(64'hAAAAABBBAAAAA888)) 
    client_vld_i_1
       (.I0(client_vld13_out),
        .I1(client_vld_i_4_n_0),
        .I2(client_vld_i_5_n_0),
        .I3(client_vld_i_6_n_0),
        .I4(client_vld_i_7_n_0),
        .I5(client_vld),
        .O(client_vld_i_1_n_0));
  LUT4 #(
    .INIT(16'h0004)) 
    client_vld_i_10
       (.I0(state[0]),
        .I1(state[2]),
        .I2(state[3]),
        .I3(state[1]),
        .O(client_vld_i_10_n_0));
  LUT3 #(
    .INIT(8'h04)) 
    client_vld_i_11
       (.I0(state[3]),
        .I1(state[1]),
        .I2(state[2]),
        .O(client_vld_i_11_n_0));
  LUT4 #(
    .INIT(16'h0800)) 
    client_vld_i_12
       (.I0(state[2]),
        .I1(state[1]),
        .I2(state[3]),
        .I3(state[0]),
        .O(client_vld_i_12_n_0));
  LUT4 #(
    .INIT(16'h04FF)) 
    client_vld_i_13
       (.I0(state[1]),
        .I1(state[0]),
        .I2(state[2]),
        .I3(reg_conf_rx_en_reg_n_0),
        .O(client_vld_i_13_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF7FF)) 
    client_vld_i_14
       (.I0(client_bnum[1]),
        .I1(client_bnum[2]),
        .I2(reg_conf_rx_promiscuous_reg_n_0),
        .I3(client_bnum[0]),
        .I4(mac_broadcast),
        .I5(mac_dst_hit),
        .O(client_vld_i_14_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    client_vld_i_15
       (.I0(client_bnum[13]),
        .I1(client_bnum[12]),
        .I2(client_bnum[15]),
        .I3(client_bnum[14]),
        .O(client_vld_i_15_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    client_vld_i_16
       (.I0(client_bnum[9]),
        .I1(client_bnum[8]),
        .I2(client_bnum[11]),
        .I3(client_bnum[10]),
        .O(client_vld_i_16_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    client_vld_i_17
       (.I0(client_bnum[5]),
        .I1(client_bnum[4]),
        .I2(client_bnum[7]),
        .I3(client_bnum[6]),
        .O(client_vld_i_17_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    client_vld_i_2
       (.I0(reset_n),
        .O(client_vld_i_2_n_0));
  LUT6 #(
    .INIT(64'hFB00BB0033003300)) 
    client_vld_i_3
       (.I0(state[1]),
        .I1(state[0]),
        .I2(\client_ctl[1]_i_2_n_0 ),
        .I3(reg_conf_rx_en_reg_n_0),
        .I4(client_vld_i_8_n_0),
        .I5(client_vld_i_9_n_0),
        .O(client_vld13_out));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEA00)) 
    client_vld_i_4
       (.I0(client_vld_i_10_n_0),
        .I1(\client_ctl[1]_i_2_n_0 ),
        .I2(client_vld_i_11_n_0),
        .I3(client_vld_i_8_n_0),
        .I4(client_vld_i_12_n_0),
        .I5(client_vld_i_13_n_0),
        .O(client_vld_i_4_n_0));
  LUT5 #(
    .INIT(32'h01000000)) 
    client_vld_i_5
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(rxdv4),
        .I4(state[2]),
        .O(client_vld_i_5_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    client_vld_i_6
       (.I0(client_vld_i_14_n_0),
        .I1(client_bnum[3]),
        .I2(client_vld_i_15_n_0),
        .I3(client_vld_i_16_n_0),
        .I4(client_vld_i_17_n_0),
        .O(client_vld_i_6_n_0));
  LUT4 #(
    .INIT(16'h0008)) 
    client_vld_i_7
       (.I0(client_rdy),
        .I1(state[0]),
        .I2(state[3]),
        .I3(state[1]),
        .O(client_vld_i_7_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    client_vld_i_8
       (.I0(gmii_rxer),
        .I1(gmii_rxdv),
        .O(client_vld_i_8_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    client_vld_i_9
       (.I0(state[2]),
        .I1(state[3]),
        .O(client_vld_i_9_n_0));
  FDCE #(
    .INIT(1'b0)) 
    client_vld_reg
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(client_vld_i_1_n_0),
        .Q(client_vld));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    crc_chk_err_inferred_i_1
       (.I0(crc_chk_err_inferred_i_2_n_0),
        .I1(crc_chk_err_inferred_i_3_n_0),
        .I2(crc_chk_err_inferred_i_4_n_0),
        .I3(crc_chk_err_inferred_i_5_n_0),
        .I4(crc_chk_err_inferred_i_6_n_0),
        .I5(crc_chk_err_inferred_i_7_n_0),
        .O(crc_chk_err));
  LUT6 #(
    .INIT(64'hFFFFFFFFBFFFFFFF)) 
    crc_chk_err_inferred_i_2
       (.I0(p_28_in),
        .I1(p_27_in),
        .I2(\crc_reg_reg_n_0_[10] ),
        .I3(p_26_in),
        .I4(p_23_in),
        .I5(p_24_in),
        .O(crc_chk_err_inferred_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFBFFFFFFFFFFFF)) 
    crc_chk_err_inferred_i_3
       (.I0(p_34_in),
        .I1(\crc_reg_reg_n_0_[18] ),
        .I2(p_31_in),
        .I3(p_32_in),
        .I4(p_30_in),
        .I5(p_29_in),
        .O(crc_chk_err_inferred_i_3_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFF7FFFF)) 
    crc_chk_err_inferred_i_4
       (.I0(\crc_reg_reg_n_0_[30] ),
        .I1(\crc_reg_reg_n_0_[31] ),
        .I2(p_12_in),
        .I3(p_14_in),
        .I4(p_8_in),
        .I5(p_10_in),
        .O(crc_chk_err_inferred_i_4_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF7)) 
    crc_chk_err_inferred_i_5
       (.I0(\crc_reg_reg_n_0_[24] ),
        .I1(p_4_in),
        .I2(p_37_in),
        .I3(\crc_reg_reg_n_0_[23] ),
        .I4(p_36_in),
        .I5(p_35_in),
        .O(crc_chk_err_inferred_i_5_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    crc_chk_err_inferred_i_6
       (.I0(\crc_reg_reg_n_0_[0] ),
        .I1(p_16_in),
        .O(crc_chk_err_inferred_i_6_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFBFFFFFFF)) 
    crc_chk_err_inferred_i_7
       (.I0(p_22_in),
        .I1(p_21_in),
        .I2(p_19_in),
        .I3(p_20_in),
        .I4(p_18_in),
        .I5(p_17_in),
        .O(crc_chk_err_inferred_i_7_n_0));
  LUT3 #(
    .INIT(8'h10)) 
    crc_chk_vld_inferred_i_1
       (.I0(gmii_rxdv),
        .I1(state_crc[1]),
        .I2(state_crc[0]),
        .O(crc_chk_vld));
  LUT4 #(
    .INIT(16'hB800)) 
    crc_err_i_1
       (.I0(crc_chk_err),
        .I1(crc_chk_vld),
        .I2(crc_err),
        .I3(reg_conf_rx_en_reg_n_0),
        .O(crc_err0_out));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    crc_err_reg
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(crc_err0_out),
        .Q(crc_err));
  LUT5 #(
    .INIT(32'hBEEBEBBE)) 
    \crc_reg[0]_i_1 
       (.I0(\crc_reg[30]_i_2_n_0 ),
        .I1(\crc_reg_reg_n_0_[24] ),
        .I2(gmii_rxd[7]),
        .I3(gmii_rxd[1]),
        .I4(\crc_reg_reg_n_0_[30] ),
        .O(\crc_reg[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEBBEBEEBBEEBEBBE)) 
    \crc_reg[10]_i_1 
       (.I0(\crc_reg[30]_i_2_n_0 ),
        .I1(\crc_reg[28]_i_2_n_0 ),
        .I2(\crc_reg[29]_i_3_n_0 ),
        .I3(\crc_reg[23]_i_2_n_0 ),
        .I4(\crc_reg[27]_i_2_n_0 ),
        .I5(p_17_in),
        .O(\crc_reg[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEBBEBEEBBEEBEBBE)) 
    \crc_reg[11]_i_1 
       (.I0(\crc_reg[30]_i_2_n_0 ),
        .I1(\crc_reg[11]_i_2_n_0 ),
        .I2(\crc_reg[23]_i_2_n_0 ),
        .I3(p_18_in),
        .I4(gmii_rxd[6]),
        .I5(p_4_in),
        .O(\crc_reg[11]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \crc_reg[11]_i_2 
       (.I0(gmii_rxd[3]),
        .I1(p_12_in),
        .I2(p_10_in),
        .I3(gmii_rxd[4]),
        .O(\crc_reg[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hEBBEBEEBBEEBEBBE)) 
    \crc_reg[12]_i_1 
       (.I0(\crc_reg[30]_i_2_n_0 ),
        .I1(\crc_reg[29]_i_2_n_0 ),
        .I2(\crc_reg[23]_i_2_n_0 ),
        .I3(\crc_reg[17]_i_2_n_0 ),
        .I4(p_19_in),
        .I5(\crc_reg[12]_i_2_n_0 ),
        .O(\crc_reg[12]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \crc_reg[12]_i_2 
       (.I0(gmii_rxd[5]),
        .I1(p_8_in),
        .I2(gmii_rxd[3]),
        .I3(p_12_in),
        .O(\crc_reg[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hEBBEBEEBBEEBEBBE)) 
    \crc_reg[13]_i_1 
       (.I0(\crc_reg[30]_i_2_n_0 ),
        .I1(\crc_reg[13]_i_2_n_0 ),
        .I2(p_20_in),
        .I3(\crc_reg[29]_i_2_n_0 ),
        .I4(gmii_rxd[4]),
        .I5(p_10_in),
        .O(\crc_reg[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[13]_i_2 
       (.I0(p_14_in),
        .I1(gmii_rxd[2]),
        .I2(\crc_reg_reg_n_0_[31] ),
        .I3(gmii_rxd[0]),
        .I4(\crc_reg[28]_i_2_n_0 ),
        .I5(\crc_reg[27]_i_4_n_0 ),
        .O(\crc_reg[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hEBBEBEEBBEEBEBBE)) 
    \crc_reg[14]_i_1 
       (.I0(\crc_reg[30]_i_2_n_0 ),
        .I1(\crc_reg[29]_i_2_n_0 ),
        .I2(\crc_reg[29]_i_3_n_0 ),
        .I3(\crc_reg[14]_i_2_n_0 ),
        .I4(p_21_in),
        .I5(\crc_reg[27]_i_3_n_0 ),
        .O(\crc_reg[14]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \crc_reg[14]_i_2 
       (.I0(gmii_rxd[0]),
        .I1(\crc_reg_reg_n_0_[31] ),
        .I2(gmii_rxd[5]),
        .I3(p_8_in),
        .O(\crc_reg[14]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hEBBEBEEBBEEBEBBE)) 
    \crc_reg[15]_i_1 
       (.I0(\crc_reg[30]_i_2_n_0 ),
        .I1(gmii_rxd[4]),
        .I2(p_10_in),
        .I3(\crc_reg[27]_i_3_n_0 ),
        .I4(\crc_reg[15]_i_2_n_0 ),
        .I5(p_22_in),
        .O(\crc_reg[15]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \crc_reg[15]_i_2 
       (.I0(gmii_rxd[0]),
        .I1(\crc_reg_reg_n_0_[31] ),
        .I2(gmii_rxd[2]),
        .I3(p_14_in),
        .O(\crc_reg[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hEBBEBEEBBEEBEBBE)) 
    \crc_reg[16]_i_1 
       (.I0(\crc_reg[30]_i_2_n_0 ),
        .I1(gmii_rxd[2]),
        .I2(p_14_in),
        .I3(\crc_reg[23]_i_2_n_0 ),
        .I4(p_23_in),
        .I5(\crc_reg[27]_i_3_n_0 ),
        .O(\crc_reg[16]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBEEBEBBE)) 
    \crc_reg[17]_i_1 
       (.I0(\crc_reg[30]_i_2_n_0 ),
        .I1(\crc_reg[17]_i_2_n_0 ),
        .I2(p_24_in),
        .I3(\crc_reg_reg_n_0_[30] ),
        .I4(gmii_rxd[1]),
        .O(\crc_reg[17]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \crc_reg[17]_i_2 
       (.I0(gmii_rxd[2]),
        .I1(p_14_in),
        .I2(gmii_rxd[6]),
        .I3(p_4_in),
        .O(\crc_reg[17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hEBBEBEEBBEEBEBBE)) 
    \crc_reg[18]_i_1 
       (.I0(\crc_reg[30]_i_2_n_0 ),
        .I1(gmii_rxd[0]),
        .I2(\crc_reg_reg_n_0_[31] ),
        .I3(\crc_reg[28]_i_2_n_0 ),
        .I4(\crc_reg_reg_n_0_[10] ),
        .I5(\crc_reg[29]_i_2_n_0 ),
        .O(\crc_reg[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEBBEBEEBBEEBEBBE)) 
    \crc_reg[19]_i_1 
       (.I0(\crc_reg[30]_i_2_n_0 ),
        .I1(p_10_in),
        .I2(gmii_rxd[4]),
        .I3(gmii_rxd[0]),
        .I4(\crc_reg_reg_n_0_[31] ),
        .I5(p_26_in),
        .O(\crc_reg[19]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEBBEBEEBBEEBEBBE)) 
    \crc_reg[1]_i_1 
       (.I0(\crc_reg[30]_i_2_n_0 ),
        .I1(gmii_rxd[6]),
        .I2(p_4_in),
        .I3(gmii_rxd[7]),
        .I4(\crc_reg_reg_n_0_[24] ),
        .I5(\crc_reg[5]_i_2_n_0 ),
        .O(\crc_reg[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFDFDFFFDFFFFFDF)) 
    \crc_reg[20]_i_1 
       (.I0(state_crc[0]),
        .I1(state_crc[1]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(p_12_in),
        .I4(gmii_rxd[3]),
        .I5(p_27_in),
        .O(\crc_reg[20]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFDFDFFFDFFFFFDF)) 
    \crc_reg[21]_i_1 
       (.I0(state_crc[0]),
        .I1(state_crc[1]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(p_14_in),
        .I4(gmii_rxd[2]),
        .I5(p_28_in),
        .O(\crc_reg[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFDFDFFFDFFFFFDF)) 
    \crc_reg[22]_i_1 
       (.I0(state_crc[0]),
        .I1(state_crc[1]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\crc_reg_reg_n_0_[24] ),
        .I4(gmii_rxd[7]),
        .I5(p_29_in),
        .O(\crc_reg[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEBBEBEEBBEEBEBBE)) 
    \crc_reg[23]_i_1 
       (.I0(\crc_reg[30]_i_2_n_0 ),
        .I1(\crc_reg[29]_i_2_n_0 ),
        .I2(gmii_rxd[6]),
        .I3(p_4_in),
        .I4(p_30_in),
        .I5(\crc_reg[23]_i_2_n_0 ),
        .O(\crc_reg[23]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[23]_i_2 
       (.I0(\crc_reg_reg_n_0_[24] ),
        .I1(gmii_rxd[7]),
        .O(\crc_reg[23]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hEBBEBEEBBEEBEBBE)) 
    \crc_reg[24]_i_1 
       (.I0(\crc_reg[30]_i_2_n_0 ),
        .I1(\crc_reg[27]_i_4_n_0 ),
        .I2(\crc_reg[28]_i_2_n_0 ),
        .I3(p_31_in),
        .I4(gmii_rxd[0]),
        .I5(\crc_reg_reg_n_0_[31] ),
        .O(\crc_reg[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEBBEBEEBBEEBEBBE)) 
    \crc_reg[25]_i_1 
       (.I0(\crc_reg[30]_i_2_n_0 ),
        .I1(p_10_in),
        .I2(gmii_rxd[4]),
        .I3(gmii_rxd[5]),
        .I4(p_8_in),
        .I5(p_32_in),
        .O(\crc_reg[25]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEBBEBEEBBEEBEBBE)) 
    \crc_reg[26]_i_1 
       (.I0(\crc_reg[30]_i_2_n_0 ),
        .I1(gmii_rxd[4]),
        .I2(p_10_in),
        .I3(\crc_reg[27]_i_3_n_0 ),
        .I4(func_crc32_d8_return),
        .I5(\crc_reg_reg_n_0_[18] ),
        .O(\crc_reg[26]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \crc_reg[26]_i_2 
       (.I0(\crc_reg_reg_n_0_[30] ),
        .I1(gmii_rxd[1]),
        .I2(gmii_rxd[7]),
        .I3(\crc_reg_reg_n_0_[24] ),
        .O(func_crc32_d8_return));
  LUT6 #(
    .INIT(64'hEBBEBEEBBEEBEBBE)) 
    \crc_reg[27]_i_1 
       (.I0(\crc_reg[30]_i_2_n_0 ),
        .I1(\crc_reg[27]_i_2_n_0 ),
        .I2(\crc_reg[27]_i_3_n_0 ),
        .I3(\crc_reg[27]_i_4_n_0 ),
        .I4(\crc_reg[27]_i_5_n_0 ),
        .I5(p_34_in),
        .O(\crc_reg[27]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[27]_i_2 
       (.I0(p_14_in),
        .I1(gmii_rxd[2]),
        .O(\crc_reg[27]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[27]_i_3 
       (.I0(p_12_in),
        .I1(gmii_rxd[3]),
        .O(\crc_reg[27]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[27]_i_4 
       (.I0(p_4_in),
        .I1(gmii_rxd[6]),
        .O(\crc_reg[27]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[27]_i_5 
       (.I0(\crc_reg_reg_n_0_[31] ),
        .I1(gmii_rxd[0]),
        .O(\crc_reg[27]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hEBBEBEEBBEEBEBBE)) 
    \crc_reg[28]_i_1 
       (.I0(\crc_reg[30]_i_2_n_0 ),
        .I1(gmii_rxd[2]),
        .I2(p_14_in),
        .I3(\crc_reg[29]_i_2_n_0 ),
        .I4(p_35_in),
        .I5(\crc_reg[28]_i_2_n_0 ),
        .O(\crc_reg[28]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[28]_i_2 
       (.I0(p_8_in),
        .I1(gmii_rxd[5]),
        .O(\crc_reg[28]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hEBBEBEEBBEEBEBBE)) 
    \crc_reg[29]_i_1 
       (.I0(\crc_reg[30]_i_2_n_0 ),
        .I1(\crc_reg[29]_i_2_n_0 ),
        .I2(gmii_rxd[0]),
        .I3(\crc_reg_reg_n_0_[31] ),
        .I4(p_36_in),
        .I5(\crc_reg[29]_i_3_n_0 ),
        .O(\crc_reg[29]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[29]_i_2 
       (.I0(gmii_rxd[1]),
        .I1(\crc_reg_reg_n_0_[30] ),
        .O(\crc_reg[29]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[29]_i_3 
       (.I0(gmii_rxd[4]),
        .I1(p_10_in),
        .O(\crc_reg[29]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEBBEBEEBBEEBEBBE)) 
    \crc_reg[2]_i_1 
       (.I0(\crc_reg[30]_i_2_n_0 ),
        .I1(\crc_reg[5]_i_2_n_0 ),
        .I2(\crc_reg[23]_i_2_n_0 ),
        .I3(p_4_in),
        .I4(gmii_rxd[6]),
        .I5(\crc_reg[28]_i_2_n_0 ),
        .O(\crc_reg[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEBBEBEEBBEEBEBBE)) 
    \crc_reg[30]_i_1 
       (.I0(\crc_reg[30]_i_2_n_0 ),
        .I1(gmii_rxd[3]),
        .I2(p_12_in),
        .I3(gmii_rxd[0]),
        .I4(\crc_reg_reg_n_0_[31] ),
        .I5(p_37_in),
        .O(\crc_reg[30]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hDF)) 
    \crc_reg[30]_i_2 
       (.I0(reg_conf_rx_en_reg_n_0),
        .I1(state_crc[1]),
        .I2(state_crc[0]),
        .O(\crc_reg[30]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFDFDFFFDFFFFFDF)) 
    \crc_reg[31]_i_1 
       (.I0(state_crc[0]),
        .I1(state_crc[1]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(p_14_in),
        .I4(gmii_rxd[2]),
        .I5(\crc_reg_reg_n_0_[23] ),
        .O(\crc_reg[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEBBEBEEBBEEBEBBE)) 
    \crc_reg[3]_i_1 
       (.I0(\crc_reg[30]_i_2_n_0 ),
        .I1(\crc_reg[3]_i_2_n_0 ),
        .I2(p_10_in),
        .I3(gmii_rxd[4]),
        .I4(gmii_rxd[0]),
        .I5(\crc_reg_reg_n_0_[31] ),
        .O(\crc_reg[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \crc_reg[3]_i_2 
       (.I0(gmii_rxd[6]),
        .I1(p_4_in),
        .I2(gmii_rxd[5]),
        .I3(p_8_in),
        .O(\crc_reg[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hEBBEBEEBBEEBEBBE)) 
    \crc_reg[4]_i_1 
       (.I0(\crc_reg[30]_i_2_n_0 ),
        .I1(\crc_reg[27]_i_3_n_0 ),
        .I2(\crc_reg[29]_i_3_n_0 ),
        .I3(func_crc32_d8_return),
        .I4(p_8_in),
        .I5(gmii_rxd[5]),
        .O(\crc_reg[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEBBEBEEBBEEBEBBE)) 
    \crc_reg[5]_i_1 
       (.I0(\crc_reg[30]_i_2_n_0 ),
        .I1(\crc_reg[5]_i_2_n_0 ),
        .I2(\crc_reg[17]_i_2_n_0 ),
        .I3(\crc_reg[29]_i_3_n_0 ),
        .I4(\crc_reg[23]_i_2_n_0 ),
        .I5(\crc_reg[27]_i_3_n_0 ),
        .O(\crc_reg[5]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \crc_reg[5]_i_2 
       (.I0(\crc_reg_reg_n_0_[30] ),
        .I1(gmii_rxd[1]),
        .I2(gmii_rxd[0]),
        .I3(\crc_reg_reg_n_0_[31] ),
        .O(\crc_reg[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hEBBEBEEBBEEBEBBE)) 
    \crc_reg[6]_i_1 
       (.I0(\crc_reg[30]_i_2_n_0 ),
        .I1(\crc_reg[13]_i_2_n_0 ),
        .I2(gmii_rxd[3]),
        .I3(p_12_in),
        .I4(\crc_reg_reg_n_0_[30] ),
        .I5(gmii_rxd[1]),
        .O(\crc_reg[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEBBEBEEBBEEBEBBE)) 
    \crc_reg[7]_i_1 
       (.I0(\crc_reg[30]_i_2_n_0 ),
        .I1(\crc_reg[23]_i_2_n_0 ),
        .I2(\crc_reg[29]_i_3_n_0 ),
        .I3(\crc_reg[15]_i_2_n_0 ),
        .I4(p_8_in),
        .I5(gmii_rxd[5]),
        .O(\crc_reg[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEBBEBEEBBEEBEBBE)) 
    \crc_reg[8]_i_1 
       (.I0(\crc_reg[30]_i_2_n_0 ),
        .I1(\crc_reg[11]_i_2_n_0 ),
        .I2(\crc_reg[23]_i_2_n_0 ),
        .I3(\crc_reg_reg_n_0_[0] ),
        .I4(gmii_rxd[6]),
        .I5(p_4_in),
        .O(\crc_reg[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEBBEBEEBBEEBEBBE)) 
    \crc_reg[9]_i_1 
       (.I0(\crc_reg[30]_i_2_n_0 ),
        .I1(\crc_reg[27]_i_3_n_0 ),
        .I2(p_8_in),
        .I3(gmii_rxd[5]),
        .I4(\crc_reg[17]_i_2_n_0 ),
        .I5(p_16_in),
        .O(\crc_reg[9]_i_1_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[0] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[0]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(\crc_reg_reg_n_0_[0] ));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[10] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[10]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(\crc_reg_reg_n_0_[10] ));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[11] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[11]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(p_26_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[12] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[12]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(p_27_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[13] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[13]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(p_28_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[14] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[14]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(p_29_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[15] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[15]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(p_30_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[16] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[16]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(p_31_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[17] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[17]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(p_32_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[18] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[18]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(\crc_reg_reg_n_0_[18] ));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[19] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[19]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(p_34_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[1] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[1]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(p_16_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[20] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[20]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(p_35_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[21] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[21]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(p_36_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[22] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[22]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(p_37_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[23] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[23]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(\crc_reg_reg_n_0_[23] ));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[24] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[24]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(\crc_reg_reg_n_0_[24] ));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[25] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[25]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(p_4_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[26] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[26]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(p_8_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[27] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[27]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(p_10_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[28] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[28]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(p_12_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[29] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[29]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(p_14_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[2] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[2]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(p_17_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[30] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[30]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(\crc_reg_reg_n_0_[30] ));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[31] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[31]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(\crc_reg_reg_n_0_[31] ));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[3] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[3]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(p_18_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[4] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[4]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(p_19_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[5] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[5]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(p_20_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[6] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[6]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(p_21_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[7] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[7]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(p_22_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[8] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[8]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(p_23_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[9] 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\crc_reg[9]_i_1_n_0 ),
        .PRE(\client_bnum[8]_i_2_n_0 ),
        .Q(p_24_in));
  LUT6 #(
    .INIT(64'hAABFAAAAAA80AAAA)) 
    first_i_1
       (.I0(first3_out),
        .I1(first_i_3_n_0),
        .I2(client_vld_i_6_n_0),
        .I3(first_i_4_n_0),
        .I4(reg_conf_rx_en_reg_n_0),
        .I5(first_reg_n_0),
        .O(first_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000004000000000)) 
    first_i_2
       (.I0(state[2]),
        .I1(reg_conf_rx_en_reg_n_0),
        .I2(rxdv4),
        .I3(first_i_5_n_0),
        .I4(\client_bnum[15]_i_10_n_0 ),
        .I5(rxd4[7]),
        .O(first3_out));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    first_i_3
       (.I0(\client_ctl[3]_i_9_n_0 ),
        .I1(rxdv4),
        .I2(state[0]),
        .I3(state[3]),
        .I4(state[1]),
        .I5(client_full),
        .O(first_i_3_n_0));
  LUT5 #(
    .INIT(32'h00040000)) 
    first_i_4
       (.I0(\client_bnum_reg[15]_i_3_n_0 ),
        .I1(rxdv4),
        .I2(first_i_5_n_0),
        .I3(\client_bnum[15]_i_10_n_0 ),
        .I4(rxd4[7]),
        .O(first_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT4 #(
    .INIT(16'hFBFF)) 
    first_i_5
       (.I0(rxd4[3]),
        .I1(rxd4[2]),
        .I2(rxd4[1]),
        .I3(rxd4[0]),
        .O(first_i_5_n_0));
  FDCE #(
    .INIT(1'b0)) 
    first_reg
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(first_i_1_n_0),
        .Q(first_reg_n_0));
  LUT6 #(
    .INIT(64'hABAA0000A8AA0000)) 
    mac_broadcast_i_1
       (.I0(mac_dst[40]),
        .I1(client_bnum[3]),
        .I2(\mac_src[47]_i_3_n_0 ),
        .I3(mac_broadcast_i_2_n_0),
        .I4(\client_bnum_reg[15]_i_3_n_0 ),
        .I5(mac_broadcast),
        .O(mac_broadcast_i_1_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    mac_broadcast_i_2
       (.I0(client_bnum[1]),
        .I1(client_bnum[2]),
        .O(mac_broadcast_i_2_n_0));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    mac_broadcast_reg
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(mac_broadcast_i_1_n_0),
        .Q(mac_broadcast));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[10]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[2]),
        .O(\mac_dst[10]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[11]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[3]),
        .O(\mac_dst[11]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[12]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[4]),
        .O(\mac_dst[12]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[13]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[5]),
        .O(\mac_dst[13]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[14]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[6]),
        .O(\mac_dst[14]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[15]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[7]),
        .O(\mac_dst[15]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[16]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[8]),
        .O(\mac_dst[16]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[17]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[9]),
        .O(\mac_dst[17]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[18]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[10]),
        .O(\mac_dst[18]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[19]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[11]),
        .O(\mac_dst[19]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[20]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[12]),
        .O(\mac_dst[20]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[21]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[13]),
        .O(\mac_dst[21]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[22]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[14]),
        .O(\mac_dst[22]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[23]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[15]),
        .O(\mac_dst[23]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[24]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[16]),
        .O(\mac_dst[24]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[25]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[17]),
        .O(\mac_dst[25]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[26]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[18]),
        .O(\mac_dst[26]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[27]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[19]),
        .O(\mac_dst[27]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[28]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[20]),
        .O(\mac_dst[28]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[29]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[21]),
        .O(\mac_dst[29]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[30]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[22]),
        .O(\mac_dst[30]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[31]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[23]),
        .O(\mac_dst[31]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[32]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[24]),
        .O(\mac_dst[32]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[33]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[25]),
        .O(\mac_dst[33]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[34]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[26]),
        .O(\mac_dst[34]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[35]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[27]),
        .O(\mac_dst[35]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[36]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[28]),
        .O(\mac_dst[36]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[37]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[29]),
        .O(\mac_dst[37]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[38]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[30]),
        .O(\mac_dst[38]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[39]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[31]),
        .O(\mac_dst[39]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[40]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[32]),
        .O(\mac_dst[40]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[41]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[33]),
        .O(\mac_dst[41]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[42]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[34]),
        .O(\mac_dst[42]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[43]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[35]),
        .O(\mac_dst[43]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[44]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[36]),
        .O(\mac_dst[44]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[45]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[37]),
        .O(\mac_dst[45]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[46]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[38]),
        .O(\mac_dst[46]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0007FFFF)) 
    \mac_dst[47]_i_1 
       (.I0(client_bnum[1]),
        .I1(client_bnum[2]),
        .I2(\mac_src[47]_i_3_n_0 ),
        .I3(client_bnum[3]),
        .I4(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\mac_dst[47]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[47]_i_2 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[39]),
        .O(\mac_dst[47]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[8]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[0]),
        .O(\mac_dst[8]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_dst[9]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_dst[1]),
        .O(\mac_dst[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hABAA0000A8AA0000)) 
    mac_dst_hit_i_1
       (.I0(mac_dst_hit0),
        .I1(client_bnum[3]),
        .I2(\mac_src[47]_i_3_n_0 ),
        .I3(mac_broadcast_i_2_n_0),
        .I4(\client_bnum_reg[15]_i_3_n_0 ),
        .I5(mac_dst_hit),
        .O(mac_dst_hit_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_dst_hit_i_10
       (.I0(reg_conf_mac_addr[32]),
        .I1(mac_dst[32]),
        .I2(reg_conf_mac_addr[31]),
        .I3(mac_dst[31]),
        .I4(mac_dst[30]),
        .I5(reg_conf_mac_addr[30]),
        .O(mac_dst_hit_i_10_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_dst_hit_i_11
       (.I0(reg_conf_mac_addr[29]),
        .I1(mac_dst[29]),
        .I2(reg_conf_mac_addr[28]),
        .I3(mac_dst[28]),
        .I4(mac_dst[27]),
        .I5(reg_conf_mac_addr[27]),
        .O(mac_dst_hit_i_11_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_dst_hit_i_12
       (.I0(reg_conf_mac_addr[26]),
        .I1(mac_dst[26]),
        .I2(reg_conf_mac_addr[25]),
        .I3(mac_dst[25]),
        .I4(mac_dst[24]),
        .I5(reg_conf_mac_addr[24]),
        .O(mac_dst_hit_i_12_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_dst_hit_i_14
       (.I0(reg_conf_mac_addr[23]),
        .I1(mac_dst[23]),
        .I2(reg_conf_mac_addr[22]),
        .I3(mac_dst[22]),
        .I4(mac_dst[21]),
        .I5(reg_conf_mac_addr[21]),
        .O(mac_dst_hit_i_14_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_dst_hit_i_15
       (.I0(reg_conf_mac_addr[20]),
        .I1(mac_dst[20]),
        .I2(reg_conf_mac_addr[19]),
        .I3(mac_dst[19]),
        .I4(mac_dst[18]),
        .I5(reg_conf_mac_addr[18]),
        .O(mac_dst_hit_i_15_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_dst_hit_i_16
       (.I0(reg_conf_mac_addr[17]),
        .I1(mac_dst[17]),
        .I2(reg_conf_mac_addr[16]),
        .I3(mac_dst[16]),
        .I4(mac_dst[15]),
        .I5(reg_conf_mac_addr[15]),
        .O(mac_dst_hit_i_16_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_dst_hit_i_17
       (.I0(reg_conf_mac_addr[14]),
        .I1(mac_dst[14]),
        .I2(reg_conf_mac_addr[13]),
        .I3(mac_dst[13]),
        .I4(mac_dst[12]),
        .I5(reg_conf_mac_addr[12]),
        .O(mac_dst_hit_i_17_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_dst_hit_i_18
       (.I0(reg_conf_mac_addr[11]),
        .I1(mac_dst[11]),
        .I2(reg_conf_mac_addr[10]),
        .I3(mac_dst[10]),
        .I4(mac_dst[9]),
        .I5(reg_conf_mac_addr[9]),
        .O(mac_dst_hit_i_18_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_dst_hit_i_19
       (.I0(reg_conf_mac_addr[8]),
        .I1(mac_dst[8]),
        .I2(reg_conf_mac_addr[7]),
        .I3(mac_dst[7]),
        .I4(mac_dst[6]),
        .I5(reg_conf_mac_addr[6]),
        .O(mac_dst_hit_i_19_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_dst_hit_i_20
       (.I0(reg_conf_mac_addr[5]),
        .I1(mac_dst[5]),
        .I2(reg_conf_mac_addr[4]),
        .I3(mac_dst[4]),
        .I4(mac_dst[3]),
        .I5(reg_conf_mac_addr[3]),
        .O(mac_dst_hit_i_20_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_dst_hit_i_21
       (.I0(reg_conf_mac_addr[2]),
        .I1(mac_dst[2]),
        .I2(reg_conf_mac_addr[1]),
        .I3(mac_dst[1]),
        .I4(mac_dst[0]),
        .I5(reg_conf_mac_addr[0]),
        .O(mac_dst_hit_i_21_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_dst_hit_i_4
       (.I0(reg_conf_mac_addr[47]),
        .I1(mac_dst[47]),
        .I2(reg_conf_mac_addr[46]),
        .I3(mac_dst[46]),
        .I4(mac_dst[45]),
        .I5(reg_conf_mac_addr[45]),
        .O(mac_dst_hit_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_dst_hit_i_5
       (.I0(reg_conf_mac_addr[44]),
        .I1(mac_dst[44]),
        .I2(reg_conf_mac_addr[43]),
        .I3(mac_dst[43]),
        .I4(mac_dst[42]),
        .I5(reg_conf_mac_addr[42]),
        .O(mac_dst_hit_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_dst_hit_i_6
       (.I0(reg_conf_mac_addr[41]),
        .I1(mac_dst[41]),
        .I2(reg_conf_mac_addr[40]),
        .I3(mac_dst[40]),
        .I4(mac_dst[39]),
        .I5(reg_conf_mac_addr[39]),
        .O(mac_dst_hit_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_dst_hit_i_7
       (.I0(reg_conf_mac_addr[38]),
        .I1(mac_dst[38]),
        .I2(reg_conf_mac_addr[37]),
        .I3(mac_dst[37]),
        .I4(mac_dst[36]),
        .I5(reg_conf_mac_addr[36]),
        .O(mac_dst_hit_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_dst_hit_i_9
       (.I0(reg_conf_mac_addr[35]),
        .I1(mac_dst[35]),
        .I2(reg_conf_mac_addr[34]),
        .I3(mac_dst[34]),
        .I4(mac_dst[33]),
        .I5(reg_conf_mac_addr[33]),
        .O(mac_dst_hit_i_9_n_0));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    mac_dst_hit_reg
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(mac_dst_hit_i_1_n_0),
        .Q(mac_dst_hit));
  CARRY4 mac_dst_hit_reg_i_13
       (.CI(1'b0),
        .CO({mac_dst_hit_reg_i_13_n_0,mac_dst_hit_reg_i_13_n_1,mac_dst_hit_reg_i_13_n_2,mac_dst_hit_reg_i_13_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_mac_dst_hit_reg_i_13_O_UNCONNECTED[3:0]),
        .S({mac_dst_hit_i_18_n_0,mac_dst_hit_i_19_n_0,mac_dst_hit_i_20_n_0,mac_dst_hit_i_21_n_0}));
  CARRY4 mac_dst_hit_reg_i_2
       (.CI(mac_dst_hit_reg_i_3_n_0),
        .CO({mac_dst_hit0,mac_dst_hit_reg_i_2_n_1,mac_dst_hit_reg_i_2_n_2,mac_dst_hit_reg_i_2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_mac_dst_hit_reg_i_2_O_UNCONNECTED[3:0]),
        .S({mac_dst_hit_i_4_n_0,mac_dst_hit_i_5_n_0,mac_dst_hit_i_6_n_0,mac_dst_hit_i_7_n_0}));
  CARRY4 mac_dst_hit_reg_i_3
       (.CI(mac_dst_hit_reg_i_8_n_0),
        .CO({mac_dst_hit_reg_i_3_n_0,mac_dst_hit_reg_i_3_n_1,mac_dst_hit_reg_i_3_n_2,mac_dst_hit_reg_i_3_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_mac_dst_hit_reg_i_3_O_UNCONNECTED[3:0]),
        .S({mac_dst_hit_i_9_n_0,mac_dst_hit_i_10_n_0,mac_dst_hit_i_11_n_0,mac_dst_hit_i_12_n_0}));
  CARRY4 mac_dst_hit_reg_i_8
       (.CI(mac_dst_hit_reg_i_13_n_0),
        .CO({mac_dst_hit_reg_i_8_n_0,mac_dst_hit_reg_i_8_n_1,mac_dst_hit_reg_i_8_n_2,mac_dst_hit_reg_i_8_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_mac_dst_hit_reg_i_8_O_UNCONNECTED[3:0]),
        .S({mac_dst_hit_i_14_n_0,mac_dst_hit_i_15_n_0,mac_dst_hit_i_16_n_0,mac_dst_hit_i_17_n_0}));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[0] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_src[0]_i_1_n_0 ),
        .Q(mac_dst[0]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[10] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[10]_i_1_n_0 ),
        .Q(mac_dst[10]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[11] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[11]_i_1_n_0 ),
        .Q(mac_dst[11]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[12] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[12]_i_1_n_0 ),
        .Q(mac_dst[12]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[13] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[13]_i_1_n_0 ),
        .Q(mac_dst[13]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[14] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[14]_i_1_n_0 ),
        .Q(mac_dst[14]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[15] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[15]_i_1_n_0 ),
        .Q(mac_dst[15]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[16] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[16]_i_1_n_0 ),
        .Q(mac_dst[16]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[17] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[17]_i_1_n_0 ),
        .Q(mac_dst[17]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[18] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[18]_i_1_n_0 ),
        .Q(mac_dst[18]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[19] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[19]_i_1_n_0 ),
        .Q(mac_dst[19]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[1] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_src[1]_i_1_n_0 ),
        .Q(mac_dst[1]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[20] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[20]_i_1_n_0 ),
        .Q(mac_dst[20]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[21] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[21]_i_1_n_0 ),
        .Q(mac_dst[21]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[22] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[22]_i_1_n_0 ),
        .Q(mac_dst[22]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[23] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[23]_i_1_n_0 ),
        .Q(mac_dst[23]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[24] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[24]_i_1_n_0 ),
        .Q(mac_dst[24]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[25] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[25]_i_1_n_0 ),
        .Q(mac_dst[25]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[26] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[26]_i_1_n_0 ),
        .Q(mac_dst[26]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[27] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[27]_i_1_n_0 ),
        .Q(mac_dst[27]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[28] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[28]_i_1_n_0 ),
        .Q(mac_dst[28]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[29] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[29]_i_1_n_0 ),
        .Q(mac_dst[29]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[2] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_src[2]_i_1_n_0 ),
        .Q(mac_dst[2]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[30] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[30]_i_1_n_0 ),
        .Q(mac_dst[30]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[31] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[31]_i_1_n_0 ),
        .Q(mac_dst[31]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[32] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[32]_i_1_n_0 ),
        .Q(mac_dst[32]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[33] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[33]_i_1_n_0 ),
        .Q(mac_dst[33]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[34] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[34]_i_1_n_0 ),
        .Q(mac_dst[34]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[35] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[35]_i_1_n_0 ),
        .Q(mac_dst[35]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[36] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[36]_i_1_n_0 ),
        .Q(mac_dst[36]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[37] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[37]_i_1_n_0 ),
        .Q(mac_dst[37]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[38] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[38]_i_1_n_0 ),
        .Q(mac_dst[38]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[39] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[39]_i_1_n_0 ),
        .Q(mac_dst[39]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[3] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_src[3]_i_1_n_0 ),
        .Q(mac_dst[3]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[40] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[40]_i_1_n_0 ),
        .Q(mac_dst[40]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[41] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[41]_i_1_n_0 ),
        .Q(mac_dst[41]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[42] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_dst[42]_i_1_n_0 ),
        .Q(mac_dst[42]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[43] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_dst[43]_i_1_n_0 ),
        .Q(mac_dst[43]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[44] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_dst[44]_i_1_n_0 ),
        .Q(mac_dst[44]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[45] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_dst[45]_i_1_n_0 ),
        .Q(mac_dst[45]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[46] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_dst[46]_i_1_n_0 ),
        .Q(mac_dst[46]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[47] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_dst[47]_i_2_n_0 ),
        .Q(mac_dst[47]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[4] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_src[4]_i_1_n_0 ),
        .Q(mac_dst[4]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[5] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_src[5]_i_1_n_0 ),
        .Q(mac_dst[5]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[6] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_src[6]_i_1_n_0 ),
        .Q(mac_dst[6]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[7] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_src[7]_i_1_n_0 ),
        .Q(mac_dst[7]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[8] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[8]_i_1_n_0 ),
        .Q(mac_dst[8]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_dst_reg[9] 
       (.C(rx_clk),
        .CE(\mac_dst[47]_i_1_n_0 ),
        .CLR(client_vld_i_2_n_0),
        .D(\mac_dst[9]_i_1_n_0 ),
        .Q(mac_dst[9]));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[0]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(rxd4[0]),
        .O(\mac_src[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[10]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[2]),
        .O(\mac_src[10]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[11]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[3]),
        .O(\mac_src[11]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[12]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[4]),
        .O(\mac_src[12]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[13]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[5]),
        .O(\mac_src[13]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[14]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[6]),
        .O(\mac_src[14]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[15]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[7]),
        .O(\mac_src[15]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[16]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[8]),
        .O(\mac_src[16]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[17]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[9]),
        .O(\mac_src[17]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[18]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[10]),
        .O(\mac_src[18]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[19]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[11]),
        .O(\mac_src[19]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[1]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(rxd4[1]),
        .O(\mac_src[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[20]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[12]),
        .O(\mac_src[20]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[21]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[13]),
        .O(\mac_src[21]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[22]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[14]),
        .O(\mac_src[22]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[23]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[15]),
        .O(\mac_src[23]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[24]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[16]),
        .O(\mac_src[24]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[25]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[17]),
        .O(\mac_src[25]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[26]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[18]),
        .O(\mac_src[26]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[27]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[19]),
        .O(\mac_src[27]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[28]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[20]),
        .O(\mac_src[28]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[29]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[21]),
        .O(\mac_src[29]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[2]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(rxd4[2]),
        .O(\mac_src[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[30]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[22]),
        .O(\mac_src[30]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[31]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[23]),
        .O(\mac_src[31]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[32]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[24]),
        .O(\mac_src[32]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[33]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[25]),
        .O(\mac_src[33]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[34]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[26]),
        .O(\mac_src[34]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[35]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[27]),
        .O(\mac_src[35]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[36]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[28]),
        .O(\mac_src[36]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[37]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[29]),
        .O(\mac_src[37]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[38]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[30]),
        .O(\mac_src[38]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[39]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[31]),
        .O(\mac_src[39]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[3]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(rxd4[3]),
        .O(\mac_src[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[40]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[32]),
        .O(\mac_src[40]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[41]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[33]),
        .O(\mac_src[41]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[42]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[34]),
        .O(\mac_src[42]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[43]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[35]),
        .O(\mac_src[43]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[44]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[36]),
        .O(\mac_src[44]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[45]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[37]),
        .O(\mac_src[45]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[46]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[38]),
        .O(\mac_src[46]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h15FF)) 
    \mac_src[47]_i_1 
       (.I0(\mac_src[47]_i_3_n_0 ),
        .I1(client_bnum[3]),
        .I2(client_bnum[2]),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\mac_src[47]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[47]_i_2 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[39]),
        .O(\mac_src[47]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \mac_src[47]_i_3 
       (.I0(client_vld_i_15_n_0),
        .I1(client_bnum[9]),
        .I2(client_bnum[8]),
        .I3(client_bnum[11]),
        .I4(client_bnum[10]),
        .I5(client_vld_i_17_n_0),
        .O(\mac_src[47]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[4]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(rxd4[4]),
        .O(\mac_src[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[5]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(rxd4[5]),
        .O(\mac_src[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[6]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(rxd4[6]),
        .O(\mac_src[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[7]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(rxd4[7]),
        .O(\mac_src[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[8]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[0]),
        .O(\mac_src[8]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \mac_src[9]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(mac_src[1]),
        .O(\mac_src[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAABF0000AA800000)) 
    mac_src_hit_i_1
       (.I0(mac_src_hit0),
        .I1(client_bnum[2]),
        .I2(client_bnum[3]),
        .I3(\mac_src[47]_i_3_n_0 ),
        .I4(\client_bnum_reg[15]_i_3_n_0 ),
        .I5(mac_src_hit),
        .O(mac_src_hit_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_src_hit_i_10
       (.I0(reg_conf_mac_addr[32]),
        .I1(mac_src[32]),
        .I2(reg_conf_mac_addr[31]),
        .I3(mac_src[31]),
        .I4(mac_src[30]),
        .I5(reg_conf_mac_addr[30]),
        .O(mac_src_hit_i_10_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_src_hit_i_11
       (.I0(reg_conf_mac_addr[29]),
        .I1(mac_src[29]),
        .I2(reg_conf_mac_addr[28]),
        .I3(mac_src[28]),
        .I4(mac_src[27]),
        .I5(reg_conf_mac_addr[27]),
        .O(mac_src_hit_i_11_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_src_hit_i_12
       (.I0(reg_conf_mac_addr[26]),
        .I1(mac_src[26]),
        .I2(reg_conf_mac_addr[25]),
        .I3(mac_src[25]),
        .I4(mac_src[24]),
        .I5(reg_conf_mac_addr[24]),
        .O(mac_src_hit_i_12_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_src_hit_i_14
       (.I0(reg_conf_mac_addr[23]),
        .I1(mac_src[23]),
        .I2(reg_conf_mac_addr[22]),
        .I3(mac_src[22]),
        .I4(mac_src[21]),
        .I5(reg_conf_mac_addr[21]),
        .O(mac_src_hit_i_14_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_src_hit_i_15
       (.I0(reg_conf_mac_addr[20]),
        .I1(mac_src[20]),
        .I2(reg_conf_mac_addr[19]),
        .I3(mac_src[19]),
        .I4(mac_src[18]),
        .I5(reg_conf_mac_addr[18]),
        .O(mac_src_hit_i_15_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_src_hit_i_16
       (.I0(reg_conf_mac_addr[17]),
        .I1(mac_src[17]),
        .I2(reg_conf_mac_addr[16]),
        .I3(mac_src[16]),
        .I4(mac_src[15]),
        .I5(reg_conf_mac_addr[15]),
        .O(mac_src_hit_i_16_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_src_hit_i_17
       (.I0(reg_conf_mac_addr[14]),
        .I1(mac_src[14]),
        .I2(reg_conf_mac_addr[13]),
        .I3(mac_src[13]),
        .I4(mac_src[12]),
        .I5(reg_conf_mac_addr[12]),
        .O(mac_src_hit_i_17_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_src_hit_i_18
       (.I0(reg_conf_mac_addr[11]),
        .I1(mac_src[11]),
        .I2(reg_conf_mac_addr[10]),
        .I3(mac_src[10]),
        .I4(mac_src[9]),
        .I5(reg_conf_mac_addr[9]),
        .O(mac_src_hit_i_18_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_src_hit_i_19
       (.I0(reg_conf_mac_addr[8]),
        .I1(mac_src[8]),
        .I2(reg_conf_mac_addr[7]),
        .I3(mac_src[7]),
        .I4(mac_src[6]),
        .I5(reg_conf_mac_addr[6]),
        .O(mac_src_hit_i_19_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_src_hit_i_20
       (.I0(reg_conf_mac_addr[5]),
        .I1(mac_src[5]),
        .I2(reg_conf_mac_addr[4]),
        .I3(mac_src[4]),
        .I4(mac_src[3]),
        .I5(reg_conf_mac_addr[3]),
        .O(mac_src_hit_i_20_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_src_hit_i_21
       (.I0(reg_conf_mac_addr[2]),
        .I1(mac_src[2]),
        .I2(reg_conf_mac_addr[1]),
        .I3(mac_src[1]),
        .I4(mac_src[0]),
        .I5(reg_conf_mac_addr[0]),
        .O(mac_src_hit_i_21_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_src_hit_i_4
       (.I0(reg_conf_mac_addr[47]),
        .I1(mac_src[47]),
        .I2(reg_conf_mac_addr[46]),
        .I3(mac_src[46]),
        .I4(mac_src[45]),
        .I5(reg_conf_mac_addr[45]),
        .O(mac_src_hit_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_src_hit_i_5
       (.I0(reg_conf_mac_addr[44]),
        .I1(mac_src[44]),
        .I2(reg_conf_mac_addr[43]),
        .I3(mac_src[43]),
        .I4(mac_src[42]),
        .I5(reg_conf_mac_addr[42]),
        .O(mac_src_hit_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_src_hit_i_6
       (.I0(reg_conf_mac_addr[41]),
        .I1(mac_src[41]),
        .I2(reg_conf_mac_addr[40]),
        .I3(mac_src[40]),
        .I4(mac_src[39]),
        .I5(reg_conf_mac_addr[39]),
        .O(mac_src_hit_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_src_hit_i_7
       (.I0(reg_conf_mac_addr[38]),
        .I1(mac_src[38]),
        .I2(reg_conf_mac_addr[37]),
        .I3(mac_src[37]),
        .I4(mac_src[36]),
        .I5(reg_conf_mac_addr[36]),
        .O(mac_src_hit_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    mac_src_hit_i_9
       (.I0(reg_conf_mac_addr[35]),
        .I1(mac_src[35]),
        .I2(reg_conf_mac_addr[34]),
        .I3(mac_src[34]),
        .I4(mac_src[33]),
        .I5(reg_conf_mac_addr[33]),
        .O(mac_src_hit_i_9_n_0));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    mac_src_hit_reg
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(mac_src_hit_i_1_n_0),
        .Q(mac_src_hit));
  CARRY4 mac_src_hit_reg_i_13
       (.CI(1'b0),
        .CO({mac_src_hit_reg_i_13_n_0,mac_src_hit_reg_i_13_n_1,mac_src_hit_reg_i_13_n_2,mac_src_hit_reg_i_13_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_mac_src_hit_reg_i_13_O_UNCONNECTED[3:0]),
        .S({mac_src_hit_i_18_n_0,mac_src_hit_i_19_n_0,mac_src_hit_i_20_n_0,mac_src_hit_i_21_n_0}));
  CARRY4 mac_src_hit_reg_i_2
       (.CI(mac_src_hit_reg_i_3_n_0),
        .CO({mac_src_hit0,mac_src_hit_reg_i_2_n_1,mac_src_hit_reg_i_2_n_2,mac_src_hit_reg_i_2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_mac_src_hit_reg_i_2_O_UNCONNECTED[3:0]),
        .S({mac_src_hit_i_4_n_0,mac_src_hit_i_5_n_0,mac_src_hit_i_6_n_0,mac_src_hit_i_7_n_0}));
  CARRY4 mac_src_hit_reg_i_3
       (.CI(mac_src_hit_reg_i_8_n_0),
        .CO({mac_src_hit_reg_i_3_n_0,mac_src_hit_reg_i_3_n_1,mac_src_hit_reg_i_3_n_2,mac_src_hit_reg_i_3_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_mac_src_hit_reg_i_3_O_UNCONNECTED[3:0]),
        .S({mac_src_hit_i_9_n_0,mac_src_hit_i_10_n_0,mac_src_hit_i_11_n_0,mac_src_hit_i_12_n_0}));
  CARRY4 mac_src_hit_reg_i_8
       (.CI(mac_src_hit_reg_i_13_n_0),
        .CO({mac_src_hit_reg_i_8_n_0,mac_src_hit_reg_i_8_n_1,mac_src_hit_reg_i_8_n_2,mac_src_hit_reg_i_8_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_mac_src_hit_reg_i_8_O_UNCONNECTED[3:0]),
        .S({mac_src_hit_i_14_n_0,mac_src_hit_i_15_n_0,mac_src_hit_i_16_n_0,mac_src_hit_i_17_n_0}));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[0] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[0]_i_1_n_0 ),
        .Q(mac_src[0]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[10] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[10]_i_1_n_0 ),
        .Q(mac_src[10]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[11] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[11]_i_1_n_0 ),
        .Q(mac_src[11]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[12] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[12]_i_1_n_0 ),
        .Q(mac_src[12]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[13] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[13]_i_1_n_0 ),
        .Q(mac_src[13]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[14] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[14]_i_1_n_0 ),
        .Q(mac_src[14]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[15] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[15]_i_1_n_0 ),
        .Q(mac_src[15]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[16] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[16]_i_1_n_0 ),
        .Q(mac_src[16]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[17] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[17]_i_1_n_0 ),
        .Q(mac_src[17]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[18] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[18]_i_1_n_0 ),
        .Q(mac_src[18]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[19] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[19]_i_1_n_0 ),
        .Q(mac_src[19]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[1] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[1]_i_1_n_0 ),
        .Q(mac_src[1]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[20] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[20]_i_1_n_0 ),
        .Q(mac_src[20]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[21] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[21]_i_1_n_0 ),
        .Q(mac_src[21]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[22] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[22]_i_1_n_0 ),
        .Q(mac_src[22]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[23] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[23]_i_1_n_0 ),
        .Q(mac_src[23]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[24] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[24]_i_1_n_0 ),
        .Q(mac_src[24]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[25] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[25]_i_1_n_0 ),
        .Q(mac_src[25]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[26] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[26]_i_1_n_0 ),
        .Q(mac_src[26]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[27] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[27]_i_1_n_0 ),
        .Q(mac_src[27]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[28] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[28]_i_1_n_0 ),
        .Q(mac_src[28]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[29] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[29]_i_1_n_0 ),
        .Q(mac_src[29]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[2] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[2]_i_1_n_0 ),
        .Q(mac_src[2]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[30] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[30]_i_1_n_0 ),
        .Q(mac_src[30]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[31] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[31]_i_1_n_0 ),
        .Q(mac_src[31]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[32] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[32]_i_1_n_0 ),
        .Q(mac_src[32]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[33] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[33]_i_1_n_0 ),
        .Q(mac_src[33]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[34] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[34]_i_1_n_0 ),
        .Q(mac_src[34]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[35] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[35]_i_1_n_0 ),
        .Q(mac_src[35]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[36] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[36]_i_1_n_0 ),
        .Q(mac_src[36]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[37] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[37]_i_1_n_0 ),
        .Q(mac_src[37]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[38] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[38]_i_1_n_0 ),
        .Q(mac_src[38]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[39] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[39]_i_1_n_0 ),
        .Q(mac_src[39]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[3] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[3]_i_1_n_0 ),
        .Q(mac_src[3]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[40] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[40]_i_1_n_0 ),
        .Q(mac_src[40]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[41] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[41]_i_1_n_0 ),
        .Q(mac_src[41]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[42] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[42]_i_1_n_0 ),
        .Q(mac_src[42]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[43] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[43]_i_1_n_0 ),
        .Q(mac_src[43]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[44] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[44]_i_1_n_0 ),
        .Q(mac_src[44]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[45] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[45]_i_1_n_0 ),
        .Q(mac_src[45]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[46] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[46]_i_1_n_0 ),
        .Q(mac_src[46]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[47] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[47]_i_2_n_0 ),
        .Q(mac_src[47]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[4] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[4]_i_1_n_0 ),
        .Q(mac_src[4]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[5] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[5]_i_1_n_0 ),
        .Q(mac_src[5]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[6] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[6]_i_1_n_0 ),
        .Q(mac_src[6]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[7] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[7]_i_1_n_0 ),
        .Q(mac_src[7]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[8] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[8]_i_1_n_0 ),
        .Q(mac_src[8]));
  FDCE #(
    .INIT(1'b0)) 
    \mac_src_reg[9] 
       (.C(rx_clk),
        .CE(\mac_src[47]_i_1_n_0 ),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\mac_src[9]_i_1_n_0 ),
        .Q(mac_src[9]));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[0]_i_1 
       (.I0(reg_conf_mac_addr[0]),
        .I1(conf_mac_addr[0]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[10]_i_1 
       (.I0(reg_conf_mac_addr[10]),
        .I1(conf_mac_addr[10]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[10]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[11]_i_1 
       (.I0(reg_conf_mac_addr[11]),
        .I1(conf_mac_addr[11]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[11]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[12]_i_1 
       (.I0(reg_conf_mac_addr[12]),
        .I1(conf_mac_addr[12]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[12]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[13]_i_1 
       (.I0(reg_conf_mac_addr[13]),
        .I1(conf_mac_addr[13]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[13]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[14]_i_1 
       (.I0(reg_conf_mac_addr[14]),
        .I1(conf_mac_addr[14]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[14]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[15]_i_1 
       (.I0(reg_conf_mac_addr[15]),
        .I1(conf_mac_addr[15]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[15]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[16]_i_1 
       (.I0(reg_conf_mac_addr[16]),
        .I1(conf_mac_addr[16]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[16]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[17]_i_1 
       (.I0(reg_conf_mac_addr[17]),
        .I1(conf_mac_addr[17]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[17]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[18]_i_1 
       (.I0(reg_conf_mac_addr[18]),
        .I1(conf_mac_addr[18]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[18]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[19]_i_1 
       (.I0(reg_conf_mac_addr[19]),
        .I1(conf_mac_addr[19]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[19]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[1]_i_1 
       (.I0(reg_conf_mac_addr[1]),
        .I1(conf_mac_addr[1]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[20]_i_1 
       (.I0(reg_conf_mac_addr[20]),
        .I1(conf_mac_addr[20]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[20]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[21]_i_1 
       (.I0(reg_conf_mac_addr[21]),
        .I1(conf_mac_addr[21]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[21]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[22]_i_1 
       (.I0(reg_conf_mac_addr[22]),
        .I1(conf_mac_addr[22]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[22]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[23]_i_1 
       (.I0(reg_conf_mac_addr[23]),
        .I1(conf_mac_addr[23]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[23]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[24]_i_1 
       (.I0(reg_conf_mac_addr[24]),
        .I1(conf_mac_addr[24]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[24]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[25]_i_1 
       (.I0(reg_conf_mac_addr[25]),
        .I1(conf_mac_addr[25]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[25]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[26]_i_1 
       (.I0(reg_conf_mac_addr[26]),
        .I1(conf_mac_addr[26]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[26]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[27]_i_1 
       (.I0(reg_conf_mac_addr[27]),
        .I1(conf_mac_addr[27]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[27]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[28]_i_1 
       (.I0(reg_conf_mac_addr[28]),
        .I1(conf_mac_addr[28]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[28]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[29]_i_1 
       (.I0(reg_conf_mac_addr[29]),
        .I1(conf_mac_addr[29]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[29]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[2]_i_1 
       (.I0(reg_conf_mac_addr[2]),
        .I1(conf_mac_addr[2]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[30]_i_1 
       (.I0(reg_conf_mac_addr[30]),
        .I1(conf_mac_addr[30]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[30]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[31]_i_1 
       (.I0(reg_conf_mac_addr[31]),
        .I1(conf_mac_addr[31]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[31]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[32]_i_1 
       (.I0(reg_conf_mac_addr[32]),
        .I1(conf_mac_addr[32]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[32]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[33]_i_1 
       (.I0(reg_conf_mac_addr[33]),
        .I1(conf_mac_addr[33]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[33]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[34]_i_1 
       (.I0(reg_conf_mac_addr[34]),
        .I1(conf_mac_addr[34]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[34]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[35]_i_1 
       (.I0(reg_conf_mac_addr[35]),
        .I1(conf_mac_addr[35]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[35]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[36]_i_1 
       (.I0(reg_conf_mac_addr[36]),
        .I1(conf_mac_addr[36]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[36]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[37]_i_1 
       (.I0(reg_conf_mac_addr[37]),
        .I1(conf_mac_addr[37]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[37]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[38]_i_1 
       (.I0(reg_conf_mac_addr[38]),
        .I1(conf_mac_addr[38]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[38]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[39]_i_1 
       (.I0(reg_conf_mac_addr[39]),
        .I1(conf_mac_addr[39]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[39]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[3]_i_1 
       (.I0(reg_conf_mac_addr[3]),
        .I1(conf_mac_addr[3]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[40]_i_1 
       (.I0(reg_conf_mac_addr[40]),
        .I1(conf_mac_addr[40]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[40]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[41]_i_1 
       (.I0(reg_conf_mac_addr[41]),
        .I1(conf_mac_addr[41]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[41]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[42]_i_1 
       (.I0(reg_conf_mac_addr[42]),
        .I1(conf_mac_addr[42]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[42]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[43]_i_1 
       (.I0(reg_conf_mac_addr[43]),
        .I1(conf_mac_addr[43]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[43]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[44]_i_1 
       (.I0(reg_conf_mac_addr[44]),
        .I1(conf_mac_addr[44]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[44]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[45]_i_1 
       (.I0(reg_conf_mac_addr[45]),
        .I1(conf_mac_addr[45]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[45]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[46]_i_1 
       (.I0(reg_conf_mac_addr[46]),
        .I1(conf_mac_addr[46]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[46]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[47]_i_1 
       (.I0(reg_conf_mac_addr[47]),
        .I1(conf_mac_addr[47]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[47]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[4]_i_1 
       (.I0(reg_conf_mac_addr[4]),
        .I1(conf_mac_addr[4]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[5]_i_1 
       (.I0(reg_conf_mac_addr[5]),
        .I1(conf_mac_addr[5]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[5]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[6]_i_1 
       (.I0(reg_conf_mac_addr[6]),
        .I1(conf_mac_addr[6]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[7]_i_1 
       (.I0(reg_conf_mac_addr[7]),
        .I1(conf_mac_addr[7]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[8]_i_1 
       (.I0(reg_conf_mac_addr[8]),
        .I1(conf_mac_addr[8]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[8]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \reg_conf_mac_addr[9]_i_1 
       (.I0(reg_conf_mac_addr[9]),
        .I1(conf_mac_addr[9]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_bnum_reg[15]_i_3_n_0 ),
        .O(\reg_conf_mac_addr[9]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[0] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[0]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[10] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[10]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[10]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[11] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[11]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[11]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[12] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[12]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[12]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[13] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[13]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[13]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[14] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[14]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[14]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[15] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[15]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[15]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[16] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[16]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[16]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[17] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[17]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[17]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[18] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[18]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[18]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[19] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[19]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[19]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[1] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[1]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[1]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[20] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[20]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[20]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[21] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[21]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[21]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[22] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[22]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[22]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[23] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[23]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[23]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[24] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[24]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[24]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[25] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[25]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[25]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[26] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[26]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[26]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[27] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[27]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[27]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[28] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[28]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[28]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[29] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[29]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[29]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[2] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[2]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[2]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[30] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[30]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[30]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[31] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[31]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[31]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[32] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[32]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[32]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[33] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[33]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[33]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[34] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[34]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[34]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[35] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[35]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[35]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[36] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[36]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[36]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[37] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[37]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[37]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[38] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[38]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[38]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[39] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[39]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[39]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[3] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[3]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[3]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[40] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[40]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[40]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[41] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[41]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[41]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[42] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\reg_conf_mac_addr[42]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[42]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[43] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\reg_conf_mac_addr[43]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[43]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[44] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\reg_conf_mac_addr[44]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[44]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[45] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\reg_conf_mac_addr[45]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[45]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[46] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\reg_conf_mac_addr[46]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[46]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[47] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\reg_conf_mac_addr[47]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[47]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[4] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[4]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[4]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[5] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[5]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[5]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[6] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[6]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[6]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[7] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[7]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[7]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[8] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[8]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[8]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \reg_conf_mac_addr_reg[9] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\reg_conf_mac_addr[9]_i_1_n_0 ),
        .Q(reg_conf_mac_addr[9]));
  LUT6 #(
    .INIT(64'hFFFFFFFEAAAAAAAA)) 
    reg_conf_rx_en_i_1
       (.I0(conf_rx_en),
        .I1(state[1]),
        .I2(state[3]),
        .I3(state[0]),
        .I4(state[2]),
        .I5(reg_conf_rx_en_reg_n_0),
        .O(reg_conf_rx_en_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    reg_conf_rx_en_reg
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(reg_conf_rx_en_i_1_n_0),
        .Q(reg_conf_rx_en_reg_n_0));
  LUT4 #(
    .INIT(16'hE020)) 
    reg_conf_rx_no_chk_crc_i_1
       (.I0(conf_rx_no_chk_crc),
        .I1(\client_bnum_reg[15]_i_3_n_0 ),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(reg_conf_rx_no_chk_crc_reg_n_0),
        .O(reg_conf_rx_no_chk_crc_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    reg_conf_rx_no_chk_crc_reg
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(reg_conf_rx_no_chk_crc_i_1_n_0),
        .Q(reg_conf_rx_no_chk_crc_reg_n_0));
  LUT4 #(
    .INIT(16'hE020)) 
    reg_conf_rx_promiscuous_i_1
       (.I0(conf_rx_promiscuous),
        .I1(\client_bnum_reg[15]_i_3_n_0 ),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(reg_conf_rx_promiscuous_reg_n_0),
        .O(reg_conf_rx_promiscuous_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    reg_conf_rx_promiscuous_reg
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(reg_conf_rx_promiscuous_i_1_n_0),
        .Q(reg_conf_rx_promiscuous_reg_n_0));
  FDCE rxd0_reg_c
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(1'b1),
        .Q(rxd0_reg_c_n_0));
  FDCE rxd1_reg_c
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(rxd0_reg_c_n_0),
        .Q(rxd1_reg_c_n_0));
  (* srl_bus_name = "\u_mac_core/u_rx /\rxd2_reg " *) 
  (* srl_name = "\u_mac_core/u_rx /\rxd2_reg[0]_srl3_rxd2_reg_c " *) 
  SRL16E \rxd2_reg[0]_srl3_rxd2_reg_c 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rx_clk),
        .D(gmii_rxd[0]),
        .Q(\rxd2_reg[0]_srl3_rxd2_reg_c_n_0 ));
  (* srl_bus_name = "\u_mac_core/u_rx /\rxd2_reg " *) 
  (* srl_name = "\u_mac_core/u_rx /\rxd2_reg[1]_srl3_rxd2_reg_c " *) 
  SRL16E \rxd2_reg[1]_srl3_rxd2_reg_c 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rx_clk),
        .D(gmii_rxd[1]),
        .Q(\rxd2_reg[1]_srl3_rxd2_reg_c_n_0 ));
  (* srl_bus_name = "\u_mac_core/u_rx /\rxd2_reg " *) 
  (* srl_name = "\u_mac_core/u_rx /\rxd2_reg[2]_srl3_rxd2_reg_c " *) 
  SRL16E \rxd2_reg[2]_srl3_rxd2_reg_c 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rx_clk),
        .D(gmii_rxd[2]),
        .Q(\rxd2_reg[2]_srl3_rxd2_reg_c_n_0 ));
  (* srl_bus_name = "\u_mac_core/u_rx /\rxd2_reg " *) 
  (* srl_name = "\u_mac_core/u_rx /\rxd2_reg[3]_srl3_rxd2_reg_c " *) 
  SRL16E \rxd2_reg[3]_srl3_rxd2_reg_c 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rx_clk),
        .D(gmii_rxd[3]),
        .Q(\rxd2_reg[3]_srl3_rxd2_reg_c_n_0 ));
  (* srl_bus_name = "\u_mac_core/u_rx /\rxd2_reg " *) 
  (* srl_name = "\u_mac_core/u_rx /\rxd2_reg[4]_srl3_rxd2_reg_c " *) 
  SRL16E \rxd2_reg[4]_srl3_rxd2_reg_c 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rx_clk),
        .D(gmii_rxd[4]),
        .Q(\rxd2_reg[4]_srl3_rxd2_reg_c_n_0 ));
  (* srl_bus_name = "\u_mac_core/u_rx /\rxd2_reg " *) 
  (* srl_name = "\u_mac_core/u_rx /\rxd2_reg[5]_srl3_rxd2_reg_c " *) 
  SRL16E \rxd2_reg[5]_srl3_rxd2_reg_c 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rx_clk),
        .D(gmii_rxd[5]),
        .Q(\rxd2_reg[5]_srl3_rxd2_reg_c_n_0 ));
  (* srl_bus_name = "\u_mac_core/u_rx /\rxd2_reg " *) 
  (* srl_name = "\u_mac_core/u_rx /\rxd2_reg[6]_srl3_rxd2_reg_c " *) 
  SRL16E \rxd2_reg[6]_srl3_rxd2_reg_c 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rx_clk),
        .D(gmii_rxd[6]),
        .Q(\rxd2_reg[6]_srl3_rxd2_reg_c_n_0 ));
  (* srl_bus_name = "\u_mac_core/u_rx /\rxd2_reg " *) 
  (* srl_name = "\u_mac_core/u_rx /\rxd2_reg[7]_srl3_rxd2_reg_c " *) 
  SRL16E \rxd2_reg[7]_srl3_rxd2_reg_c 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rx_clk),
        .D(gmii_rxd[7]),
        .Q(\rxd2_reg[7]_srl3_rxd2_reg_c_n_0 ));
  FDCE rxd2_reg_c
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(rxd1_reg_c_n_0),
        .Q(rxd2_reg_c_n_0));
  FDRE \rxd3_reg[0]_rxd3_reg_c 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\rxd2_reg[0]_srl3_rxd2_reg_c_n_0 ),
        .Q(\rxd3_reg[0]_rxd3_reg_c_n_0 ),
        .R(1'b0));
  FDRE \rxd3_reg[1]_rxd3_reg_c 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\rxd2_reg[1]_srl3_rxd2_reg_c_n_0 ),
        .Q(\rxd3_reg[1]_rxd3_reg_c_n_0 ),
        .R(1'b0));
  FDRE \rxd3_reg[2]_rxd3_reg_c 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\rxd2_reg[2]_srl3_rxd2_reg_c_n_0 ),
        .Q(\rxd3_reg[2]_rxd3_reg_c_n_0 ),
        .R(1'b0));
  FDRE \rxd3_reg[3]_rxd3_reg_c 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\rxd2_reg[3]_srl3_rxd2_reg_c_n_0 ),
        .Q(\rxd3_reg[3]_rxd3_reg_c_n_0 ),
        .R(1'b0));
  FDRE \rxd3_reg[4]_rxd3_reg_c 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\rxd2_reg[4]_srl3_rxd2_reg_c_n_0 ),
        .Q(\rxd3_reg[4]_rxd3_reg_c_n_0 ),
        .R(1'b0));
  FDRE \rxd3_reg[5]_rxd3_reg_c 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\rxd2_reg[5]_srl3_rxd2_reg_c_n_0 ),
        .Q(\rxd3_reg[5]_rxd3_reg_c_n_0 ),
        .R(1'b0));
  FDRE \rxd3_reg[6]_rxd3_reg_c 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\rxd2_reg[6]_srl3_rxd2_reg_c_n_0 ),
        .Q(\rxd3_reg[6]_rxd3_reg_c_n_0 ),
        .R(1'b0));
  FDRE \rxd3_reg[7]_rxd3_reg_c 
       (.C(rx_clk),
        .CE(1'b1),
        .D(\rxd2_reg[7]_srl3_rxd2_reg_c_n_0 ),
        .Q(\rxd3_reg[7]_rxd3_reg_c_n_0 ),
        .R(1'b0));
  FDCE rxd3_reg_c
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(rxd2_reg_c_n_0),
        .Q(rxd3_reg_c_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    rxd3_reg_gate
       (.I0(\rxd3_reg[7]_rxd3_reg_c_n_0 ),
        .I1(rxd3_reg_c_n_0),
        .O(rxd3_reg_gate_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    rxd3_reg_gate__0
       (.I0(\rxd3_reg[6]_rxd3_reg_c_n_0 ),
        .I1(rxd3_reg_c_n_0),
        .O(rxd3_reg_gate__0_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    rxd3_reg_gate__1
       (.I0(\rxd3_reg[5]_rxd3_reg_c_n_0 ),
        .I1(rxd3_reg_c_n_0),
        .O(rxd3_reg_gate__1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    rxd3_reg_gate__2
       (.I0(\rxd3_reg[4]_rxd3_reg_c_n_0 ),
        .I1(rxd3_reg_c_n_0),
        .O(rxd3_reg_gate__2_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    rxd3_reg_gate__3
       (.I0(\rxd3_reg[3]_rxd3_reg_c_n_0 ),
        .I1(rxd3_reg_c_n_0),
        .O(rxd3_reg_gate__3_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    rxd3_reg_gate__4
       (.I0(\rxd3_reg[2]_rxd3_reg_c_n_0 ),
        .I1(rxd3_reg_c_n_0),
        .O(rxd3_reg_gate__4_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    rxd3_reg_gate__5
       (.I0(\rxd3_reg[1]_rxd3_reg_c_n_0 ),
        .I1(rxd3_reg_c_n_0),
        .O(rxd3_reg_gate__5_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    rxd3_reg_gate__6
       (.I0(\rxd3_reg[0]_rxd3_reg_c_n_0 ),
        .I1(rxd3_reg_c_n_0),
        .O(rxd3_reg_gate__6_n_0));
  FDCE \rxd4_reg[0] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(rxd3_reg_gate__6_n_0),
        .Q(rxd4[0]));
  FDCE \rxd4_reg[1] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(rxd3_reg_gate__5_n_0),
        .Q(rxd4[1]));
  FDCE \rxd4_reg[2] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(rxd3_reg_gate__4_n_0),
        .Q(rxd4[2]));
  FDCE \rxd4_reg[3] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(rxd3_reg_gate__3_n_0),
        .Q(rxd4[3]));
  FDCE \rxd4_reg[4] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(rxd3_reg_gate__2_n_0),
        .Q(rxd4[4]));
  FDCE \rxd4_reg[5] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(rxd3_reg_gate__1_n_0),
        .Q(rxd4[5]));
  FDCE \rxd4_reg[6] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(rxd3_reg_gate__0_n_0),
        .Q(rxd4[6]));
  FDCE \rxd4_reg[7] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(rxd3_reg_gate_n_0),
        .Q(rxd4[7]));
  (* srl_name = "\u_mac_core/u_rx /rxdv1_reg_srl2_rxd1_reg_c" *) 
  SRL16E rxdv1_reg_srl2_rxd1_reg_c
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rx_clk),
        .D(rxdv00),
        .Q(rxdv1_reg_srl2_rxd1_reg_c_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    rxdv1_reg_srl2_rxd1_reg_c_i_1
       (.I0(gmii_rxdv),
        .I1(gmii_rxer),
        .O(rxdv00));
  LUT2 #(
    .INIT(4'h8)) 
    rxdv2_reg_gate
       (.I0(rxdv2_reg_rxd2_reg_c_n_0),
        .I1(rxd2_reg_c_n_0),
        .O(rxdv2_reg_gate_n_0));
  FDRE rxdv2_reg_rxd2_reg_c
       (.C(rx_clk),
        .CE(1'b1),
        .D(rxdv1_reg_srl2_rxd1_reg_c_n_0),
        .Q(rxdv2_reg_rxd2_reg_c_n_0),
        .R(1'b0));
  FDCE rxdv3_reg
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(rxdv2_reg_gate_n_0),
        .Q(rxdv3));
  FDCE rxdv4_reg
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(rxdv3),
        .Q(rxdv4));
  (* srl_name = "\u_mac_core/u_rx /rxer2_reg_srl3_rxd2_reg_c" *) 
  SRL16E rxer2_reg_srl3_rxd2_reg_c
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(rx_clk),
        .D(gmii_rxer),
        .Q(rxer2_reg_srl3_rxd2_reg_c_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    rxer3_reg_gate
       (.I0(rxer3_reg_rxd3_reg_c_n_0),
        .I1(rxd3_reg_c_n_0),
        .O(rxer3_reg_gate_n_0));
  FDRE rxer3_reg_rxd3_reg_c
       (.C(rx_clk),
        .CE(1'b1),
        .D(rxer2_reg_srl3_rxd2_reg_c_n_0),
        .Q(rxer3_reg_rxd3_reg_c_n_0),
        .R(1'b0));
  FDCE rxer4_reg
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(rxer3_reg_gate_n_0),
        .Q(rxer4));
  LUT5 #(
    .INIT(32'hFFFFFFEA)) 
    \state[0]_i_1 
       (.I0(\state[0]_i_2_n_0 ),
        .I1(\client_bnum[15]_i_6_n_0 ),
        .I2(\state[0]_i_3_n_0 ),
        .I3(\state[0]_i_4_n_0 ),
        .I4(\state[0]_i_5_n_0 ),
        .O(\state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0888888808080808)) 
    \state[0]_i_2 
       (.I0(reg_conf_rx_en_reg_n_0),
        .I1(\client_bnum[15]_i_3_n_0 ),
        .I2(rxdv4),
        .I3(reg_conf_rx_no_chk_crc_reg_n_0),
        .I4(rxdv3),
        .I5(client_vld_i_8_n_0),
        .O(\state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000001000000000)) 
    \state[0]_i_3 
       (.I0(client_full),
        .I1(client_bnum_full),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_ctl[3]_i_4_n_0 ),
        .I4(state[0]),
        .I5(rxdv4),
        .O(\state[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h22220000F0000000)) 
    \state[0]_i_4 
       (.I0(\state[3]_i_7_n_0 ),
        .I1(state[2]),
        .I2(\state[2]_i_2_n_0 ),
        .I3(client_vld),
        .I4(state[0]),
        .I5(rxdv4),
        .O(\state[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h000000000300B000)) 
    \state[0]_i_5 
       (.I0(rxdv4),
        .I1(state[0]),
        .I2(state[2]),
        .I3(reg_conf_rx_en_reg_n_0),
        .I4(state[1]),
        .I5(state[3]),
        .O(\state[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFEA)) 
    \state[1]_i_1 
       (.I0(\state[1]_i_2_n_0 ),
        .I1(\state[1]_i_3_n_0 ),
        .I2(\state[1]_i_4_n_0 ),
        .I3(\state[1]_i_5_n_0 ),
        .I4(\state[1]_i_6_n_0 ),
        .I5(\state[1]_i_7_n_0 ),
        .O(\state[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0040)) 
    \state[1]_i_10 
       (.I0(rxdv4),
        .I1(reg_conf_rx_en_reg_n_0),
        .I2(gmii_rxdv),
        .I3(gmii_rxer),
        .O(\state[1]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0000000004000000)) 
    \state[1]_i_11 
       (.I0(rxdv4),
        .I1(state[0]),
        .I2(state[2]),
        .I3(state[3]),
        .I4(reg_conf_rx_en_reg_n_0),
        .I5(state[1]),
        .O(\state[1]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h0000002000200020)) 
    \state[1]_i_2 
       (.I0(state[0]),
        .I1(state[2]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(\client_ctl[3]_i_4_n_0 ),
        .I4(client_vld_i_8_n_0),
        .I5(\client_ctl[1]_i_2_n_0 ),
        .O(\state[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000001FFFFFFFF)) 
    \state[1]_i_3 
       (.I0(client_vld_i_17_n_0),
        .I1(client_vld_i_16_n_0),
        .I2(client_vld_i_15_n_0),
        .I3(client_bnum[3]),
        .I4(client_vld_i_14_n_0),
        .I5(rxdv4),
        .O(\state[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000001000000000)) 
    \state[1]_i_4 
       (.I0(state[0]),
        .I1(client_vld_i_8_n_0),
        .I2(state[2]),
        .I3(state[1]),
        .I4(state[3]),
        .I5(reg_conf_rx_en_reg_n_0),
        .O(\state[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFF101010)) 
    \state[1]_i_5 
       (.I0(\state[1]_i_8_n_0 ),
        .I1(client_vld),
        .I2(\state[1]_i_9_n_0 ),
        .I3(\state[1]_i_10_n_0 ),
        .I4(\client_bnum[15]_i_3_n_0 ),
        .I5(\state[1]_i_11_n_0 ),
        .O(\state[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000001000100010)) 
    \state[1]_i_6 
       (.I0(state[0]),
        .I1(state[2]),
        .I2(client_bnum_vld_i_11_n_0),
        .I3(state[3]),
        .I4(client_vld_i_8_n_0),
        .I5(\client_ctl[1]_i_2_n_0 ),
        .O(\state[1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFE000000000000)) 
    \state[1]_i_7 
       (.I0(client_bnum_vld_i_7_n_0),
        .I1(client_bnum_vld_i_8_n_0),
        .I2(client_bnum_vld_i_9_n_0),
        .I3(client_bnum_vld_i_10_n_0),
        .I4(state[2]),
        .I5(\state[2]_i_12_n_0 ),
        .O(\state[1]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \state[1]_i_8 
       (.I0(rxdv4),
        .I1(state[0]),
        .O(\state[1]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h0008)) 
    \state[1]_i_9 
       (.I0(reg_conf_rx_en_reg_n_0),
        .I1(state[2]),
        .I2(state[3]),
        .I3(state[1]),
        .O(\state[1]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF04)) 
    \state[2]_i_1 
       (.I0(client_vld_i_6_n_0),
        .I1(\state[2]_i_2_n_0 ),
        .I2(\client_ctl[3]_i_9_n_0 ),
        .I3(\state[2]_i_3_n_0 ),
        .I4(\state[2]_i_4_n_0 ),
        .I5(\state[2]_i_5_n_0 ),
        .O(\state[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7707)) 
    \state[2]_i_10 
       (.I0(reg_conf_rx_no_chk_crc_reg_n_0),
        .I1(rxdv3),
        .I2(gmii_rxdv),
        .I3(gmii_rxer),
        .O(\state[2]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h000000B00000B000)) 
    \state[2]_i_11 
       (.I0(state[0]),
        .I1(rxdv4),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(state[2]),
        .I4(state[3]),
        .I5(state[1]),
        .O(\state[2]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h0080)) 
    \state[2]_i_12 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(state[3]),
        .O(\state[2]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \state[2]_i_2 
       (.I0(reg_conf_rx_en_reg_n_0),
        .I1(state[3]),
        .I2(state[1]),
        .O(\state[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000400000000)) 
    \state[2]_i_3 
       (.I0(client_vld_i_8_n_0),
        .I1(\state[2]_i_6_n_0 ),
        .I2(client_vld_i_15_n_0),
        .I3(client_vld_i_16_n_0),
        .I4(client_vld_i_17_n_0),
        .I5(\state[2]_i_7_n_0 ),
        .O(\state[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF002000200020)) 
    \state[2]_i_4 
       (.I0(\state[2]_i_8_n_0 ),
        .I1(state[1]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(rxdv4),
        .I4(\state[2]_i_9_n_0 ),
        .I5(\state[2]_i_10_n_0 ),
        .O(\state[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEEEEEEEEEEEEA)) 
    \state[2]_i_5 
       (.I0(\state[2]_i_11_n_0 ),
        .I1(\state[2]_i_12_n_0 ),
        .I2(client_bnum_vld_i_10_n_0),
        .I3(client_bnum_vld_i_9_n_0),
        .I4(client_bnum_vld_i_8_n_0),
        .I5(client_bnum_vld_i_7_n_0),
        .O(\state[2]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h1000)) 
    \state[2]_i_6 
       (.I0(state[3]),
        .I1(state[2]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(state[1]),
        .O(\state[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000800000)) 
    \state[2]_i_7 
       (.I0(client_bnum[3]),
        .I1(mac_src_hit),
        .I2(client_bnum[2]),
        .I3(client_bnum[1]),
        .I4(client_bnum[0]),
        .I5(reg_conf_rx_promiscuous_reg_n_0),
        .O(\state[2]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \state[2]_i_8 
       (.I0(state[0]),
        .I1(state[2]),
        .O(\state[2]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h000030E0)) 
    \state[2]_i_9 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(state[2]),
        .I4(state[3]),
        .O(\state[2]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEEEFEEEFEEE)) 
    \state[3]_i_1 
       (.I0(\state[3]_i_2_n_0 ),
        .I1(\state[3]_i_3_n_0 ),
        .I2(\state[3]_i_4_n_0 ),
        .I3(client_vld_i_6_n_0),
        .I4(\state[3]_i_5_n_0 ),
        .I5(\state[3]_i_6_n_0 ),
        .O(\state[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \state[3]_i_2 
       (.I0(client_vld_i_8_n_0),
        .I1(client_full),
        .I2(\client_ctl[3]_i_10_n_0 ),
        .I3(reg_conf_rx_no_chk_crc_reg_n_0),
        .I4(rxdv3),
        .I5(\client_bnum[15]_i_7_n_0 ),
        .O(\state[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF200220022002200)) 
    \state[3]_i_3 
       (.I0(\state[3]_i_7_n_0 ),
        .I1(state[2]),
        .I2(\client_ctl[3]_i_8_n_0 ),
        .I3(rxdv4),
        .I4(\state[3]_i_8_n_0 ),
        .I5(rxd4[7]),
        .O(\state[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    \state[3]_i_4 
       (.I0(client_full),
        .I1(reg_conf_rx_en_reg_n_0),
        .I2(gmii_rxdv),
        .I3(gmii_rxer),
        .I4(state[2]),
        .I5(\client_bnum[15]_i_7_n_0 ),
        .O(\state[3]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT5 #(
    .INIT(32'hFFFFFBFF)) 
    \state[3]_i_5 
       (.I0(rxd4[3]),
        .I1(rxd4[2]),
        .I2(rxd4[1]),
        .I3(rxd4[0]),
        .I4(\client_bnum[15]_i_10_n_0 ),
        .O(\state[3]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h00100000)) 
    \state[3]_i_6 
       (.I0(state[0]),
        .I1(state[2]),
        .I2(reg_conf_rx_en_reg_n_0),
        .I3(state[1]),
        .I4(rxdv4),
        .O(\state[3]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \state[3]_i_7 
       (.I0(state[1]),
        .I1(reg_conf_rx_en_reg_n_0),
        .I2(state[3]),
        .O(\state[3]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \state[3]_i_8 
       (.I0(client_full),
        .I1(client_bnum_full),
        .O(\state[3]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00005C00)) 
    \state_crc[0]_i_1 
       (.I0(state_crc[0]),
        .I1(\state_crc[1]_i_2_n_0 ),
        .I2(gmii_rxer),
        .I3(gmii_rxdv),
        .I4(\state_crc[0]_i_2_n_0 ),
        .I5(\state_crc[0]_i_3_n_0 ),
        .O(\state_crc[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \state_crc[0]_i_2 
       (.I0(state_crc[1]),
        .I1(reg_conf_rx_en_reg_n_0),
        .O(\state_crc[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hC0F0002000000000)) 
    \state_crc[0]_i_3 
       (.I0(gmii_rxd[7]),
        .I1(state_crc[1]),
        .I2(gmii_rxdv),
        .I3(gmii_rxer),
        .I4(state_crc[0]),
        .I5(reg_conf_rx_en_reg_n_0),
        .O(\state_crc[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hC0003C00C0002C00)) 
    \state_crc[1]_i_1 
       (.I0(gmii_rxer),
        .I1(state_crc[0]),
        .I2(gmii_rxdv),
        .I3(reg_conf_rx_en_reg_n_0),
        .I4(state_crc[1]),
        .I5(\state_crc[1]_i_2_n_0 ),
        .O(\state_crc[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFBFF)) 
    \state_crc[1]_i_2 
       (.I0(\state_crc[1]_i_3_n_0 ),
        .I1(gmii_rxd[0]),
        .I2(gmii_rxd[5]),
        .I3(gmii_rxd[6]),
        .O(\state_crc[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFDF)) 
    \state_crc[1]_i_3 
       (.I0(gmii_rxd[2]),
        .I1(gmii_rxd[1]),
        .I2(gmii_rxd[4]),
        .I3(gmii_rxd[3]),
        .O(\state_crc[1]_i_3_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_crc_reg[0] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\state_crc[0]_i_1_n_0 ),
        .Q(state_crc[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_crc_reg[1] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(client_vld_i_2_n_0),
        .D(\state_crc[1]_i_1_n_0 ),
        .Q(state_crc[1]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_reg[0] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\state[0]_i_1_n_0 ),
        .Q(state[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_reg[1] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\state[1]_i_1_n_0 ),
        .Q(state[1]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_reg[2] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\state[2]_i_1_n_0 ),
        .Q(state[2]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_reg[3] 
       (.C(rx_clk),
        .CE(1'b1),
        .CLR(\client_bnum[8]_i_2_n_0 ),
        .D(\state[3]_i_1_n_0 ),
        .Q(state[3]));
endmodule

(* BITS_10MSEC = "20" *) (* BITS_5MSEC = "19" *) (* CLK_FREQ = "100000000" *) 
(* CLK_PERIOD_NS = "10" *) (* CSRA_CONF_RX0 = "48" *) (* CSRA_CONF_RX1 = "52" *) 
(* CSRA_CONF_TX0 = "32" *) (* CSRA_CONF_TX1 = "36" *) (* CSRA_CONTROL = "0" *) 
(* CSRA_DEBUG_PORT = "196" *) (* CSRA_DES_RX0 = "80" *) (* CSRA_DES_RX1 = "84" *) 
(* CSRA_DES_RX2 = "88" *) (* CSRA_DES_RX3 = "92" *) (* CSRA_DES_TX0 = "64" *) 
(* CSRA_DES_TX1 = "68" *) (* CSRA_DES_TX2 = "72" *) (* CSRA_DES_TX3 = "76" *) 
(* CSRA_DMA_RX0 = "144" *) (* CSRA_DMA_RX1 = "148" *) (* CSRA_DMA_RX2 = "152" *) 
(* CSRA_DMA_RX3 = "156" *) (* CSRA_DMA_RX4 = "160" *) (* CSRA_DMA_RX5 = "164" *) 
(* CSRA_DMA_RX6 = "168" *) (* CSRA_DMA_RX7 = "172" *) (* CSRA_DMA_RX8 = "176" *) 
(* CSRA_DMA_RX9 = "180" *) (* CSRA_DMA_TX0 = "96" *) (* CSRA_DMA_TX1 = "100" *) 
(* CSRA_DMA_TX2 = "104" *) (* CSRA_DMA_TX3 = "108" *) (* CSRA_DMA_TX4 = "112" *) 
(* CSRA_DMA_TX5 = "116" *) (* CSRA_DMA_TX6 = "120" *) (* CSRA_DMA_TX7 = "124" *) 
(* CSRA_DMA_TX8 = "128" *) (* CSRA_DMA_TX9 = "132" *) (* CSRA_MAC_ADDR0 = "16" *) 
(* CSRA_MAC_ADDR1 = "20" *) (* CSRA_STATUS = "4" *) (* CSRA_TMP = "192" *) 
(* CSRA_VERSION = "8" *) (* CSR_BIT = "8" *) (* GBE_CTL_ie = "31" *) 
(* GBE_CTL_ie_MSK = "-2147483648" *) (* GBE_CTL_phy_reset = "30" *) (* GBE_CTL_phy_reset_MSK = "1073741824" *) 
(* GBE_CTL_speed = "0" *) (* GBE_CTL_speed_MSK = "3" *) (* GBE_RX_CONF_enable = "1" *) 
(* GBE_RX_CONF_enable_MSK = "2" *) (* GBE_RX_CONF_jumbo = "2" *) (* GBE_RX_CONF_jumbo_MSK = "4" *) 
(* GBE_RX_CONF_no_chk_crc = "3" *) (* GBE_RX_CONF_no_chk_crc_MSK = "8" *) (* GBE_RX_CONF_promiscuous = "4" *) 
(* GBE_RX_CONF_promiscuous_MSK = "16" *) (* GBE_RX_CONF_reset = "0" *) (* GBE_RX_CONF_reset_MSK = "1" *) 
(* GBE_RX_DES_bnum = "0" *) (* GBE_RX_DES_bnum_MSK = "65535" *) (* GBE_RX_DES_items = "16" *) 
(* GBE_RX_DES_items_MSK = "-65536" *) (* GBE_RX_DMA_bchunk_MSK = "65535" *) (* GBE_RX_DMA_empty = "0" *) 
(* GBE_RX_DMA_empty_MSK = "1" *) (* GBE_RX_DMA_full = "1" *) (* GBE_RX_DMA_full_MSK = "2" *) 
(* GBE_STS_ip = "31" *) (* GBE_STS_ip_MSK = "-2147483648" *) (* GBE_STS_phy_reset = "30" *) 
(* GBE_STS_phy_reset_MSK = "1073741824" *) (* GBE_STS_rgmii = "29" *) (* GBE_STS_rgmii_MSK = "536870912" *) 
(* GBE_TX_CONF_enable = "1" *) (* GBE_TX_CONF_enable_MSK = "2" *) (* GBE_TX_CONF_jumbo = "2" *) 
(* GBE_TX_CONF_jumbo_MSK = "4" *) (* GBE_TX_CONF_no_gen_crc = "3" *) (* GBE_TX_CONF_no_gen_crc_MSK = "8" *) 
(* GBE_TX_CONF_reset = "0" *) (* GBE_TX_CONF_reset_MSK = "1" *) (* GBE_TX_DES_items = "0" *) 
(* GBE_TX_DES_items_MSK = "65535" *) (* GBE_TX_DES_rooms = "16" *) (* GBE_TX_DES_rooms_MSK = "-65536" *) 
(* GBE_TX_DMA_bchunk_MSK = "65535" *) (* GBE_TX_DMA_empty = "0" *) (* GBE_TX_DMA_empty_MSK = "1" *) 
(* GBE_TX_DMA_full = "1" *) (* GBE_TX_DMA_full_MSK = "2" *) (* MAC_ADDR = "48'b000000100001001000110100010101100111100000000000" *) 
(* MAC_RTL_VERSION = "538510083" *) (* NUM_10MSEC = "1000000" *) (* RX_FAW = "4" *) 
(* ST_IDLE = "0" *) (* ST_POST = "2" *) (* ST_RESET = "1" *) 
(* TX_FAW = "4" *) 
module gig_eth_mac_csr
   (RESET_N,
    CLK,
    T_WADDR,
    T_WREN,
    T_RADDR,
    T_RDEN,
    T_WDATA,
    T_RDATA,
    IRQ,
    gbe_phy_reset_n,
    conf_mac_speed,
    conf_mac_addr,
    conf_tx_reset,
    conf_tx_en,
    conf_tx_jumbo_en,
    conf_tx_no_gen_crc,
    conf_rx_reset,
    conf_rx_en,
    conf_rx_no_chk_crc,
    conf_rx_jumbo_en,
    conf_rx_promiscuous,
    tx_descriptor_rd_rdy,
    tx_descriptor_rd_vld,
    tx_descriptor_rd_src,
    tx_descriptor_rd_bnum,
    tx_bchunk,
    tx_addr_start,
    tx_addr_end,
    tx_addr_head,
    tx_addr_tail,
    tx_addr_full,
    tx_addr_empty,
    tx_addr_tail_update,
    rx_descriptor_wr_rdy,
    rx_descriptor_wr_vld,
    rx_descriptor_wr_dst,
    rx_descriptor_wr_bnum,
    rx_descriptor_full,
    rx_bchunk,
    rx_addr_start,
    rx_addr_end,
    rx_addr_head,
    rx_addr_tail,
    rx_addr_full,
    rx_addr_empty,
    rx_addr_head_update,
    crc_err);
  input RESET_N;
  input CLK;
  (* mark_debug = "true" *) input [7:0]T_WADDR;
  (* mark_debug = "true" *) input [3:0]T_WREN;
  (* mark_debug = "true" *) input [7:0]T_RADDR;
  (* mark_debug = "true" *) input T_RDEN;
  (* mark_debug = "true" *) input [31:0]T_WDATA;
  (* mark_debug = "true" *) output [31:0]T_RDATA;
  output IRQ;
  output gbe_phy_reset_n;
  output [1:0]conf_mac_speed;
  output [47:0]conf_mac_addr;
  output conf_tx_reset;
  output conf_tx_en;
  output conf_tx_jumbo_en;
  output conf_tx_no_gen_crc;
  output conf_rx_reset;
  output conf_rx_en;
  output conf_rx_no_chk_crc;
  output conf_rx_jumbo_en;
  output conf_rx_promiscuous;
  (* mark_debug = "true" *) input tx_descriptor_rd_rdy;
  (* mark_debug = "true" *) output tx_descriptor_rd_vld;
  output [31:0]tx_descriptor_rd_src;
  output [15:0]tx_descriptor_rd_bnum;
  output [15:0]tx_bchunk;
  output [31:0]tx_addr_start;
  output [31:0]tx_addr_end;
  output [31:0]tx_addr_head;
  input [31:0]tx_addr_tail;
  output tx_addr_full;
  output tx_addr_empty;
  input tx_addr_tail_update;
  (* mark_debug = "true" *) output rx_descriptor_wr_rdy;
  (* mark_debug = "true" *) input rx_descriptor_wr_vld;
  input [31:0]rx_descriptor_wr_dst;
  input [15:0]rx_descriptor_wr_bnum;
  output rx_descriptor_full;
  output [15:0]rx_bchunk;
  output [31:0]rx_addr_start;
  output [31:0]rx_addr_end;
  input [31:0]rx_addr_head;
  output [31:0]rx_addr_tail;
  output rx_addr_full;
  output rx_addr_empty;
  input rx_addr_head_update;
  input crc_err;

  wire \<const0> ;
  wire CLK;
  wire \FSM_onehot_state[0]_i_1_n_0 ;
  wire \FSM_onehot_state[1]_i_1_n_0 ;
  wire \FSM_onehot_state[2]_i_1_n_0 ;
  wire \FSM_onehot_state_reg_n_0_[0] ;
  wire \FSM_onehot_state_reg_n_0_[1] ;
  wire \FSM_onehot_state_reg_n_0_[2] ;
  wire IRQ;
  wire RESET_N;
  (* MARK_DEBUG *) wire [7:0]T_RADDR;
  (* MARK_DEBUG *) wire [31:0]T_RDATA;
  wire \T_RDATA[0]_i_10_n_0 ;
  wire \T_RDATA[0]_i_11_n_0 ;
  wire \T_RDATA[0]_i_12_n_0 ;
  wire \T_RDATA[0]_i_13_n_0 ;
  wire \T_RDATA[0]_i_1_n_0 ;
  wire \T_RDATA[0]_i_2_n_0 ;
  wire \T_RDATA[0]_i_3_n_0 ;
  wire \T_RDATA[0]_i_4_n_0 ;
  wire \T_RDATA[0]_i_5_n_0 ;
  wire \T_RDATA[0]_i_6_n_0 ;
  wire \T_RDATA[0]_i_7_n_0 ;
  wire \T_RDATA[0]_i_8_n_0 ;
  wire \T_RDATA[0]_i_9_n_0 ;
  wire \T_RDATA[10]_i_1_n_0 ;
  wire \T_RDATA[10]_i_2_n_0 ;
  wire \T_RDATA[10]_i_3_n_0 ;
  wire \T_RDATA[10]_i_4_n_0 ;
  wire \T_RDATA[10]_i_5_n_0 ;
  wire \T_RDATA[10]_i_6_n_0 ;
  wire \T_RDATA[10]_i_7_n_0 ;
  wire \T_RDATA[10]_i_8_n_0 ;
  wire \T_RDATA[11]_i_1_n_0 ;
  wire \T_RDATA[11]_i_2_n_0 ;
  wire \T_RDATA[11]_i_3_n_0 ;
  wire \T_RDATA[11]_i_4_n_0 ;
  wire \T_RDATA[11]_i_5_n_0 ;
  wire \T_RDATA[11]_i_6_n_0 ;
  wire \T_RDATA[11]_i_7_n_0 ;
  wire \T_RDATA[11]_i_8_n_0 ;
  wire \T_RDATA[12]_i_1_n_0 ;
  wire \T_RDATA[12]_i_2_n_0 ;
  wire \T_RDATA[12]_i_3_n_0 ;
  wire \T_RDATA[12]_i_4_n_0 ;
  wire \T_RDATA[12]_i_5_n_0 ;
  wire \T_RDATA[12]_i_6_n_0 ;
  wire \T_RDATA[12]_i_7_n_0 ;
  wire \T_RDATA[12]_i_8_n_0 ;
  wire \T_RDATA[13]_i_1_n_0 ;
  wire \T_RDATA[13]_i_2_n_0 ;
  wire \T_RDATA[13]_i_3_n_0 ;
  wire \T_RDATA[13]_i_4_n_0 ;
  wire \T_RDATA[13]_i_5_n_0 ;
  wire \T_RDATA[13]_i_6_n_0 ;
  wire \T_RDATA[13]_i_7_n_0 ;
  wire \T_RDATA[14]_i_1_n_0 ;
  wire \T_RDATA[14]_i_2_n_0 ;
  wire \T_RDATA[14]_i_3_n_0 ;
  wire \T_RDATA[14]_i_4_n_0 ;
  wire \T_RDATA[14]_i_5_n_0 ;
  wire \T_RDATA[14]_i_6_n_0 ;
  wire \T_RDATA[14]_i_7_n_0 ;
  wire \T_RDATA[14]_i_8_n_0 ;
  wire \T_RDATA[15]_i_1_n_0 ;
  wire \T_RDATA[15]_i_2_n_0 ;
  wire \T_RDATA[15]_i_3_n_0 ;
  wire \T_RDATA[15]_i_4_n_0 ;
  wire \T_RDATA[15]_i_5_n_0 ;
  wire \T_RDATA[15]_i_6_n_0 ;
  wire \T_RDATA[15]_i_7_n_0 ;
  wire \T_RDATA[15]_i_8_n_0 ;
  wire \T_RDATA[16]_i_1_n_0 ;
  wire \T_RDATA[16]_i_2_n_0 ;
  wire \T_RDATA[16]_i_3_n_0 ;
  wire \T_RDATA[16]_i_4_n_0 ;
  wire \T_RDATA[16]_i_5_n_0 ;
  wire \T_RDATA[16]_i_6_n_0 ;
  wire \T_RDATA[17]_i_1_n_0 ;
  wire \T_RDATA[17]_i_2_n_0 ;
  wire \T_RDATA[17]_i_3_n_0 ;
  wire \T_RDATA[17]_i_4_n_0 ;
  wire \T_RDATA[17]_i_5_n_0 ;
  wire \T_RDATA[17]_i_6_n_0 ;
  wire \T_RDATA[18]_i_1_n_0 ;
  wire \T_RDATA[18]_i_2_n_0 ;
  wire \T_RDATA[18]_i_3_n_0 ;
  wire \T_RDATA[18]_i_4_n_0 ;
  wire \T_RDATA[18]_i_5_n_0 ;
  wire \T_RDATA[18]_i_6_n_0 ;
  wire \T_RDATA[18]_i_7_n_0 ;
  wire \T_RDATA[19]_i_1_n_0 ;
  wire \T_RDATA[19]_i_2_n_0 ;
  wire \T_RDATA[19]_i_3_n_0 ;
  wire \T_RDATA[19]_i_5_n_0 ;
  wire \T_RDATA[19]_i_6_n_0 ;
  wire \T_RDATA[19]_i_7_n_0 ;
  wire \T_RDATA[1]_i_10_n_0 ;
  wire \T_RDATA[1]_i_11_n_0 ;
  wire \T_RDATA[1]_i_1_n_0 ;
  wire \T_RDATA[1]_i_2_n_0 ;
  wire \T_RDATA[1]_i_3_n_0 ;
  wire \T_RDATA[1]_i_4_n_0 ;
  wire \T_RDATA[1]_i_5_n_0 ;
  wire \T_RDATA[1]_i_6_n_0 ;
  wire \T_RDATA[1]_i_7_n_0 ;
  wire \T_RDATA[1]_i_8_n_0 ;
  wire \T_RDATA[1]_i_9_n_0 ;
  wire \T_RDATA[20]_i_1_n_0 ;
  wire \T_RDATA[20]_i_2_n_0 ;
  wire \T_RDATA[20]_i_3_n_0 ;
  wire \T_RDATA[20]_i_5_n_0 ;
  wire \T_RDATA[20]_i_6_n_0 ;
  wire \T_RDATA[20]_i_7_n_0 ;
  wire \T_RDATA[21]_i_1_n_0 ;
  wire \T_RDATA[21]_i_3_n_0 ;
  wire \T_RDATA[21]_i_4_n_0 ;
  wire \T_RDATA[21]_i_5_n_0 ;
  wire \T_RDATA[21]_i_6_n_0 ;
  wire \T_RDATA[21]_i_7_n_0 ;
  wire \T_RDATA[22]_i_1_n_0 ;
  wire \T_RDATA[22]_i_3_n_0 ;
  wire \T_RDATA[22]_i_4_n_0 ;
  wire \T_RDATA[22]_i_5_n_0 ;
  wire \T_RDATA[22]_i_6_n_0 ;
  wire \T_RDATA[22]_i_7_n_0 ;
  wire \T_RDATA[23]_i_1_n_0 ;
  wire \T_RDATA[23]_i_3_n_0 ;
  wire \T_RDATA[23]_i_4_n_0 ;
  wire \T_RDATA[23]_i_5_n_0 ;
  wire \T_RDATA[23]_i_6_n_0 ;
  wire \T_RDATA[23]_i_7_n_0 ;
  wire \T_RDATA[24]_i_1_n_0 ;
  wire \T_RDATA[24]_i_3_n_0 ;
  wire \T_RDATA[24]_i_4_n_0 ;
  wire \T_RDATA[24]_i_5_n_0 ;
  wire \T_RDATA[24]_i_6_n_0 ;
  wire \T_RDATA[24]_i_7_n_0 ;
  wire \T_RDATA[25]_i_1_n_0 ;
  wire \T_RDATA[25]_i_3_n_0 ;
  wire \T_RDATA[25]_i_4_n_0 ;
  wire \T_RDATA[25]_i_5_n_0 ;
  wire \T_RDATA[25]_i_6_n_0 ;
  wire \T_RDATA[25]_i_7_n_0 ;
  wire \T_RDATA[26]_i_1_n_0 ;
  wire \T_RDATA[26]_i_3_n_0 ;
  wire \T_RDATA[26]_i_4_n_0 ;
  wire \T_RDATA[26]_i_5_n_0 ;
  wire \T_RDATA[26]_i_6_n_0 ;
  wire \T_RDATA[26]_i_7_n_0 ;
  wire \T_RDATA[27]_i_1_n_0 ;
  wire \T_RDATA[27]_i_3_n_0 ;
  wire \T_RDATA[27]_i_4_n_0 ;
  wire \T_RDATA[27]_i_5_n_0 ;
  wire \T_RDATA[27]_i_6_n_0 ;
  wire \T_RDATA[27]_i_7_n_0 ;
  wire \T_RDATA[28]_i_1_n_0 ;
  wire \T_RDATA[28]_i_3_n_0 ;
  wire \T_RDATA[28]_i_4_n_0 ;
  wire \T_RDATA[28]_i_5_n_0 ;
  wire \T_RDATA[28]_i_6_n_0 ;
  wire \T_RDATA[28]_i_7_n_0 ;
  wire \T_RDATA[29]_i_1_n_0 ;
  wire \T_RDATA[29]_i_2_n_0 ;
  wire \T_RDATA[29]_i_3_n_0 ;
  wire \T_RDATA[29]_i_4_n_0 ;
  wire \T_RDATA[29]_i_5_n_0 ;
  wire \T_RDATA[29]_i_6_n_0 ;
  wire \T_RDATA[29]_i_7_n_0 ;
  wire \T_RDATA[29]_i_8_n_0 ;
  wire \T_RDATA[29]_i_9_n_0 ;
  wire \T_RDATA[2]_i_1_n_0 ;
  wire \T_RDATA[2]_i_2_n_0 ;
  wire \T_RDATA[2]_i_3_n_0 ;
  wire \T_RDATA[2]_i_5_n_0 ;
  wire \T_RDATA[2]_i_6_n_0 ;
  wire \T_RDATA[2]_i_7_n_0 ;
  wire \T_RDATA[2]_i_8_n_0 ;
  wire \T_RDATA[2]_i_9_n_0 ;
  wire \T_RDATA[30]_i_1_n_0 ;
  wire \T_RDATA[30]_i_2_n_0 ;
  wire \T_RDATA[30]_i_3_n_0 ;
  wire \T_RDATA[30]_i_4_n_0 ;
  wire \T_RDATA[30]_i_5_n_0 ;
  wire \T_RDATA[30]_i_6_n_0 ;
  wire \T_RDATA[30]_i_7_n_0 ;
  wire \T_RDATA[31]_i_10_n_0 ;
  wire \T_RDATA[31]_i_1_n_0 ;
  wire \T_RDATA[31]_i_2_n_0 ;
  wire \T_RDATA[31]_i_3_n_0 ;
  wire \T_RDATA[31]_i_4_n_0 ;
  wire \T_RDATA[31]_i_5_n_0 ;
  wire \T_RDATA[31]_i_6_n_0 ;
  wire \T_RDATA[31]_i_7_n_0 ;
  wire \T_RDATA[31]_i_8_n_0 ;
  wire \T_RDATA[31]_i_9_n_0 ;
  wire \T_RDATA[3]_i_10_n_0 ;
  wire \T_RDATA[3]_i_11_n_0 ;
  wire \T_RDATA[3]_i_1_n_0 ;
  wire \T_RDATA[3]_i_2_n_0 ;
  wire \T_RDATA[3]_i_3_n_0 ;
  wire \T_RDATA[3]_i_4_n_0 ;
  wire \T_RDATA[3]_i_5_n_0 ;
  wire \T_RDATA[3]_i_6_n_0 ;
  wire \T_RDATA[3]_i_7_n_0 ;
  wire \T_RDATA[3]_i_8_n_0 ;
  wire \T_RDATA[3]_i_9_n_0 ;
  wire \T_RDATA[4]_i_1_n_0 ;
  wire \T_RDATA[4]_i_2_n_0 ;
  wire \T_RDATA[4]_i_3_n_0 ;
  wire \T_RDATA[4]_i_4_n_0 ;
  wire \T_RDATA[4]_i_5_n_0 ;
  wire \T_RDATA[4]_i_6_n_0 ;
  wire \T_RDATA[4]_i_7_n_0 ;
  wire \T_RDATA[4]_i_8_n_0 ;
  wire \T_RDATA[4]_i_9_n_0 ;
  wire \T_RDATA[5]_i_10_n_0 ;
  wire \T_RDATA[5]_i_1_n_0 ;
  wire \T_RDATA[5]_i_3_n_0 ;
  wire \T_RDATA[5]_i_4_n_0 ;
  wire \T_RDATA[5]_i_5_n_0 ;
  wire \T_RDATA[5]_i_6_n_0 ;
  wire \T_RDATA[5]_i_7_n_0 ;
  wire \T_RDATA[5]_i_8_n_0 ;
  wire \T_RDATA[5]_i_9_n_0 ;
  wire \T_RDATA[6]_i_1_n_0 ;
  wire \T_RDATA[6]_i_2_n_0 ;
  wire \T_RDATA[6]_i_3_n_0 ;
  wire \T_RDATA[6]_i_4_n_0 ;
  wire \T_RDATA[6]_i_5_n_0 ;
  wire \T_RDATA[6]_i_6_n_0 ;
  wire \T_RDATA[6]_i_7_n_0 ;
  wire \T_RDATA[6]_i_8_n_0 ;
  wire \T_RDATA[7]_i_1_n_0 ;
  wire \T_RDATA[7]_i_2_n_0 ;
  wire \T_RDATA[7]_i_3_n_0 ;
  wire \T_RDATA[7]_i_4_n_0 ;
  wire \T_RDATA[7]_i_5_n_0 ;
  wire \T_RDATA[7]_i_6_n_0 ;
  wire \T_RDATA[7]_i_7_n_0 ;
  wire \T_RDATA[7]_i_8_n_0 ;
  wire \T_RDATA[8]_i_1_n_0 ;
  wire \T_RDATA[8]_i_2_n_0 ;
  wire \T_RDATA[8]_i_3_n_0 ;
  wire \T_RDATA[8]_i_4_n_0 ;
  wire \T_RDATA[8]_i_5_n_0 ;
  wire \T_RDATA[8]_i_6_n_0 ;
  wire \T_RDATA[8]_i_7_n_0 ;
  wire \T_RDATA[8]_i_8_n_0 ;
  wire \T_RDATA[8]_i_9_n_0 ;
  wire \T_RDATA[9]_i_1_n_0 ;
  wire \T_RDATA[9]_i_2_n_0 ;
  wire \T_RDATA[9]_i_3_n_0 ;
  wire \T_RDATA[9]_i_4_n_0 ;
  wire \T_RDATA[9]_i_5_n_0 ;
  wire \T_RDATA[9]_i_6_n_0 ;
  wire \T_RDATA[9]_i_7_n_0 ;
  wire \T_RDATA[9]_i_8_n_0 ;
  wire \T_RDATA_reg[19]_i_4_n_0 ;
  wire \T_RDATA_reg[20]_i_4_n_0 ;
  wire \T_RDATA_reg[21]_i_2_n_0 ;
  wire \T_RDATA_reg[22]_i_2_n_0 ;
  wire \T_RDATA_reg[23]_i_2_n_0 ;
  wire \T_RDATA_reg[24]_i_2_n_0 ;
  wire \T_RDATA_reg[25]_i_2_n_0 ;
  wire \T_RDATA_reg[26]_i_2_n_0 ;
  wire \T_RDATA_reg[27]_i_2_n_0 ;
  wire \T_RDATA_reg[28]_i_2_n_0 ;
  wire \T_RDATA_reg[2]_i_4_n_0 ;
  wire \T_RDATA_reg[5]_i_2_n_0 ;
  (* MARK_DEBUG *) wire T_RDEN;
  (* MARK_DEBUG *) wire [7:0]T_WADDR;
  (* MARK_DEBUG *) wire [31:0]T_WDATA;
  (* MARK_DEBUG *) wire [3:0]T_WREN;
  wire [47:0]conf_mac_addr;
  wire \conf_mac_addr[15]_i_1_n_0 ;
  wire \conf_mac_addr[39]_i_1_n_0 ;
  wire \conf_mac_addr[47]_i_1_n_0 ;
  wire \conf_mac_addr[47]_i_2_n_0 ;
  wire [1:0]conf_mac_speed;
  wire \conf_mac_speed[0]_i_1_n_0 ;
  wire \conf_mac_speed[1]_i_1_n_0 ;
  wire \conf_mac_speed[1]_i_2_n_0 ;
  wire \conf_mac_speed[1]_i_3_n_0 ;
  wire conf_rx_en;
  wire conf_rx_en_i_1_n_0;
  wire conf_rx_en_i_2_n_0;
  wire conf_rx_jumbo_en;
  wire conf_rx_no_chk_crc;
  wire conf_rx_promiscuous;
  wire conf_rx_reset;
  wire conf_tx_en;
  wire conf_tx_en_i_1_n_0;
  wire conf_tx_en_i_2_n_0;
  wire conf_tx_en_i_3_n_0;
  wire conf_tx_jumbo_en;
  wire conf_tx_jumbo_en_i_1_n_0;
  wire conf_tx_no_gen_crc;
  wire conf_tx_no_gen_crc_i_1_n_0;
  wire conf_tx_reset;
  wire crc_err;
  wire csr_rx_reset15_out;
  wire csr_rx_reset_reg_n_0;
  wire csr_tx_reset14_out;
  wire csr_tx_reset_reg_n_0;
  wire gbe_phy_ready_i_1_n_0;
  wire gbe_phy_ready_i_2_n_0;
  wire gbe_phy_reset_n;
  wire gbe_phy_reset_n_i_10_n_0;
  wire gbe_phy_reset_n_i_1_n_0;
  wire gbe_phy_reset_n_i_2_n_0;
  wire gbe_phy_reset_n_i_3_n_0;
  wire gbe_phy_reset_n_i_4_n_0;
  wire gbe_phy_reset_n_i_5_n_0;
  wire gbe_phy_reset_n_i_6_n_0;
  wire gbe_phy_reset_n_i_7_n_0;
  wire gbe_phy_reset_n_i_8_n_0;
  wire gbe_phy_reset_n_i_9_n_0;
  wire [15:0]p_18_in;
  wire [20:0]p_19_in;
  wire [31:30]p_24_in;
  wire reg_ie_i_1_n_0;
  wire reg_ip_i_1_n_0;
  wire reg_ip_i_2_n_0;
  wire reg_ip_i_3_n_0;
  wire reg_ip_i_4_n_0;
  wire \reset_cnt[0]_i_1_n_0 ;
  wire \reset_cnt[10]_i_1_n_0 ;
  wire \reset_cnt[11]_i_1_n_0 ;
  wire \reset_cnt[12]_i_1_n_0 ;
  wire \reset_cnt[13]_i_1_n_0 ;
  wire \reset_cnt[14]_i_1_n_0 ;
  wire \reset_cnt[15]_i_1_n_0 ;
  wire \reset_cnt[16]_i_1_n_0 ;
  wire \reset_cnt[17]_i_1_n_0 ;
  wire \reset_cnt[18]_i_1_n_0 ;
  wire \reset_cnt[19]_i_1_n_0 ;
  wire \reset_cnt[19]_i_2_n_0 ;
  wire \reset_cnt[1]_i_1_n_0 ;
  wire \reset_cnt[2]_i_1_n_0 ;
  wire \reset_cnt[3]_i_1_n_0 ;
  wire \reset_cnt[4]_i_1_n_0 ;
  wire \reset_cnt[5]_i_1_n_0 ;
  wire \reset_cnt[6]_i_1_n_0 ;
  wire \reset_cnt[7]_i_1_n_0 ;
  wire \reset_cnt[8]_i_1_n_0 ;
  wire \reset_cnt[9]_i_1_n_0 ;
  wire \reset_cnt_reg[12]_i_2_n_0 ;
  wire \reset_cnt_reg[12]_i_2_n_1 ;
  wire \reset_cnt_reg[12]_i_2_n_2 ;
  wire \reset_cnt_reg[12]_i_2_n_3 ;
  wire \reset_cnt_reg[12]_i_2_n_4 ;
  wire \reset_cnt_reg[12]_i_2_n_5 ;
  wire \reset_cnt_reg[12]_i_2_n_6 ;
  wire \reset_cnt_reg[12]_i_2_n_7 ;
  wire \reset_cnt_reg[16]_i_2_n_0 ;
  wire \reset_cnt_reg[16]_i_2_n_1 ;
  wire \reset_cnt_reg[16]_i_2_n_2 ;
  wire \reset_cnt_reg[16]_i_2_n_3 ;
  wire \reset_cnt_reg[16]_i_2_n_4 ;
  wire \reset_cnt_reg[16]_i_2_n_5 ;
  wire \reset_cnt_reg[16]_i_2_n_6 ;
  wire \reset_cnt_reg[16]_i_2_n_7 ;
  wire \reset_cnt_reg[19]_i_3_n_2 ;
  wire \reset_cnt_reg[19]_i_3_n_3 ;
  wire \reset_cnt_reg[19]_i_3_n_5 ;
  wire \reset_cnt_reg[19]_i_3_n_6 ;
  wire \reset_cnt_reg[19]_i_3_n_7 ;
  wire \reset_cnt_reg[4]_i_2_n_0 ;
  wire \reset_cnt_reg[4]_i_2_n_1 ;
  wire \reset_cnt_reg[4]_i_2_n_2 ;
  wire \reset_cnt_reg[4]_i_2_n_3 ;
  wire \reset_cnt_reg[4]_i_2_n_4 ;
  wire \reset_cnt_reg[4]_i_2_n_5 ;
  wire \reset_cnt_reg[4]_i_2_n_6 ;
  wire \reset_cnt_reg[4]_i_2_n_7 ;
  wire \reset_cnt_reg[8]_i_2_n_0 ;
  wire \reset_cnt_reg[8]_i_2_n_1 ;
  wire \reset_cnt_reg[8]_i_2_n_2 ;
  wire \reset_cnt_reg[8]_i_2_n_3 ;
  wire \reset_cnt_reg[8]_i_2_n_4 ;
  wire \reset_cnt_reg[8]_i_2_n_5 ;
  wire \reset_cnt_reg[8]_i_2_n_6 ;
  wire \reset_cnt_reg[8]_i_2_n_7 ;
  wire \reset_cnt_reg_n_0_[0] ;
  wire \reset_cnt_reg_n_0_[10] ;
  wire \reset_cnt_reg_n_0_[11] ;
  wire \reset_cnt_reg_n_0_[12] ;
  wire \reset_cnt_reg_n_0_[13] ;
  wire \reset_cnt_reg_n_0_[14] ;
  wire \reset_cnt_reg_n_0_[15] ;
  wire \reset_cnt_reg_n_0_[16] ;
  wire \reset_cnt_reg_n_0_[17] ;
  wire \reset_cnt_reg_n_0_[18] ;
  wire \reset_cnt_reg_n_0_[19] ;
  wire \reset_cnt_reg_n_0_[1] ;
  wire \reset_cnt_reg_n_0_[2] ;
  wire \reset_cnt_reg_n_0_[3] ;
  wire \reset_cnt_reg_n_0_[4] ;
  wire \reset_cnt_reg_n_0_[5] ;
  wire \reset_cnt_reg_n_0_[6] ;
  wire \reset_cnt_reg_n_0_[7] ;
  wire \reset_cnt_reg_n_0_[8] ;
  wire \reset_cnt_reg_n_0_[9] ;
  wire rstn0;
  wire rstn08_in;
  wire rx_addr_empty;
  wire rx_addr_empty0;
  wire rx_addr_empty_i_10_n_0;
  wire rx_addr_empty_i_11_n_0;
  wire rx_addr_empty_i_12_n_0;
  wire rx_addr_empty_i_13_n_0;
  wire rx_addr_empty_i_14_n_0;
  wire rx_addr_empty_i_15_n_0;
  wire rx_addr_empty_i_1_n_0;
  wire rx_addr_empty_i_4_n_0;
  wire rx_addr_empty_i_5_n_0;
  wire rx_addr_empty_i_6_n_0;
  wire rx_addr_empty_i_8_n_0;
  wire rx_addr_empty_i_9_n_0;
  wire rx_addr_empty_reg_i_2_n_2;
  wire rx_addr_empty_reg_i_2_n_3;
  wire rx_addr_empty_reg_i_3_n_0;
  wire rx_addr_empty_reg_i_3_n_1;
  wire rx_addr_empty_reg_i_3_n_2;
  wire rx_addr_empty_reg_i_3_n_3;
  wire rx_addr_empty_reg_i_7_n_0;
  wire rx_addr_empty_reg_i_7_n_1;
  wire rx_addr_empty_reg_i_7_n_2;
  wire rx_addr_empty_reg_i_7_n_3;
  wire [31:0]rx_addr_end;
  wire \rx_addr_end[31]_i_1_n_0 ;
  wire \rx_addr_end[31]_i_2_n_0 ;
  wire \rx_addr_end[31]_i_3_n_0 ;
  wire \rx_addr_end[31]_i_4_n_0 ;
  wire rx_addr_full;
  wire rx_addr_full0;
  wire rx_addr_full_i_10_n_0;
  wire rx_addr_full_i_11_n_0;
  wire rx_addr_full_i_12_n_0;
  wire rx_addr_full_i_13_n_0;
  wire rx_addr_full_i_14_n_0;
  wire rx_addr_full_i_15_n_0;
  wire rx_addr_full_i_16_n_0;
  wire rx_addr_full_i_17_n_0;
  wire rx_addr_full_i_1_n_0;
  wire rx_addr_full_i_3_n_0;
  wire rx_addr_full_i_5_n_0;
  wire rx_addr_full_i_6_n_0;
  wire rx_addr_full_i_7_n_0;
  wire rx_addr_full_i_8_n_0;
  wire rx_addr_full_reg_i_2_n_2;
  wire rx_addr_full_reg_i_2_n_3;
  wire rx_addr_full_reg_i_4_n_0;
  wire rx_addr_full_reg_i_4_n_1;
  wire rx_addr_full_reg_i_4_n_2;
  wire rx_addr_full_reg_i_4_n_3;
  wire rx_addr_full_reg_i_9_n_0;
  wire rx_addr_full_reg_i_9_n_1;
  wire rx_addr_full_reg_i_9_n_2;
  wire rx_addr_full_reg_i_9_n_3;
  wire [31:0]rx_addr_head;
  wire rx_addr_head_update;
  wire [31:0]rx_addr_start;
  wire \rx_addr_start[31]_i_1_n_0 ;
  wire \rx_addr_start[31]_i_2_n_0 ;
  wire \rx_addr_start[31]_i_3_n_0 ;
  wire [31:0]rx_addr_tail;
  wire \rx_addr_tail[0]_i_1_n_0 ;
  wire \rx_addr_tail[10]_i_1_n_0 ;
  wire \rx_addr_tail[11]_i_1_n_0 ;
  wire \rx_addr_tail[12]_i_1_n_0 ;
  wire \rx_addr_tail[13]_i_1_n_0 ;
  wire \rx_addr_tail[14]_i_1_n_0 ;
  wire \rx_addr_tail[15]_i_1_n_0 ;
  wire \rx_addr_tail[16]_i_1_n_0 ;
  wire \rx_addr_tail[17]_i_1_n_0 ;
  wire \rx_addr_tail[18]_i_1_n_0 ;
  wire \rx_addr_tail[19]_i_1_n_0 ;
  wire \rx_addr_tail[1]_i_1_n_0 ;
  wire \rx_addr_tail[20]_i_1_n_0 ;
  wire \rx_addr_tail[21]_i_1_n_0 ;
  wire \rx_addr_tail[22]_i_1_n_0 ;
  wire \rx_addr_tail[23]_i_1_n_0 ;
  wire \rx_addr_tail[24]_i_1_n_0 ;
  wire \rx_addr_tail[25]_i_1_n_0 ;
  wire \rx_addr_tail[26]_i_1_n_0 ;
  wire \rx_addr_tail[27]_i_1_n_0 ;
  wire \rx_addr_tail[28]_i_1_n_0 ;
  wire \rx_addr_tail[29]_i_1_n_0 ;
  wire \rx_addr_tail[2]_i_1_n_0 ;
  wire \rx_addr_tail[30]_i_1_n_0 ;
  wire \rx_addr_tail[31]_i_1_n_0 ;
  wire \rx_addr_tail[31]_i_2_n_0 ;
  wire \rx_addr_tail[3]_i_1_n_0 ;
  wire \rx_addr_tail[4]_i_1_n_0 ;
  wire \rx_addr_tail[5]_i_1_n_0 ;
  wire \rx_addr_tail[6]_i_1_n_0 ;
  wire \rx_addr_tail[7]_i_1_n_0 ;
  wire \rx_addr_tail[8]_i_1_n_0 ;
  wire \rx_addr_tail[9]_i_1_n_0 ;
  wire [10:0]\^rx_bchunk ;
  wire \rx_bchunk[10]_i_1_n_0 ;
  wire \rx_bchunk[10]_i_2_n_0 ;
  wire rx_desc_empty;
  (* RTL_KEEP = "true" *) wire [15:0]rx_desc_items;
  (* RTL_KEEP = "true" *) wire [31:0]rx_desc_rd_dst;
  (* RTL_KEEP = "true" *) wire rx_desc_rd_rdy;
  wire rx_desc_rd_rdy4_out;
  wire rx_desc_rd_rdy_i_2_n_0;
  wire rx_desc_rd_rdy_i_3_n_0;
  (* RTL_KEEP = "true" *) wire rx_desc_rd_vld;
  wire rx_descriptor_full;
  wire [15:0]rx_descriptor_wr_bnum;
  wire [31:0]rx_descriptor_wr_dst;
  (* MARK_DEBUG *) wire rx_descriptor_wr_rdy;
  (* MARK_DEBUG *) wire rx_descriptor_wr_vld;
  wire tx_addr_empty;
  wire tx_addr_empty0;
  wire tx_addr_empty_i_10_n_0;
  wire tx_addr_empty_i_11_n_0;
  wire tx_addr_empty_i_12_n_0;
  wire tx_addr_empty_i_13_n_0;
  wire tx_addr_empty_i_14_n_0;
  wire tx_addr_empty_i_15_n_0;
  wire tx_addr_empty_i_1_n_0;
  wire tx_addr_empty_i_4_n_0;
  wire tx_addr_empty_i_5_n_0;
  wire tx_addr_empty_i_6_n_0;
  wire tx_addr_empty_i_8_n_0;
  wire tx_addr_empty_i_9_n_0;
  wire tx_addr_empty_reg_i_2_n_2;
  wire tx_addr_empty_reg_i_2_n_3;
  wire tx_addr_empty_reg_i_3_n_0;
  wire tx_addr_empty_reg_i_3_n_1;
  wire tx_addr_empty_reg_i_3_n_2;
  wire tx_addr_empty_reg_i_3_n_3;
  wire tx_addr_empty_reg_i_7_n_0;
  wire tx_addr_empty_reg_i_7_n_1;
  wire tx_addr_empty_reg_i_7_n_2;
  wire tx_addr_empty_reg_i_7_n_3;
  wire [31:0]tx_addr_end;
  wire \tx_addr_end[31]_i_1_n_0 ;
  wire tx_addr_full;
  wire tx_addr_full0;
  wire tx_addr_full_i_10_n_0;
  wire tx_addr_full_i_11_n_0;
  wire tx_addr_full_i_12_n_0;
  wire tx_addr_full_i_13_n_0;
  wire tx_addr_full_i_14_n_0;
  wire tx_addr_full_i_15_n_0;
  wire tx_addr_full_i_1_n_0;
  wire tx_addr_full_i_4_n_0;
  wire tx_addr_full_i_5_n_0;
  wire tx_addr_full_i_6_n_0;
  wire tx_addr_full_i_8_n_0;
  wire tx_addr_full_i_9_n_0;
  wire tx_addr_full_reg_i_2_n_2;
  wire tx_addr_full_reg_i_2_n_3;
  wire tx_addr_full_reg_i_3_n_0;
  wire tx_addr_full_reg_i_3_n_1;
  wire tx_addr_full_reg_i_3_n_2;
  wire tx_addr_full_reg_i_3_n_3;
  wire tx_addr_full_reg_i_7_n_0;
  wire tx_addr_full_reg_i_7_n_1;
  wire tx_addr_full_reg_i_7_n_2;
  wire tx_addr_full_reg_i_7_n_3;
  wire [31:0]tx_addr_head;
  wire \tx_addr_head[0]_i_1_n_0 ;
  wire \tx_addr_head[10]_i_1_n_0 ;
  wire \tx_addr_head[11]_i_1_n_0 ;
  wire \tx_addr_head[12]_i_1_n_0 ;
  wire \tx_addr_head[13]_i_1_n_0 ;
  wire \tx_addr_head[14]_i_1_n_0 ;
  wire \tx_addr_head[15]_i_1_n_0 ;
  wire \tx_addr_head[16]_i_1_n_0 ;
  wire \tx_addr_head[17]_i_1_n_0 ;
  wire \tx_addr_head[18]_i_1_n_0 ;
  wire \tx_addr_head[19]_i_1_n_0 ;
  wire \tx_addr_head[1]_i_1_n_0 ;
  wire \tx_addr_head[20]_i_1_n_0 ;
  wire \tx_addr_head[21]_i_1_n_0 ;
  wire \tx_addr_head[22]_i_1_n_0 ;
  wire \tx_addr_head[23]_i_1_n_0 ;
  wire \tx_addr_head[24]_i_1_n_0 ;
  wire \tx_addr_head[25]_i_1_n_0 ;
  wire \tx_addr_head[26]_i_1_n_0 ;
  wire \tx_addr_head[27]_i_1_n_0 ;
  wire \tx_addr_head[28]_i_1_n_0 ;
  wire \tx_addr_head[29]_i_1_n_0 ;
  wire \tx_addr_head[2]_i_1_n_0 ;
  wire \tx_addr_head[30]_i_1_n_0 ;
  wire \tx_addr_head[31]_i_1_n_0 ;
  wire \tx_addr_head[31]_i_2_n_0 ;
  wire \tx_addr_head[31]_i_3_n_0 ;
  wire \tx_addr_head[3]_i_1_n_0 ;
  wire \tx_addr_head[4]_i_1_n_0 ;
  wire \tx_addr_head[5]_i_1_n_0 ;
  wire \tx_addr_head[6]_i_1_n_0 ;
  wire \tx_addr_head[7]_i_1_n_0 ;
  wire \tx_addr_head[8]_i_1_n_0 ;
  wire \tx_addr_head[9]_i_1_n_0 ;
  wire [31:0]tx_addr_start;
  wire \tx_addr_start[31]_i_1_n_0 ;
  wire [31:0]tx_addr_tail;
  wire tx_addr_tail_update;
  wire [10:0]\^tx_bchunk ;
  wire \tx_bchunk[0]_i_1_n_0 ;
  wire \tx_bchunk[10]_i_1_n_0 ;
  wire \tx_bchunk[10]_i_2_n_0 ;
  wire \tx_bchunk[10]_i_3_n_0 ;
  wire \tx_bchunk[1]_i_1_n_0 ;
  wire \tx_bchunk[2]_i_1_n_0 ;
  wire \tx_bchunk[3]_i_1_n_0 ;
  wire \tx_bchunk[4]_i_1_n_0 ;
  wire \tx_bchunk[5]_i_1_n_0 ;
  wire \tx_bchunk[6]_i_1_n_0 ;
  wire \tx_bchunk[7]_i_1_n_0 ;
  wire \tx_bchunk[8]_i_1_n_0 ;
  wire \tx_bchunk[9]_i_1_n_0 ;
  wire \tx_bchunk[9]_i_2_n_0 ;
  wire \tx_bchunk[9]_i_3_n_0 ;
  wire \tx_bchunk[9]_i_4_n_0 ;
  wire \tx_bchunk[9]_i_5_n_0 ;
  wire \tx_desc_wr_bnum[15]_i_1_n_0 ;
  wire \tx_desc_wr_bnum_reg_n_0_[0] ;
  wire \tx_desc_wr_bnum_reg_n_0_[10] ;
  wire \tx_desc_wr_bnum_reg_n_0_[11] ;
  wire \tx_desc_wr_bnum_reg_n_0_[12] ;
  wire \tx_desc_wr_bnum_reg_n_0_[13] ;
  wire \tx_desc_wr_bnum_reg_n_0_[14] ;
  wire \tx_desc_wr_bnum_reg_n_0_[15] ;
  wire \tx_desc_wr_bnum_reg_n_0_[1] ;
  wire \tx_desc_wr_bnum_reg_n_0_[2] ;
  wire \tx_desc_wr_bnum_reg_n_0_[3] ;
  wire \tx_desc_wr_bnum_reg_n_0_[4] ;
  wire \tx_desc_wr_bnum_reg_n_0_[5] ;
  wire \tx_desc_wr_bnum_reg_n_0_[6] ;
  wire \tx_desc_wr_bnum_reg_n_0_[7] ;
  wire \tx_desc_wr_bnum_reg_n_0_[8] ;
  wire \tx_desc_wr_bnum_reg_n_0_[9] ;
  wire \tx_desc_wr_src[31]_i_1_n_0 ;
  wire \tx_desc_wr_src[31]_i_2_n_0 ;
  wire \tx_desc_wr_src_reg_n_0_[0] ;
  wire \tx_desc_wr_src_reg_n_0_[10] ;
  wire \tx_desc_wr_src_reg_n_0_[11] ;
  wire \tx_desc_wr_src_reg_n_0_[12] ;
  wire \tx_desc_wr_src_reg_n_0_[13] ;
  wire \tx_desc_wr_src_reg_n_0_[14] ;
  wire \tx_desc_wr_src_reg_n_0_[15] ;
  wire \tx_desc_wr_src_reg_n_0_[16] ;
  wire \tx_desc_wr_src_reg_n_0_[17] ;
  wire \tx_desc_wr_src_reg_n_0_[18] ;
  wire \tx_desc_wr_src_reg_n_0_[19] ;
  wire \tx_desc_wr_src_reg_n_0_[1] ;
  wire \tx_desc_wr_src_reg_n_0_[20] ;
  wire \tx_desc_wr_src_reg_n_0_[21] ;
  wire \tx_desc_wr_src_reg_n_0_[22] ;
  wire \tx_desc_wr_src_reg_n_0_[23] ;
  wire \tx_desc_wr_src_reg_n_0_[24] ;
  wire \tx_desc_wr_src_reg_n_0_[25] ;
  wire \tx_desc_wr_src_reg_n_0_[26] ;
  wire \tx_desc_wr_src_reg_n_0_[27] ;
  wire \tx_desc_wr_src_reg_n_0_[28] ;
  wire \tx_desc_wr_src_reg_n_0_[29] ;
  wire \tx_desc_wr_src_reg_n_0_[2] ;
  wire \tx_desc_wr_src_reg_n_0_[30] ;
  wire \tx_desc_wr_src_reg_n_0_[31] ;
  wire \tx_desc_wr_src_reg_n_0_[3] ;
  wire \tx_desc_wr_src_reg_n_0_[4] ;
  wire \tx_desc_wr_src_reg_n_0_[5] ;
  wire \tx_desc_wr_src_reg_n_0_[6] ;
  wire \tx_desc_wr_src_reg_n_0_[7] ;
  wire \tx_desc_wr_src_reg_n_0_[8] ;
  wire \tx_desc_wr_src_reg_n_0_[9] ;
  wire tx_desc_wr_vld3_out;
  wire tx_desc_wr_vld_reg_n_0;
  wire [15:0]tx_descriptor_rd_bnum;
  (* MARK_DEBUG *) wire tx_descriptor_rd_rdy;
  wire [31:0]tx_descriptor_rd_src;
  (* MARK_DEBUG *) wire tx_descriptor_rd_vld;
  wire [3:2]\NLW_reset_cnt_reg[19]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_reset_cnt_reg[19]_i_3_O_UNCONNECTED ;
  wire [3:3]NLW_rx_addr_empty_reg_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_rx_addr_empty_reg_i_2_O_UNCONNECTED;
  wire [3:0]NLW_rx_addr_empty_reg_i_3_O_UNCONNECTED;
  wire [3:0]NLW_rx_addr_empty_reg_i_7_O_UNCONNECTED;
  wire [3:3]NLW_rx_addr_full_reg_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_rx_addr_full_reg_i_2_O_UNCONNECTED;
  wire [3:0]NLW_rx_addr_full_reg_i_4_O_UNCONNECTED;
  wire [3:0]NLW_rx_addr_full_reg_i_9_O_UNCONNECTED;
  wire [3:3]NLW_tx_addr_empty_reg_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_tx_addr_empty_reg_i_2_O_UNCONNECTED;
  wire [3:0]NLW_tx_addr_empty_reg_i_3_O_UNCONNECTED;
  wire [3:0]NLW_tx_addr_empty_reg_i_7_O_UNCONNECTED;
  wire [3:3]NLW_tx_addr_full_reg_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_tx_addr_full_reg_i_2_O_UNCONNECTED;
  wire [3:0]NLW_tx_addr_full_reg_i_3_O_UNCONNECTED;
  wire [3:0]NLW_tx_addr_full_reg_i_7_O_UNCONNECTED;
  wire [4:0]NLW_u_rx_descriptor_fifo_room_cnt_UNCONNECTED;
  wire NLW_u_tx_descriptor_fifo_empty_UNCONNECTED;
  wire NLW_u_tx_descriptor_fifo_full_UNCONNECTED;
  wire NLW_u_tx_descriptor_fifo_wr_rdy_UNCONNECTED;

  assign rx_bchunk[15] = \<const0> ;
  assign rx_bchunk[14] = \<const0> ;
  assign rx_bchunk[13] = \<const0> ;
  assign rx_bchunk[12] = \<const0> ;
  assign rx_bchunk[11] = \<const0> ;
  assign rx_bchunk[10:0] = \^rx_bchunk [10:0];
  assign tx_bchunk[15] = \<const0> ;
  assign tx_bchunk[14] = \<const0> ;
  assign tx_bchunk[13] = \<const0> ;
  assign tx_bchunk[12] = \<const0> ;
  assign tx_bchunk[11] = \<const0> ;
  assign tx_bchunk[10:0] = \^tx_bchunk [10:0];
  LUT6 #(
    .INIT(64'hAAAAAAAABF80AF80)) 
    \FSM_onehot_state[0]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(\FSM_onehot_state_reg_n_0_[1] ),
        .I2(gbe_phy_reset_n_i_4_n_0),
        .I3(\FSM_onehot_state_reg_n_0_[0] ),
        .I4(\reset_cnt_reg_n_0_[19] ),
        .I5(gbe_phy_reset_n_i_3_n_0),
        .O(\FSM_onehot_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF0F0A2E2)) 
    \FSM_onehot_state[1]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(gbe_phy_reset_n_i_4_n_0),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .I3(\reset_cnt_reg_n_0_[19] ),
        .I4(gbe_phy_reset_n_i_3_n_0),
        .O(\FSM_onehot_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAFFBFAAAA8888)) 
    \FSM_onehot_state[2]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(gbe_phy_reset_n_i_4_n_0),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .I3(\reset_cnt_reg_n_0_[19] ),
        .I4(gbe_phy_reset_n_i_3_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[2] ),
        .O(\FSM_onehot_state[2]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "ST_IDLE:100,ST_RESET:001,ST_POST:010," *) 
  FDPE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\FSM_onehot_state[0]_i_1_n_0 ),
        .PRE(gbe_phy_reset_n_i_2_n_0),
        .Q(\FSM_onehot_state_reg_n_0_[0] ));
  (* FSM_ENCODED_STATES = "ST_IDLE:100,ST_RESET:001,ST_POST:010," *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\FSM_onehot_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[1] ));
  (* FSM_ENCODED_STATES = "ST_IDLE:100,ST_RESET:001,ST_POST:010," *) 
  FDCE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\FSM_onehot_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[2] ));
  GND GND
       (.G(\<const0> ));
  LUT6 #(
    .INIT(64'h4F444F4F44444444)) 
    \T_RDATA[0]_i_1 
       (.I0(\T_RDATA[0]_i_2_n_0 ),
        .I1(\T_RDATA[1]_i_3_n_0 ),
        .I2(\T_RDATA[29]_i_5_n_0 ),
        .I3(\T_RDATA[0]_i_3_n_0 ),
        .I4(\T_RDATA[0]_i_4_n_0 ),
        .I5(\T_RDATA[0]_i_5_n_0 ),
        .O(\T_RDATA[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFAFFEAEAAAAFEAE)) 
    \T_RDATA[0]_i_10 
       (.I0(T_RADDR[5]),
        .I1(conf_mac_addr[40]),
        .I2(T_RADDR[7]),
        .I3(\^rx_bchunk [0]),
        .I4(T_RADDR[6]),
        .I5(p_18_in[0]),
        .O(\T_RDATA[0]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hA8AAA8A8)) 
    \T_RDATA[0]_i_11 
       (.I0(T_RADDR[5]),
        .I1(T_RADDR[6]),
        .I2(T_RADDR[7]),
        .I3(csr_rx_reset_reg_n_0),
        .I4(p_24_in[30]),
        .O(\T_RDATA[0]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h2C20)) 
    \T_RDATA[0]_i_12 
       (.I0(tx_addr_end[0]),
        .I1(T_RADDR[7]),
        .I2(T_RADDR[6]),
        .I3(rx_addr_tail[0]),
        .O(\T_RDATA[0]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hF0F3FF5FFFF3FF5F)) 
    \T_RDATA[0]_i_13 
       (.I0(rx_addr_start[0]),
        .I1(rx_desc_rd_dst[0]),
        .I2(T_RADDR[7]),
        .I3(T_RADDR[5]),
        .I4(T_RADDR[6]),
        .I5(tx_addr_head[0]),
        .O(\T_RDATA[0]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'hCF44CF77)) 
    \T_RDATA[0]_i_2 
       (.I0(tx_addr_empty),
        .I1(T_RADDR[6]),
        .I2(rx_addr_empty),
        .I3(T_RADDR[7]),
        .I4(conf_mac_addr[8]),
        .O(\T_RDATA[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFF01)) 
    \T_RDATA[0]_i_3 
       (.I0(\T_RDATA[0]_i_6_n_0 ),
        .I1(T_RADDR[7]),
        .I2(T_RADDR[5]),
        .I3(\T_RDATA[0]_i_7_n_0 ),
        .I4(T_RADDR[4]),
        .O(\T_RDATA[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBBBBFBFBBBFB)) 
    \T_RDATA[0]_i_4 
       (.I0(\T_RDATA[0]_i_8_n_0 ),
        .I1(T_RADDR[5]),
        .I2(\T_RDATA[0]_i_9_n_0 ),
        .I3(\^tx_bchunk [0]),
        .I4(\T_RDATA[8]_i_7_n_0 ),
        .I5(T_RADDR[3]),
        .O(\T_RDATA[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00A2FFA2FFFFFFFF)) 
    \T_RDATA[0]_i_5 
       (.I0(\T_RDATA[0]_i_10_n_0 ),
        .I1(\T_RDATA[0]_i_11_n_0 ),
        .I2(\T_RDATA[0]_i_12_n_0 ),
        .I3(T_RADDR[3]),
        .I4(\T_RDATA[0]_i_13_n_0 ),
        .I5(T_RADDR[4]),
        .O(\T_RDATA[0]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h0035F035)) 
    \T_RDATA[0]_i_6 
       (.I0(conf_mac_speed[0]),
        .I1(p_19_in[0]),
        .I2(T_RADDR[6]),
        .I3(T_RADDR[3]),
        .I4(tx_addr_tail[0]),
        .O(\T_RDATA[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000320200000000)) 
    \T_RDATA[0]_i_7 
       (.I0(tx_addr_tail[0]),
        .I1(T_RADDR[3]),
        .I2(T_RADDR[6]),
        .I3(crc_err),
        .I4(T_RADDR[5]),
        .I5(T_RADDR[7]),
        .O(\T_RDATA[0]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hA02AAA2A)) 
    \T_RDATA[0]_i_8 
       (.I0(T_RADDR[3]),
        .I1(tx_addr_start[0]),
        .I2(T_RADDR[6]),
        .I3(T_RADDR[7]),
        .I4(rx_addr_head[0]),
        .O(\T_RDATA[0]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF04F4)) 
    \T_RDATA[0]_i_9 
       (.I0(csr_tx_reset_reg_n_0),
        .I1(p_24_in[30]),
        .I2(T_RADDR[7]),
        .I3(rx_addr_end[0]),
        .I4(T_RADDR[6]),
        .O(\T_RDATA[0]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'h0000AAAE)) 
    \T_RDATA[10]_i_1 
       (.I0(\T_RDATA[10]_i_2_n_0 ),
        .I1(\T_RDATA[10]_i_3_n_0 ),
        .I2(T_RADDR[2]),
        .I3(T_RADDR[3]),
        .I4(\T_RDATA[10]_i_4_n_0 ),
        .O(\T_RDATA[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h04FF04FFFFFF04FF)) 
    \T_RDATA[10]_i_2 
       (.I0(\T_RDATA[10]_i_5_n_0 ),
        .I1(T_RADDR[3]),
        .I2(T_RADDR[2]),
        .I3(T_RADDR[4]),
        .I4(conf_mac_addr[2]),
        .I5(\T_RDATA[31]_i_7_n_0 ),
        .O(\T_RDATA[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFAAEAAAAAAAEAAA)) 
    \T_RDATA[10]_i_3 
       (.I0(\T_RDATA[10]_i_6_n_0 ),
        .I1(tx_addr_end[10]),
        .I2(T_RADDR[6]),
        .I3(T_RADDR[5]),
        .I4(T_RADDR[7]),
        .I5(rx_addr_tail[10]),
        .O(\T_RDATA[10]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBABBBBBBBAAA)) 
    \T_RDATA[10]_i_4 
       (.I0(\T_RDATA[31]_i_6_n_0 ),
        .I1(T_RADDR[4]),
        .I2(\T_RDATA[10]_i_7_n_0 ),
        .I3(T_RADDR[3]),
        .I4(T_RADDR[2]),
        .I5(\T_RDATA[10]_i_8_n_0 ),
        .O(\T_RDATA[10]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hF0F3FF5FFFF3FF5F)) 
    \T_RDATA[10]_i_5 
       (.I0(rx_addr_start[10]),
        .I1(rx_desc_rd_dst[10]),
        .I2(T_RADDR[7]),
        .I3(T_RADDR[5]),
        .I4(T_RADDR[6]),
        .I5(tx_addr_head[10]),
        .O(\T_RDATA[10]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000033E200E2)) 
    \T_RDATA[10]_i_6 
       (.I0(conf_mac_addr[34]),
        .I1(T_RADDR[7]),
        .I2(\^rx_bchunk [10]),
        .I3(T_RADDR[6]),
        .I4(p_18_in[10]),
        .I5(T_RADDR[5]),
        .O(\T_RDATA[10]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hF0FF3F5FFFFF3F5F)) 
    \T_RDATA[10]_i_7 
       (.I0(tx_addr_tail[10]),
        .I1(tx_addr_start[10]),
        .I2(T_RADDR[6]),
        .I3(T_RADDR[5]),
        .I4(T_RADDR[7]),
        .I5(rx_addr_head[10]),
        .O(\T_RDATA[10]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hF0F53FFFFFF53FFF)) 
    \T_RDATA[10]_i_8 
       (.I0(tx_addr_tail[10]),
        .I1(\^tx_bchunk [10]),
        .I2(T_RADDR[6]),
        .I3(T_RADDR[5]),
        .I4(T_RADDR[7]),
        .I5(rx_addr_end[10]),
        .O(\T_RDATA[10]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h0000AAAB)) 
    \T_RDATA[11]_i_1 
       (.I0(\T_RDATA[11]_i_2_n_0 ),
        .I1(T_RADDR[2]),
        .I2(T_RADDR[3]),
        .I3(\T_RDATA[11]_i_3_n_0 ),
        .I4(\T_RDATA[11]_i_4_n_0 ),
        .O(\T_RDATA[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h04FF04FFFFFF04FF)) 
    \T_RDATA[11]_i_2 
       (.I0(\T_RDATA[11]_i_5_n_0 ),
        .I1(T_RADDR[3]),
        .I2(T_RADDR[2]),
        .I3(T_RADDR[4]),
        .I4(conf_mac_addr[3]),
        .I5(\T_RDATA[31]_i_7_n_0 ),
        .O(\T_RDATA[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000CFF7FFF7)) 
    \T_RDATA[11]_i_3 
       (.I0(p_18_in[11]),
        .I1(T_RADDR[6]),
        .I2(T_RADDR[7]),
        .I3(T_RADDR[5]),
        .I4(rx_addr_tail[11]),
        .I5(\T_RDATA[11]_i_6_n_0 ),
        .O(\T_RDATA[11]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBABBBBBBBAAA)) 
    \T_RDATA[11]_i_4 
       (.I0(\T_RDATA[31]_i_6_n_0 ),
        .I1(T_RADDR[4]),
        .I2(\T_RDATA[11]_i_7_n_0 ),
        .I3(T_RADDR[3]),
        .I4(T_RADDR[2]),
        .I5(\T_RDATA[11]_i_8_n_0 ),
        .O(\T_RDATA[11]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hF5FFF5FFF03FFF3F)) 
    \T_RDATA[11]_i_5 
       (.I0(tx_addr_head[11]),
        .I1(rx_addr_start[11]),
        .I2(T_RADDR[7]),
        .I3(T_RADDR[6]),
        .I4(rx_desc_rd_dst[11]),
        .I5(T_RADDR[5]),
        .O(\T_RDATA[11]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h00008380)) 
    \T_RDATA[11]_i_6 
       (.I0(tx_addr_end[11]),
        .I1(T_RADDR[5]),
        .I2(T_RADDR[6]),
        .I3(conf_mac_addr[35]),
        .I4(T_RADDR[7]),
        .O(\T_RDATA[11]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hC7C7F3FFF7F7F3FF)) 
    \T_RDATA[11]_i_7 
       (.I0(tx_addr_start[11]),
        .I1(T_RADDR[6]),
        .I2(T_RADDR[7]),
        .I3(tx_addr_tail[11]),
        .I4(T_RADDR[5]),
        .I5(rx_addr_head[11]),
        .O(\T_RDATA[11]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF47FF)) 
    \T_RDATA[11]_i_8 
       (.I0(rx_addr_end[11]),
        .I1(T_RADDR[5]),
        .I2(tx_addr_tail[11]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .O(\T_RDATA[11]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0000000E00000000)) 
    \T_RDATA[12]_i_1 
       (.I0(\T_RDATA[12]_i_2_n_0 ),
        .I1(\T_RDATA[12]_i_3_n_0 ),
        .I2(\T_RDATA[12]_i_4_n_0 ),
        .I3(T_RADDR[1]),
        .I4(T_RADDR[0]),
        .I5(T_RDEN),
        .O(\T_RDATA[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h04FF04FFFFFF04FF)) 
    \T_RDATA[12]_i_2 
       (.I0(\T_RDATA[12]_i_5_n_0 ),
        .I1(T_RADDR[3]),
        .I2(T_RADDR[2]),
        .I3(T_RADDR[4]),
        .I4(conf_mac_addr[4]),
        .I5(\T_RDATA[31]_i_7_n_0 ),
        .O(\T_RDATA[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAABA00000000)) 
    \T_RDATA[12]_i_3 
       (.I0(\T_RDATA[12]_i_6_n_0 ),
        .I1(T_RADDR[7]),
        .I2(conf_mac_addr[36]),
        .I3(T_RADDR[5]),
        .I4(T_RADDR[6]),
        .I5(\T_RDATA[31]_i_5_n_0 ),
        .O(\T_RDATA[12]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h0000FECE)) 
    \T_RDATA[12]_i_4 
       (.I0(\T_RDATA[12]_i_7_n_0 ),
        .I1(T_RADDR[2]),
        .I2(T_RADDR[3]),
        .I3(\T_RDATA[12]_i_8_n_0 ),
        .I4(T_RADDR[4]),
        .O(\T_RDATA[12]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hF3F3C7F7FFFFC7F7)) 
    \T_RDATA[12]_i_5 
       (.I0(rx_desc_rd_dst[12]),
        .I1(T_RADDR[6]),
        .I2(T_RADDR[7]),
        .I3(rx_addr_start[12]),
        .I4(T_RADDR[5]),
        .I5(tx_addr_head[12]),
        .O(\T_RDATA[12]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h2C200C0C2C200000)) 
    \T_RDATA[12]_i_6 
       (.I0(rx_addr_tail[12]),
        .I1(T_RADDR[6]),
        .I2(T_RADDR[7]),
        .I3(tx_addr_end[12]),
        .I4(T_RADDR[5]),
        .I5(p_18_in[12]),
        .O(\T_RDATA[12]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF47FF)) 
    \T_RDATA[12]_i_7 
       (.I0(rx_addr_end[12]),
        .I1(T_RADDR[5]),
        .I2(tx_addr_tail[12]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .O(\T_RDATA[12]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hF53FF0FFF53FFFFF)) 
    \T_RDATA[12]_i_8 
       (.I0(tx_addr_start[12]),
        .I1(rx_addr_head[12]),
        .I2(T_RADDR[7]),
        .I3(T_RADDR[6]),
        .I4(T_RADDR[5]),
        .I5(tx_addr_tail[12]),
        .O(\T_RDATA[12]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0200020002000202)) 
    \T_RDATA[13]_i_1 
       (.I0(T_RDEN),
        .I1(T_RADDR[0]),
        .I2(T_RADDR[1]),
        .I3(\T_RDATA[13]_i_2_n_0 ),
        .I4(\T_RDATA[13]_i_3_n_0 ),
        .I5(\T_RDATA[13]_i_4_n_0 ),
        .O(\T_RDATA[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h4F004FFF44004400)) 
    \T_RDATA[13]_i_2 
       (.I0(\T_RDATA[31]_i_7_n_0 ),
        .I1(conf_mac_addr[5]),
        .I2(\T_RDATA[13]_i_5_n_0 ),
        .I3(T_RADDR[4]),
        .I4(\T_RDATA[13]_i_6_n_0 ),
        .I5(\T_RDATA[5]_i_3_n_0 ),
        .O(\T_RDATA[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFFFF47)) 
    \T_RDATA[13]_i_3 
       (.I0(p_18_in[13]),
        .I1(T_RADDR[6]),
        .I2(conf_mac_addr[37]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[5]),
        .I5(\T_RDATA[13]_i_7_n_0 ),
        .O(\T_RDATA[13]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h01554555FFFFFFFF)) 
    \T_RDATA[13]_i_4 
       (.I0(T_RADDR[4]),
        .I1(T_RADDR[5]),
        .I2(tx_addr_tail[13]),
        .I3(\T_RDATA[18]_i_6_n_0 ),
        .I4(rx_addr_end[13]),
        .I5(\T_RDATA[31]_i_5_n_0 ),
        .O(\T_RDATA[13]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFF44CFFFFF77CFFF)) 
    \T_RDATA[13]_i_5 
       (.I0(tx_addr_head[13]),
        .I1(T_RADDR[5]),
        .I2(rx_addr_start[13]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(rx_desc_rd_dst[13]),
        .O(\T_RDATA[13]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hF0FF3F3FFFFF5F5F)) 
    \T_RDATA[13]_i_6 
       (.I0(tx_addr_tail[13]),
        .I1(tx_addr_start[13]),
        .I2(T_RADDR[6]),
        .I3(rx_addr_head[13]),
        .I4(T_RADDR[7]),
        .I5(T_RADDR[5]),
        .O(\T_RDATA[13]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h33BBF33333333333)) 
    \T_RDATA[13]_i_7 
       (.I0(tx_addr_end[13]),
        .I1(T_RADDR[4]),
        .I2(rx_addr_tail[13]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(T_RADDR[5]),
        .O(\T_RDATA[13]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FF10FF32)) 
    \T_RDATA[14]_i_1 
       (.I0(T_RADDR[3]),
        .I1(T_RADDR[2]),
        .I2(\T_RDATA[14]_i_2_n_0 ),
        .I3(\T_RDATA[14]_i_3_n_0 ),
        .I4(\T_RDATA[14]_i_4_n_0 ),
        .I5(\T_RDATA[14]_i_5_n_0 ),
        .O(\T_RDATA[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF20222000)) 
    \T_RDATA[14]_i_2 
       (.I0(T_RADDR[6]),
        .I1(T_RADDR[7]),
        .I2(tx_addr_end[14]),
        .I3(T_RADDR[5]),
        .I4(p_18_in[14]),
        .I5(\T_RDATA[14]_i_6_n_0 ),
        .O(\T_RDATA[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h4F)) 
    \T_RDATA[14]_i_3 
       (.I0(\T_RDATA[31]_i_7_n_0 ),
        .I1(conf_mac_addr[6]),
        .I2(T_RADDR[4]),
        .O(\T_RDATA[14]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF3F3C7F7FFFFC7F7)) 
    \T_RDATA[14]_i_4 
       (.I0(rx_desc_rd_dst[14]),
        .I1(T_RADDR[6]),
        .I2(T_RADDR[7]),
        .I3(rx_addr_start[14]),
        .I4(T_RADDR[5]),
        .I5(tx_addr_head[14]),
        .O(\T_RDATA[14]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBABBBBBBBAAA)) 
    \T_RDATA[14]_i_5 
       (.I0(\T_RDATA[31]_i_6_n_0 ),
        .I1(T_RADDR[4]),
        .I2(\T_RDATA[14]_i_7_n_0 ),
        .I3(T_RADDR[3]),
        .I4(T_RADDR[2]),
        .I5(\T_RDATA[14]_i_8_n_0 ),
        .O(\T_RDATA[14]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h0C020002)) 
    \T_RDATA[14]_i_6 
       (.I0(conf_mac_addr[38]),
        .I1(T_RADDR[5]),
        .I2(T_RADDR[6]),
        .I3(T_RADDR[7]),
        .I4(rx_addr_tail[14]),
        .O(\T_RDATA[14]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hC7C7F3FFF7F7F3FF)) 
    \T_RDATA[14]_i_7 
       (.I0(tx_addr_start[14]),
        .I1(T_RADDR[6]),
        .I2(T_RADDR[7]),
        .I3(tx_addr_tail[14]),
        .I4(T_RADDR[5]),
        .I5(rx_addr_head[14]),
        .O(\T_RDATA[14]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF47FF)) 
    \T_RDATA[14]_i_8 
       (.I0(rx_addr_end[14]),
        .I1(T_RADDR[5]),
        .I2(tx_addr_tail[14]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .O(\T_RDATA[14]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FF01FF0D)) 
    \T_RDATA[15]_i_1 
       (.I0(\T_RDATA[15]_i_2_n_0 ),
        .I1(T_RADDR[3]),
        .I2(T_RADDR[2]),
        .I3(\T_RDATA[15]_i_3_n_0 ),
        .I4(\T_RDATA[15]_i_4_n_0 ),
        .I5(\T_RDATA[15]_i_5_n_0 ),
        .O(\T_RDATA[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000CFF7FFF7)) 
    \T_RDATA[15]_i_2 
       (.I0(p_18_in[15]),
        .I1(T_RADDR[6]),
        .I2(T_RADDR[7]),
        .I3(T_RADDR[5]),
        .I4(rx_addr_tail[15]),
        .I5(\T_RDATA[15]_i_6_n_0 ),
        .O(\T_RDATA[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h4F)) 
    \T_RDATA[15]_i_3 
       (.I0(\T_RDATA[31]_i_7_n_0 ),
        .I1(conf_mac_addr[7]),
        .I2(T_RADDR[4]),
        .O(\T_RDATA[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF3F3C7F7FFFFC7F7)) 
    \T_RDATA[15]_i_4 
       (.I0(rx_desc_rd_dst[15]),
        .I1(T_RADDR[6]),
        .I2(T_RADDR[7]),
        .I3(rx_addr_start[15]),
        .I4(T_RADDR[5]),
        .I5(tx_addr_head[15]),
        .O(\T_RDATA[15]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBABBBBBBBAAA)) 
    \T_RDATA[15]_i_5 
       (.I0(\T_RDATA[31]_i_6_n_0 ),
        .I1(T_RADDR[4]),
        .I2(\T_RDATA[15]_i_7_n_0 ),
        .I3(T_RADDR[3]),
        .I4(T_RADDR[2]),
        .I5(\T_RDATA[15]_i_8_n_0 ),
        .O(\T_RDATA[15]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h00008380)) 
    \T_RDATA[15]_i_6 
       (.I0(tx_addr_end[15]),
        .I1(T_RADDR[5]),
        .I2(T_RADDR[6]),
        .I3(conf_mac_addr[39]),
        .I4(T_RADDR[7]),
        .O(\T_RDATA[15]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hC7C7F3FFF7F7F3FF)) 
    \T_RDATA[15]_i_7 
       (.I0(tx_addr_start[15]),
        .I1(T_RADDR[6]),
        .I2(T_RADDR[7]),
        .I3(tx_addr_tail[15]),
        .I4(T_RADDR[5]),
        .I5(rx_addr_head[15]),
        .O(\T_RDATA[15]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF47FF)) 
    \T_RDATA[15]_i_8 
       (.I0(rx_addr_end[15]),
        .I1(T_RADDR[5]),
        .I2(tx_addr_tail[15]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .O(\T_RDATA[15]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0101015151510151)) 
    \T_RDATA[16]_i_1 
       (.I0(\T_RDATA[29]_i_5_n_0 ),
        .I1(\T_RDATA[16]_i_2_n_0 ),
        .I2(T_RADDR[3]),
        .I3(\T_RDATA[16]_i_3_n_0 ),
        .I4(T_RADDR[4]),
        .I5(\T_RDATA[16]_i_4_n_0 ),
        .O(\T_RDATA[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2AAAFFFF2AAA0000)) 
    \T_RDATA[16]_i_2 
       (.I0(\T_RDATA[16]_i_5_n_0 ),
        .I1(T_RADDR[5]),
        .I2(\T_RDATA[18]_i_6_n_0 ),
        .I3(rx_addr_tail[16]),
        .I4(T_RADDR[4]),
        .I5(\T_RDATA[16]_i_6_n_0 ),
        .O(\T_RDATA[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF0F37C7CFCFF7C7C)) 
    \T_RDATA[16]_i_3 
       (.I0(rx_addr_head[16]),
        .I1(T_RADDR[5]),
        .I2(T_RADDR[7]),
        .I3(tx_addr_tail[16]),
        .I4(T_RADDR[6]),
        .I5(tx_addr_start[16]),
        .O(\T_RDATA[16]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF5FFF5FFF03FFF3F)) 
    \T_RDATA[16]_i_4 
       (.I0(tx_addr_head[16]),
        .I1(rx_addr_start[16]),
        .I2(T_RADDR[7]),
        .I3(T_RADDR[6]),
        .I4(rx_desc_rd_dst[16]),
        .I5(T_RADDR[5]),
        .O(\T_RDATA[16]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hF0F3FFF5FFF3FFF5)) 
    \T_RDATA[16]_i_5 
       (.I0(conf_mac_addr[24]),
        .I1(rx_desc_items[0]),
        .I2(T_RADDR[7]),
        .I3(T_RADDR[5]),
        .I4(T_RADDR[6]),
        .I5(tx_addr_end[16]),
        .O(\T_RDATA[16]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFF5FFF5FF03FFF3F)) 
    \T_RDATA[16]_i_6 
       (.I0(rx_addr_end[16]),
        .I1(tx_addr_tail[16]),
        .I2(T_RADDR[7]),
        .I3(T_RADDR[6]),
        .I4(p_19_in[16]),
        .I5(T_RADDR[5]),
        .O(\T_RDATA[16]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0101015151510151)) 
    \T_RDATA[17]_i_1 
       (.I0(\T_RDATA[29]_i_5_n_0 ),
        .I1(\T_RDATA[17]_i_2_n_0 ),
        .I2(T_RADDR[3]),
        .I3(\T_RDATA[17]_i_3_n_0 ),
        .I4(T_RADDR[4]),
        .I5(\T_RDATA[17]_i_4_n_0 ),
        .O(\T_RDATA[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2AAAFFFF2AAA0000)) 
    \T_RDATA[17]_i_2 
       (.I0(\T_RDATA[17]_i_5_n_0 ),
        .I1(T_RADDR[5]),
        .I2(\T_RDATA[18]_i_6_n_0 ),
        .I3(rx_addr_tail[17]),
        .I4(T_RADDR[4]),
        .I5(\T_RDATA[17]_i_6_n_0 ),
        .O(\T_RDATA[17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF0FF3F5FFFFF3F5F)) 
    \T_RDATA[17]_i_3 
       (.I0(tx_addr_tail[17]),
        .I1(tx_addr_start[17]),
        .I2(T_RADDR[6]),
        .I3(T_RADDR[5]),
        .I4(T_RADDR[7]),
        .I5(rx_addr_head[17]),
        .O(\T_RDATA[17]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF5FFF5FFF03FFF3F)) 
    \T_RDATA[17]_i_4 
       (.I0(tx_addr_head[17]),
        .I1(rx_addr_start[17]),
        .I2(T_RADDR[7]),
        .I3(T_RADDR[6]),
        .I4(rx_desc_rd_dst[17]),
        .I5(T_RADDR[5]),
        .O(\T_RDATA[17]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hF0F3FFF5FFF3FFF5)) 
    \T_RDATA[17]_i_5 
       (.I0(conf_mac_addr[25]),
        .I1(rx_desc_items[1]),
        .I2(T_RADDR[7]),
        .I3(T_RADDR[5]),
        .I4(T_RADDR[6]),
        .I5(tx_addr_end[17]),
        .O(\T_RDATA[17]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hF0FFF53FFFFFF53F)) 
    \T_RDATA[17]_i_6 
       (.I0(tx_addr_tail[17]),
        .I1(p_19_in[17]),
        .I2(T_RADDR[6]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[5]),
        .I5(rx_addr_end[17]),
        .O(\T_RDATA[17]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0101015151510151)) 
    \T_RDATA[18]_i_1 
       (.I0(\T_RDATA[29]_i_5_n_0 ),
        .I1(\T_RDATA[18]_i_2_n_0 ),
        .I2(T_RADDR[3]),
        .I3(\T_RDATA[18]_i_3_n_0 ),
        .I4(T_RADDR[4]),
        .I5(\T_RDATA[18]_i_4_n_0 ),
        .O(\T_RDATA[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2AAAFFFF2AAA0000)) 
    \T_RDATA[18]_i_2 
       (.I0(\T_RDATA[18]_i_5_n_0 ),
        .I1(T_RADDR[5]),
        .I2(\T_RDATA[18]_i_6_n_0 ),
        .I3(rx_addr_tail[18]),
        .I4(T_RADDR[4]),
        .I5(\T_RDATA[18]_i_7_n_0 ),
        .O(\T_RDATA[18]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hD3D3F3FFDFDFF3FF)) 
    \T_RDATA[18]_i_3 
       (.I0(rx_addr_head[18]),
        .I1(T_RADDR[6]),
        .I2(T_RADDR[7]),
        .I3(tx_addr_tail[18]),
        .I4(T_RADDR[5]),
        .I5(tx_addr_start[18]),
        .O(\T_RDATA[18]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF5FFF5FFF03FFF3F)) 
    \T_RDATA[18]_i_4 
       (.I0(tx_addr_head[18]),
        .I1(rx_addr_start[18]),
        .I2(T_RADDR[7]),
        .I3(T_RADDR[6]),
        .I4(rx_desc_rd_dst[18]),
        .I5(T_RADDR[5]),
        .O(\T_RDATA[18]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hF0F3FFF5FFF3FFF5)) 
    \T_RDATA[18]_i_5 
       (.I0(conf_mac_addr[26]),
        .I1(rx_desc_items[2]),
        .I2(T_RADDR[7]),
        .I3(T_RADDR[5]),
        .I4(T_RADDR[6]),
        .I5(tx_addr_end[18]),
        .O(\T_RDATA[18]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \T_RDATA[18]_i_6 
       (.I0(T_RADDR[7]),
        .I1(T_RADDR[6]),
        .O(\T_RDATA[18]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFF3FF05FFF3FFF5F)) 
    \T_RDATA[18]_i_7 
       (.I0(tx_addr_tail[18]),
        .I1(rx_addr_end[18]),
        .I2(T_RADDR[7]),
        .I3(T_RADDR[6]),
        .I4(T_RADDR[5]),
        .I5(p_19_in[18]),
        .O(\T_RDATA[18]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0000015155550151)) 
    \T_RDATA[19]_i_1 
       (.I0(\T_RDATA[29]_i_5_n_0 ),
        .I1(\T_RDATA[19]_i_2_n_0 ),
        .I2(T_RADDR[4]),
        .I3(\T_RDATA[19]_i_3_n_0 ),
        .I4(T_RADDR[3]),
        .I5(\T_RDATA_reg[19]_i_4_n_0 ),
        .O(\T_RDATA[19]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFCC47FFFFFF47FF)) 
    \T_RDATA[19]_i_2 
       (.I0(rx_addr_end[19]),
        .I1(T_RADDR[5]),
        .I2(tx_addr_tail[19]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(p_19_in[19]),
        .O(\T_RDATA[19]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hC7F7FFFFC7F70000)) 
    \T_RDATA[19]_i_3 
       (.I0(rx_addr_tail[19]),
        .I1(T_RADDR[7]),
        .I2(T_RADDR[6]),
        .I3(tx_addr_end[19]),
        .I4(T_RADDR[5]),
        .I5(\T_RDATA[19]_i_5_n_0 ),
        .O(\T_RDATA[19]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \T_RDATA[19]_i_5 
       (.I0(T_RADDR[7]),
        .I1(conf_mac_addr[27]),
        .I2(T_RADDR[6]),
        .I3(rx_desc_items[3]),
        .O(\T_RDATA[19]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFF30FF3F5FF05FF0)) 
    \T_RDATA[19]_i_6 
       (.I0(rx_addr_head[19]),
        .I1(tx_addr_start[19]),
        .I2(T_RADDR[5]),
        .I3(T_RADDR[7]),
        .I4(tx_addr_tail[19]),
        .I5(T_RADDR[6]),
        .O(\T_RDATA[19]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hF5FFF5FFF03FFF3F)) 
    \T_RDATA[19]_i_7 
       (.I0(tx_addr_head[19]),
        .I1(rx_addr_start[19]),
        .I2(T_RADDR[7]),
        .I3(T_RADDR[6]),
        .I4(rx_desc_rd_dst[19]),
        .I5(T_RADDR[5]),
        .O(\T_RDATA[19]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h444444444F444FFF)) 
    \T_RDATA[1]_i_1 
       (.I0(\T_RDATA[1]_i_2_n_0 ),
        .I1(\T_RDATA[1]_i_3_n_0 ),
        .I2(\T_RDATA[1]_i_4_n_0 ),
        .I3(T_RADDR[4]),
        .I4(\T_RDATA[1]_i_5_n_0 ),
        .I5(\T_RDATA[29]_i_5_n_0 ),
        .O(\T_RDATA[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hCF44CF77)) 
    \T_RDATA[1]_i_10 
       (.I0(\^tx_bchunk [1]),
        .I1(T_RADDR[6]),
        .I2(rx_addr_end[1]),
        .I3(T_RADDR[7]),
        .I4(conf_tx_en),
        .O(\T_RDATA[1]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAF11FFAAAFBB)) 
    \T_RDATA[1]_i_11 
       (.I0(T_RADDR[7]),
        .I1(conf_mac_speed[1]),
        .I2(p_19_in[1]),
        .I3(T_RADDR[6]),
        .I4(T_RADDR[3]),
        .I5(tx_addr_tail[1]),
        .O(\T_RDATA[1]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'hCF44CF77)) 
    \T_RDATA[1]_i_2 
       (.I0(tx_addr_full),
        .I1(T_RADDR[6]),
        .I2(rx_addr_full),
        .I3(T_RADDR[7]),
        .I4(conf_mac_addr[9]),
        .O(\T_RDATA[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000022000)) 
    \T_RDATA[1]_i_3 
       (.I0(T_RADDR[2]),
        .I1(T_RADDR[3]),
        .I2(T_RADDR[5]),
        .I3(T_RADDR[6]),
        .I4(T_RADDR[4]),
        .I5(\T_RDATA[31]_i_6_n_0 ),
        .O(\T_RDATA[1]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \T_RDATA[1]_i_4 
       (.I0(\T_RDATA[1]_i_6_n_0 ),
        .I1(T_RADDR[3]),
        .I2(\T_RDATA[1]_i_7_n_0 ),
        .I3(T_RADDR[5]),
        .I4(\T_RDATA[1]_i_8_n_0 ),
        .O(\T_RDATA[1]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \T_RDATA[1]_i_5 
       (.I0(\T_RDATA[1]_i_9_n_0 ),
        .I1(T_RADDR[3]),
        .I2(\T_RDATA[1]_i_10_n_0 ),
        .I3(T_RADDR[5]),
        .I4(\T_RDATA[1]_i_11_n_0 ),
        .O(\T_RDATA[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hF0F3FF5FFFF3FF5F)) 
    \T_RDATA[1]_i_6 
       (.I0(rx_addr_start[1]),
        .I1(rx_desc_rd_dst[1]),
        .I2(T_RADDR[7]),
        .I3(T_RADDR[5]),
        .I4(T_RADDR[6]),
        .I5(tx_addr_head[1]),
        .O(\T_RDATA[1]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hCF44CF77)) 
    \T_RDATA[1]_i_7 
       (.I0(tx_addr_end[1]),
        .I1(T_RADDR[6]),
        .I2(rx_addr_tail[1]),
        .I3(T_RADDR[7]),
        .I4(conf_rx_en),
        .O(\T_RDATA[1]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hCF44CF77)) 
    \T_RDATA[1]_i_8 
       (.I0(p_18_in[1]),
        .I1(T_RADDR[6]),
        .I2(\^rx_bchunk [1]),
        .I3(T_RADDR[7]),
        .I4(conf_mac_addr[41]),
        .O(\T_RDATA[1]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hC7F7)) 
    \T_RDATA[1]_i_9 
       (.I0(rx_addr_head[1]),
        .I1(T_RADDR[7]),
        .I2(T_RADDR[6]),
        .I3(tx_addr_start[1]),
        .O(\T_RDATA[1]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h0000015155550151)) 
    \T_RDATA[20]_i_1 
       (.I0(\T_RDATA[29]_i_5_n_0 ),
        .I1(\T_RDATA[20]_i_2_n_0 ),
        .I2(T_RADDR[4]),
        .I3(\T_RDATA[20]_i_3_n_0 ),
        .I4(T_RADDR[3]),
        .I5(\T_RDATA_reg[20]_i_4_n_0 ),
        .O(\T_RDATA[20]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFCC47FFFFFF47FF)) 
    \T_RDATA[20]_i_2 
       (.I0(rx_addr_end[20]),
        .I1(T_RADDR[5]),
        .I2(tx_addr_tail[20]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(p_19_in[20]),
        .O(\T_RDATA[20]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hC7F7FFFFC7F70000)) 
    \T_RDATA[20]_i_3 
       (.I0(rx_addr_tail[20]),
        .I1(T_RADDR[7]),
        .I2(T_RADDR[6]),
        .I3(tx_addr_end[20]),
        .I4(T_RADDR[5]),
        .I5(\T_RDATA[20]_i_5_n_0 ),
        .O(\T_RDATA[20]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \T_RDATA[20]_i_5 
       (.I0(T_RADDR[7]),
        .I1(conf_mac_addr[28]),
        .I2(T_RADDR[6]),
        .I3(rx_desc_items[4]),
        .O(\T_RDATA[20]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFF30FF3F5FF05FF0)) 
    \T_RDATA[20]_i_6 
       (.I0(rx_addr_head[20]),
        .I1(tx_addr_start[20]),
        .I2(T_RADDR[5]),
        .I3(T_RADDR[7]),
        .I4(tx_addr_tail[20]),
        .I5(T_RADDR[6]),
        .O(\T_RDATA[20]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hF5FFF5FFF03FFF3F)) 
    \T_RDATA[20]_i_7 
       (.I0(tx_addr_head[20]),
        .I1(rx_addr_start[20]),
        .I2(T_RADDR[7]),
        .I3(T_RADDR[6]),
        .I4(rx_desc_rd_dst[20]),
        .I5(T_RADDR[5]),
        .O(\T_RDATA[20]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00000000AAAAFF0C)) 
    \T_RDATA[21]_i_1 
       (.I0(\T_RDATA_reg[21]_i_2_n_0 ),
        .I1(T_RADDR[4]),
        .I2(\T_RDATA[21]_i_3_n_0 ),
        .I3(\T_RDATA[21]_i_4_n_0 ),
        .I4(T_RADDR[3]),
        .I5(\T_RDATA[29]_i_5_n_0 ),
        .O(\T_RDATA[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hC7F7FFFFC7F70000)) 
    \T_RDATA[21]_i_3 
       (.I0(rx_addr_tail[21]),
        .I1(T_RADDR[7]),
        .I2(T_RADDR[6]),
        .I3(tx_addr_end[21]),
        .I4(T_RADDR[5]),
        .I5(\T_RDATA[21]_i_7_n_0 ),
        .O(\T_RDATA[21]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000E200)) 
    \T_RDATA[21]_i_4 
       (.I0(tx_addr_tail[21]),
        .I1(T_RADDR[5]),
        .I2(rx_addr_end[21]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(T_RADDR[4]),
        .O(\T_RDATA[21]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00AFC00000A0C000)) 
    \T_RDATA[21]_i_5 
       (.I0(tx_addr_start[21]),
        .I1(rx_addr_head[21]),
        .I2(T_RADDR[5]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(tx_addr_tail[21]),
        .O(\T_RDATA[21]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00BB300000883000)) 
    \T_RDATA[21]_i_6 
       (.I0(tx_addr_head[21]),
        .I1(T_RADDR[5]),
        .I2(rx_addr_start[21]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(rx_desc_rd_dst[21]),
        .O(\T_RDATA[21]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \T_RDATA[21]_i_7 
       (.I0(T_RADDR[7]),
        .I1(conf_mac_addr[29]),
        .I2(T_RADDR[6]),
        .I3(rx_desc_items[5]),
        .O(\T_RDATA[21]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00000000AAAAFF0C)) 
    \T_RDATA[22]_i_1 
       (.I0(\T_RDATA_reg[22]_i_2_n_0 ),
        .I1(T_RADDR[4]),
        .I2(\T_RDATA[22]_i_3_n_0 ),
        .I3(\T_RDATA[22]_i_4_n_0 ),
        .I4(T_RADDR[3]),
        .I5(\T_RDATA[29]_i_5_n_0 ),
        .O(\T_RDATA[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hC7F7FFFFC7F70000)) 
    \T_RDATA[22]_i_3 
       (.I0(rx_addr_tail[22]),
        .I1(T_RADDR[7]),
        .I2(T_RADDR[6]),
        .I3(tx_addr_end[22]),
        .I4(T_RADDR[5]),
        .I5(\T_RDATA[22]_i_7_n_0 ),
        .O(\T_RDATA[22]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000E200)) 
    \T_RDATA[22]_i_4 
       (.I0(tx_addr_tail[22]),
        .I1(T_RADDR[5]),
        .I2(rx_addr_end[22]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(T_RADDR[4]),
        .O(\T_RDATA[22]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00AFC00000A0C000)) 
    \T_RDATA[22]_i_5 
       (.I0(tx_addr_start[22]),
        .I1(rx_addr_head[22]),
        .I2(T_RADDR[5]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(tx_addr_tail[22]),
        .O(\T_RDATA[22]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00BB300000883000)) 
    \T_RDATA[22]_i_6 
       (.I0(tx_addr_head[22]),
        .I1(T_RADDR[5]),
        .I2(rx_addr_start[22]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(rx_desc_rd_dst[22]),
        .O(\T_RDATA[22]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \T_RDATA[22]_i_7 
       (.I0(T_RADDR[7]),
        .I1(conf_mac_addr[30]),
        .I2(T_RADDR[6]),
        .I3(rx_desc_items[6]),
        .O(\T_RDATA[22]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00000000AAAAFF0C)) 
    \T_RDATA[23]_i_1 
       (.I0(\T_RDATA_reg[23]_i_2_n_0 ),
        .I1(T_RADDR[4]),
        .I2(\T_RDATA[23]_i_3_n_0 ),
        .I3(\T_RDATA[23]_i_4_n_0 ),
        .I4(T_RADDR[3]),
        .I5(\T_RDATA[29]_i_5_n_0 ),
        .O(\T_RDATA[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hC7F7FFFFC7F70000)) 
    \T_RDATA[23]_i_3 
       (.I0(rx_addr_tail[23]),
        .I1(T_RADDR[7]),
        .I2(T_RADDR[6]),
        .I3(tx_addr_end[23]),
        .I4(T_RADDR[5]),
        .I5(\T_RDATA[23]_i_7_n_0 ),
        .O(\T_RDATA[23]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000E200)) 
    \T_RDATA[23]_i_4 
       (.I0(tx_addr_tail[23]),
        .I1(T_RADDR[5]),
        .I2(rx_addr_end[23]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(T_RADDR[4]),
        .O(\T_RDATA[23]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00AFC00000A0C000)) 
    \T_RDATA[23]_i_5 
       (.I0(tx_addr_start[23]),
        .I1(rx_addr_head[23]),
        .I2(T_RADDR[5]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(tx_addr_tail[23]),
        .O(\T_RDATA[23]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00BB300000883000)) 
    \T_RDATA[23]_i_6 
       (.I0(tx_addr_head[23]),
        .I1(T_RADDR[5]),
        .I2(rx_addr_start[23]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(rx_desc_rd_dst[23]),
        .O(\T_RDATA[23]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \T_RDATA[23]_i_7 
       (.I0(T_RADDR[7]),
        .I1(conf_mac_addr[31]),
        .I2(T_RADDR[6]),
        .I3(rx_desc_items[7]),
        .O(\T_RDATA[23]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00000000AAAAFF0C)) 
    \T_RDATA[24]_i_1 
       (.I0(\T_RDATA_reg[24]_i_2_n_0 ),
        .I1(T_RADDR[4]),
        .I2(\T_RDATA[24]_i_3_n_0 ),
        .I3(\T_RDATA[24]_i_4_n_0 ),
        .I4(T_RADDR[3]),
        .I5(\T_RDATA[29]_i_5_n_0 ),
        .O(\T_RDATA[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hC7F7FFFFC7F70000)) 
    \T_RDATA[24]_i_3 
       (.I0(rx_addr_tail[24]),
        .I1(T_RADDR[7]),
        .I2(T_RADDR[6]),
        .I3(tx_addr_end[24]),
        .I4(T_RADDR[5]),
        .I5(\T_RDATA[24]_i_7_n_0 ),
        .O(\T_RDATA[24]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000E200)) 
    \T_RDATA[24]_i_4 
       (.I0(tx_addr_tail[24]),
        .I1(T_RADDR[5]),
        .I2(rx_addr_end[24]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(T_RADDR[4]),
        .O(\T_RDATA[24]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00AFC00000A0C000)) 
    \T_RDATA[24]_i_5 
       (.I0(tx_addr_start[24]),
        .I1(rx_addr_head[24]),
        .I2(T_RADDR[5]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(tx_addr_tail[24]),
        .O(\T_RDATA[24]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00BB300000883000)) 
    \T_RDATA[24]_i_6 
       (.I0(tx_addr_head[24]),
        .I1(T_RADDR[5]),
        .I2(rx_addr_start[24]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(rx_desc_rd_dst[24]),
        .O(\T_RDATA[24]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \T_RDATA[24]_i_7 
       (.I0(T_RADDR[7]),
        .I1(conf_mac_addr[16]),
        .I2(T_RADDR[6]),
        .I3(rx_desc_items[8]),
        .O(\T_RDATA[24]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00000000AAAAFF0C)) 
    \T_RDATA[25]_i_1 
       (.I0(\T_RDATA_reg[25]_i_2_n_0 ),
        .I1(T_RADDR[4]),
        .I2(\T_RDATA[25]_i_3_n_0 ),
        .I3(\T_RDATA[25]_i_4_n_0 ),
        .I4(T_RADDR[3]),
        .I5(\T_RDATA[29]_i_5_n_0 ),
        .O(\T_RDATA[25]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hC7F7FFFFC7F70000)) 
    \T_RDATA[25]_i_3 
       (.I0(rx_addr_tail[25]),
        .I1(T_RADDR[7]),
        .I2(T_RADDR[6]),
        .I3(tx_addr_end[25]),
        .I4(T_RADDR[5]),
        .I5(\T_RDATA[25]_i_7_n_0 ),
        .O(\T_RDATA[25]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000E200)) 
    \T_RDATA[25]_i_4 
       (.I0(tx_addr_tail[25]),
        .I1(T_RADDR[5]),
        .I2(rx_addr_end[25]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(T_RADDR[4]),
        .O(\T_RDATA[25]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00AFC00000A0C000)) 
    \T_RDATA[25]_i_5 
       (.I0(tx_addr_start[25]),
        .I1(rx_addr_head[25]),
        .I2(T_RADDR[5]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(tx_addr_tail[25]),
        .O(\T_RDATA[25]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00BB300000883000)) 
    \T_RDATA[25]_i_6 
       (.I0(tx_addr_head[25]),
        .I1(T_RADDR[5]),
        .I2(rx_addr_start[25]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(rx_desc_rd_dst[25]),
        .O(\T_RDATA[25]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \T_RDATA[25]_i_7 
       (.I0(T_RADDR[7]),
        .I1(conf_mac_addr[17]),
        .I2(T_RADDR[6]),
        .I3(rx_desc_items[9]),
        .O(\T_RDATA[25]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00000000AAAAFF0C)) 
    \T_RDATA[26]_i_1 
       (.I0(\T_RDATA_reg[26]_i_2_n_0 ),
        .I1(T_RADDR[4]),
        .I2(\T_RDATA[26]_i_3_n_0 ),
        .I3(\T_RDATA[26]_i_4_n_0 ),
        .I4(T_RADDR[3]),
        .I5(\T_RDATA[29]_i_5_n_0 ),
        .O(\T_RDATA[26]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hC7F7FFFFC7F70000)) 
    \T_RDATA[26]_i_3 
       (.I0(rx_addr_tail[26]),
        .I1(T_RADDR[7]),
        .I2(T_RADDR[6]),
        .I3(tx_addr_end[26]),
        .I4(T_RADDR[5]),
        .I5(\T_RDATA[26]_i_7_n_0 ),
        .O(\T_RDATA[26]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000E200)) 
    \T_RDATA[26]_i_4 
       (.I0(tx_addr_tail[26]),
        .I1(T_RADDR[5]),
        .I2(rx_addr_end[26]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(T_RADDR[4]),
        .O(\T_RDATA[26]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00AFC00000A0C000)) 
    \T_RDATA[26]_i_5 
       (.I0(tx_addr_start[26]),
        .I1(rx_addr_head[26]),
        .I2(T_RADDR[5]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(tx_addr_tail[26]),
        .O(\T_RDATA[26]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00BB300000883000)) 
    \T_RDATA[26]_i_6 
       (.I0(tx_addr_head[26]),
        .I1(T_RADDR[5]),
        .I2(rx_addr_start[26]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(rx_desc_rd_dst[26]),
        .O(\T_RDATA[26]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \T_RDATA[26]_i_7 
       (.I0(T_RADDR[7]),
        .I1(conf_mac_addr[18]),
        .I2(T_RADDR[6]),
        .I3(rx_desc_items[10]),
        .O(\T_RDATA[26]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00000000AAAAFF0C)) 
    \T_RDATA[27]_i_1 
       (.I0(\T_RDATA_reg[27]_i_2_n_0 ),
        .I1(T_RADDR[4]),
        .I2(\T_RDATA[27]_i_3_n_0 ),
        .I3(\T_RDATA[27]_i_4_n_0 ),
        .I4(T_RADDR[3]),
        .I5(\T_RDATA[29]_i_5_n_0 ),
        .O(\T_RDATA[27]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hC7F7FFFFC7F70000)) 
    \T_RDATA[27]_i_3 
       (.I0(rx_addr_tail[27]),
        .I1(T_RADDR[7]),
        .I2(T_RADDR[6]),
        .I3(tx_addr_end[27]),
        .I4(T_RADDR[5]),
        .I5(\T_RDATA[27]_i_7_n_0 ),
        .O(\T_RDATA[27]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000E200)) 
    \T_RDATA[27]_i_4 
       (.I0(tx_addr_tail[27]),
        .I1(T_RADDR[5]),
        .I2(rx_addr_end[27]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(T_RADDR[4]),
        .O(\T_RDATA[27]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00CFA00000C0A000)) 
    \T_RDATA[27]_i_5 
       (.I0(rx_addr_head[27]),
        .I1(tx_addr_start[27]),
        .I2(T_RADDR[5]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(tx_addr_tail[27]),
        .O(\T_RDATA[27]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00BB300000883000)) 
    \T_RDATA[27]_i_6 
       (.I0(tx_addr_head[27]),
        .I1(T_RADDR[5]),
        .I2(rx_addr_start[27]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(rx_desc_rd_dst[27]),
        .O(\T_RDATA[27]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \T_RDATA[27]_i_7 
       (.I0(T_RADDR[7]),
        .I1(conf_mac_addr[19]),
        .I2(T_RADDR[6]),
        .I3(rx_desc_items[11]),
        .O(\T_RDATA[27]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00000000AAAAFF0C)) 
    \T_RDATA[28]_i_1 
       (.I0(\T_RDATA_reg[28]_i_2_n_0 ),
        .I1(T_RADDR[4]),
        .I2(\T_RDATA[28]_i_3_n_0 ),
        .I3(\T_RDATA[28]_i_4_n_0 ),
        .I4(T_RADDR[3]),
        .I5(\T_RDATA[29]_i_5_n_0 ),
        .O(\T_RDATA[28]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hC7F7FFFFC7F70000)) 
    \T_RDATA[28]_i_3 
       (.I0(rx_addr_tail[28]),
        .I1(T_RADDR[7]),
        .I2(T_RADDR[6]),
        .I3(tx_addr_end[28]),
        .I4(T_RADDR[5]),
        .I5(\T_RDATA[28]_i_7_n_0 ),
        .O(\T_RDATA[28]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000E200)) 
    \T_RDATA[28]_i_4 
       (.I0(tx_addr_tail[28]),
        .I1(T_RADDR[5]),
        .I2(rx_addr_end[28]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(T_RADDR[4]),
        .O(\T_RDATA[28]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00CFA00000C0A000)) 
    \T_RDATA[28]_i_5 
       (.I0(rx_addr_head[28]),
        .I1(tx_addr_start[28]),
        .I2(T_RADDR[5]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(tx_addr_tail[28]),
        .O(\T_RDATA[28]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00BB300000883000)) 
    \T_RDATA[28]_i_6 
       (.I0(tx_addr_head[28]),
        .I1(T_RADDR[5]),
        .I2(rx_addr_start[28]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(rx_desc_rd_dst[28]),
        .O(\T_RDATA[28]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \T_RDATA[28]_i_7 
       (.I0(T_RADDR[7]),
        .I1(conf_mac_addr[20]),
        .I2(T_RADDR[6]),
        .I3(rx_desc_items[12]),
        .O(\T_RDATA[28]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00000000AAAAAA08)) 
    \T_RDATA[29]_i_1 
       (.I0(\T_RDATA[29]_i_2_n_0 ),
        .I1(T_RADDR[4]),
        .I2(\T_RDATA[29]_i_3_n_0 ),
        .I3(\T_RDATA[29]_i_4_n_0 ),
        .I4(T_RADDR[3]),
        .I5(\T_RDATA[29]_i_5_n_0 ),
        .O(\T_RDATA[29]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF2F23200FFFFFFFF)) 
    \T_RDATA[29]_i_2 
       (.I0(tx_addr_head[29]),
        .I1(\T_RDATA[29]_i_6_n_0 ),
        .I2(\T_RDATA[29]_i_7_n_0 ),
        .I3(tx_addr_start[29]),
        .I4(\T_RDATA[29]_i_8_n_0 ),
        .I5(T_RADDR[3]),
        .O(\T_RDATA[29]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hC7F7FFFFC7F70000)) 
    \T_RDATA[29]_i_3 
       (.I0(rx_addr_tail[29]),
        .I1(T_RADDR[7]),
        .I2(T_RADDR[6]),
        .I3(tx_addr_end[29]),
        .I4(T_RADDR[5]),
        .I5(\T_RDATA[29]_i_9_n_0 ),
        .O(\T_RDATA[29]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000E200)) 
    \T_RDATA[29]_i_4 
       (.I0(tx_addr_tail[29]),
        .I1(T_RADDR[5]),
        .I2(rx_addr_end[29]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(T_RADDR[4]),
        .O(\T_RDATA[29]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFFFB)) 
    \T_RDATA[29]_i_5 
       (.I0(T_RADDR[2]),
        .I1(T_RDEN),
        .I2(T_RADDR[0]),
        .I3(T_RADDR[1]),
        .O(\T_RDATA[29]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'hBF)) 
    \T_RDATA[29]_i_6 
       (.I0(T_RADDR[7]),
        .I1(T_RADDR[5]),
        .I2(T_RADDR[6]),
        .O(\T_RDATA[29]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h333333333FB333B3)) 
    \T_RDATA[29]_i_7 
       (.I0(rx_desc_rd_dst[29]),
        .I1(T_RADDR[4]),
        .I2(T_RADDR[6]),
        .I3(T_RADDR[7]),
        .I4(rx_addr_start[29]),
        .I5(T_RADDR[5]),
        .O(\T_RDATA[29]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF03008383)) 
    \T_RDATA[29]_i_8 
       (.I0(rx_addr_head[29]),
        .I1(T_RADDR[5]),
        .I2(T_RADDR[7]),
        .I3(tx_addr_tail[29]),
        .I4(T_RADDR[6]),
        .I5(T_RADDR[4]),
        .O(\T_RDATA[29]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \T_RDATA[29]_i_9 
       (.I0(T_RADDR[7]),
        .I1(conf_mac_addr[21]),
        .I2(T_RADDR[6]),
        .I3(rx_desc_items[13]),
        .O(\T_RDATA[29]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h5454544444445444)) 
    \T_RDATA[2]_i_1 
       (.I0(\T_RDATA[31]_i_6_n_0 ),
        .I1(\T_RDATA[2]_i_2_n_0 ),
        .I2(\T_RDATA[31]_i_5_n_0 ),
        .I3(\T_RDATA[2]_i_3_n_0 ),
        .I4(T_RADDR[4]),
        .I5(\T_RDATA_reg[2]_i_4_n_0 ),
        .O(\T_RDATA[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h4F004FFF44004400)) 
    \T_RDATA[2]_i_2 
       (.I0(\T_RDATA[31]_i_7_n_0 ),
        .I1(conf_mac_addr[10]),
        .I2(\T_RDATA[2]_i_5_n_0 ),
        .I3(T_RADDR[4]),
        .I4(\T_RDATA[2]_i_6_n_0 ),
        .I5(\T_RDATA[5]_i_3_n_0 ),
        .O(\T_RDATA[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h88BB8888B888B888)) 
    \T_RDATA[2]_i_3 
       (.I0(\T_RDATA[2]_i_7_n_0 ),
        .I1(T_RADDR[5]),
        .I2(p_19_in[2]),
        .I3(T_RADDR[6]),
        .I4(tx_addr_tail[2]),
        .I5(T_RADDR[7]),
        .O(\T_RDATA[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFF44CFFFFF77CFFF)) 
    \T_RDATA[2]_i_5 
       (.I0(tx_addr_head[2]),
        .I1(T_RADDR[5]),
        .I2(rx_addr_start[2]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(rx_desc_rd_dst[2]),
        .O(\T_RDATA[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFF503FFFFF5F3FFF)) 
    \T_RDATA[2]_i_6 
       (.I0(tx_addr_start[2]),
        .I1(rx_addr_head[2]),
        .I2(T_RADDR[5]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(tx_addr_tail[2]),
        .O(\T_RDATA[2]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \T_RDATA[2]_i_7 
       (.I0(\^tx_bchunk [2]),
        .I1(T_RADDR[6]),
        .I2(rx_addr_end[2]),
        .I3(T_RADDR[7]),
        .I4(conf_tx_jumbo_en),
        .O(\T_RDATA[2]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \T_RDATA[2]_i_8 
       (.I0(p_18_in[2]),
        .I1(T_RADDR[6]),
        .I2(\^rx_bchunk [2]),
        .I3(T_RADDR[7]),
        .I4(conf_mac_addr[42]),
        .O(\T_RDATA[2]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \T_RDATA[2]_i_9 
       (.I0(tx_addr_end[2]),
        .I1(T_RADDR[6]),
        .I2(rx_addr_tail[2]),
        .I3(T_RADDR[7]),
        .I4(conf_rx_jumbo_en),
        .O(\T_RDATA[2]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h4445554544444444)) 
    \T_RDATA[30]_i_1 
       (.I0(\T_RDATA[31]_i_6_n_0 ),
        .I1(\T_RDATA[30]_i_2_n_0 ),
        .I2(\T_RDATA[30]_i_3_n_0 ),
        .I3(T_RADDR[4]),
        .I4(\T_RDATA[30]_i_4_n_0 ),
        .I5(\T_RDATA[31]_i_5_n_0 ),
        .O(\T_RDATA[30]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0F440FFF00440044)) 
    \T_RDATA[30]_i_2 
       (.I0(\T_RDATA[31]_i_7_n_0 ),
        .I1(gbe_phy_reset_n),
        .I2(\T_RDATA[30]_i_5_n_0 ),
        .I3(T_RADDR[4]),
        .I4(\T_RDATA[30]_i_6_n_0 ),
        .I5(\T_RDATA[5]_i_3_n_0 ),
        .O(\T_RDATA[30]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF1D1DCCFF)) 
    \T_RDATA[30]_i_3 
       (.I0(tx_addr_tail[30]),
        .I1(T_RADDR[5]),
        .I2(rx_addr_end[30]),
        .I3(p_24_in[30]),
        .I4(T_RADDR[7]),
        .I5(T_RADDR[6]),
        .O(\T_RDATA[30]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hC7F7FFFFC7F70000)) 
    \T_RDATA[30]_i_4 
       (.I0(rx_addr_tail[30]),
        .I1(T_RADDR[7]),
        .I2(T_RADDR[6]),
        .I3(tx_addr_end[30]),
        .I4(T_RADDR[5]),
        .I5(\T_RDATA[30]_i_7_n_0 ),
        .O(\T_RDATA[30]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFF44CFFFFF77CFFF)) 
    \T_RDATA[30]_i_5 
       (.I0(tx_addr_head[30]),
        .I1(T_RADDR[5]),
        .I2(rx_addr_start[30]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(rx_desc_rd_dst[30]),
        .O(\T_RDATA[30]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFF305FFFFF3F5FFF)) 
    \T_RDATA[30]_i_6 
       (.I0(rx_addr_head[30]),
        .I1(tx_addr_start[30]),
        .I2(T_RADDR[5]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(tx_addr_tail[30]),
        .O(\T_RDATA[30]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \T_RDATA[30]_i_7 
       (.I0(T_RADDR[7]),
        .I1(conf_mac_addr[22]),
        .I2(T_RADDR[6]),
        .I3(rx_desc_items[14]),
        .O(\T_RDATA[30]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FEAEAAAA)) 
    \T_RDATA[31]_i_1 
       (.I0(\T_RDATA[31]_i_2_n_0 ),
        .I1(\T_RDATA[31]_i_3_n_0 ),
        .I2(T_RADDR[4]),
        .I3(\T_RDATA[31]_i_4_n_0 ),
        .I4(\T_RDATA[31]_i_5_n_0 ),
        .I5(\T_RDATA[31]_i_6_n_0 ),
        .O(\T_RDATA[31]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \T_RDATA[31]_i_10 
       (.I0(conf_mac_addr[23]),
        .I1(T_RADDR[6]),
        .I2(rx_desc_items[15]),
        .I3(T_RADDR[7]),
        .O(\T_RDATA[31]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0F440FFF00440044)) 
    \T_RDATA[31]_i_2 
       (.I0(\T_RDATA[31]_i_7_n_0 ),
        .I1(IRQ),
        .I2(\T_RDATA[31]_i_8_n_0 ),
        .I3(T_RADDR[4]),
        .I4(\T_RDATA[31]_i_9_n_0 ),
        .I5(\T_RDATA[5]_i_3_n_0 ),
        .O(\T_RDATA[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000E2E23300)) 
    \T_RDATA[31]_i_3 
       (.I0(tx_addr_tail[31]),
        .I1(T_RADDR[5]),
        .I2(rx_addr_end[31]),
        .I3(p_24_in[31]),
        .I4(T_RADDR[7]),
        .I5(T_RADDR[6]),
        .O(\T_RDATA[31]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h3808FFFF38080000)) 
    \T_RDATA[31]_i_4 
       (.I0(rx_addr_tail[31]),
        .I1(T_RADDR[7]),
        .I2(T_RADDR[6]),
        .I3(tx_addr_end[31]),
        .I4(T_RADDR[5]),
        .I5(\T_RDATA[31]_i_10_n_0 ),
        .O(\T_RDATA[31]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \T_RDATA[31]_i_5 
       (.I0(T_RADDR[3]),
        .I1(T_RADDR[2]),
        .O(\T_RDATA[31]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'hEF)) 
    \T_RDATA[31]_i_6 
       (.I0(T_RADDR[1]),
        .I1(T_RADDR[0]),
        .I2(T_RDEN),
        .O(\T_RDATA[31]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFEF)) 
    \T_RDATA[31]_i_7 
       (.I0(T_RADDR[5]),
        .I1(T_RADDR[7]),
        .I2(T_RADDR[2]),
        .I3(T_RADDR[6]),
        .I4(T_RADDR[3]),
        .O(\T_RDATA[31]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFF44CFFFFF77CFFF)) 
    \T_RDATA[31]_i_8 
       (.I0(tx_addr_head[31]),
        .I1(T_RADDR[5]),
        .I2(rx_addr_start[31]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(rx_desc_rd_dst[31]),
        .O(\T_RDATA[31]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFF305FFFFF3F5FFF)) 
    \T_RDATA[31]_i_9 
       (.I0(rx_addr_head[31]),
        .I1(tx_addr_start[31]),
        .I2(T_RADDR[5]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(tx_addr_tail[31]),
        .O(\T_RDATA[31]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h00000000AEAE00AE)) 
    \T_RDATA[3]_i_1 
       (.I0(\T_RDATA[3]_i_2_n_0 ),
        .I1(\T_RDATA[5]_i_3_n_0 ),
        .I2(\T_RDATA[3]_i_3_n_0 ),
        .I3(\T_RDATA[3]_i_4_n_0 ),
        .I4(\T_RDATA[3]_i_5_n_0 ),
        .I5(\T_RDATA[31]_i_6_n_0 ),
        .O(\T_RDATA[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \T_RDATA[3]_i_10 
       (.I0(\^tx_bchunk [3]),
        .I1(T_RADDR[6]),
        .I2(rx_addr_end[3]),
        .I3(T_RADDR[7]),
        .I4(conf_tx_no_gen_crc),
        .O(\T_RDATA[3]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hF5FF3F0FF5FF3FFF)) 
    \T_RDATA[3]_i_11 
       (.I0(rx_addr_head[3]),
        .I1(tx_addr_start[3]),
        .I2(T_RADDR[6]),
        .I3(T_RADDR[5]),
        .I4(T_RADDR[7]),
        .I5(tx_addr_tail[3]),
        .O(\T_RDATA[3]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF8A80FFFF)) 
    \T_RDATA[3]_i_2 
       (.I0(\T_RDATA[31]_i_5_n_0 ),
        .I1(\T_RDATA[3]_i_6_n_0 ),
        .I2(T_RADDR[5]),
        .I3(\T_RDATA[3]_i_7_n_0 ),
        .I4(T_RADDR[4]),
        .I5(\T_RDATA[3]_i_8_n_0 ),
        .O(\T_RDATA[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF0F3FF5FFFF3FF5F)) 
    \T_RDATA[3]_i_3 
       (.I0(rx_addr_start[3]),
        .I1(rx_desc_rd_dst[3]),
        .I2(T_RADDR[7]),
        .I3(T_RADDR[5]),
        .I4(T_RADDR[6]),
        .I5(tx_addr_head[3]),
        .O(\T_RDATA[3]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hEEEFFFEF)) 
    \T_RDATA[3]_i_4 
       (.I0(T_RADDR[2]),
        .I1(T_RADDR[3]),
        .I2(\T_RDATA[3]_i_9_n_0 ),
        .I3(T_RADDR[5]),
        .I4(\T_RDATA[3]_i_10_n_0 ),
        .O(\T_RDATA[3]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hAABA)) 
    \T_RDATA[3]_i_5 
       (.I0(T_RADDR[4]),
        .I1(\T_RDATA[3]_i_11_n_0 ),
        .I2(T_RADDR[3]),
        .I3(T_RADDR[2]),
        .O(\T_RDATA[3]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \T_RDATA[3]_i_6 
       (.I0(tx_addr_end[3]),
        .I1(T_RADDR[6]),
        .I2(rx_addr_tail[3]),
        .I3(T_RADDR[7]),
        .I4(conf_rx_no_chk_crc),
        .O(\T_RDATA[3]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \T_RDATA[3]_i_7 
       (.I0(p_18_in[3]),
        .I1(T_RADDR[6]),
        .I2(\^rx_bchunk [3]),
        .I3(T_RADDR[7]),
        .I4(conf_mac_addr[43]),
        .O(\T_RDATA[3]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    \T_RDATA[3]_i_8 
       (.I0(conf_mac_addr[11]),
        .I1(T_RADDR[3]),
        .I2(T_RADDR[6]),
        .I3(T_RADDR[2]),
        .I4(T_RADDR[7]),
        .I5(T_RADDR[5]),
        .O(\T_RDATA[3]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h3088)) 
    \T_RDATA[3]_i_9 
       (.I0(p_19_in[3]),
        .I1(T_RADDR[6]),
        .I2(tx_addr_tail[3]),
        .I3(T_RADDR[7]),
        .O(\T_RDATA[3]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h00000000BABA00B0)) 
    \T_RDATA[4]_i_1 
       (.I0(\T_RDATA[4]_i_2_n_0 ),
        .I1(\T_RDATA[4]_i_3_n_0 ),
        .I2(\T_RDATA[5]_i_3_n_0 ),
        .I3(\T_RDATA[4]_i_4_n_0 ),
        .I4(\T_RDATA[4]_i_5_n_0 ),
        .I5(\T_RDATA[31]_i_6_n_0 ),
        .O(\T_RDATA[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF8A80FFFF)) 
    \T_RDATA[4]_i_2 
       (.I0(\T_RDATA[31]_i_5_n_0 ),
        .I1(\T_RDATA[4]_i_6_n_0 ),
        .I2(T_RADDR[5]),
        .I3(\T_RDATA[4]_i_7_n_0 ),
        .I4(T_RADDR[4]),
        .I5(\T_RDATA[4]_i_8_n_0 ),
        .O(\T_RDATA[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF0F3FF5FFFF3FF5F)) 
    \T_RDATA[4]_i_3 
       (.I0(rx_addr_start[4]),
        .I1(rx_desc_rd_dst[4]),
        .I2(T_RADDR[7]),
        .I3(T_RADDR[5]),
        .I4(T_RADDR[6]),
        .I5(tx_addr_head[4]),
        .O(\T_RDATA[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF0FF3F5FFFFF3F5F)) 
    \T_RDATA[4]_i_4 
       (.I0(tx_addr_tail[4]),
        .I1(tx_addr_start[4]),
        .I2(T_RADDR[6]),
        .I3(T_RADDR[5]),
        .I4(T_RADDR[7]),
        .I5(rx_addr_head[4]),
        .O(\T_RDATA[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAAABABAAAAAAAAAA)) 
    \T_RDATA[4]_i_5 
       (.I0(T_RADDR[4]),
        .I1(T_RADDR[2]),
        .I2(T_RADDR[3]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(\T_RDATA[4]_i_9_n_0 ),
        .O(\T_RDATA[4]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \T_RDATA[4]_i_6 
       (.I0(tx_addr_end[4]),
        .I1(T_RADDR[6]),
        .I2(rx_addr_tail[4]),
        .I3(T_RADDR[7]),
        .I4(conf_rx_promiscuous),
        .O(\T_RDATA[4]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \T_RDATA[4]_i_7 
       (.I0(p_18_in[4]),
        .I1(T_RADDR[6]),
        .I2(\^rx_bchunk [4]),
        .I3(T_RADDR[7]),
        .I4(conf_mac_addr[44]),
        .O(\T_RDATA[4]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    \T_RDATA[4]_i_8 
       (.I0(conf_mac_addr[12]),
        .I1(T_RADDR[3]),
        .I2(T_RADDR[6]),
        .I3(T_RADDR[2]),
        .I4(T_RADDR[7]),
        .I5(T_RADDR[5]),
        .O(\T_RDATA[4]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \T_RDATA[4]_i_9 
       (.I0(\^tx_bchunk [4]),
        .I1(rx_addr_end[4]),
        .I2(T_RADDR[5]),
        .I3(p_19_in[4]),
        .I4(T_RADDR[6]),
        .I5(tx_addr_tail[4]),
        .O(\T_RDATA[4]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h1055101055555555)) 
    \T_RDATA[5]_i_1 
       (.I0(\T_RDATA[31]_i_6_n_0 ),
        .I1(\T_RDATA_reg[5]_i_2_n_0 ),
        .I2(\T_RDATA[5]_i_3_n_0 ),
        .I3(\T_RDATA[5]_i_4_n_0 ),
        .I4(conf_mac_addr[13]),
        .I5(\T_RDATA[5]_i_5_n_0 ),
        .O(\T_RDATA[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF20203000)) 
    \T_RDATA[5]_i_10 
       (.I0(rx_addr_end[5]),
        .I1(T_RADDR[6]),
        .I2(T_RADDR[7]),
        .I3(tx_addr_tail[5]),
        .I4(T_RADDR[5]),
        .I5(T_RADDR[4]),
        .O(\T_RDATA[5]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \T_RDATA[5]_i_3 
       (.I0(T_RADDR[3]),
        .I1(T_RADDR[2]),
        .O(\T_RDATA[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFEFFFFFFFFF)) 
    \T_RDATA[5]_i_4 
       (.I0(T_RADDR[3]),
        .I1(T_RADDR[6]),
        .I2(T_RADDR[2]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[5]),
        .I5(T_RADDR[4]),
        .O(\T_RDATA[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h4F4F4F4FFFFF4FFF)) 
    \T_RDATA[5]_i_5 
       (.I0(\T_RDATA[5]_i_8_n_0 ),
        .I1(\T_RDATA[5]_i_9_n_0 ),
        .I2(\T_RDATA[31]_i_5_n_0 ),
        .I3(\^tx_bchunk [5]),
        .I4(\T_RDATA[29]_i_6_n_0 ),
        .I5(\T_RDATA[5]_i_10_n_0 ),
        .O(\T_RDATA[5]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFF503FFFFF5F3FFF)) 
    \T_RDATA[5]_i_6 
       (.I0(tx_addr_start[5]),
        .I1(rx_addr_head[5]),
        .I2(T_RADDR[5]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(tx_addr_tail[5]),
        .O(\T_RDATA[5]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFF44CFFFFF77CFFF)) 
    \T_RDATA[5]_i_7 
       (.I0(tx_addr_head[5]),
        .I1(T_RADDR[5]),
        .I2(rx_addr_start[5]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(rx_desc_rd_dst[5]),
        .O(\T_RDATA[5]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h33BBF33333333333)) 
    \T_RDATA[5]_i_8 
       (.I0(tx_addr_end[5]),
        .I1(T_RADDR[4]),
        .I2(rx_addr_tail[5]),
        .I3(T_RADDR[7]),
        .I4(T_RADDR[6]),
        .I5(T_RADDR[5]),
        .O(\T_RDATA[5]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFAFAABFBFFFFABFB)) 
    \T_RDATA[5]_i_9 
       (.I0(T_RADDR[5]),
        .I1(conf_mac_addr[45]),
        .I2(T_RADDR[7]),
        .I3(\^rx_bchunk [5]),
        .I4(T_RADDR[6]),
        .I5(p_18_in[5]),
        .O(\T_RDATA[5]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h0000000E00000000)) 
    \T_RDATA[6]_i_1 
       (.I0(\T_RDATA[6]_i_2_n_0 ),
        .I1(\T_RDATA[6]_i_3_n_0 ),
        .I2(\T_RDATA[6]_i_4_n_0 ),
        .I3(T_RADDR[1]),
        .I4(T_RADDR[0]),
        .I5(T_RDEN),
        .O(\T_RDATA[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h04FF04FFFFFF04FF)) 
    \T_RDATA[6]_i_2 
       (.I0(\T_RDATA[6]_i_5_n_0 ),
        .I1(T_RADDR[3]),
        .I2(T_RADDR[2]),
        .I3(T_RADDR[4]),
        .I4(conf_mac_addr[14]),
        .I5(\T_RDATA[31]_i_7_n_0 ),
        .O(\T_RDATA[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAEFEA00000000)) 
    \T_RDATA[6]_i_3 
       (.I0(\T_RDATA[6]_i_6_n_0 ),
        .I1(tx_addr_end[6]),
        .I2(T_RADDR[5]),
        .I3(p_18_in[6]),
        .I4(\T_RDATA[8]_i_7_n_0 ),
        .I5(\T_RDATA[31]_i_5_n_0 ),
        .O(\T_RDATA[6]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h0000FECE)) 
    \T_RDATA[6]_i_4 
       (.I0(\T_RDATA[6]_i_7_n_0 ),
        .I1(T_RADDR[2]),
        .I2(T_RADDR[3]),
        .I3(\T_RDATA[6]_i_8_n_0 ),
        .I4(T_RADDR[4]),
        .O(\T_RDATA[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hF0F3FF5FFFF3FF5F)) 
    \T_RDATA[6]_i_5 
       (.I0(rx_addr_start[6]),
        .I1(rx_desc_rd_dst[6]),
        .I2(T_RADDR[7]),
        .I3(T_RADDR[5]),
        .I4(T_RADDR[6]),
        .I5(tx_addr_head[6]),
        .O(\T_RDATA[6]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00FA000C000A000C)) 
    \T_RDATA[6]_i_6 
       (.I0(\^rx_bchunk [6]),
        .I1(conf_mac_addr[46]),
        .I2(T_RADDR[5]),
        .I3(T_RADDR[6]),
        .I4(T_RADDR[7]),
        .I5(rx_addr_tail[6]),
        .O(\T_RDATA[6]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hF5F03FFFF5FF3FFF)) 
    \T_RDATA[6]_i_7 
       (.I0(rx_addr_end[6]),
        .I1(\^tx_bchunk [6]),
        .I2(T_RADDR[6]),
        .I3(T_RADDR[5]),
        .I4(T_RADDR[7]),
        .I5(tx_addr_tail[6]),
        .O(\T_RDATA[6]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hF5FF3F0FF5FF3FFF)) 
    \T_RDATA[6]_i_8 
       (.I0(rx_addr_head[6]),
        .I1(tx_addr_start[6]),
        .I2(T_RADDR[6]),
        .I3(T_RADDR[5]),
        .I4(T_RADDR[7]),
        .I5(tx_addr_tail[6]),
        .O(\T_RDATA[6]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0000000E00000000)) 
    \T_RDATA[7]_i_1 
       (.I0(\T_RDATA[7]_i_2_n_0 ),
        .I1(\T_RDATA[7]_i_3_n_0 ),
        .I2(\T_RDATA[7]_i_4_n_0 ),
        .I3(T_RADDR[1]),
        .I4(T_RADDR[0]),
        .I5(T_RDEN),
        .O(\T_RDATA[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h04FF04FFFFFF04FF)) 
    \T_RDATA[7]_i_2 
       (.I0(\T_RDATA[7]_i_5_n_0 ),
        .I1(T_RADDR[3]),
        .I2(T_RADDR[2]),
        .I3(T_RADDR[4]),
        .I4(conf_mac_addr[15]),
        .I5(\T_RDATA[31]_i_7_n_0 ),
        .O(\T_RDATA[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAEFEA00000000)) 
    \T_RDATA[7]_i_3 
       (.I0(\T_RDATA[7]_i_6_n_0 ),
        .I1(tx_addr_end[7]),
        .I2(T_RADDR[5]),
        .I3(p_18_in[7]),
        .I4(\T_RDATA[8]_i_7_n_0 ),
        .I5(\T_RDATA[31]_i_5_n_0 ),
        .O(\T_RDATA[7]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h0000FECE)) 
    \T_RDATA[7]_i_4 
       (.I0(\T_RDATA[7]_i_7_n_0 ),
        .I1(T_RADDR[2]),
        .I2(T_RADDR[3]),
        .I3(\T_RDATA[7]_i_8_n_0 ),
        .I4(T_RADDR[4]),
        .O(\T_RDATA[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hF0F3FF5FFFF3FF5F)) 
    \T_RDATA[7]_i_5 
       (.I0(rx_addr_start[7]),
        .I1(rx_desc_rd_dst[7]),
        .I2(T_RADDR[7]),
        .I3(T_RADDR[5]),
        .I4(T_RADDR[6]),
        .I5(tx_addr_head[7]),
        .O(\T_RDATA[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00FA000C000A000C)) 
    \T_RDATA[7]_i_6 
       (.I0(\^rx_bchunk [7]),
        .I1(conf_mac_addr[47]),
        .I2(T_RADDR[5]),
        .I3(T_RADDR[6]),
        .I4(T_RADDR[7]),
        .I5(rx_addr_tail[7]),
        .O(\T_RDATA[7]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hF5F03FFFF5FF3FFF)) 
    \T_RDATA[7]_i_7 
       (.I0(rx_addr_end[7]),
        .I1(\^tx_bchunk [7]),
        .I2(T_RADDR[6]),
        .I3(T_RADDR[5]),
        .I4(T_RADDR[7]),
        .I5(tx_addr_tail[7]),
        .O(\T_RDATA[7]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hF53FF0FFF53FFFFF)) 
    \T_RDATA[7]_i_8 
       (.I0(tx_addr_start[7]),
        .I1(rx_addr_head[7]),
        .I2(T_RADDR[7]),
        .I3(T_RADDR[6]),
        .I4(T_RADDR[5]),
        .I5(tx_addr_tail[7]),
        .O(\T_RDATA[7]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0000000E00000000)) 
    \T_RDATA[8]_i_1 
       (.I0(\T_RDATA[8]_i_2_n_0 ),
        .I1(\T_RDATA[8]_i_3_n_0 ),
        .I2(\T_RDATA[8]_i_4_n_0 ),
        .I3(T_RADDR[1]),
        .I4(T_RADDR[0]),
        .I5(T_RDEN),
        .O(\T_RDATA[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h04FF04FFFFFF04FF)) 
    \T_RDATA[8]_i_2 
       (.I0(\T_RDATA[8]_i_5_n_0 ),
        .I1(T_RADDR[3]),
        .I2(T_RADDR[2]),
        .I3(T_RADDR[4]),
        .I4(conf_mac_addr[0]),
        .I5(\T_RDATA[31]_i_7_n_0 ),
        .O(\T_RDATA[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAEFEA00000000)) 
    \T_RDATA[8]_i_3 
       (.I0(\T_RDATA[8]_i_6_n_0 ),
        .I1(tx_addr_end[8]),
        .I2(T_RADDR[5]),
        .I3(p_18_in[8]),
        .I4(\T_RDATA[8]_i_7_n_0 ),
        .I5(\T_RDATA[31]_i_5_n_0 ),
        .O(\T_RDATA[8]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h0000FECE)) 
    \T_RDATA[8]_i_4 
       (.I0(\T_RDATA[8]_i_8_n_0 ),
        .I1(T_RADDR[2]),
        .I2(T_RADDR[3]),
        .I3(\T_RDATA[8]_i_9_n_0 ),
        .I4(T_RADDR[4]),
        .O(\T_RDATA[8]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hF0F3FF5FFFF3FF5F)) 
    \T_RDATA[8]_i_5 
       (.I0(rx_addr_start[8]),
        .I1(rx_desc_rd_dst[8]),
        .I2(T_RADDR[7]),
        .I3(T_RADDR[5]),
        .I4(T_RADDR[6]),
        .I5(tx_addr_head[8]),
        .O(\T_RDATA[8]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00FA000C000A000C)) 
    \T_RDATA[8]_i_6 
       (.I0(\^rx_bchunk [8]),
        .I1(conf_mac_addr[32]),
        .I2(T_RADDR[5]),
        .I3(T_RADDR[6]),
        .I4(T_RADDR[7]),
        .I5(rx_addr_tail[8]),
        .O(\T_RDATA[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \T_RDATA[8]_i_7 
       (.I0(T_RADDR[7]),
        .I1(T_RADDR[6]),
        .O(\T_RDATA[8]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hF5F03FFFF5FF3FFF)) 
    \T_RDATA[8]_i_8 
       (.I0(rx_addr_end[8]),
        .I1(\^tx_bchunk [8]),
        .I2(T_RADDR[6]),
        .I3(T_RADDR[5]),
        .I4(T_RADDR[7]),
        .I5(tx_addr_tail[8]),
        .O(\T_RDATA[8]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hF4F73C3CF4F7FCFC)) 
    \T_RDATA[8]_i_9 
       (.I0(tx_addr_start[8]),
        .I1(T_RADDR[5]),
        .I2(T_RADDR[7]),
        .I3(tx_addr_tail[8]),
        .I4(T_RADDR[6]),
        .I5(rx_addr_head[8]),
        .O(\T_RDATA[8]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h00000000AAAA0008)) 
    \T_RDATA[9]_i_1 
       (.I0(\T_RDATA[9]_i_2_n_0 ),
        .I1(\T_RDATA[9]_i_3_n_0 ),
        .I2(T_RADDR[3]),
        .I3(T_RADDR[2]),
        .I4(\T_RDATA[9]_i_4_n_0 ),
        .I5(\T_RDATA[31]_i_6_n_0 ),
        .O(\T_RDATA[9]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF0131)) 
    \T_RDATA[9]_i_2 
       (.I0(\T_RDATA[9]_i_5_n_0 ),
        .I1(T_RADDR[2]),
        .I2(T_RADDR[3]),
        .I3(\T_RDATA[9]_i_6_n_0 ),
        .I4(T_RADDR[4]),
        .O(\T_RDATA[9]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFAAEAAAAAAAEAAA)) 
    \T_RDATA[9]_i_3 
       (.I0(\T_RDATA[9]_i_7_n_0 ),
        .I1(tx_addr_end[9]),
        .I2(T_RADDR[6]),
        .I3(T_RADDR[5]),
        .I4(T_RADDR[7]),
        .I5(rx_addr_tail[9]),
        .O(\T_RDATA[9]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h04FF04FFFFFF04FF)) 
    \T_RDATA[9]_i_4 
       (.I0(\T_RDATA[9]_i_8_n_0 ),
        .I1(T_RADDR[3]),
        .I2(T_RADDR[2]),
        .I3(T_RADDR[4]),
        .I4(conf_mac_addr[1]),
        .I5(\T_RDATA[31]_i_7_n_0 ),
        .O(\T_RDATA[9]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hF53FFF0FF53FFFFF)) 
    \T_RDATA[9]_i_5 
       (.I0(\^tx_bchunk [9]),
        .I1(rx_addr_end[9]),
        .I2(T_RADDR[7]),
        .I3(T_RADDR[6]),
        .I4(T_RADDR[5]),
        .I5(tx_addr_tail[9]),
        .O(\T_RDATA[9]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hF4F73C3CF4F7FCFC)) 
    \T_RDATA[9]_i_6 
       (.I0(tx_addr_start[9]),
        .I1(T_RADDR[5]),
        .I2(T_RADDR[7]),
        .I3(tx_addr_tail[9]),
        .I4(T_RADDR[6]),
        .I5(rx_addr_head[9]),
        .O(\T_RDATA[9]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000033E200E2)) 
    \T_RDATA[9]_i_7 
       (.I0(conf_mac_addr[33]),
        .I1(T_RADDR[7]),
        .I2(\^rx_bchunk [9]),
        .I3(T_RADDR[6]),
        .I4(p_18_in[9]),
        .I5(T_RADDR[5]),
        .O(\T_RDATA[9]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hF0F3FF5FFFF3FF5F)) 
    \T_RDATA[9]_i_8 
       (.I0(rx_addr_start[9]),
        .I1(rx_desc_rd_dst[9]),
        .I2(T_RADDR[7]),
        .I3(T_RADDR[5]),
        .I4(T_RADDR[6]),
        .I5(tx_addr_head[9]),
        .O(\T_RDATA[9]_i_8_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[0]_i_1_n_0 ),
        .Q(T_RDATA[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[10]_i_1_n_0 ),
        .Q(T_RDATA[10]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[11]_i_1_n_0 ),
        .Q(T_RDATA[11]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[12]_i_1_n_0 ),
        .Q(T_RDATA[12]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[13]_i_1_n_0 ),
        .Q(T_RDATA[13]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[14]_i_1_n_0 ),
        .Q(T_RDATA[14]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[15]_i_1_n_0 ),
        .Q(T_RDATA[15]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[16] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[16]_i_1_n_0 ),
        .Q(T_RDATA[16]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[17] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[17]_i_1_n_0 ),
        .Q(T_RDATA[17]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[18] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[18]_i_1_n_0 ),
        .Q(T_RDATA[18]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[19] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[19]_i_1_n_0 ),
        .Q(T_RDATA[19]));
  MUXF7 \T_RDATA_reg[19]_i_4 
       (.I0(\T_RDATA[19]_i_6_n_0 ),
        .I1(\T_RDATA[19]_i_7_n_0 ),
        .O(\T_RDATA_reg[19]_i_4_n_0 ),
        .S(T_RADDR[4]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[1]_i_1_n_0 ),
        .Q(T_RDATA[1]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[20] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[20]_i_1_n_0 ),
        .Q(T_RDATA[20]));
  MUXF7 \T_RDATA_reg[20]_i_4 
       (.I0(\T_RDATA[20]_i_6_n_0 ),
        .I1(\T_RDATA[20]_i_7_n_0 ),
        .O(\T_RDATA_reg[20]_i_4_n_0 ),
        .S(T_RADDR[4]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[21] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[21]_i_1_n_0 ),
        .Q(T_RDATA[21]));
  MUXF7 \T_RDATA_reg[21]_i_2 
       (.I0(\T_RDATA[21]_i_5_n_0 ),
        .I1(\T_RDATA[21]_i_6_n_0 ),
        .O(\T_RDATA_reg[21]_i_2_n_0 ),
        .S(T_RADDR[4]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[22] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[22]_i_1_n_0 ),
        .Q(T_RDATA[22]));
  MUXF7 \T_RDATA_reg[22]_i_2 
       (.I0(\T_RDATA[22]_i_5_n_0 ),
        .I1(\T_RDATA[22]_i_6_n_0 ),
        .O(\T_RDATA_reg[22]_i_2_n_0 ),
        .S(T_RADDR[4]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[23] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[23]_i_1_n_0 ),
        .Q(T_RDATA[23]));
  MUXF7 \T_RDATA_reg[23]_i_2 
       (.I0(\T_RDATA[23]_i_5_n_0 ),
        .I1(\T_RDATA[23]_i_6_n_0 ),
        .O(\T_RDATA_reg[23]_i_2_n_0 ),
        .S(T_RADDR[4]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[24] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[24]_i_1_n_0 ),
        .Q(T_RDATA[24]));
  MUXF7 \T_RDATA_reg[24]_i_2 
       (.I0(\T_RDATA[24]_i_5_n_0 ),
        .I1(\T_RDATA[24]_i_6_n_0 ),
        .O(\T_RDATA_reg[24]_i_2_n_0 ),
        .S(T_RADDR[4]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[25] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[25]_i_1_n_0 ),
        .Q(T_RDATA[25]));
  MUXF7 \T_RDATA_reg[25]_i_2 
       (.I0(\T_RDATA[25]_i_5_n_0 ),
        .I1(\T_RDATA[25]_i_6_n_0 ),
        .O(\T_RDATA_reg[25]_i_2_n_0 ),
        .S(T_RADDR[4]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[26] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[26]_i_1_n_0 ),
        .Q(T_RDATA[26]));
  MUXF7 \T_RDATA_reg[26]_i_2 
       (.I0(\T_RDATA[26]_i_5_n_0 ),
        .I1(\T_RDATA[26]_i_6_n_0 ),
        .O(\T_RDATA_reg[26]_i_2_n_0 ),
        .S(T_RADDR[4]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[27] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[27]_i_1_n_0 ),
        .Q(T_RDATA[27]));
  MUXF7 \T_RDATA_reg[27]_i_2 
       (.I0(\T_RDATA[27]_i_5_n_0 ),
        .I1(\T_RDATA[27]_i_6_n_0 ),
        .O(\T_RDATA_reg[27]_i_2_n_0 ),
        .S(T_RADDR[4]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[28] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[28]_i_1_n_0 ),
        .Q(T_RDATA[28]));
  MUXF7 \T_RDATA_reg[28]_i_2 
       (.I0(\T_RDATA[28]_i_5_n_0 ),
        .I1(\T_RDATA[28]_i_6_n_0 ),
        .O(\T_RDATA_reg[28]_i_2_n_0 ),
        .S(T_RADDR[4]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[29] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[29]_i_1_n_0 ),
        .Q(T_RDATA[29]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[2]_i_1_n_0 ),
        .Q(T_RDATA[2]));
  MUXF7 \T_RDATA_reg[2]_i_4 
       (.I0(\T_RDATA[2]_i_8_n_0 ),
        .I1(\T_RDATA[2]_i_9_n_0 ),
        .O(\T_RDATA_reg[2]_i_4_n_0 ),
        .S(T_RADDR[5]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[30] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[30]_i_1_n_0 ),
        .Q(T_RDATA[30]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[31] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[31]_i_1_n_0 ),
        .Q(T_RDATA[31]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[3]_i_1_n_0 ),
        .Q(T_RDATA[3]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[4]_i_1_n_0 ),
        .Q(T_RDATA[4]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[5]_i_1_n_0 ),
        .Q(T_RDATA[5]));
  MUXF7 \T_RDATA_reg[5]_i_2 
       (.I0(\T_RDATA[5]_i_6_n_0 ),
        .I1(\T_RDATA[5]_i_7_n_0 ),
        .O(\T_RDATA_reg[5]_i_2_n_0 ),
        .S(T_RADDR[4]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[6]_i_1_n_0 ),
        .Q(T_RDATA[6]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[7]_i_1_n_0 ),
        .Q(T_RDATA[7]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[8]_i_1_n_0 ),
        .Q(T_RDATA[8]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \T_RDATA_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\T_RDATA[9]_i_1_n_0 ),
        .Q(T_RDATA[9]));
  LUT6 #(
    .INIT(64'h00000000AAAAAAA8)) 
    \conf_mac_addr[15]_i_1 
       (.I0(T_WADDR[2]),
        .I1(T_WREN[0]),
        .I2(T_WREN[3]),
        .I3(T_WREN[1]),
        .I4(T_WREN[2]),
        .I5(\conf_mac_addr[47]_i_2_n_0 ),
        .O(\conf_mac_addr[15]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \conf_mac_addr[39]_i_1 
       (.I0(RESET_N),
        .O(\conf_mac_addr[39]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FFFE)) 
    \conf_mac_addr[47]_i_1 
       (.I0(T_WREN[0]),
        .I1(T_WREN[3]),
        .I2(T_WREN[1]),
        .I3(T_WREN[2]),
        .I4(T_WADDR[2]),
        .I5(\conf_mac_addr[47]_i_2_n_0 ),
        .O(\conf_mac_addr[47]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEFF)) 
    \conf_mac_addr[47]_i_2 
       (.I0(T_WADDR[5]),
        .I1(T_WADDR[0]),
        .I2(conf_tx_en_i_3_n_0),
        .I3(T_WADDR[4]),
        .I4(T_WADDR[3]),
        .I5(T_WADDR[1]),
        .O(\conf_mac_addr[47]_i_2_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[0] 
       (.C(CLK),
        .CE(\conf_mac_addr[15]_i_1_n_0 ),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(T_WDATA[8]),
        .Q(conf_mac_addr[0]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[10] 
       (.C(CLK),
        .CE(\conf_mac_addr[15]_i_1_n_0 ),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(T_WDATA[2]),
        .Q(conf_mac_addr[10]));
  FDPE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[11] 
       (.C(CLK),
        .CE(\conf_mac_addr[15]_i_1_n_0 ),
        .D(T_WDATA[3]),
        .PRE(\conf_mac_speed[1]_i_2_n_0 ),
        .Q(conf_mac_addr[11]));
  FDPE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[12] 
       (.C(CLK),
        .CE(\conf_mac_addr[15]_i_1_n_0 ),
        .D(T_WDATA[4]),
        .PRE(\conf_mac_speed[1]_i_2_n_0 ),
        .Q(conf_mac_addr[12]));
  FDPE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[13] 
       (.C(CLK),
        .CE(\conf_mac_addr[15]_i_1_n_0 ),
        .D(T_WDATA[5]),
        .PRE(\conf_mac_speed[1]_i_2_n_0 ),
        .Q(conf_mac_addr[13]));
  FDPE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[14] 
       (.C(CLK),
        .CE(\conf_mac_addr[15]_i_1_n_0 ),
        .D(T_WDATA[6]),
        .PRE(\conf_mac_speed[1]_i_2_n_0 ),
        .Q(conf_mac_addr[14]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[15] 
       (.C(CLK),
        .CE(\conf_mac_addr[15]_i_1_n_0 ),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(T_WDATA[7]),
        .Q(conf_mac_addr[15]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[16] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[24]),
        .Q(conf_mac_addr[16]));
  FDPE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[17] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .D(T_WDATA[25]),
        .PRE(reg_ip_i_2_n_0),
        .Q(conf_mac_addr[17]));
  FDPE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[18] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .D(T_WDATA[26]),
        .PRE(reg_ip_i_2_n_0),
        .Q(conf_mac_addr[18]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[19] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[27]),
        .Q(conf_mac_addr[19]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[1] 
       (.C(CLK),
        .CE(\conf_mac_addr[15]_i_1_n_0 ),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(T_WDATA[9]),
        .Q(conf_mac_addr[1]));
  FDPE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[20] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .D(T_WDATA[28]),
        .PRE(reg_ip_i_2_n_0),
        .Q(conf_mac_addr[20]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[21] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[29]),
        .Q(conf_mac_addr[21]));
  FDPE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[22] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .D(T_WDATA[30]),
        .PRE(reg_ip_i_2_n_0),
        .Q(conf_mac_addr[22]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[23] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[31]),
        .Q(conf_mac_addr[23]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[24] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[16]),
        .Q(conf_mac_addr[24]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[25] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[17]),
        .Q(conf_mac_addr[25]));
  FDPE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[26] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .D(T_WDATA[18]),
        .PRE(\conf_mac_addr[39]_i_1_n_0 ),
        .Q(conf_mac_addr[26]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[27] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[19]),
        .Q(conf_mac_addr[27]));
  FDPE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[28] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .D(T_WDATA[20]),
        .PRE(reg_ip_i_2_n_0),
        .Q(conf_mac_addr[28]));
  FDPE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[29] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .D(T_WDATA[21]),
        .PRE(reg_ip_i_2_n_0),
        .Q(conf_mac_addr[29]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[2] 
       (.C(CLK),
        .CE(\conf_mac_addr[15]_i_1_n_0 ),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(T_WDATA[10]),
        .Q(conf_mac_addr[2]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[30] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[22]),
        .Q(conf_mac_addr[30]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[31] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[23]),
        .Q(conf_mac_addr[31]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[32] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[8]),
        .Q(conf_mac_addr[32]));
  FDPE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[33] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .D(T_WDATA[9]),
        .PRE(gbe_phy_reset_n_i_2_n_0),
        .Q(conf_mac_addr[33]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[34] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[10]),
        .Q(conf_mac_addr[34]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[35] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[11]),
        .Q(conf_mac_addr[35]));
  FDPE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[36] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .D(T_WDATA[12]),
        .PRE(\conf_mac_speed[1]_i_2_n_0 ),
        .Q(conf_mac_addr[36]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[37] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(T_WDATA[13]),
        .Q(conf_mac_addr[37]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[38] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[14]),
        .Q(conf_mac_addr[38]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[39] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[15]),
        .Q(conf_mac_addr[39]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[3] 
       (.C(CLK),
        .CE(\conf_mac_addr[15]_i_1_n_0 ),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(T_WDATA[11]),
        .Q(conf_mac_addr[3]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[40] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(T_WDATA[0]),
        .Q(conf_mac_addr[40]));
  FDPE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[41] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .D(T_WDATA[1]),
        .PRE(\conf_mac_speed[1]_i_2_n_0 ),
        .Q(conf_mac_addr[41]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[42] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[2]),
        .Q(conf_mac_addr[42]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[43] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[3]),
        .Q(conf_mac_addr[43]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[44] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[4]),
        .Q(conf_mac_addr[44]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[45] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[5]),
        .Q(conf_mac_addr[45]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[46] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[6]),
        .Q(conf_mac_addr[46]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[47] 
       (.C(CLK),
        .CE(\conf_mac_addr[47]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[7]),
        .Q(conf_mac_addr[47]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[4] 
       (.C(CLK),
        .CE(\conf_mac_addr[15]_i_1_n_0 ),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(T_WDATA[12]),
        .Q(conf_mac_addr[4]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[5] 
       (.C(CLK),
        .CE(\conf_mac_addr[15]_i_1_n_0 ),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(T_WDATA[13]),
        .Q(conf_mac_addr[5]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[6] 
       (.C(CLK),
        .CE(\conf_mac_addr[15]_i_1_n_0 ),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(T_WDATA[14]),
        .Q(conf_mac_addr[6]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[7] 
       (.C(CLK),
        .CE(\conf_mac_addr[15]_i_1_n_0 ),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(T_WDATA[15]),
        .Q(conf_mac_addr[7]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[8] 
       (.C(CLK),
        .CE(\conf_mac_addr[15]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[0]),
        .Q(conf_mac_addr[8]));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_addr_reg[9] 
       (.C(CLK),
        .CE(\conf_mac_addr[15]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[1]),
        .Q(conf_mac_addr[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    \conf_mac_speed[0]_i_1 
       (.I0(T_WDATA[0]),
        .I1(\conf_mac_speed[1]_i_3_n_0 ),
        .I2(conf_mac_speed[0]),
        .O(\conf_mac_speed[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \conf_mac_speed[1]_i_1 
       (.I0(T_WDATA[1]),
        .I1(\conf_mac_speed[1]_i_3_n_0 ),
        .I2(conf_mac_speed[1]),
        .O(\conf_mac_speed[1]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \conf_mac_speed[1]_i_2 
       (.I0(RESET_N),
        .O(\conf_mac_speed[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \conf_mac_speed[1]_i_3 
       (.I0(\rx_addr_start[31]_i_2_n_0 ),
        .I1(T_WADDR[3]),
        .I2(T_WADDR[2]),
        .I3(conf_tx_en_i_3_n_0),
        .I4(T_WADDR[4]),
        .I5(T_WADDR[5]),
        .O(\conf_mac_speed[1]_i_3_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \conf_mac_speed_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\conf_mac_speed[0]_i_1_n_0 ),
        .Q(conf_mac_speed[0]));
  FDPE #(
    .INIT(1'b1)) 
    \conf_mac_speed_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\conf_mac_speed[1]_i_1_n_0 ),
        .PRE(\conf_mac_speed[1]_i_2_n_0 ),
        .Q(conf_mac_speed[1]));
  LUT3 #(
    .INIT(8'h02)) 
    conf_rx_en_i_1
       (.I0(conf_rx_en_i_2_n_0),
        .I1(T_WADDR[6]),
        .I2(T_WADDR[7]),
        .O(conf_rx_en_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000001000)) 
    conf_rx_en_i_2
       (.I0(T_WADDR[0]),
        .I1(T_WADDR[1]),
        .I2(T_WADDR[5]),
        .I3(T_WADDR[4]),
        .I4(\rx_addr_end[31]_i_2_n_0 ),
        .I5(\rx_addr_end[31]_i_4_n_0 ),
        .O(conf_rx_en_i_2_n_0));
  FDCE #(
    .INIT(1'b0)) 
    conf_rx_en_reg
       (.C(CLK),
        .CE(conf_rx_en_i_1_n_0),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[1]),
        .Q(conf_rx_en));
  FDCE #(
    .INIT(1'b0)) 
    conf_rx_jumbo_en_reg
       (.C(CLK),
        .CE(conf_rx_en_i_1_n_0),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[2]),
        .Q(conf_rx_jumbo_en));
  FDCE #(
    .INIT(1'b0)) 
    conf_rx_no_chk_crc_reg
       (.C(CLK),
        .CE(conf_rx_en_i_1_n_0),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[3]),
        .Q(conf_rx_no_chk_crc));
  FDCE #(
    .INIT(1'b0)) 
    conf_rx_promiscuous_reg
       (.C(CLK),
        .CE(conf_rx_en_i_1_n_0),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[4]),
        .Q(conf_rx_promiscuous));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT2 #(
    .INIT(4'hB)) 
    conf_rx_reset_INST_0
       (.I0(csr_rx_reset_reg_n_0),
        .I1(p_24_in[30]),
        .O(conf_rx_reset));
  LUT6 #(
    .INIT(64'hFFFFFFFB00000008)) 
    conf_tx_en_i_1
       (.I0(T_WDATA[1]),
        .I1(conf_tx_en_i_2_n_0),
        .I2(conf_tx_en_i_3_n_0),
        .I3(T_WADDR[2]),
        .I4(T_WADDR[3]),
        .I5(conf_tx_en),
        .O(conf_tx_en_i_1_n_0));
  LUT5 #(
    .INIT(32'h00000100)) 
    conf_tx_en_i_2
       (.I0(T_WADDR[1]),
        .I1(\rx_addr_end[31]_i_2_n_0 ),
        .I2(T_WADDR[0]),
        .I3(T_WADDR[5]),
        .I4(T_WADDR[4]),
        .O(conf_tx_en_i_2_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    conf_tx_en_i_3
       (.I0(T_WADDR[7]),
        .I1(T_WADDR[6]),
        .O(conf_tx_en_i_3_n_0));
  FDCE #(
    .INIT(1'b0)) 
    conf_tx_en_reg
       (.C(CLK),
        .CE(1'b1),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(conf_tx_en_i_1_n_0),
        .Q(conf_tx_en));
  LUT6 #(
    .INIT(64'hFFFFFFFB00000008)) 
    conf_tx_jumbo_en_i_1
       (.I0(T_WDATA[2]),
        .I1(conf_tx_en_i_2_n_0),
        .I2(conf_tx_en_i_3_n_0),
        .I3(T_WADDR[2]),
        .I4(T_WADDR[3]),
        .I5(conf_tx_jumbo_en),
        .O(conf_tx_jumbo_en_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    conf_tx_jumbo_en_reg
       (.C(CLK),
        .CE(1'b1),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(conf_tx_jumbo_en_i_1_n_0),
        .Q(conf_tx_jumbo_en));
  LUT6 #(
    .INIT(64'hFFFFFFFB00000008)) 
    conf_tx_no_gen_crc_i_1
       (.I0(T_WDATA[3]),
        .I1(conf_tx_en_i_2_n_0),
        .I2(conf_tx_en_i_3_n_0),
        .I3(T_WADDR[2]),
        .I4(T_WADDR[3]),
        .I5(conf_tx_no_gen_crc),
        .O(conf_tx_no_gen_crc_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    conf_tx_no_gen_crc_reg
       (.C(CLK),
        .CE(1'b1),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(conf_tx_no_gen_crc_i_1_n_0),
        .Q(conf_tx_no_gen_crc));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'hD)) 
    conf_tx_reset_INST_0
       (.I0(p_24_in[30]),
        .I1(csr_tx_reset_reg_n_0),
        .O(conf_tx_reset));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    csr_rx_reset_i_1
       (.I0(\rx_bchunk[10]_i_2_n_0 ),
        .I1(T_WADDR[4]),
        .I2(T_WADDR[5]),
        .I3(T_WADDR[6]),
        .I4(T_WADDR[7]),
        .I5(T_WDATA[0]),
        .O(csr_rx_reset15_out));
  FDPE #(
    .INIT(1'b1)) 
    csr_rx_reset_reg
       (.C(CLK),
        .CE(1'b1),
        .D(csr_rx_reset15_out),
        .PRE(gbe_phy_reset_n_i_2_n_0),
        .Q(csr_rx_reset_reg_n_0));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    csr_tx_reset_i_1
       (.I0(conf_tx_en_i_2_n_0),
        .I1(T_WADDR[6]),
        .I2(T_WADDR[7]),
        .I3(T_WDATA[0]),
        .I4(T_WADDR[2]),
        .I5(T_WADDR[3]),
        .O(csr_tx_reset14_out));
  FDPE #(
    .INIT(1'b1)) 
    csr_tx_reset_reg
       (.C(CLK),
        .CE(1'b1),
        .D(csr_tx_reset14_out),
        .PRE(gbe_phy_reset_n_i_2_n_0),
        .Q(csr_tx_reset_reg_n_0));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    gbe_phy_ready_i_1
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(gbe_phy_ready_i_2_n_0),
        .I2(gbe_phy_reset_n_i_3_n_0),
        .I3(p_24_in[30]),
        .O(gbe_phy_ready_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000020000)) 
    gbe_phy_ready_i_2
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(gbe_phy_reset_n_i_10_n_0),
        .I2(gbe_phy_reset_n_i_9_n_0),
        .I3(gbe_phy_reset_n_i_8_n_0),
        .I4(gbe_phy_reset_n_i_7_n_0),
        .I5(gbe_phy_reset_n_i_6_n_0),
        .O(gbe_phy_ready_i_2_n_0));
  FDCE #(
    .INIT(1'b0)) 
    gbe_phy_ready_reg
       (.C(CLK),
        .CE(1'b1),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(gbe_phy_ready_i_1_n_0),
        .Q(p_24_in[30]));
  LUT5 #(
    .INIT(32'hF5F5B0A0)) 
    gbe_phy_reset_n_i_1
       (.I0(gbe_phy_reset_n_i_3_n_0),
        .I1(\reset_cnt_reg_n_0_[19] ),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .I3(gbe_phy_reset_n_i_4_n_0),
        .I4(gbe_phy_reset_n),
        .O(gbe_phy_reset_n_i_1_n_0));
  LUT3 #(
    .INIT(8'hFE)) 
    gbe_phy_reset_n_i_10
       (.I0(\reset_cnt_reg_n_0_[10] ),
        .I1(\reset_cnt_reg_n_0_[12] ),
        .I2(\reset_cnt_reg_n_0_[5] ),
        .O(gbe_phy_reset_n_i_10_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    gbe_phy_reset_n_i_2
       (.I0(RESET_N),
        .O(gbe_phy_reset_n_i_2_n_0));
  LUT6 #(
    .INIT(64'h0000000000004000)) 
    gbe_phy_reset_n_i_3
       (.I0(reg_ip_i_4_n_0),
        .I1(gbe_phy_reset_n_i_5_n_0),
        .I2(T_WDATA[30]),
        .I3(\FSM_onehot_state_reg_n_0_[2] ),
        .I4(T_WADDR[2]),
        .I5(\rx_addr_end[31]_i_2_n_0 ),
        .O(gbe_phy_reset_n_i_3_n_0));
  LUT5 #(
    .INIT(32'h00000004)) 
    gbe_phy_reset_n_i_4
       (.I0(gbe_phy_reset_n_i_6_n_0),
        .I1(gbe_phy_reset_n_i_7_n_0),
        .I2(gbe_phy_reset_n_i_8_n_0),
        .I3(gbe_phy_reset_n_i_9_n_0),
        .I4(gbe_phy_reset_n_i_10_n_0),
        .O(gbe_phy_reset_n_i_4_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    gbe_phy_reset_n_i_5
       (.I0(T_WADDR[1]),
        .I1(T_WADDR[4]),
        .I2(T_WADDR[3]),
        .O(gbe_phy_reset_n_i_5_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    gbe_phy_reset_n_i_6
       (.I0(\reset_cnt_reg_n_0_[15] ),
        .I1(\reset_cnt_reg_n_0_[1] ),
        .I2(\reset_cnt_reg_n_0_[13] ),
        .I3(\reset_cnt_reg_n_0_[6] ),
        .O(gbe_phy_reset_n_i_6_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    gbe_phy_reset_n_i_7
       (.I0(\reset_cnt_reg_n_0_[8] ),
        .I1(\reset_cnt_reg_n_0_[3] ),
        .I2(\reset_cnt_reg_n_0_[17] ),
        .I3(\reset_cnt_reg_n_0_[2] ),
        .O(gbe_phy_reset_n_i_7_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    gbe_phy_reset_n_i_8
       (.I0(\reset_cnt_reg_n_0_[14] ),
        .I1(\reset_cnt_reg_n_0_[11] ),
        .I2(\reset_cnt_reg_n_0_[18] ),
        .I3(\reset_cnt_reg_n_0_[0] ),
        .O(gbe_phy_reset_n_i_8_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    gbe_phy_reset_n_i_9
       (.I0(\reset_cnt_reg_n_0_[16] ),
        .I1(\reset_cnt_reg_n_0_[4] ),
        .I2(\reset_cnt_reg_n_0_[9] ),
        .I3(\reset_cnt_reg_n_0_[7] ),
        .O(gbe_phy_reset_n_i_9_n_0));
  FDCE #(
    .INIT(1'b1)) 
    gbe_phy_reset_n_reg
       (.C(CLK),
        .CE(1'b1),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(gbe_phy_reset_n_i_1_n_0),
        .Q(gbe_phy_reset_n));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(rx_desc_items[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(rx_desc_items[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(rx_desc_items[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(rx_desc_items[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(rx_desc_items[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(rx_desc_items[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(rx_desc_items[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(rx_desc_items[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(rx_desc_items[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(rx_desc_items[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(rx_desc_items[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    reg_ie_i_1
       (.I0(T_WDATA[31]),
        .I1(\conf_mac_speed[1]_i_3_n_0 ),
        .I2(p_24_in[31]),
        .O(reg_ie_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    reg_ie_reg
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(reg_ie_i_1_n_0),
        .Q(p_24_in[31]));
  LUT5 #(
    .INIT(32'h3F053000)) 
    reg_ip_i_1
       (.I0(rx_desc_empty),
        .I1(T_WDATA[31]),
        .I2(reg_ip_i_3_n_0),
        .I3(IRQ),
        .I4(p_24_in[31]),
        .O(reg_ip_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    reg_ip_i_2
       (.I0(RESET_N),
        .O(reg_ip_i_2_n_0));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    reg_ip_i_3
       (.I0(reg_ip_i_4_n_0),
        .I1(T_WADDR[1]),
        .I2(T_WADDR[4]),
        .I3(T_WADDR[3]),
        .I4(T_WADDR[2]),
        .I5(\rx_addr_end[31]_i_2_n_0 ),
        .O(reg_ip_i_3_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    reg_ip_i_4
       (.I0(T_WADDR[6]),
        .I1(T_WADDR[7]),
        .I2(T_WADDR[0]),
        .I3(T_WADDR[5]),
        .O(reg_ip_i_4_n_0));
  FDCE #(
    .INIT(1'b0)) 
    reg_ip_reg
       (.C(CLK),
        .CE(1'b1),
        .CLR(reg_ip_i_2_n_0),
        .D(reg_ip_i_1_n_0),
        .Q(IRQ));
  LUT6 #(
    .INIT(64'h8888888FFFFFFF80)) 
    \reset_cnt[0]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(T_WDATA[30]),
        .I2(gbe_phy_reset_n_i_3_n_0),
        .I3(\FSM_onehot_state_reg_n_0_[1] ),
        .I4(\FSM_onehot_state_reg_n_0_[0] ),
        .I5(\reset_cnt_reg_n_0_[0] ),
        .O(\reset_cnt[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \reset_cnt[10]_i_1 
       (.I0(\reset_cnt_reg[12]_i_2_n_6 ),
        .I1(\FSM_onehot_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .O(\reset_cnt[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \reset_cnt[11]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(\reset_cnt_reg[12]_i_2_n_5 ),
        .O(\reset_cnt[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \reset_cnt[12]_i_1 
       (.I0(\reset_cnt_reg[12]_i_2_n_4 ),
        .I1(\FSM_onehot_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .O(\reset_cnt[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \reset_cnt[13]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(\reset_cnt_reg[16]_i_2_n_7 ),
        .O(\reset_cnt[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \reset_cnt[14]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(\reset_cnt_reg[16]_i_2_n_6 ),
        .O(\reset_cnt[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \reset_cnt[15]_i_1 
       (.I0(\reset_cnt_reg[16]_i_2_n_5 ),
        .I1(\FSM_onehot_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .O(\reset_cnt[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \reset_cnt[16]_i_1 
       (.I0(\reset_cnt_reg[16]_i_2_n_4 ),
        .I1(\FSM_onehot_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .O(\reset_cnt[16]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \reset_cnt[17]_i_1 
       (.I0(\reset_cnt_reg[19]_i_3_n_7 ),
        .I1(\FSM_onehot_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .O(\reset_cnt[17]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \reset_cnt[18]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(\reset_cnt_reg[19]_i_3_n_6 ),
        .O(\reset_cnt[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \reset_cnt[19]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .O(\reset_cnt[19]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \reset_cnt[19]_i_2 
       (.I0(\reset_cnt_reg[19]_i_3_n_5 ),
        .I1(\FSM_onehot_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .O(\reset_cnt[19]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \reset_cnt[1]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(\reset_cnt_reg[4]_i_2_n_7 ),
        .O(\reset_cnt[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \reset_cnt[2]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(\reset_cnt_reg[4]_i_2_n_6 ),
        .O(\reset_cnt[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \reset_cnt[3]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(\reset_cnt_reg[4]_i_2_n_5 ),
        .O(\reset_cnt[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \reset_cnt[4]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(\reset_cnt_reg[4]_i_2_n_4 ),
        .O(\reset_cnt[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \reset_cnt[5]_i_1 
       (.I0(\reset_cnt_reg[8]_i_2_n_7 ),
        .I1(\FSM_onehot_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .O(\reset_cnt[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \reset_cnt[6]_i_1 
       (.I0(\reset_cnt_reg[8]_i_2_n_6 ),
        .I1(\FSM_onehot_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .O(\reset_cnt[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \reset_cnt[7]_i_1 
       (.I0(\reset_cnt_reg[8]_i_2_n_5 ),
        .I1(\FSM_onehot_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .O(\reset_cnt[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \reset_cnt[8]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(\reset_cnt_reg[8]_i_2_n_4 ),
        .O(\reset_cnt[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \reset_cnt[9]_i_1 
       (.I0(\reset_cnt_reg[12]_i_2_n_7 ),
        .I1(\FSM_onehot_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .O(\reset_cnt[9]_i_1_n_0 ));
  FDPE #(
    .INIT(1'b0)) 
    \reset_cnt_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\reset_cnt[0]_i_1_n_0 ),
        .PRE(gbe_phy_reset_n_i_2_n_0),
        .Q(\reset_cnt_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \reset_cnt_reg[10] 
       (.C(CLK),
        .CE(\reset_cnt[19]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\reset_cnt[10]_i_1_n_0 ),
        .Q(\reset_cnt_reg_n_0_[10] ));
  FDCE #(
    .INIT(1'b0)) 
    \reset_cnt_reg[11] 
       (.C(CLK),
        .CE(\reset_cnt[19]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\reset_cnt[11]_i_1_n_0 ),
        .Q(\reset_cnt_reg_n_0_[11] ));
  FDCE #(
    .INIT(1'b0)) 
    \reset_cnt_reg[12] 
       (.C(CLK),
        .CE(\reset_cnt[19]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\reset_cnt[12]_i_1_n_0 ),
        .Q(\reset_cnt_reg_n_0_[12] ));
  CARRY4 \reset_cnt_reg[12]_i_2 
       (.CI(\reset_cnt_reg[8]_i_2_n_0 ),
        .CO({\reset_cnt_reg[12]_i_2_n_0 ,\reset_cnt_reg[12]_i_2_n_1 ,\reset_cnt_reg[12]_i_2_n_2 ,\reset_cnt_reg[12]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\reset_cnt_reg[12]_i_2_n_4 ,\reset_cnt_reg[12]_i_2_n_5 ,\reset_cnt_reg[12]_i_2_n_6 ,\reset_cnt_reg[12]_i_2_n_7 }),
        .S({\reset_cnt_reg_n_0_[12] ,\reset_cnt_reg_n_0_[11] ,\reset_cnt_reg_n_0_[10] ,\reset_cnt_reg_n_0_[9] }));
  FDCE #(
    .INIT(1'b0)) 
    \reset_cnt_reg[13] 
       (.C(CLK),
        .CE(\reset_cnt[19]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\reset_cnt[13]_i_1_n_0 ),
        .Q(\reset_cnt_reg_n_0_[13] ));
  FDCE #(
    .INIT(1'b0)) 
    \reset_cnt_reg[14] 
       (.C(CLK),
        .CE(\reset_cnt[19]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\reset_cnt[14]_i_1_n_0 ),
        .Q(\reset_cnt_reg_n_0_[14] ));
  FDCE #(
    .INIT(1'b0)) 
    \reset_cnt_reg[15] 
       (.C(CLK),
        .CE(\reset_cnt[19]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\reset_cnt[15]_i_1_n_0 ),
        .Q(\reset_cnt_reg_n_0_[15] ));
  FDCE #(
    .INIT(1'b0)) 
    \reset_cnt_reg[16] 
       (.C(CLK),
        .CE(\reset_cnt[19]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\reset_cnt[16]_i_1_n_0 ),
        .Q(\reset_cnt_reg_n_0_[16] ));
  CARRY4 \reset_cnt_reg[16]_i_2 
       (.CI(\reset_cnt_reg[12]_i_2_n_0 ),
        .CO({\reset_cnt_reg[16]_i_2_n_0 ,\reset_cnt_reg[16]_i_2_n_1 ,\reset_cnt_reg[16]_i_2_n_2 ,\reset_cnt_reg[16]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\reset_cnt_reg[16]_i_2_n_4 ,\reset_cnt_reg[16]_i_2_n_5 ,\reset_cnt_reg[16]_i_2_n_6 ,\reset_cnt_reg[16]_i_2_n_7 }),
        .S({\reset_cnt_reg_n_0_[16] ,\reset_cnt_reg_n_0_[15] ,\reset_cnt_reg_n_0_[14] ,\reset_cnt_reg_n_0_[13] }));
  FDCE #(
    .INIT(1'b0)) 
    \reset_cnt_reg[17] 
       (.C(CLK),
        .CE(\reset_cnt[19]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\reset_cnt[17]_i_1_n_0 ),
        .Q(\reset_cnt_reg_n_0_[17] ));
  FDCE #(
    .INIT(1'b0)) 
    \reset_cnt_reg[18] 
       (.C(CLK),
        .CE(\reset_cnt[19]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\reset_cnt[18]_i_1_n_0 ),
        .Q(\reset_cnt_reg_n_0_[18] ));
  FDCE #(
    .INIT(1'b0)) 
    \reset_cnt_reg[19] 
       (.C(CLK),
        .CE(\reset_cnt[19]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\reset_cnt[19]_i_2_n_0 ),
        .Q(\reset_cnt_reg_n_0_[19] ));
  CARRY4 \reset_cnt_reg[19]_i_3 
       (.CI(\reset_cnt_reg[16]_i_2_n_0 ),
        .CO({\NLW_reset_cnt_reg[19]_i_3_CO_UNCONNECTED [3:2],\reset_cnt_reg[19]_i_3_n_2 ,\reset_cnt_reg[19]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_reset_cnt_reg[19]_i_3_O_UNCONNECTED [3],\reset_cnt_reg[19]_i_3_n_5 ,\reset_cnt_reg[19]_i_3_n_6 ,\reset_cnt_reg[19]_i_3_n_7 }),
        .S({1'b0,\reset_cnt_reg_n_0_[19] ,\reset_cnt_reg_n_0_[18] ,\reset_cnt_reg_n_0_[17] }));
  FDCE #(
    .INIT(1'b0)) 
    \reset_cnt_reg[1] 
       (.C(CLK),
        .CE(\reset_cnt[19]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\reset_cnt[1]_i_1_n_0 ),
        .Q(\reset_cnt_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \reset_cnt_reg[2] 
       (.C(CLK),
        .CE(\reset_cnt[19]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\reset_cnt[2]_i_1_n_0 ),
        .Q(\reset_cnt_reg_n_0_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \reset_cnt_reg[3] 
       (.C(CLK),
        .CE(\reset_cnt[19]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\reset_cnt[3]_i_1_n_0 ),
        .Q(\reset_cnt_reg_n_0_[3] ));
  FDCE #(
    .INIT(1'b0)) 
    \reset_cnt_reg[4] 
       (.C(CLK),
        .CE(\reset_cnt[19]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\reset_cnt[4]_i_1_n_0 ),
        .Q(\reset_cnt_reg_n_0_[4] ));
  CARRY4 \reset_cnt_reg[4]_i_2 
       (.CI(1'b0),
        .CO({\reset_cnt_reg[4]_i_2_n_0 ,\reset_cnt_reg[4]_i_2_n_1 ,\reset_cnt_reg[4]_i_2_n_2 ,\reset_cnt_reg[4]_i_2_n_3 }),
        .CYINIT(\reset_cnt_reg_n_0_[0] ),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\reset_cnt_reg[4]_i_2_n_4 ,\reset_cnt_reg[4]_i_2_n_5 ,\reset_cnt_reg[4]_i_2_n_6 ,\reset_cnt_reg[4]_i_2_n_7 }),
        .S({\reset_cnt_reg_n_0_[4] ,\reset_cnt_reg_n_0_[3] ,\reset_cnt_reg_n_0_[2] ,\reset_cnt_reg_n_0_[1] }));
  FDCE #(
    .INIT(1'b0)) 
    \reset_cnt_reg[5] 
       (.C(CLK),
        .CE(\reset_cnt[19]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\reset_cnt[5]_i_1_n_0 ),
        .Q(\reset_cnt_reg_n_0_[5] ));
  FDCE #(
    .INIT(1'b0)) 
    \reset_cnt_reg[6] 
       (.C(CLK),
        .CE(\reset_cnt[19]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\reset_cnt[6]_i_1_n_0 ),
        .Q(\reset_cnt_reg_n_0_[6] ));
  FDCE #(
    .INIT(1'b0)) 
    \reset_cnt_reg[7] 
       (.C(CLK),
        .CE(\reset_cnt[19]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\reset_cnt[7]_i_1_n_0 ),
        .Q(\reset_cnt_reg_n_0_[7] ));
  FDCE #(
    .INIT(1'b0)) 
    \reset_cnt_reg[8] 
       (.C(CLK),
        .CE(\reset_cnt[19]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\reset_cnt[8]_i_1_n_0 ),
        .Q(\reset_cnt_reg_n_0_[8] ));
  CARRY4 \reset_cnt_reg[8]_i_2 
       (.CI(\reset_cnt_reg[4]_i_2_n_0 ),
        .CO({\reset_cnt_reg[8]_i_2_n_0 ,\reset_cnt_reg[8]_i_2_n_1 ,\reset_cnt_reg[8]_i_2_n_2 ,\reset_cnt_reg[8]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\reset_cnt_reg[8]_i_2_n_4 ,\reset_cnt_reg[8]_i_2_n_5 ,\reset_cnt_reg[8]_i_2_n_6 ,\reset_cnt_reg[8]_i_2_n_7 }),
        .S({\reset_cnt_reg_n_0_[8] ,\reset_cnt_reg_n_0_[7] ,\reset_cnt_reg_n_0_[6] ,\reset_cnt_reg_n_0_[5] }));
  FDCE #(
    .INIT(1'b0)) 
    \reset_cnt_reg[9] 
       (.C(CLK),
        .CE(\reset_cnt[19]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\reset_cnt[9]_i_1_n_0 ),
        .Q(\reset_cnt_reg_n_0_[9] ));
  LUT6 #(
    .INIT(64'hFFE0FFEF00E000E0)) 
    rx_addr_empty_i_1
       (.I0(rx_addr_empty0),
        .I1(csr_rx_reset_reg_n_0),
        .I2(rx_addr_full_i_3_n_0),
        .I3(csr_tx_reset_reg_n_0),
        .I4(rx_addr_head_update),
        .I5(rx_addr_empty),
        .O(rx_addr_empty_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    rx_addr_empty_i_10
       (.I0(rx_addr_head[16]),
        .I1(T_WDATA[16]),
        .I2(T_WDATA[17]),
        .I3(rx_addr_head[17]),
        .I4(T_WDATA[15]),
        .I5(rx_addr_head[15]),
        .O(rx_addr_empty_i_10_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    rx_addr_empty_i_11
       (.I0(rx_addr_head[13]),
        .I1(T_WDATA[13]),
        .I2(T_WDATA[14]),
        .I3(rx_addr_head[14]),
        .I4(T_WDATA[12]),
        .I5(rx_addr_head[12]),
        .O(rx_addr_empty_i_11_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    rx_addr_empty_i_12
       (.I0(rx_addr_head[10]),
        .I1(T_WDATA[10]),
        .I2(T_WDATA[11]),
        .I3(rx_addr_head[11]),
        .I4(T_WDATA[9]),
        .I5(rx_addr_head[9]),
        .O(rx_addr_empty_i_12_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    rx_addr_empty_i_13
       (.I0(rx_addr_head[7]),
        .I1(T_WDATA[7]),
        .I2(T_WDATA[8]),
        .I3(rx_addr_head[8]),
        .I4(T_WDATA[6]),
        .I5(rx_addr_head[6]),
        .O(rx_addr_empty_i_13_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    rx_addr_empty_i_14
       (.I0(rx_addr_head[4]),
        .I1(T_WDATA[4]),
        .I2(T_WDATA[5]),
        .I3(rx_addr_head[5]),
        .I4(T_WDATA[3]),
        .I5(rx_addr_head[3]),
        .O(rx_addr_empty_i_14_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    rx_addr_empty_i_15
       (.I0(rx_addr_head[1]),
        .I1(T_WDATA[1]),
        .I2(T_WDATA[2]),
        .I3(rx_addr_head[2]),
        .I4(T_WDATA[0]),
        .I5(rx_addr_head[0]),
        .O(rx_addr_empty_i_15_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    rx_addr_empty_i_4
       (.I0(rx_addr_head[31]),
        .I1(T_WDATA[31]),
        .I2(rx_addr_head[30]),
        .I3(T_WDATA[30]),
        .O(rx_addr_empty_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    rx_addr_empty_i_5
       (.I0(rx_addr_head[28]),
        .I1(T_WDATA[28]),
        .I2(T_WDATA[29]),
        .I3(rx_addr_head[29]),
        .I4(T_WDATA[27]),
        .I5(rx_addr_head[27]),
        .O(rx_addr_empty_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    rx_addr_empty_i_6
       (.I0(rx_addr_head[25]),
        .I1(T_WDATA[25]),
        .I2(T_WDATA[26]),
        .I3(rx_addr_head[26]),
        .I4(T_WDATA[24]),
        .I5(rx_addr_head[24]),
        .O(rx_addr_empty_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    rx_addr_empty_i_8
       (.I0(rx_addr_head[22]),
        .I1(T_WDATA[22]),
        .I2(T_WDATA[23]),
        .I3(rx_addr_head[23]),
        .I4(T_WDATA[21]),
        .I5(rx_addr_head[21]),
        .O(rx_addr_empty_i_8_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    rx_addr_empty_i_9
       (.I0(rx_addr_head[19]),
        .I1(T_WDATA[19]),
        .I2(T_WDATA[20]),
        .I3(rx_addr_head[20]),
        .I4(T_WDATA[18]),
        .I5(rx_addr_head[18]),
        .O(rx_addr_empty_i_9_n_0));
  FDPE #(
    .INIT(1'b1)) 
    rx_addr_empty_reg
       (.C(CLK),
        .CE(1'b1),
        .D(rx_addr_empty_i_1_n_0),
        .PRE(gbe_phy_reset_n_i_2_n_0),
        .Q(rx_addr_empty));
  CARRY4 rx_addr_empty_reg_i_2
       (.CI(rx_addr_empty_reg_i_3_n_0),
        .CO({NLW_rx_addr_empty_reg_i_2_CO_UNCONNECTED[3],rx_addr_empty0,rx_addr_empty_reg_i_2_n_2,rx_addr_empty_reg_i_2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_rx_addr_empty_reg_i_2_O_UNCONNECTED[3:0]),
        .S({1'b0,rx_addr_empty_i_4_n_0,rx_addr_empty_i_5_n_0,rx_addr_empty_i_6_n_0}));
  CARRY4 rx_addr_empty_reg_i_3
       (.CI(rx_addr_empty_reg_i_7_n_0),
        .CO({rx_addr_empty_reg_i_3_n_0,rx_addr_empty_reg_i_3_n_1,rx_addr_empty_reg_i_3_n_2,rx_addr_empty_reg_i_3_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_rx_addr_empty_reg_i_3_O_UNCONNECTED[3:0]),
        .S({rx_addr_empty_i_8_n_0,rx_addr_empty_i_9_n_0,rx_addr_empty_i_10_n_0,rx_addr_empty_i_11_n_0}));
  CARRY4 rx_addr_empty_reg_i_7
       (.CI(1'b0),
        .CO({rx_addr_empty_reg_i_7_n_0,rx_addr_empty_reg_i_7_n_1,rx_addr_empty_reg_i_7_n_2,rx_addr_empty_reg_i_7_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_rx_addr_empty_reg_i_7_O_UNCONNECTED[3:0]),
        .S({rx_addr_empty_i_12_n_0,rx_addr_empty_i_13_n_0,rx_addr_empty_i_14_n_0,rx_addr_empty_i_15_n_0}));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \rx_addr_end[31]_i_1 
       (.I0(\rx_addr_end[31]_i_2_n_0 ),
        .I1(\rx_addr_end[31]_i_3_n_0 ),
        .I2(\rx_addr_start[31]_i_3_n_0 ),
        .I3(\rx_addr_end[31]_i_4_n_0 ),
        .I4(T_WADDR[0]),
        .I5(T_WADDR[1]),
        .O(\rx_addr_end[31]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \rx_addr_end[31]_i_2 
       (.I0(T_WREN[0]),
        .I1(T_WREN[3]),
        .I2(T_WREN[1]),
        .I3(T_WREN[2]),
        .O(\rx_addr_end[31]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \rx_addr_end[31]_i_3 
       (.I0(T_WADDR[4]),
        .I1(T_WADDR[5]),
        .O(\rx_addr_end[31]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \rx_addr_end[31]_i_4 
       (.I0(T_WADDR[2]),
        .I1(T_WADDR[3]),
        .O(\rx_addr_end[31]_i_4_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[0] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[0]),
        .Q(rx_addr_end[0]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[10] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[10]),
        .Q(rx_addr_end[10]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[11] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[11]),
        .Q(rx_addr_end[11]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[12] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[12]),
        .Q(rx_addr_end[12]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[13] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[13]),
        .Q(rx_addr_end[13]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[14] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[14]),
        .Q(rx_addr_end[14]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[15] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[15]),
        .Q(rx_addr_end[15]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[16] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[16]),
        .Q(rx_addr_end[16]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[17] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[17]),
        .Q(rx_addr_end[17]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[18] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[18]),
        .Q(rx_addr_end[18]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[19] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[19]),
        .Q(rx_addr_end[19]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[1] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[1]),
        .Q(rx_addr_end[1]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[20] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[20]),
        .Q(rx_addr_end[20]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[21] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[21]),
        .Q(rx_addr_end[21]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[22] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[22]),
        .Q(rx_addr_end[22]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[23] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[23]),
        .Q(rx_addr_end[23]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[24] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[24]),
        .Q(rx_addr_end[24]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[25] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[25]),
        .Q(rx_addr_end[25]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[26] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[26]),
        .Q(rx_addr_end[26]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[27] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[27]),
        .Q(rx_addr_end[27]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[28] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[28]),
        .Q(rx_addr_end[28]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[29] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[29]),
        .Q(rx_addr_end[29]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[2] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[2]),
        .Q(rx_addr_end[2]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[30] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[30]),
        .Q(rx_addr_end[30]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[31] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[31]),
        .Q(rx_addr_end[31]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[3] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[3]),
        .Q(rx_addr_end[3]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[4] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[4]),
        .Q(rx_addr_end[4]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[5] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[5]),
        .Q(rx_addr_end[5]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[6] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[6]),
        .Q(rx_addr_end[6]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[7] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[7]),
        .Q(rx_addr_end[7]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[8] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[8]),
        .Q(rx_addr_end[8]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_end_reg[9] 
       (.C(CLK),
        .CE(\rx_addr_end[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[9]),
        .Q(rx_addr_end[9]));
  LUT5 #(
    .INIT(32'hF2F30200)) 
    rx_addr_full_i_1
       (.I0(rx_addr_full0),
        .I1(rx_addr_full_i_3_n_0),
        .I2(csr_tx_reset_reg_n_0),
        .I3(rx_addr_head_update),
        .I4(rx_addr_full),
        .O(rx_addr_full_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    rx_addr_full_i_10
       (.I0(rx_addr_tail[22]),
        .I1(rx_addr_head[22]),
        .I2(rx_addr_head[23]),
        .I3(rx_addr_tail[23]),
        .I4(rx_addr_head[21]),
        .I5(rx_addr_tail[21]),
        .O(rx_addr_full_i_10_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    rx_addr_full_i_11
       (.I0(rx_addr_tail[19]),
        .I1(rx_addr_head[19]),
        .I2(rx_addr_head[20]),
        .I3(rx_addr_tail[20]),
        .I4(rx_addr_head[18]),
        .I5(rx_addr_tail[18]),
        .O(rx_addr_full_i_11_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    rx_addr_full_i_12
       (.I0(rx_addr_tail[16]),
        .I1(rx_addr_head[16]),
        .I2(rx_addr_head[17]),
        .I3(rx_addr_tail[17]),
        .I4(rx_addr_head[15]),
        .I5(rx_addr_tail[15]),
        .O(rx_addr_full_i_12_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    rx_addr_full_i_13
       (.I0(rx_addr_tail[13]),
        .I1(rx_addr_head[13]),
        .I2(rx_addr_head[14]),
        .I3(rx_addr_tail[14]),
        .I4(rx_addr_head[12]),
        .I5(rx_addr_tail[12]),
        .O(rx_addr_full_i_13_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    rx_addr_full_i_14
       (.I0(rx_addr_tail[10]),
        .I1(rx_addr_head[10]),
        .I2(rx_addr_head[11]),
        .I3(rx_addr_tail[11]),
        .I4(rx_addr_head[9]),
        .I5(rx_addr_tail[9]),
        .O(rx_addr_full_i_14_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    rx_addr_full_i_15
       (.I0(rx_addr_tail[7]),
        .I1(rx_addr_head[7]),
        .I2(rx_addr_head[8]),
        .I3(rx_addr_tail[8]),
        .I4(rx_addr_head[6]),
        .I5(rx_addr_tail[6]),
        .O(rx_addr_full_i_15_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    rx_addr_full_i_16
       (.I0(rx_addr_tail[4]),
        .I1(rx_addr_head[4]),
        .I2(rx_addr_head[5]),
        .I3(rx_addr_tail[5]),
        .I4(rx_addr_head[3]),
        .I5(rx_addr_tail[3]),
        .O(rx_addr_full_i_16_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    rx_addr_full_i_17
       (.I0(rx_addr_tail[1]),
        .I1(rx_addr_head[1]),
        .I2(rx_addr_head[2]),
        .I3(rx_addr_tail[2]),
        .I4(rx_addr_head[0]),
        .I5(rx_addr_tail[0]),
        .O(rx_addr_full_i_17_n_0));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAABA)) 
    rx_addr_full_i_3
       (.I0(csr_rx_reset_reg_n_0),
        .I1(T_WADDR[6]),
        .I2(T_WADDR[7]),
        .I3(rx_addr_full_i_8_n_0),
        .I4(\rx_addr_end[31]_i_2_n_0 ),
        .I5(\rx_addr_end[31]_i_4_n_0 ),
        .O(rx_addr_full_i_3_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    rx_addr_full_i_5
       (.I0(rx_addr_tail[31]),
        .I1(rx_addr_head[31]),
        .I2(rx_addr_tail[30]),
        .I3(rx_addr_head[30]),
        .O(rx_addr_full_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    rx_addr_full_i_6
       (.I0(rx_addr_tail[28]),
        .I1(rx_addr_head[28]),
        .I2(rx_addr_head[29]),
        .I3(rx_addr_tail[29]),
        .I4(rx_addr_head[27]),
        .I5(rx_addr_tail[27]),
        .O(rx_addr_full_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    rx_addr_full_i_7
       (.I0(rx_addr_tail[25]),
        .I1(rx_addr_head[25]),
        .I2(rx_addr_head[26]),
        .I3(rx_addr_tail[26]),
        .I4(rx_addr_head[24]),
        .I5(rx_addr_tail[24]),
        .O(rx_addr_full_i_7_n_0));
  LUT4 #(
    .INIT(16'hEFFF)) 
    rx_addr_full_i_8
       (.I0(T_WADDR[0]),
        .I1(T_WADDR[1]),
        .I2(T_WADDR[5]),
        .I3(T_WADDR[4]),
        .O(rx_addr_full_i_8_n_0));
  FDCE #(
    .INIT(1'b0)) 
    rx_addr_full_reg
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(rx_addr_full_i_1_n_0),
        .Q(rx_addr_full));
  CARRY4 rx_addr_full_reg_i_2
       (.CI(rx_addr_full_reg_i_4_n_0),
        .CO({NLW_rx_addr_full_reg_i_2_CO_UNCONNECTED[3],rx_addr_full0,rx_addr_full_reg_i_2_n_2,rx_addr_full_reg_i_2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_rx_addr_full_reg_i_2_O_UNCONNECTED[3:0]),
        .S({1'b0,rx_addr_full_i_5_n_0,rx_addr_full_i_6_n_0,rx_addr_full_i_7_n_0}));
  CARRY4 rx_addr_full_reg_i_4
       (.CI(rx_addr_full_reg_i_9_n_0),
        .CO({rx_addr_full_reg_i_4_n_0,rx_addr_full_reg_i_4_n_1,rx_addr_full_reg_i_4_n_2,rx_addr_full_reg_i_4_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_rx_addr_full_reg_i_4_O_UNCONNECTED[3:0]),
        .S({rx_addr_full_i_10_n_0,rx_addr_full_i_11_n_0,rx_addr_full_i_12_n_0,rx_addr_full_i_13_n_0}));
  CARRY4 rx_addr_full_reg_i_9
       (.CI(1'b0),
        .CO({rx_addr_full_reg_i_9_n_0,rx_addr_full_reg_i_9_n_1,rx_addr_full_reg_i_9_n_2,rx_addr_full_reg_i_9_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_rx_addr_full_reg_i_9_O_UNCONNECTED[3:0]),
        .S({rx_addr_full_i_14_n_0,rx_addr_full_i_15_n_0,rx_addr_full_i_16_n_0,rx_addr_full_i_17_n_0}));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    \rx_addr_start[31]_i_1 
       (.I0(\rx_addr_start[31]_i_2_n_0 ),
        .I1(\rx_addr_start[31]_i_3_n_0 ),
        .I2(T_WADDR[4]),
        .I3(T_WADDR[5]),
        .I4(T_WADDR[2]),
        .I5(T_WADDR[3]),
        .O(\rx_addr_start[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000055555554)) 
    \rx_addr_start[31]_i_2 
       (.I0(T_WADDR[0]),
        .I1(T_WREN[0]),
        .I2(T_WREN[3]),
        .I3(T_WREN[1]),
        .I4(T_WREN[2]),
        .I5(T_WADDR[1]),
        .O(\rx_addr_start[31]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \rx_addr_start[31]_i_3 
       (.I0(T_WADDR[6]),
        .I1(T_WADDR[7]),
        .O(\rx_addr_start[31]_i_3_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[0] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[0]),
        .Q(rx_addr_start[0]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[10] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[10]),
        .Q(rx_addr_start[10]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[11] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[11]),
        .Q(rx_addr_start[11]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[12] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[12]),
        .Q(rx_addr_start[12]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[13] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[13]),
        .Q(rx_addr_start[13]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[14] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[14]),
        .Q(rx_addr_start[14]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[15] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[15]),
        .Q(rx_addr_start[15]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[16] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[16]),
        .Q(rx_addr_start[16]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[17] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[17]),
        .Q(rx_addr_start[17]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[18] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[18]),
        .Q(rx_addr_start[18]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[19] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[19]),
        .Q(rx_addr_start[19]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[1] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[1]),
        .Q(rx_addr_start[1]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[20] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[20]),
        .Q(rx_addr_start[20]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[21] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[21]),
        .Q(rx_addr_start[21]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[22] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[22]),
        .Q(rx_addr_start[22]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[23] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[23]),
        .Q(rx_addr_start[23]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[24] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[24]),
        .Q(rx_addr_start[24]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[25] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[25]),
        .Q(rx_addr_start[25]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[26] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[26]),
        .Q(rx_addr_start[26]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[27] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[27]),
        .Q(rx_addr_start[27]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[28] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[28]),
        .Q(rx_addr_start[28]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[29] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[29]),
        .Q(rx_addr_start[29]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[2] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[2]),
        .Q(rx_addr_start[2]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[30] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[30]),
        .Q(rx_addr_start[30]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[31] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[31]),
        .Q(rx_addr_start[31]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[3] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[3]),
        .Q(rx_addr_start[3]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[4] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[4]),
        .Q(rx_addr_start[4]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[5] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[5]),
        .Q(rx_addr_start[5]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[6] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[6]),
        .Q(rx_addr_start[6]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[7] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[7]),
        .Q(rx_addr_start[7]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[8] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[8]),
        .Q(rx_addr_start[8]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_start_reg[9] 
       (.C(CLK),
        .CE(\rx_addr_start[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[9]),
        .Q(rx_addr_start[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[0]_i_1 
       (.I0(rx_addr_start[0]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[0]),
        .O(\rx_addr_tail[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[10]_i_1 
       (.I0(rx_addr_start[10]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[10]),
        .O(\rx_addr_tail[10]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[11]_i_1 
       (.I0(rx_addr_start[11]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[11]),
        .O(\rx_addr_tail[11]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[12]_i_1 
       (.I0(rx_addr_start[12]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[12]),
        .O(\rx_addr_tail[12]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[13]_i_1 
       (.I0(rx_addr_start[13]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[13]),
        .O(\rx_addr_tail[13]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[14]_i_1 
       (.I0(rx_addr_start[14]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[14]),
        .O(\rx_addr_tail[14]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[15]_i_1 
       (.I0(rx_addr_start[15]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[15]),
        .O(\rx_addr_tail[15]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[16]_i_1 
       (.I0(rx_addr_start[16]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[16]),
        .O(\rx_addr_tail[16]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[17]_i_1 
       (.I0(rx_addr_start[17]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[17]),
        .O(\rx_addr_tail[17]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[18]_i_1 
       (.I0(rx_addr_start[18]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[18]),
        .O(\rx_addr_tail[18]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[19]_i_1 
       (.I0(rx_addr_start[19]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[19]),
        .O(\rx_addr_tail[19]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[1]_i_1 
       (.I0(rx_addr_start[1]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[1]),
        .O(\rx_addr_tail[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[20]_i_1 
       (.I0(rx_addr_start[20]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[20]),
        .O(\rx_addr_tail[20]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[21]_i_1 
       (.I0(rx_addr_start[21]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[21]),
        .O(\rx_addr_tail[21]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[22]_i_1 
       (.I0(rx_addr_start[22]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[22]),
        .O(\rx_addr_tail[22]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[23]_i_1 
       (.I0(rx_addr_start[23]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[23]),
        .O(\rx_addr_tail[23]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[24]_i_1 
       (.I0(rx_addr_start[24]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[24]),
        .O(\rx_addr_tail[24]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[25]_i_1 
       (.I0(rx_addr_start[25]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[25]),
        .O(\rx_addr_tail[25]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[26]_i_1 
       (.I0(rx_addr_start[26]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[26]),
        .O(\rx_addr_tail[26]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[27]_i_1 
       (.I0(rx_addr_start[27]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[27]),
        .O(\rx_addr_tail[27]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[28]_i_1 
       (.I0(rx_addr_start[28]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[28]),
        .O(\rx_addr_tail[28]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[29]_i_1 
       (.I0(rx_addr_start[29]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[29]),
        .O(\rx_addr_tail[29]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[2]_i_1 
       (.I0(rx_addr_start[2]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[2]),
        .O(\rx_addr_tail[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[30]_i_1 
       (.I0(rx_addr_start[30]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[30]),
        .O(\rx_addr_tail[30]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000FF08)) 
    \rx_addr_tail[31]_i_1 
       (.I0(conf_rx_en_i_2_n_0),
        .I1(T_WADDR[7]),
        .I2(T_WADDR[6]),
        .I3(csr_rx_reset_reg_n_0),
        .I4(csr_tx_reset_reg_n_0),
        .O(\rx_addr_tail[31]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[31]_i_2 
       (.I0(rx_addr_start[31]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[31]),
        .O(\rx_addr_tail[31]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[3]_i_1 
       (.I0(rx_addr_start[3]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[3]),
        .O(\rx_addr_tail[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[4]_i_1 
       (.I0(rx_addr_start[4]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[4]),
        .O(\rx_addr_tail[4]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[5]_i_1 
       (.I0(rx_addr_start[5]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[5]),
        .O(\rx_addr_tail[5]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[6]_i_1 
       (.I0(rx_addr_start[6]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[6]),
        .O(\rx_addr_tail[6]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[7]_i_1 
       (.I0(rx_addr_start[7]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[7]),
        .O(\rx_addr_tail[7]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[8]_i_1 
       (.I0(rx_addr_start[8]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[8]),
        .O(\rx_addr_tail[8]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \rx_addr_tail[9]_i_1 
       (.I0(rx_addr_start[9]),
        .I1(csr_rx_reset_reg_n_0),
        .I2(T_WDATA[9]),
        .O(\rx_addr_tail[9]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[0] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(\rx_addr_tail[0]_i_1_n_0 ),
        .Q(rx_addr_tail[0]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[10] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(\rx_addr_tail[10]_i_1_n_0 ),
        .Q(rx_addr_tail[10]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[11] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(\rx_addr_tail[11]_i_1_n_0 ),
        .Q(rx_addr_tail[11]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[12] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(\rx_addr_tail[12]_i_1_n_0 ),
        .Q(rx_addr_tail[12]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[13] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(\rx_addr_tail[13]_i_1_n_0 ),
        .Q(rx_addr_tail[13]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[14] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(\rx_addr_tail[14]_i_1_n_0 ),
        .Q(rx_addr_tail[14]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[15] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\rx_addr_tail[15]_i_1_n_0 ),
        .Q(rx_addr_tail[15]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[16] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\rx_addr_tail[16]_i_1_n_0 ),
        .Q(rx_addr_tail[16]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[17] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\rx_addr_tail[17]_i_1_n_0 ),
        .Q(rx_addr_tail[17]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[18] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\rx_addr_tail[18]_i_1_n_0 ),
        .Q(rx_addr_tail[18]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[19] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\rx_addr_tail[19]_i_1_n_0 ),
        .Q(rx_addr_tail[19]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[1] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(\rx_addr_tail[1]_i_1_n_0 ),
        .Q(rx_addr_tail[1]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[20] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\rx_addr_tail[20]_i_1_n_0 ),
        .Q(rx_addr_tail[20]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[21] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\rx_addr_tail[21]_i_1_n_0 ),
        .Q(rx_addr_tail[21]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[22] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\rx_addr_tail[22]_i_1_n_0 ),
        .Q(rx_addr_tail[22]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[23] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\rx_addr_tail[23]_i_1_n_0 ),
        .Q(rx_addr_tail[23]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[24] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\rx_addr_tail[24]_i_1_n_0 ),
        .Q(rx_addr_tail[24]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[25] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\rx_addr_tail[25]_i_1_n_0 ),
        .Q(rx_addr_tail[25]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[26] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\rx_addr_tail[26]_i_1_n_0 ),
        .Q(rx_addr_tail[26]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[27] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\rx_addr_tail[27]_i_1_n_0 ),
        .Q(rx_addr_tail[27]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[28] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\rx_addr_tail[28]_i_1_n_0 ),
        .Q(rx_addr_tail[28]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[29] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\rx_addr_tail[29]_i_1_n_0 ),
        .Q(rx_addr_tail[29]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[2] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(\rx_addr_tail[2]_i_1_n_0 ),
        .Q(rx_addr_tail[2]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[30] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\rx_addr_tail[30]_i_1_n_0 ),
        .Q(rx_addr_tail[30]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[31] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\rx_addr_tail[31]_i_2_n_0 ),
        .Q(rx_addr_tail[31]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[3] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(\rx_addr_tail[3]_i_1_n_0 ),
        .Q(rx_addr_tail[3]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[4] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(\rx_addr_tail[4]_i_1_n_0 ),
        .Q(rx_addr_tail[4]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[5] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(\rx_addr_tail[5]_i_1_n_0 ),
        .Q(rx_addr_tail[5]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[6] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(\rx_addr_tail[6]_i_1_n_0 ),
        .Q(rx_addr_tail[6]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[7] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(\rx_addr_tail[7]_i_1_n_0 ),
        .Q(rx_addr_tail[7]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[8] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(\rx_addr_tail[8]_i_1_n_0 ),
        .Q(rx_addr_tail[8]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_addr_tail_reg[9] 
       (.C(CLK),
        .CE(\rx_addr_tail[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(\rx_addr_tail[9]_i_1_n_0 ),
        .Q(rx_addr_tail[9]));
  LUT5 #(
    .INIT(32'h00200000)) 
    \rx_bchunk[10]_i_1 
       (.I0(\rx_bchunk[10]_i_2_n_0 ),
        .I1(T_WADDR[5]),
        .I2(T_WADDR[4]),
        .I3(T_WADDR[6]),
        .I4(T_WADDR[7]),
        .O(\rx_bchunk[10]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \rx_bchunk[10]_i_2 
       (.I0(T_WADDR[0]),
        .I1(T_WADDR[2]),
        .I2(T_WADDR[1]),
        .I3(\rx_addr_end[31]_i_2_n_0 ),
        .I4(T_WADDR[3]),
        .O(\rx_bchunk[10]_i_2_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \rx_bchunk_reg[0] 
       (.C(CLK),
        .CE(\rx_bchunk[10]_i_1_n_0 ),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\tx_bchunk[0]_i_1_n_0 ),
        .Q(\^rx_bchunk [0]));
  FDPE #(
    .INIT(1'b0)) 
    \rx_bchunk_reg[10] 
       (.C(CLK),
        .CE(\rx_bchunk[10]_i_1_n_0 ),
        .D(\tx_bchunk[10]_i_2_n_0 ),
        .PRE(\conf_mac_addr[39]_i_1_n_0 ),
        .Q(\^rx_bchunk [10]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_bchunk_reg[1] 
       (.C(CLK),
        .CE(\rx_bchunk[10]_i_1_n_0 ),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\tx_bchunk[1]_i_1_n_0 ),
        .Q(\^rx_bchunk [1]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_bchunk_reg[2] 
       (.C(CLK),
        .CE(\rx_bchunk[10]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_bchunk[2]_i_1_n_0 ),
        .Q(\^rx_bchunk [2]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_bchunk_reg[3] 
       (.C(CLK),
        .CE(\rx_bchunk[10]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\tx_bchunk[3]_i_1_n_0 ),
        .Q(\^rx_bchunk [3]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_bchunk_reg[4] 
       (.C(CLK),
        .CE(\rx_bchunk[10]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\tx_bchunk[4]_i_1_n_0 ),
        .Q(\^rx_bchunk [4]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_bchunk_reg[5] 
       (.C(CLK),
        .CE(\rx_bchunk[10]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\tx_bchunk[5]_i_1_n_0 ),
        .Q(\^rx_bchunk [5]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_bchunk_reg[6] 
       (.C(CLK),
        .CE(\rx_bchunk[10]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\tx_bchunk[6]_i_1_n_0 ),
        .Q(\^rx_bchunk [6]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_bchunk_reg[7] 
       (.C(CLK),
        .CE(\rx_bchunk[10]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_bchunk[7]_i_1_n_0 ),
        .Q(\^rx_bchunk [7]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_bchunk_reg[8] 
       (.C(CLK),
        .CE(\rx_bchunk[10]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_bchunk[8]_i_1_n_0 ),
        .Q(\^rx_bchunk [8]));
  FDCE #(
    .INIT(1'b0)) 
    \rx_bchunk_reg[9] 
       (.C(CLK),
        .CE(\rx_bchunk[10]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_bchunk[9]_i_1_n_0 ),
        .Q(\^rx_bchunk [9]));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    rx_desc_rd_rdy_i_1
       (.I0(rx_desc_rd_rdy_i_2_n_0),
        .I1(T_WADDR[4]),
        .I2(rx_desc_rd_rdy_i_3_n_0),
        .I3(T_WADDR[1]),
        .I4(\rx_addr_end[31]_i_2_n_0 ),
        .I5(T_WADDR[3]),
        .O(rx_desc_rd_rdy4_out));
  LUT2 #(
    .INIT(4'hE)) 
    rx_desc_rd_rdy_i_2
       (.I0(T_WADDR[2]),
        .I1(T_WADDR[7]),
        .O(rx_desc_rd_rdy_i_2_n_0));
  LUT4 #(
    .INIT(16'hEFFF)) 
    rx_desc_rd_rdy_i_3
       (.I0(T_WADDR[0]),
        .I1(T_WADDR[5]),
        .I2(T_WADDR[6]),
        .I3(T_WDATA[31]),
        .O(rx_desc_rd_rdy_i_3_n_0));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rx_desc_rd_rdy_reg
       (.C(CLK),
        .CE(1'b1),
        .CLR(reg_ip_i_2_n_0),
        .D(rx_desc_rd_rdy4_out),
        .Q(rx_desc_rd_rdy));
  LUT6 #(
    .INIT(64'hFFF8FFFCF0F8F0F0)) 
    tx_addr_empty_i_1
       (.I0(tx_addr_empty0),
        .I1(\tx_addr_head[31]_i_3_n_0 ),
        .I2(csr_tx_reset_reg_n_0),
        .I3(csr_rx_reset_reg_n_0),
        .I4(tx_addr_tail_update),
        .I5(tx_addr_empty),
        .O(tx_addr_empty_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    tx_addr_empty_i_10
       (.I0(tx_addr_head[17]),
        .I1(tx_addr_tail[17]),
        .I2(tx_addr_tail[15]),
        .I3(tx_addr_head[15]),
        .I4(tx_addr_tail[16]),
        .I5(tx_addr_head[16]),
        .O(tx_addr_empty_i_10_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    tx_addr_empty_i_11
       (.I0(tx_addr_head[14]),
        .I1(tx_addr_tail[14]),
        .I2(tx_addr_tail[12]),
        .I3(tx_addr_head[12]),
        .I4(tx_addr_tail[13]),
        .I5(tx_addr_head[13]),
        .O(tx_addr_empty_i_11_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    tx_addr_empty_i_12
       (.I0(tx_addr_head[11]),
        .I1(tx_addr_tail[11]),
        .I2(tx_addr_tail[10]),
        .I3(tx_addr_head[10]),
        .I4(tx_addr_tail[9]),
        .I5(tx_addr_head[9]),
        .O(tx_addr_empty_i_12_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    tx_addr_empty_i_13
       (.I0(tx_addr_head[8]),
        .I1(tx_addr_tail[8]),
        .I2(tx_addr_tail[6]),
        .I3(tx_addr_head[6]),
        .I4(tx_addr_tail[7]),
        .I5(tx_addr_head[7]),
        .O(tx_addr_empty_i_13_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    tx_addr_empty_i_14
       (.I0(tx_addr_tail[3]),
        .I1(tx_addr_head[3]),
        .I2(tx_addr_tail[4]),
        .I3(tx_addr_head[4]),
        .I4(tx_addr_head[5]),
        .I5(tx_addr_tail[5]),
        .O(tx_addr_empty_i_14_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    tx_addr_empty_i_15
       (.I0(tx_addr_tail[0]),
        .I1(tx_addr_head[0]),
        .I2(tx_addr_tail[1]),
        .I3(tx_addr_head[1]),
        .I4(tx_addr_head[2]),
        .I5(tx_addr_tail[2]),
        .O(tx_addr_empty_i_15_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    tx_addr_empty_i_4
       (.I0(tx_addr_head[31]),
        .I1(tx_addr_tail[31]),
        .I2(tx_addr_head[30]),
        .I3(tx_addr_tail[30]),
        .O(tx_addr_empty_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    tx_addr_empty_i_5
       (.I0(tx_addr_head[29]),
        .I1(tx_addr_tail[29]),
        .I2(tx_addr_tail[27]),
        .I3(tx_addr_head[27]),
        .I4(tx_addr_tail[28]),
        .I5(tx_addr_head[28]),
        .O(tx_addr_empty_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    tx_addr_empty_i_6
       (.I0(tx_addr_head[26]),
        .I1(tx_addr_tail[26]),
        .I2(tx_addr_tail[24]),
        .I3(tx_addr_head[24]),
        .I4(tx_addr_tail[25]),
        .I5(tx_addr_head[25]),
        .O(tx_addr_empty_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    tx_addr_empty_i_8
       (.I0(tx_addr_head[23]),
        .I1(tx_addr_tail[23]),
        .I2(tx_addr_tail[21]),
        .I3(tx_addr_head[21]),
        .I4(tx_addr_tail[22]),
        .I5(tx_addr_head[22]),
        .O(tx_addr_empty_i_8_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    tx_addr_empty_i_9
       (.I0(tx_addr_head[20]),
        .I1(tx_addr_tail[20]),
        .I2(tx_addr_tail[18]),
        .I3(tx_addr_head[18]),
        .I4(tx_addr_tail[19]),
        .I5(tx_addr_head[19]),
        .O(tx_addr_empty_i_9_n_0));
  FDPE #(
    .INIT(1'b1)) 
    tx_addr_empty_reg
       (.C(CLK),
        .CE(1'b1),
        .D(tx_addr_empty_i_1_n_0),
        .PRE(gbe_phy_reset_n_i_2_n_0),
        .Q(tx_addr_empty));
  CARRY4 tx_addr_empty_reg_i_2
       (.CI(tx_addr_empty_reg_i_3_n_0),
        .CO({NLW_tx_addr_empty_reg_i_2_CO_UNCONNECTED[3],tx_addr_empty0,tx_addr_empty_reg_i_2_n_2,tx_addr_empty_reg_i_2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_tx_addr_empty_reg_i_2_O_UNCONNECTED[3:0]),
        .S({1'b0,tx_addr_empty_i_4_n_0,tx_addr_empty_i_5_n_0,tx_addr_empty_i_6_n_0}));
  CARRY4 tx_addr_empty_reg_i_3
       (.CI(tx_addr_empty_reg_i_7_n_0),
        .CO({tx_addr_empty_reg_i_3_n_0,tx_addr_empty_reg_i_3_n_1,tx_addr_empty_reg_i_3_n_2,tx_addr_empty_reg_i_3_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_tx_addr_empty_reg_i_3_O_UNCONNECTED[3:0]),
        .S({tx_addr_empty_i_8_n_0,tx_addr_empty_i_9_n_0,tx_addr_empty_i_10_n_0,tx_addr_empty_i_11_n_0}));
  CARRY4 tx_addr_empty_reg_i_7
       (.CI(1'b0),
        .CO({tx_addr_empty_reg_i_7_n_0,tx_addr_empty_reg_i_7_n_1,tx_addr_empty_reg_i_7_n_2,tx_addr_empty_reg_i_7_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_tx_addr_empty_reg_i_7_O_UNCONNECTED[3:0]),
        .S({tx_addr_empty_i_12_n_0,tx_addr_empty_i_13_n_0,tx_addr_empty_i_14_n_0,tx_addr_empty_i_15_n_0}));
  LUT3 #(
    .INIT(8'h08)) 
    \tx_addr_end[31]_i_1 
       (.I0(conf_rx_en_i_2_n_0),
        .I1(T_WADDR[6]),
        .I2(T_WADDR[7]),
        .O(\tx_addr_end[31]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[0] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[0]),
        .Q(tx_addr_end[0]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[10] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[10]),
        .Q(tx_addr_end[10]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[11] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[11]),
        .Q(tx_addr_end[11]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[12] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[12]),
        .Q(tx_addr_end[12]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[13] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[13]),
        .Q(tx_addr_end[13]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[14] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[14]),
        .Q(tx_addr_end[14]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[15] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[15]),
        .Q(tx_addr_end[15]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[16] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[16]),
        .Q(tx_addr_end[16]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[17] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[17]),
        .Q(tx_addr_end[17]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[18] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[18]),
        .Q(tx_addr_end[18]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[19] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[19]),
        .Q(tx_addr_end[19]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[1] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[1]),
        .Q(tx_addr_end[1]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[20] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[20]),
        .Q(tx_addr_end[20]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[21] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[21]),
        .Q(tx_addr_end[21]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[22] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[22]),
        .Q(tx_addr_end[22]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[23] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[23]),
        .Q(tx_addr_end[23]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[24] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[24]),
        .Q(tx_addr_end[24]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[25] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[25]),
        .Q(tx_addr_end[25]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[26] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[26]),
        .Q(tx_addr_end[26]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[27] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[27]),
        .Q(tx_addr_end[27]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[28] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[28]),
        .Q(tx_addr_end[28]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[29] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[29]),
        .Q(tx_addr_end[29]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[2] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[2]),
        .Q(tx_addr_end[2]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[30] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[30]),
        .Q(tx_addr_end[30]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[31] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[31]),
        .Q(tx_addr_end[31]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[3] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[3]),
        .Q(tx_addr_end[3]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[4] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[4]),
        .Q(tx_addr_end[4]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[5] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[5]),
        .Q(tx_addr_end[5]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[6] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[6]),
        .Q(tx_addr_end[6]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[7] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[7]),
        .Q(tx_addr_end[7]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[8] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[8]),
        .Q(tx_addr_end[8]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_end_reg[9] 
       (.C(CLK),
        .CE(\tx_addr_end[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(T_WDATA[9]),
        .Q(tx_addr_end[9]));
  LUT6 #(
    .INIT(64'h0F020F0E00020002)) 
    tx_addr_full_i_1
       (.I0(tx_addr_full0),
        .I1(\tx_addr_head[31]_i_3_n_0 ),
        .I2(csr_tx_reset_reg_n_0),
        .I3(csr_rx_reset_reg_n_0),
        .I4(tx_addr_tail_update),
        .I5(tx_addr_full),
        .O(tx_addr_full_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    tx_addr_full_i_10
       (.I0(T_WDATA[17]),
        .I1(tx_addr_tail[17]),
        .I2(tx_addr_tail[16]),
        .I3(T_WDATA[16]),
        .I4(tx_addr_tail[15]),
        .I5(T_WDATA[15]),
        .O(tx_addr_full_i_10_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    tx_addr_full_i_11
       (.I0(T_WDATA[14]),
        .I1(tx_addr_tail[14]),
        .I2(tx_addr_tail[12]),
        .I3(T_WDATA[12]),
        .I4(tx_addr_tail[13]),
        .I5(T_WDATA[13]),
        .O(tx_addr_full_i_11_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    tx_addr_full_i_12
       (.I0(T_WDATA[11]),
        .I1(tx_addr_tail[11]),
        .I2(tx_addr_tail[9]),
        .I3(T_WDATA[9]),
        .I4(tx_addr_tail[10]),
        .I5(T_WDATA[10]),
        .O(tx_addr_full_i_12_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    tx_addr_full_i_13
       (.I0(T_WDATA[8]),
        .I1(tx_addr_tail[8]),
        .I2(tx_addr_tail[6]),
        .I3(T_WDATA[6]),
        .I4(tx_addr_tail[7]),
        .I5(T_WDATA[7]),
        .O(tx_addr_full_i_13_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    tx_addr_full_i_14
       (.I0(T_WDATA[4]),
        .I1(tx_addr_tail[4]),
        .I2(tx_addr_tail[5]),
        .I3(T_WDATA[5]),
        .I4(tx_addr_tail[3]),
        .I5(T_WDATA[3]),
        .O(tx_addr_full_i_14_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    tx_addr_full_i_15
       (.I0(T_WDATA[1]),
        .I1(tx_addr_tail[1]),
        .I2(tx_addr_tail[2]),
        .I3(T_WDATA[2]),
        .I4(tx_addr_tail[0]),
        .I5(T_WDATA[0]),
        .O(tx_addr_full_i_15_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    tx_addr_full_i_4
       (.I0(T_WDATA[31]),
        .I1(tx_addr_tail[31]),
        .I2(tx_addr_tail[30]),
        .I3(T_WDATA[30]),
        .O(tx_addr_full_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    tx_addr_full_i_5
       (.I0(T_WDATA[29]),
        .I1(tx_addr_tail[29]),
        .I2(tx_addr_tail[27]),
        .I3(T_WDATA[27]),
        .I4(tx_addr_tail[28]),
        .I5(T_WDATA[28]),
        .O(tx_addr_full_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    tx_addr_full_i_6
       (.I0(T_WDATA[26]),
        .I1(tx_addr_tail[26]),
        .I2(tx_addr_tail[25]),
        .I3(T_WDATA[25]),
        .I4(tx_addr_tail[24]),
        .I5(T_WDATA[24]),
        .O(tx_addr_full_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    tx_addr_full_i_8
       (.I0(T_WDATA[23]),
        .I1(tx_addr_tail[23]),
        .I2(tx_addr_tail[22]),
        .I3(T_WDATA[22]),
        .I4(tx_addr_tail[21]),
        .I5(T_WDATA[21]),
        .O(tx_addr_full_i_8_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    tx_addr_full_i_9
       (.I0(T_WDATA[20]),
        .I1(tx_addr_tail[20]),
        .I2(tx_addr_tail[18]),
        .I3(T_WDATA[18]),
        .I4(tx_addr_tail[19]),
        .I5(T_WDATA[19]),
        .O(tx_addr_full_i_9_n_0));
  FDCE #(
    .INIT(1'b0)) 
    tx_addr_full_reg
       (.C(CLK),
        .CE(1'b1),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(tx_addr_full_i_1_n_0),
        .Q(tx_addr_full));
  CARRY4 tx_addr_full_reg_i_2
       (.CI(tx_addr_full_reg_i_3_n_0),
        .CO({NLW_tx_addr_full_reg_i_2_CO_UNCONNECTED[3],tx_addr_full0,tx_addr_full_reg_i_2_n_2,tx_addr_full_reg_i_2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_tx_addr_full_reg_i_2_O_UNCONNECTED[3:0]),
        .S({1'b0,tx_addr_full_i_4_n_0,tx_addr_full_i_5_n_0,tx_addr_full_i_6_n_0}));
  CARRY4 tx_addr_full_reg_i_3
       (.CI(tx_addr_full_reg_i_7_n_0),
        .CO({tx_addr_full_reg_i_3_n_0,tx_addr_full_reg_i_3_n_1,tx_addr_full_reg_i_3_n_2,tx_addr_full_reg_i_3_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_tx_addr_full_reg_i_3_O_UNCONNECTED[3:0]),
        .S({tx_addr_full_i_8_n_0,tx_addr_full_i_9_n_0,tx_addr_full_i_10_n_0,tx_addr_full_i_11_n_0}));
  CARRY4 tx_addr_full_reg_i_7
       (.CI(1'b0),
        .CO({tx_addr_full_reg_i_7_n_0,tx_addr_full_reg_i_7_n_1,tx_addr_full_reg_i_7_n_2,tx_addr_full_reg_i_7_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_tx_addr_full_reg_i_7_O_UNCONNECTED[3:0]),
        .S({tx_addr_full_i_12_n_0,tx_addr_full_i_13_n_0,tx_addr_full_i_14_n_0,tx_addr_full_i_15_n_0}));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[0]_i_1 
       (.I0(tx_addr_start[0]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[0]),
        .O(\tx_addr_head[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[10]_i_1 
       (.I0(tx_addr_start[10]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[10]),
        .O(\tx_addr_head[10]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[11]_i_1 
       (.I0(tx_addr_start[11]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[11]),
        .O(\tx_addr_head[11]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[12]_i_1 
       (.I0(tx_addr_start[12]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[12]),
        .O(\tx_addr_head[12]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[13]_i_1 
       (.I0(tx_addr_start[13]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[13]),
        .O(\tx_addr_head[13]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[14]_i_1 
       (.I0(tx_addr_start[14]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[14]),
        .O(\tx_addr_head[14]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[15]_i_1 
       (.I0(tx_addr_start[15]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[15]),
        .O(\tx_addr_head[15]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[16]_i_1 
       (.I0(tx_addr_start[16]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[16]),
        .O(\tx_addr_head[16]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[17]_i_1 
       (.I0(tx_addr_start[17]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[17]),
        .O(\tx_addr_head[17]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[18]_i_1 
       (.I0(tx_addr_start[18]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[18]),
        .O(\tx_addr_head[18]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[19]_i_1 
       (.I0(tx_addr_start[19]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[19]),
        .O(\tx_addr_head[19]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[1]_i_1 
       (.I0(tx_addr_start[1]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[1]),
        .O(\tx_addr_head[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[20]_i_1 
       (.I0(tx_addr_start[20]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[20]),
        .O(\tx_addr_head[20]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[21]_i_1 
       (.I0(tx_addr_start[21]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[21]),
        .O(\tx_addr_head[21]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[22]_i_1 
       (.I0(tx_addr_start[22]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[22]),
        .O(\tx_addr_head[22]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[23]_i_1 
       (.I0(tx_addr_start[23]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[23]),
        .O(\tx_addr_head[23]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[24]_i_1 
       (.I0(tx_addr_start[24]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[24]),
        .O(\tx_addr_head[24]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[25]_i_1 
       (.I0(tx_addr_start[25]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[25]),
        .O(\tx_addr_head[25]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[26]_i_1 
       (.I0(tx_addr_start[26]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[26]),
        .O(\tx_addr_head[26]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[27]_i_1 
       (.I0(tx_addr_start[27]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[27]),
        .O(\tx_addr_head[27]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[28]_i_1 
       (.I0(tx_addr_start[28]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[28]),
        .O(\tx_addr_head[28]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[29]_i_1 
       (.I0(tx_addr_start[29]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[29]),
        .O(\tx_addr_head[29]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[2]_i_1 
       (.I0(tx_addr_start[2]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[2]),
        .O(\tx_addr_head[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[30]_i_1 
       (.I0(tx_addr_start[30]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[30]),
        .O(\tx_addr_head[30]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAB)) 
    \tx_addr_head[31]_i_1 
       (.I0(csr_tx_reset_reg_n_0),
        .I1(\tx_addr_head[31]_i_3_n_0 ),
        .I2(csr_rx_reset_reg_n_0),
        .O(\tx_addr_head[31]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[31]_i_2 
       (.I0(tx_addr_start[31]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[31]),
        .O(\tx_addr_head[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEFFFFFF)) 
    \tx_addr_head[31]_i_3 
       (.I0(\tx_desc_wr_src[31]_i_2_n_0 ),
        .I1(T_WADDR[0]),
        .I2(T_WADDR[1]),
        .I3(T_WADDR[5]),
        .I4(T_WADDR[4]),
        .I5(\rx_addr_end[31]_i_2_n_0 ),
        .O(\tx_addr_head[31]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[3]_i_1 
       (.I0(tx_addr_start[3]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[3]),
        .O(\tx_addr_head[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[4]_i_1 
       (.I0(tx_addr_start[4]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[4]),
        .O(\tx_addr_head[4]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[5]_i_1 
       (.I0(tx_addr_start[5]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[5]),
        .O(\tx_addr_head[5]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[6]_i_1 
       (.I0(tx_addr_start[6]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[6]),
        .O(\tx_addr_head[6]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[7]_i_1 
       (.I0(tx_addr_start[7]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[7]),
        .O(\tx_addr_head[7]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[8]_i_1 
       (.I0(tx_addr_start[8]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[8]),
        .O(\tx_addr_head[8]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \tx_addr_head[9]_i_1 
       (.I0(tx_addr_start[9]),
        .I1(csr_tx_reset_reg_n_0),
        .I2(T_WDATA[9]),
        .O(\tx_addr_head[9]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[0] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[0]_i_1_n_0 ),
        .Q(tx_addr_head[0]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[10] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[10]_i_1_n_0 ),
        .Q(tx_addr_head[10]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[11] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[11]_i_1_n_0 ),
        .Q(tx_addr_head[11]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[12] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[12]_i_1_n_0 ),
        .Q(tx_addr_head[12]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[13] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[13]_i_1_n_0 ),
        .Q(tx_addr_head[13]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[14] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[14]_i_1_n_0 ),
        .Q(tx_addr_head[14]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[15] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[15]_i_1_n_0 ),
        .Q(tx_addr_head[15]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[16] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[16]_i_1_n_0 ),
        .Q(tx_addr_head[16]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[17] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[17]_i_1_n_0 ),
        .Q(tx_addr_head[17]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[18] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[18]_i_1_n_0 ),
        .Q(tx_addr_head[18]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[19] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[19]_i_1_n_0 ),
        .Q(tx_addr_head[19]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[1] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[1]_i_1_n_0 ),
        .Q(tx_addr_head[1]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[20] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[20]_i_1_n_0 ),
        .Q(tx_addr_head[20]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[21] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[21]_i_1_n_0 ),
        .Q(tx_addr_head[21]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[22] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[22]_i_1_n_0 ),
        .Q(tx_addr_head[22]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[23] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[23]_i_1_n_0 ),
        .Q(tx_addr_head[23]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[24] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[24]_i_1_n_0 ),
        .Q(tx_addr_head[24]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[25] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[25]_i_1_n_0 ),
        .Q(tx_addr_head[25]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[26] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[26]_i_1_n_0 ),
        .Q(tx_addr_head[26]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[27] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[27]_i_1_n_0 ),
        .Q(tx_addr_head[27]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[28] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[28]_i_1_n_0 ),
        .Q(tx_addr_head[28]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[29] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[29]_i_1_n_0 ),
        .Q(tx_addr_head[29]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[2] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[2]_i_1_n_0 ),
        .Q(tx_addr_head[2]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[30] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[30]_i_1_n_0 ),
        .Q(tx_addr_head[30]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[31] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[31]_i_2_n_0 ),
        .Q(tx_addr_head[31]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[3] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[3]_i_1_n_0 ),
        .Q(tx_addr_head[3]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[4] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[4]_i_1_n_0 ),
        .Q(tx_addr_head[4]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[5] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[5]_i_1_n_0 ),
        .Q(tx_addr_head[5]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[6] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[6]_i_1_n_0 ),
        .Q(tx_addr_head[6]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[7] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[7]_i_1_n_0 ),
        .Q(tx_addr_head[7]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[8] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[8]_i_1_n_0 ),
        .Q(tx_addr_head[8]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_head_reg[9] 
       (.C(CLK),
        .CE(\tx_addr_head[31]_i_1_n_0 ),
        .CLR(\conf_mac_addr[39]_i_1_n_0 ),
        .D(\tx_addr_head[9]_i_1_n_0 ),
        .Q(tx_addr_head[9]));
  LUT5 #(
    .INIT(32'h00200000)) 
    \tx_addr_start[31]_i_1 
       (.I0(conf_tx_en_i_2_n_0),
        .I1(T_WADDR[2]),
        .I2(T_WADDR[3]),
        .I3(T_WADDR[7]),
        .I4(T_WADDR[6]),
        .O(\tx_addr_start[31]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[0] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[0]),
        .Q(tx_addr_start[0]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[10] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[10]),
        .Q(tx_addr_start[10]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[11] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[11]),
        .Q(tx_addr_start[11]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[12] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[12]),
        .Q(tx_addr_start[12]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[13] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[13]),
        .Q(tx_addr_start[13]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[14] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[14]),
        .Q(tx_addr_start[14]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[15] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[15]),
        .Q(tx_addr_start[15]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[16] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[16]),
        .Q(tx_addr_start[16]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[17] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[17]),
        .Q(tx_addr_start[17]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[18] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[18]),
        .Q(tx_addr_start[18]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[19] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[19]),
        .Q(tx_addr_start[19]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[1] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[1]),
        .Q(tx_addr_start[1]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[20] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[20]),
        .Q(tx_addr_start[20]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[21] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[21]),
        .Q(tx_addr_start[21]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[22] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[22]),
        .Q(tx_addr_start[22]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[23] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[23]),
        .Q(tx_addr_start[23]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[24] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[24]),
        .Q(tx_addr_start[24]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[25] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[25]),
        .Q(tx_addr_start[25]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[26] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[26]),
        .Q(tx_addr_start[26]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[27] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[27]),
        .Q(tx_addr_start[27]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[28] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[28]),
        .Q(tx_addr_start[28]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[29] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[29]),
        .Q(tx_addr_start[29]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[2] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[2]),
        .Q(tx_addr_start[2]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[30] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[30]),
        .Q(tx_addr_start[30]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[31] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[31]),
        .Q(tx_addr_start[31]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[3] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[3]),
        .Q(tx_addr_start[3]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[4] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[4]),
        .Q(tx_addr_start[4]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[5] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[5]),
        .Q(tx_addr_start[5]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[6] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[6]),
        .Q(tx_addr_start[6]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[7] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[7]),
        .Q(tx_addr_start[7]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[8] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[8]),
        .Q(tx_addr_start[8]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_addr_start_reg[9] 
       (.C(CLK),
        .CE(\tx_addr_start[31]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(T_WDATA[9]),
        .Q(tx_addr_start[9]));
  LUT2 #(
    .INIT(4'h2)) 
    \tx_bchunk[0]_i_1 
       (.I0(T_WDATA[0]),
        .I1(\tx_bchunk[9]_i_2_n_0 ),
        .O(\tx_bchunk[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00200000)) 
    \tx_bchunk[10]_i_1 
       (.I0(\tx_bchunk[10]_i_3_n_0 ),
        .I1(T_WADDR[3]),
        .I2(T_WADDR[6]),
        .I3(T_WADDR[4]),
        .I4(T_WADDR[5]),
        .O(\tx_bchunk[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \tx_bchunk[10]_i_2 
       (.I0(T_WDATA[10]),
        .I1(T_WDATA[13]),
        .I2(T_WDATA[15]),
        .I3(T_WDATA[14]),
        .I4(T_WDATA[11]),
        .I5(T_WDATA[12]),
        .O(\tx_bchunk[10]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \tx_bchunk[10]_i_3 
       (.I0(T_WADDR[1]),
        .I1(\rx_addr_end[31]_i_2_n_0 ),
        .I2(T_WADDR[0]),
        .I3(T_WADDR[7]),
        .I4(T_WADDR[2]),
        .O(\tx_bchunk[10]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \tx_bchunk[1]_i_1 
       (.I0(T_WDATA[1]),
        .I1(\tx_bchunk[9]_i_2_n_0 ),
        .O(\tx_bchunk[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \tx_bchunk[2]_i_1 
       (.I0(T_WDATA[2]),
        .I1(\tx_bchunk[9]_i_2_n_0 ),
        .O(\tx_bchunk[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \tx_bchunk[3]_i_1 
       (.I0(T_WDATA[3]),
        .I1(\tx_bchunk[9]_i_2_n_0 ),
        .O(\tx_bchunk[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \tx_bchunk[4]_i_1 
       (.I0(T_WDATA[4]),
        .I1(\tx_bchunk[9]_i_2_n_0 ),
        .O(\tx_bchunk[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \tx_bchunk[5]_i_1 
       (.I0(T_WDATA[5]),
        .I1(\tx_bchunk[9]_i_2_n_0 ),
        .O(\tx_bchunk[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \tx_bchunk[6]_i_1 
       (.I0(T_WDATA[6]),
        .I1(\tx_bchunk[9]_i_2_n_0 ),
        .O(\tx_bchunk[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \tx_bchunk[7]_i_1 
       (.I0(T_WDATA[7]),
        .I1(\tx_bchunk[9]_i_2_n_0 ),
        .O(\tx_bchunk[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \tx_bchunk[8]_i_1 
       (.I0(T_WDATA[8]),
        .I1(\tx_bchunk[9]_i_2_n_0 ),
        .O(\tx_bchunk[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \tx_bchunk[9]_i_1 
       (.I0(T_WDATA[9]),
        .I1(\tx_bchunk[9]_i_2_n_0 ),
        .O(\tx_bchunk[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFEAAAAAAAA)) 
    \tx_bchunk[9]_i_2 
       (.I0(\tx_bchunk[9]_i_3_n_0 ),
        .I1(T_WDATA[2]),
        .I2(T_WDATA[1]),
        .I3(\tx_bchunk[9]_i_4_n_0 ),
        .I4(\tx_bchunk[9]_i_5_n_0 ),
        .I5(T_WDATA[10]),
        .O(\tx_bchunk[9]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \tx_bchunk[9]_i_3 
       (.I0(T_WDATA[12]),
        .I1(T_WDATA[11]),
        .I2(T_WDATA[14]),
        .I3(T_WDATA[15]),
        .I4(T_WDATA[13]),
        .O(\tx_bchunk[9]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \tx_bchunk[9]_i_4 
       (.I0(T_WDATA[6]),
        .I1(T_WDATA[5]),
        .I2(T_WDATA[4]),
        .I3(T_WDATA[3]),
        .O(\tx_bchunk[9]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \tx_bchunk[9]_i_5 
       (.I0(T_WDATA[9]),
        .I1(T_WDATA[0]),
        .I2(T_WDATA[8]),
        .I3(T_WDATA[7]),
        .O(\tx_bchunk[9]_i_5_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_bchunk_reg[0] 
       (.C(CLK),
        .CE(\tx_bchunk[10]_i_1_n_0 ),
        .CLR(\conf_mac_speed[1]_i_2_n_0 ),
        .D(\tx_bchunk[0]_i_1_n_0 ),
        .Q(\^tx_bchunk [0]));
  FDPE #(
    .INIT(1'b0)) 
    \tx_bchunk_reg[10] 
       (.C(CLK),
        .CE(\tx_bchunk[10]_i_1_n_0 ),
        .D(\tx_bchunk[10]_i_2_n_0 ),
        .PRE(gbe_phy_reset_n_i_2_n_0),
        .Q(\^tx_bchunk [10]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_bchunk_reg[1] 
       (.C(CLK),
        .CE(\tx_bchunk[10]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\tx_bchunk[1]_i_1_n_0 ),
        .Q(\^tx_bchunk [1]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_bchunk_reg[2] 
       (.C(CLK),
        .CE(\tx_bchunk[10]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\tx_bchunk[2]_i_1_n_0 ),
        .Q(\^tx_bchunk [2]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_bchunk_reg[3] 
       (.C(CLK),
        .CE(\tx_bchunk[10]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\tx_bchunk[3]_i_1_n_0 ),
        .Q(\^tx_bchunk [3]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_bchunk_reg[4] 
       (.C(CLK),
        .CE(\tx_bchunk[10]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\tx_bchunk[4]_i_1_n_0 ),
        .Q(\^tx_bchunk [4]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_bchunk_reg[5] 
       (.C(CLK),
        .CE(\tx_bchunk[10]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\tx_bchunk[5]_i_1_n_0 ),
        .Q(\^tx_bchunk [5]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_bchunk_reg[6] 
       (.C(CLK),
        .CE(\tx_bchunk[10]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\tx_bchunk[6]_i_1_n_0 ),
        .Q(\^tx_bchunk [6]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_bchunk_reg[7] 
       (.C(CLK),
        .CE(\tx_bchunk[10]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\tx_bchunk[7]_i_1_n_0 ),
        .Q(\^tx_bchunk [7]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_bchunk_reg[8] 
       (.C(CLK),
        .CE(\tx_bchunk[10]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\tx_bchunk[8]_i_1_n_0 ),
        .Q(\^tx_bchunk [8]));
  FDCE #(
    .INIT(1'b0)) 
    \tx_bchunk_reg[9] 
       (.C(CLK),
        .CE(\tx_bchunk[10]_i_1_n_0 ),
        .CLR(gbe_phy_reset_n_i_2_n_0),
        .D(\tx_bchunk[9]_i_1_n_0 ),
        .Q(\^tx_bchunk [9]));
  LUT5 #(
    .INIT(32'h00000020)) 
    \tx_desc_wr_bnum[15]_i_1 
       (.I0(\tx_bchunk[10]_i_3_n_0 ),
        .I1(T_WADDR[5]),
        .I2(T_WADDR[6]),
        .I3(T_WADDR[3]),
        .I4(T_WADDR[4]),
        .O(\tx_desc_wr_bnum[15]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_bnum_reg[0] 
       (.C(CLK),
        .CE(\tx_desc_wr_bnum[15]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[0]),
        .Q(\tx_desc_wr_bnum_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_bnum_reg[10] 
       (.C(CLK),
        .CE(\tx_desc_wr_bnum[15]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[10]),
        .Q(\tx_desc_wr_bnum_reg_n_0_[10] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_bnum_reg[11] 
       (.C(CLK),
        .CE(\tx_desc_wr_bnum[15]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[11]),
        .Q(\tx_desc_wr_bnum_reg_n_0_[11] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_bnum_reg[12] 
       (.C(CLK),
        .CE(\tx_desc_wr_bnum[15]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[12]),
        .Q(\tx_desc_wr_bnum_reg_n_0_[12] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_bnum_reg[13] 
       (.C(CLK),
        .CE(\tx_desc_wr_bnum[15]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[13]),
        .Q(\tx_desc_wr_bnum_reg_n_0_[13] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_bnum_reg[14] 
       (.C(CLK),
        .CE(\tx_desc_wr_bnum[15]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[14]),
        .Q(\tx_desc_wr_bnum_reg_n_0_[14] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_bnum_reg[15] 
       (.C(CLK),
        .CE(\tx_desc_wr_bnum[15]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[15]),
        .Q(\tx_desc_wr_bnum_reg_n_0_[15] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_bnum_reg[1] 
       (.C(CLK),
        .CE(\tx_desc_wr_bnum[15]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[1]),
        .Q(\tx_desc_wr_bnum_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_bnum_reg[2] 
       (.C(CLK),
        .CE(\tx_desc_wr_bnum[15]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[2]),
        .Q(\tx_desc_wr_bnum_reg_n_0_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_bnum_reg[3] 
       (.C(CLK),
        .CE(\tx_desc_wr_bnum[15]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[3]),
        .Q(\tx_desc_wr_bnum_reg_n_0_[3] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_bnum_reg[4] 
       (.C(CLK),
        .CE(\tx_desc_wr_bnum[15]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[4]),
        .Q(\tx_desc_wr_bnum_reg_n_0_[4] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_bnum_reg[5] 
       (.C(CLK),
        .CE(\tx_desc_wr_bnum[15]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[5]),
        .Q(\tx_desc_wr_bnum_reg_n_0_[5] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_bnum_reg[6] 
       (.C(CLK),
        .CE(\tx_desc_wr_bnum[15]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[6]),
        .Q(\tx_desc_wr_bnum_reg_n_0_[6] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_bnum_reg[7] 
       (.C(CLK),
        .CE(\tx_desc_wr_bnum[15]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[7]),
        .Q(\tx_desc_wr_bnum_reg_n_0_[7] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_bnum_reg[8] 
       (.C(CLK),
        .CE(\tx_desc_wr_bnum[15]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[8]),
        .Q(\tx_desc_wr_bnum_reg_n_0_[8] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_bnum_reg[9] 
       (.C(CLK),
        .CE(\tx_desc_wr_bnum[15]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[9]),
        .Q(\tx_desc_wr_bnum_reg_n_0_[9] ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \tx_desc_wr_src[31]_i_1 
       (.I0(\rx_addr_end[31]_i_2_n_0 ),
        .I1(T_WADDR[5]),
        .I2(T_WADDR[4]),
        .I3(T_WADDR[0]),
        .I4(T_WADDR[1]),
        .I5(\tx_desc_wr_src[31]_i_2_n_0 ),
        .O(\tx_desc_wr_src[31]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFDF)) 
    \tx_desc_wr_src[31]_i_2 
       (.I0(T_WADDR[6]),
        .I1(T_WADDR[7]),
        .I2(T_WADDR[3]),
        .I3(T_WADDR[2]),
        .O(\tx_desc_wr_src[31]_i_2_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[0] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[0]),
        .Q(\tx_desc_wr_src_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[10] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[10]),
        .Q(\tx_desc_wr_src_reg_n_0_[10] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[11] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[11]),
        .Q(\tx_desc_wr_src_reg_n_0_[11] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[12] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[12]),
        .Q(\tx_desc_wr_src_reg_n_0_[12] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[13] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[13]),
        .Q(\tx_desc_wr_src_reg_n_0_[13] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[14] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[14]),
        .Q(\tx_desc_wr_src_reg_n_0_[14] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[15] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[15]),
        .Q(\tx_desc_wr_src_reg_n_0_[15] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[16] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[16]),
        .Q(\tx_desc_wr_src_reg_n_0_[16] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[17] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[17]),
        .Q(\tx_desc_wr_src_reg_n_0_[17] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[18] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[18]),
        .Q(\tx_desc_wr_src_reg_n_0_[18] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[19] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[19]),
        .Q(\tx_desc_wr_src_reg_n_0_[19] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[1] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[1]),
        .Q(\tx_desc_wr_src_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[20] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[20]),
        .Q(\tx_desc_wr_src_reg_n_0_[20] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[21] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[21]),
        .Q(\tx_desc_wr_src_reg_n_0_[21] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[22] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[22]),
        .Q(\tx_desc_wr_src_reg_n_0_[22] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[23] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[23]),
        .Q(\tx_desc_wr_src_reg_n_0_[23] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[24] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[24]),
        .Q(\tx_desc_wr_src_reg_n_0_[24] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[25] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[25]),
        .Q(\tx_desc_wr_src_reg_n_0_[25] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[26] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[26]),
        .Q(\tx_desc_wr_src_reg_n_0_[26] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[27] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[27]),
        .Q(\tx_desc_wr_src_reg_n_0_[27] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[28] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[28]),
        .Q(\tx_desc_wr_src_reg_n_0_[28] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[29] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[29]),
        .Q(\tx_desc_wr_src_reg_n_0_[29] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[2] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[2]),
        .Q(\tx_desc_wr_src_reg_n_0_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[30] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[30]),
        .Q(\tx_desc_wr_src_reg_n_0_[30] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[31] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[31]),
        .Q(\tx_desc_wr_src_reg_n_0_[31] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[3] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[3]),
        .Q(\tx_desc_wr_src_reg_n_0_[3] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[4] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[4]),
        .Q(\tx_desc_wr_src_reg_n_0_[4] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[5] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[5]),
        .Q(\tx_desc_wr_src_reg_n_0_[5] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[6] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[6]),
        .Q(\tx_desc_wr_src_reg_n_0_[6] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[7] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[7]),
        .Q(\tx_desc_wr_src_reg_n_0_[7] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[8] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[8]),
        .Q(\tx_desc_wr_src_reg_n_0_[8] ));
  FDCE #(
    .INIT(1'b0)) 
    \tx_desc_wr_src_reg[9] 
       (.C(CLK),
        .CE(\tx_desc_wr_src[31]_i_1_n_0 ),
        .CLR(reg_ip_i_2_n_0),
        .D(T_WDATA[9]),
        .Q(\tx_desc_wr_src_reg_n_0_[9] ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    tx_desc_wr_vld_i_1
       (.I0(rx_desc_rd_rdy_i_2_n_0),
        .I1(T_WADDR[1]),
        .I2(T_WADDR[4]),
        .I3(T_WADDR[3]),
        .I4(rx_desc_rd_rdy_i_3_n_0),
        .I5(\rx_addr_end[31]_i_2_n_0 ),
        .O(tx_desc_wr_vld3_out));
  FDCE #(
    .INIT(1'b0)) 
    tx_desc_wr_vld_reg
       (.C(CLK),
        .CE(1'b1),
        .CLR(reg_ip_i_2_n_0),
        .D(tx_desc_wr_vld3_out),
        .Q(tx_desc_wr_vld_reg_n_0));
  (* FAW = "4" *) 
  (* FDT = "16" *) 
  (* FDW = "48" *) 
  gig_eth_mac_fifo_sync u_rx_descriptor_fifo
       (.clk(CLK),
        .clr(1'b0),
        .empty(rx_desc_empty),
        .full(rx_descriptor_full),
        .item_cnt(rx_desc_items[4:0]),
        .rd_dout({p_18_in,rx_desc_rd_dst}),
        .rd_rdy(rx_desc_rd_rdy),
        .rd_vld(rx_desc_rd_vld),
        .room_cnt(NLW_u_rx_descriptor_fifo_room_cnt_UNCONNECTED[4:0]),
        .rstn(rstn08_in),
        .wr_din({rx_descriptor_wr_bnum,rx_descriptor_wr_dst}),
        .wr_rdy(rx_descriptor_wr_rdy),
        .wr_vld(rx_descriptor_wr_vld));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT1 #(
    .INIT(2'h1)) 
    u_rx_descriptor_fifo_i_1
       (.I0(csr_rx_reset_reg_n_0),
        .O(rstn08_in));
  (* FAW = "4" *) 
  (* FDT = "16" *) 
  (* FDW = "48" *) 
  gig_eth_mac_fifo_sync__1 u_tx_descriptor_fifo
       (.clk(CLK),
        .clr(1'b0),
        .empty(NLW_u_tx_descriptor_fifo_empty_UNCONNECTED),
        .full(NLW_u_tx_descriptor_fifo_full_UNCONNECTED),
        .item_cnt(p_19_in[4:0]),
        .rd_dout({tx_descriptor_rd_bnum,tx_descriptor_rd_src}),
        .rd_rdy(tx_descriptor_rd_rdy),
        .rd_vld(tx_descriptor_rd_vld),
        .room_cnt(p_19_in[20:16]),
        .rstn(rstn0),
        .wr_din({\tx_desc_wr_bnum_reg_n_0_[15] ,\tx_desc_wr_bnum_reg_n_0_[14] ,\tx_desc_wr_bnum_reg_n_0_[13] ,\tx_desc_wr_bnum_reg_n_0_[12] ,\tx_desc_wr_bnum_reg_n_0_[11] ,\tx_desc_wr_bnum_reg_n_0_[10] ,\tx_desc_wr_bnum_reg_n_0_[9] ,\tx_desc_wr_bnum_reg_n_0_[8] ,\tx_desc_wr_bnum_reg_n_0_[7] ,\tx_desc_wr_bnum_reg_n_0_[6] ,\tx_desc_wr_bnum_reg_n_0_[5] ,\tx_desc_wr_bnum_reg_n_0_[4] ,\tx_desc_wr_bnum_reg_n_0_[3] ,\tx_desc_wr_bnum_reg_n_0_[2] ,\tx_desc_wr_bnum_reg_n_0_[1] ,\tx_desc_wr_bnum_reg_n_0_[0] ,\tx_desc_wr_src_reg_n_0_[31] ,\tx_desc_wr_src_reg_n_0_[30] ,\tx_desc_wr_src_reg_n_0_[29] ,\tx_desc_wr_src_reg_n_0_[28] ,\tx_desc_wr_src_reg_n_0_[27] ,\tx_desc_wr_src_reg_n_0_[26] ,\tx_desc_wr_src_reg_n_0_[25] ,\tx_desc_wr_src_reg_n_0_[24] ,\tx_desc_wr_src_reg_n_0_[23] ,\tx_desc_wr_src_reg_n_0_[22] ,\tx_desc_wr_src_reg_n_0_[21] ,\tx_desc_wr_src_reg_n_0_[20] ,\tx_desc_wr_src_reg_n_0_[19] ,\tx_desc_wr_src_reg_n_0_[18] ,\tx_desc_wr_src_reg_n_0_[17] ,\tx_desc_wr_src_reg_n_0_[16] ,\tx_desc_wr_src_reg_n_0_[15] ,\tx_desc_wr_src_reg_n_0_[14] ,\tx_desc_wr_src_reg_n_0_[13] ,\tx_desc_wr_src_reg_n_0_[12] ,\tx_desc_wr_src_reg_n_0_[11] ,\tx_desc_wr_src_reg_n_0_[10] ,\tx_desc_wr_src_reg_n_0_[9] ,\tx_desc_wr_src_reg_n_0_[8] ,\tx_desc_wr_src_reg_n_0_[7] ,\tx_desc_wr_src_reg_n_0_[6] ,\tx_desc_wr_src_reg_n_0_[5] ,\tx_desc_wr_src_reg_n_0_[4] ,\tx_desc_wr_src_reg_n_0_[3] ,\tx_desc_wr_src_reg_n_0_[2] ,\tx_desc_wr_src_reg_n_0_[1] ,\tx_desc_wr_src_reg_n_0_[0] }),
        .wr_rdy(NLW_u_tx_descriptor_fifo_wr_rdy_UNCONNECTED),
        .wr_vld(tx_desc_wr_vld_reg_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    u_tx_descriptor_fifo_i_1
       (.I0(csr_tx_reset_reg_n_0),
        .O(rstn0));
endmodule

module gig_eth_mac_csr_axi
   (R_empty_reg,
    R_full_reg,
    tx_addr_end,
    S,
    tx_addr_head,
    \tx_addr_head_reg[7] ,
    \tx_addr_head_reg[14] ,
    \tx_addr_head_reg[20] ,
    \tx_addr_head_reg[23] ,
    \tx_addr_head_reg[31] ,
    tx_addr_start,
    R_full14_out,
    conf_tx_en,
    R_empty_reg_0,
    R_full_reg_0,
    R_full_reg_1,
    R_full_reg_2,
    R_full_reg_3,
    R_full_reg_4,
    R_full_reg_5,
    R_full_reg_6,
    R_full_reg_7,
    R_full_reg_8,
    R_full_reg_9,
    R_full_reg_10,
    CO,
    R_full_reg_11,
    \DMA_BREM_reg[15] ,
    \R_brem_reg[15] ,
    R_full_reg_12,
    R_full_reg_13,
    R_full_reg_14,
    \DMA_BREM_reg[7] ,
    \R_brem_reg[7] ,
    R_full_reg_15,
    tx_addr_empty,
    ACLK_0,
    \R_addr_reg[2] ,
    \tx_addr_end_reg[29] ,
    \R_addr_reg[3] ,
    \R_addr_reg[4] ,
    \R_addr_reg[5] ,
    \R_addr_reg[6] ,
    \R_addr_reg[7] ,
    \R_addr_reg[8] ,
    \R_addr_reg[9] ,
    \R_addr_reg[10] ,
    \R_addr_reg[13] ,
    \R_addr_reg[14] ,
    \R_addr_reg[15] ,
    \R_addr_reg[16] ,
    \R_addr_reg[17] ,
    \R_addr_reg[18] ,
    \R_addr_reg[19] ,
    \R_addr_reg[20] ,
    \R_addr_reg[21] ,
    \R_addr_reg[22] ,
    \R_addr_reg[23] ,
    \R_addr_reg[24] ,
    \R_addr_reg[25] ,
    \R_addr_reg[26] ,
    \R_addr_reg[27] ,
    \R_addr_reg[28] ,
    \R_addr_reg[29] ,
    \R_addr_reg[30] ,
    \R_addr_reg[31] ,
    \tx_addr_start_reg[1] ,
    \tx_addr_start_reg[0] ,
    \R_addr_reg[12] ,
    D,
    conf_tx_en_reg,
    conf_tx_en_reg_0,
    conf_tx_en_reg_1,
    conf_tx_en_reg_2,
    conf_tx_en_reg_3,
    \tx_addr_end_reg[30] ,
    \tx_addr_head_reg[31]_0 ,
    \tx_addr_head_reg[31]_1 ,
    R_empty_reg_1,
    R_empty_reg_2,
    W_full_reg,
    conf_rx_en_reg,
    conf_rx_en,
    conf_rx_en_reg_0,
    W_go0,
    W_full_reg_0,
    \rx_addr_tail_reg[31] ,
    W_full_reg_1,
    \rx_addr_end_reg[31] ,
    rx_addr_tail,
    rx_addr_start,
    \rx_addr_end_reg[30] ,
    conf_rx_en_reg_1,
    conf_rx_en_reg_2,
    \W_bmove[1]_i_27_0 ,
    \W_bmove[1]_i_22_0 ,
    \W_bmove[1]_i_58_0 ,
    \W_bmove[15]_i_51_0 ,
    \rx_addr_start_reg[2] ,
    \rx_addr_start_reg[3] ,
    \rx_addr_start_reg[4] ,
    \rx_addr_start_reg[5] ,
    \rx_addr_start_reg[6] ,
    \rx_addr_start_reg[7] ,
    \rx_addr_start_reg[8] ,
    \rx_addr_start_reg[9] ,
    \rx_addr_start_reg[10] ,
    \rx_addr_start_reg[11] ,
    \rx_addr_start_reg[12] ,
    \rx_addr_start_reg[13] ,
    \rx_addr_start_reg[14] ,
    \rx_addr_start_reg[15] ,
    \rx_addr_start_reg[16] ,
    \rx_addr_start_reg[17] ,
    \rx_addr_start_reg[18] ,
    \rx_addr_start_reg[19] ,
    \rx_addr_start_reg[21] ,
    \rx_addr_start_reg[22] ,
    \rx_addr_start_reg[23] ,
    \rx_addr_start_reg[24] ,
    \rx_addr_start_reg[25] ,
    \rx_addr_start_reg[26] ,
    \rx_addr_start_reg[27] ,
    \rx_addr_start_reg[28] ,
    \rx_addr_start_reg[29] ,
    \rx_addr_start_reg[30] ,
    \rx_addr_start_reg[31] ,
    \rx_addr_start_reg[1] ,
    \rx_addr_start_reg[0] ,
    conf_rx_en_reg_3,
    \rx_addr_start_reg[20] ,
    conf_rx_en_reg_4,
    conf_rx_en_reg_5,
    conf_rx_en_reg_6,
    conf_rx_en_reg_7,
    conf_rx_en_reg_8,
    O,
    W_full_reg_2,
    W_full_reg_3,
    \rx_addr_start_reg[0]_0 ,
    \rx_addr_start_reg[1]_0 ,
    \state_reg[1] ,
    \state_reg[1]_0 ,
    \state_reg[1]_1 ,
    tx_descriptor_rd_vld,
    \state_reg[1]_2 ,
    \item_cnt_reg[4] ,
    rx_descriptor_full,
    sig_in0,
    conf_tx_reset,
    csr_rx_reset_reg,
    conf_rx_reset,
    csr_rx_reset_reg_0,
    \rx_addr_start_reg[0]_1 ,
    \rx_addr_start_reg[0]_2 ,
    \rx_addr_start_reg[1]_1 ,
    \rx_addr_start_reg[1]_2 ,
    \rx_addr_start_reg[2]_0 ,
    \rx_addr_start_reg[2]_1 ,
    \rx_addr_start_reg[3]_0 ,
    \rx_addr_start_reg[3]_1 ,
    \rx_addr_start_reg[4]_0 ,
    \rx_addr_start_reg[4]_1 ,
    \rx_addr_start_reg[5]_0 ,
    \rx_addr_start_reg[5]_1 ,
    \rx_addr_start_reg[6]_0 ,
    \rx_addr_start_reg[6]_1 ,
    \rx_addr_start_reg[7]_0 ,
    \rx_addr_start_reg[7]_1 ,
    \rx_addr_start_reg[8]_0 ,
    \rx_addr_start_reg[8]_1 ,
    \rx_addr_start_reg[9]_0 ,
    \rx_addr_start_reg[9]_1 ,
    \rx_addr_start_reg[10]_0 ,
    \rx_addr_start_reg[10]_1 ,
    \rx_addr_start_reg[11]_0 ,
    \rx_addr_start_reg[11]_1 ,
    \rx_addr_start_reg[12]_0 ,
    \rx_addr_start_reg[12]_1 ,
    \rx_addr_start_reg[13]_0 ,
    \rx_addr_start_reg[13]_1 ,
    \rx_addr_start_reg[14]_0 ,
    \rx_addr_start_reg[14]_1 ,
    \rx_addr_start_reg[15]_0 ,
    \rx_addr_start_reg[15]_1 ,
    \rx_addr_start_reg[16]_0 ,
    \rx_addr_start_reg[16]_1 ,
    \rx_addr_start_reg[17]_0 ,
    \rx_addr_start_reg[17]_1 ,
    \rx_addr_start_reg[18]_0 ,
    \rx_addr_start_reg[18]_1 ,
    \rx_addr_start_reg[19]_0 ,
    \rx_addr_start_reg[19]_1 ,
    \rx_addr_start_reg[20]_0 ,
    \rx_addr_start_reg[20]_1 ,
    \rx_addr_start_reg[21]_0 ,
    \rx_addr_start_reg[21]_1 ,
    \rx_addr_start_reg[22]_0 ,
    \rx_addr_start_reg[22]_1 ,
    \rx_addr_start_reg[23]_0 ,
    \rx_addr_start_reg[23]_1 ,
    \rx_addr_start_reg[24]_0 ,
    \rx_addr_start_reg[24]_1 ,
    \rx_addr_start_reg[25]_0 ,
    \rx_addr_start_reg[25]_1 ,
    \rx_addr_start_reg[26]_0 ,
    \rx_addr_start_reg[26]_1 ,
    \rx_addr_start_reg[27]_0 ,
    \rx_addr_start_reg[27]_1 ,
    \rx_addr_start_reg[28]_0 ,
    \rx_addr_start_reg[28]_1 ,
    \rx_addr_start_reg[29]_0 ,
    \rx_addr_start_reg[29]_1 ,
    \rx_addr_start_reg[30]_0 ,
    \rx_addr_start_reg[30]_1 ,
    \rx_addr_start_reg[31]_0 ,
    \rx_addr_start_reg[31]_1 ,
    \tx_addr_start_reg[0]_0 ,
    \tx_addr_start_reg[0]_1 ,
    \tx_addr_start_reg[1]_0 ,
    \tx_addr_start_reg[1]_1 ,
    \tx_addr_start_reg[2] ,
    \tx_addr_start_reg[2]_0 ,
    \tx_addr_start_reg[3] ,
    \tx_addr_start_reg[3]_0 ,
    \tx_addr_start_reg[4] ,
    \tx_addr_start_reg[4]_0 ,
    \tx_addr_start_reg[5] ,
    \tx_addr_start_reg[5]_0 ,
    \tx_addr_start_reg[6] ,
    \tx_addr_start_reg[6]_0 ,
    \tx_addr_start_reg[7] ,
    \tx_addr_start_reg[7]_0 ,
    \tx_addr_start_reg[8] ,
    \tx_addr_start_reg[8]_0 ,
    \tx_addr_start_reg[9] ,
    \tx_addr_start_reg[9]_0 ,
    \tx_addr_start_reg[10] ,
    \tx_addr_start_reg[10]_0 ,
    \tx_addr_start_reg[11] ,
    \tx_addr_start_reg[11]_0 ,
    \tx_addr_start_reg[12] ,
    \tx_addr_start_reg[12]_0 ,
    \tx_addr_start_reg[13] ,
    \tx_addr_start_reg[13]_0 ,
    \tx_addr_start_reg[14] ,
    \tx_addr_start_reg[14]_0 ,
    \tx_addr_start_reg[15] ,
    \tx_addr_start_reg[15]_0 ,
    \tx_addr_start_reg[16] ,
    \tx_addr_start_reg[16]_0 ,
    \tx_addr_start_reg[17] ,
    \tx_addr_start_reg[17]_0 ,
    \tx_addr_start_reg[18] ,
    \tx_addr_start_reg[18]_0 ,
    \tx_addr_start_reg[19] ,
    \tx_addr_start_reg[19]_0 ,
    \tx_addr_start_reg[20] ,
    \tx_addr_start_reg[20]_0 ,
    \tx_addr_start_reg[21] ,
    \tx_addr_start_reg[21]_0 ,
    \tx_addr_start_reg[22] ,
    \tx_addr_start_reg[22]_0 ,
    \tx_addr_start_reg[23] ,
    \tx_addr_start_reg[23]_0 ,
    \tx_addr_start_reg[24] ,
    \tx_addr_start_reg[24]_0 ,
    \tx_addr_start_reg[25] ,
    \tx_addr_start_reg[25]_0 ,
    \tx_addr_start_reg[26] ,
    \tx_addr_start_reg[26]_0 ,
    \tx_addr_start_reg[27] ,
    \tx_addr_start_reg[27]_0 ,
    \tx_addr_start_reg[28] ,
    \tx_addr_start_reg[28]_0 ,
    \tx_addr_start_reg[29] ,
    \tx_addr_start_reg[29]_0 ,
    \tx_addr_start_reg[30] ,
    \tx_addr_start_reg[30]_0 ,
    \tx_addr_start_reg[31] ,
    \tx_addr_start_reg[31]_0 ,
    \R_addr_reg[11] ,
    conf_tx_en_reg_4,
    IRQ,
    gbe_phy_reset_n,
    conf_mac_addr,
    conf_tx_jumbo_en,
    conf_tx_no_gen_crc,
    conf_rx_no_chk_crc,
    conf_rx_jumbo_en,
    conf_rx_promiscuous,
    rx_descriptor_wr_rdy,
    rx_addr_empty,
    S_BID,
    S_RID,
    S_RDATA,
    S_RRESP,
    S_RLAST,
    S_RVALID,
    S_AWREADY_reg_0,
    S_ARREADY_reg_0,
    S_WREADY,
    S_BRESP,
    S_BVALID,
    R_empty_reg_3,
    R_addr2,
    Q,
    out,
    \R_brem_reg[15]_i_4_0 ,
    \R_brem[15]_i_151 ,
    \R_brem[15]_i_151_0 ,
    \R_brem_reg[15]_i_144 ,
    \R_brem_reg[15]_i_41 ,
    \R_brem_reg[14] ,
    \CID_reg[0] ,
    \R_bmove_reg[0] ,
    \M_ARLEN_reg[0] ,
    \M_ARSIZE_reg[1] ,
    R_empty_i_38,
    DI,
    \R_brem[15]_i_82_0 ,
    \R_brem[15]_i_82_1 ,
    \R_brem_reg[15]_i_4_1 ,
    \R_brem_reg[15]_i_35_0 ,
    \R_brem[15]_i_173_0 ,
    \R_brem[15]_i_171_0 ,
    \R_brem[15]_i_123_0 ,
    \R_brem[15]_i_121_0 ,
    \R_brem[15]_i_74_0 ,
    \R_brem[15]_i_72_0 ,
    \R_brem[15]_i_34_0 ,
    \R_brem[15]_i_32_0 ,
    \R_brem[15]_i_173_1 ,
    \R_brem[15]_i_171_1 ,
    \R_brem[15]_i_123_1 ,
    \R_brem[15]_i_121_1 ,
    \R_brem[15]_i_74_1 ,
    \R_brem[15]_i_72_1 ,
    \R_brem[15]_i_34_1 ,
    \R_brem[15]_i_32_1 ,
    W_full_reg_4,
    W_full_reg_5,
    M_BREADY_reg,
    W_go_reg,
    W_go_reg_0,
    \W_bmove_reg[1]_i_8_0 ,
    \W_bmove_reg[1]_i_8_1 ,
    W_full_i_5_0,
    W_empty,
    \W_bmove_reg[1]_i_59_0 ,
    W_bxxx,
    \W_bmove_reg[15]_i_89_0 ,
    W_addr2,
    \DMA_ADDR_HEAD_reg[31]_P ,
    \W_bmove[15]_i_6_0 ,
    \DMA_ADDR_HEAD_reg[2]_P ,
    \desc_bnum_reg[15] ,
    \M_WID_reg[3] ,
    \W_bmove_reg[14] ,
    \M_AWLEN_reg[0] ,
    \W_bmove_reg[15]_i_89_1 ,
    \W_bmove_reg[1]_i_59_1 ,
    \W_bmove_reg[1]_i_18_0 ,
    \W_bmove_reg[1]_i_64_0 ,
    \W_bmove_reg[1]_i_23_0 ,
    \W_bmove_reg[1]_i_86_0 ,
    \W_bmove_reg[1]_i_54_0 ,
    \W_bmove_reg[1]_i_69_0 ,
    \W_bmove_reg[1]_i_36_0 ,
    \W_bmove_reg[1]_i_11_0 ,
    \W_bmove[15]_i_25 ,
    \W_bmove[1]_i_56_0 ,
    W_full_i_3_0,
    \DMA_ADDR_HEAD_reg[0]_C ,
    \DMA_ADDR_HEAD_reg[0]_C_0 ,
    \DMA_ADDR_HEAD_reg[1]_C ,
    S_ARADDR,
    S_ARSIZE,
    \R_addr_reg[0] ,
    \R_brem_reg[14]_0 ,
    \R_brem_reg[15]_0 ,
    \R_brem_reg[12] ,
    \R_brem_reg[13] ,
    \R_brem_reg[10] ,
    \R_brem_reg[11] ,
    \R_brem_reg[8] ,
    \R_brem_reg[9] ,
    \R_brem_reg[6] ,
    \R_brem_reg[7]_0 ,
    \R_brem_reg[4] ,
    \R_brem_reg[5] ,
    \R_brem_reg[2] ,
    \R_brem_reg[3] ,
    \R_brem_reg[0] ,
    \R_brem_reg[1] ,
    \DMA_BREM_reg[15]_0 ,
    \DMA_BREM_reg[11] ,
    \DMA_BREM_reg[7]_0 ,
    \DMA_BREM_reg[3] ,
    \R_addr_reg[31]_0 ,
    \R_addr_reg[30]_0 ,
    \R_addr_reg[29]_0 ,
    \R_addr_reg[28]_0 ,
    \R_addr_reg[27]_0 ,
    \R_addr_reg[26]_0 ,
    \R_addr_reg[25]_0 ,
    \R_addr_reg[24]_0 ,
    \R_addr_reg[23]_0 ,
    \R_addr_reg[22]_0 ,
    \R_addr_reg[21]_0 ,
    \R_addr_reg[20]_0 ,
    \R_addr_reg[19]_0 ,
    \R_addr_reg[18]_0 ,
    \R_addr_reg[17]_0 ,
    \R_addr_reg[16]_0 ,
    \R_addr_reg[15]_0 ,
    \R_addr_reg[14]_0 ,
    \R_addr_reg[13]_0 ,
    \R_addr_reg[12]_0 ,
    \R_addr_reg[11]_0 ,
    \R_addr_reg[10]_0 ,
    \R_addr_reg[9]_0 ,
    \R_addr_reg[8]_0 ,
    \R_addr_reg[7]_0 ,
    \R_addr_reg[6]_0 ,
    \R_addr_reg[5]_0 ,
    \R_addr_reg[4]_0 ,
    \R_addr_reg[3]_0 ,
    \R_addr_reg[2]_0 ,
    \R_addr_reg[1] ,
    dout,
    gtx_clk_stable,
    client_bnum_rdy_reg_C,
    desc_ready_reg,
    ARESETn,
    ACLK,
    tx_descriptor_rd_rdy,
    tx_addr_tail,
    tx_addr_tail_update,
    rx_descriptor_wr_vld,
    \T_RDATA[2]_i_8 ,
    \T_RDATA[14]_i_2 ,
    rx_addr_head,
    rx_addr_head_update,
    crc_err,
    S_AWLEN,
    S_AWID,
    S_ARLEN,
    S_ARID,
    S_AWBURST,
    S_AWSIZE,
    S_WSTRB,
    S_ARBURST,
    S_WDATA,
    S_BREADY,
    S_WVALID,
    S_AWVALID,
    S_AWADDR,
    S_WLAST,
    S_WID,
    S_RREADY,
    S_ARVALID);
  output R_empty_reg;
  output R_full_reg;
  output [31:0]tx_addr_end;
  output [1:0]S;
  output [31:0]tx_addr_head;
  output [3:0]\tx_addr_head_reg[7] ;
  output [3:0]\tx_addr_head_reg[14] ;
  output [1:0]\tx_addr_head_reg[20] ;
  output [3:0]\tx_addr_head_reg[23] ;
  output [1:0]\tx_addr_head_reg[31] ;
  output [31:0]tx_addr_start;
  output R_full14_out;
  output conf_tx_en;
  output R_empty_reg_0;
  output R_full_reg_0;
  output R_full_reg_1;
  output R_full_reg_2;
  output R_full_reg_3;
  output R_full_reg_4;
  output R_full_reg_5;
  output R_full_reg_6;
  output R_full_reg_7;
  output R_full_reg_8;
  output R_full_reg_9;
  output R_full_reg_10;
  output [0:0]CO;
  output R_full_reg_11;
  output [3:0]\DMA_BREM_reg[15] ;
  output [3:0]\R_brem_reg[15] ;
  output R_full_reg_12;
  output R_full_reg_13;
  output R_full_reg_14;
  output [3:0]\DMA_BREM_reg[7] ;
  output [3:0]\R_brem_reg[7] ;
  output R_full_reg_15;
  output tx_addr_empty;
  output ACLK_0;
  output \R_addr_reg[2] ;
  output [0:0]\tx_addr_end_reg[29] ;
  output \R_addr_reg[3] ;
  output \R_addr_reg[4] ;
  output \R_addr_reg[5] ;
  output \R_addr_reg[6] ;
  output \R_addr_reg[7] ;
  output \R_addr_reg[8] ;
  output \R_addr_reg[9] ;
  output \R_addr_reg[10] ;
  output \R_addr_reg[13] ;
  output \R_addr_reg[14] ;
  output \R_addr_reg[15] ;
  output \R_addr_reg[16] ;
  output \R_addr_reg[17] ;
  output \R_addr_reg[18] ;
  output \R_addr_reg[19] ;
  output \R_addr_reg[20] ;
  output \R_addr_reg[21] ;
  output \R_addr_reg[22] ;
  output \R_addr_reg[23] ;
  output \R_addr_reg[24] ;
  output \R_addr_reg[25] ;
  output \R_addr_reg[26] ;
  output \R_addr_reg[27] ;
  output \R_addr_reg[28] ;
  output \R_addr_reg[29] ;
  output \R_addr_reg[30] ;
  output \R_addr_reg[31] ;
  output \tx_addr_start_reg[1] ;
  output \tx_addr_start_reg[0] ;
  output \R_addr_reg[12] ;
  output [0:0]D;
  output [1:0]conf_tx_en_reg;
  output [31:0]conf_tx_en_reg_0;
  output [13:0]conf_tx_en_reg_1;
  output [0:0]conf_tx_en_reg_2;
  output conf_tx_en_reg_3;
  output [0:0]\tx_addr_end_reg[30] ;
  output [0:0]\tx_addr_head_reg[31]_0 ;
  output [0:0]\tx_addr_head_reg[31]_1 ;
  output [0:0]R_empty_reg_1;
  output [0:0]R_empty_reg_2;
  output W_full_reg;
  output conf_rx_en_reg;
  output conf_rx_en;
  output conf_rx_en_reg_0;
  output W_go0;
  output [4:0]W_full_reg_0;
  output [0:0]\rx_addr_tail_reg[31] ;
  output [10:0]W_full_reg_1;
  output [29:0]\rx_addr_end_reg[31] ;
  output [31:0]rx_addr_tail;
  output [31:0]rx_addr_start;
  output [0:0]\rx_addr_end_reg[30] ;
  output conf_rx_en_reg_1;
  output [13:0]conf_rx_en_reg_2;
  output [0:0]\W_bmove[1]_i_27_0 ;
  output [0:0]\W_bmove[1]_i_22_0 ;
  output [0:0]\W_bmove[1]_i_58_0 ;
  output [0:0]\W_bmove[15]_i_51_0 ;
  output \rx_addr_start_reg[2] ;
  output \rx_addr_start_reg[3] ;
  output \rx_addr_start_reg[4] ;
  output \rx_addr_start_reg[5] ;
  output \rx_addr_start_reg[6] ;
  output \rx_addr_start_reg[7] ;
  output \rx_addr_start_reg[8] ;
  output \rx_addr_start_reg[9] ;
  output \rx_addr_start_reg[10] ;
  output \rx_addr_start_reg[11] ;
  output \rx_addr_start_reg[12] ;
  output \rx_addr_start_reg[13] ;
  output \rx_addr_start_reg[14] ;
  output \rx_addr_start_reg[15] ;
  output \rx_addr_start_reg[16] ;
  output \rx_addr_start_reg[17] ;
  output \rx_addr_start_reg[18] ;
  output \rx_addr_start_reg[19] ;
  output \rx_addr_start_reg[21] ;
  output \rx_addr_start_reg[22] ;
  output \rx_addr_start_reg[23] ;
  output \rx_addr_start_reg[24] ;
  output \rx_addr_start_reg[25] ;
  output \rx_addr_start_reg[26] ;
  output \rx_addr_start_reg[27] ;
  output \rx_addr_start_reg[28] ;
  output \rx_addr_start_reg[29] ;
  output \rx_addr_start_reg[30] ;
  output \rx_addr_start_reg[31] ;
  output \rx_addr_start_reg[1] ;
  output \rx_addr_start_reg[0] ;
  output [15:0]conf_rx_en_reg_3;
  output \rx_addr_start_reg[20] ;
  output [0:0]conf_rx_en_reg_4;
  output conf_rx_en_reg_5;
  output [2:0]conf_rx_en_reg_6;
  output [31:0]conf_rx_en_reg_7;
  output [0:0]conf_rx_en_reg_8;
  output [2:0]O;
  output [3:0]W_full_reg_2;
  output [1:0]W_full_reg_3;
  output \rx_addr_start_reg[0]_0 ;
  output \rx_addr_start_reg[1]_0 ;
  output [31:0]\state_reg[1] ;
  output [15:0]\state_reg[1]_0 ;
  output \state_reg[1]_1 ;
  output tx_descriptor_rd_vld;
  output [15:0]\state_reg[1]_2 ;
  output \item_cnt_reg[4] ;
  output rx_descriptor_full;
  output sig_in0;
  output conf_tx_reset;
  output csr_rx_reset_reg;
  output conf_rx_reset;
  output csr_rx_reset_reg_0;
  output \rx_addr_start_reg[0]_1 ;
  output \rx_addr_start_reg[0]_2 ;
  output \rx_addr_start_reg[1]_1 ;
  output \rx_addr_start_reg[1]_2 ;
  output \rx_addr_start_reg[2]_0 ;
  output \rx_addr_start_reg[2]_1 ;
  output \rx_addr_start_reg[3]_0 ;
  output \rx_addr_start_reg[3]_1 ;
  output \rx_addr_start_reg[4]_0 ;
  output \rx_addr_start_reg[4]_1 ;
  output \rx_addr_start_reg[5]_0 ;
  output \rx_addr_start_reg[5]_1 ;
  output \rx_addr_start_reg[6]_0 ;
  output \rx_addr_start_reg[6]_1 ;
  output \rx_addr_start_reg[7]_0 ;
  output \rx_addr_start_reg[7]_1 ;
  output \rx_addr_start_reg[8]_0 ;
  output \rx_addr_start_reg[8]_1 ;
  output \rx_addr_start_reg[9]_0 ;
  output \rx_addr_start_reg[9]_1 ;
  output \rx_addr_start_reg[10]_0 ;
  output \rx_addr_start_reg[10]_1 ;
  output \rx_addr_start_reg[11]_0 ;
  output \rx_addr_start_reg[11]_1 ;
  output \rx_addr_start_reg[12]_0 ;
  output \rx_addr_start_reg[12]_1 ;
  output \rx_addr_start_reg[13]_0 ;
  output \rx_addr_start_reg[13]_1 ;
  output \rx_addr_start_reg[14]_0 ;
  output \rx_addr_start_reg[14]_1 ;
  output \rx_addr_start_reg[15]_0 ;
  output \rx_addr_start_reg[15]_1 ;
  output \rx_addr_start_reg[16]_0 ;
  output \rx_addr_start_reg[16]_1 ;
  output \rx_addr_start_reg[17]_0 ;
  output \rx_addr_start_reg[17]_1 ;
  output \rx_addr_start_reg[18]_0 ;
  output \rx_addr_start_reg[18]_1 ;
  output \rx_addr_start_reg[19]_0 ;
  output \rx_addr_start_reg[19]_1 ;
  output \rx_addr_start_reg[20]_0 ;
  output \rx_addr_start_reg[20]_1 ;
  output \rx_addr_start_reg[21]_0 ;
  output \rx_addr_start_reg[21]_1 ;
  output \rx_addr_start_reg[22]_0 ;
  output \rx_addr_start_reg[22]_1 ;
  output \rx_addr_start_reg[23]_0 ;
  output \rx_addr_start_reg[23]_1 ;
  output \rx_addr_start_reg[24]_0 ;
  output \rx_addr_start_reg[24]_1 ;
  output \rx_addr_start_reg[25]_0 ;
  output \rx_addr_start_reg[25]_1 ;
  output \rx_addr_start_reg[26]_0 ;
  output \rx_addr_start_reg[26]_1 ;
  output \rx_addr_start_reg[27]_0 ;
  output \rx_addr_start_reg[27]_1 ;
  output \rx_addr_start_reg[28]_0 ;
  output \rx_addr_start_reg[28]_1 ;
  output \rx_addr_start_reg[29]_0 ;
  output \rx_addr_start_reg[29]_1 ;
  output \rx_addr_start_reg[30]_0 ;
  output \rx_addr_start_reg[30]_1 ;
  output \rx_addr_start_reg[31]_0 ;
  output \rx_addr_start_reg[31]_1 ;
  output \tx_addr_start_reg[0]_0 ;
  output \tx_addr_start_reg[0]_1 ;
  output \tx_addr_start_reg[1]_0 ;
  output \tx_addr_start_reg[1]_1 ;
  output \tx_addr_start_reg[2] ;
  output \tx_addr_start_reg[2]_0 ;
  output \tx_addr_start_reg[3] ;
  output \tx_addr_start_reg[3]_0 ;
  output \tx_addr_start_reg[4] ;
  output \tx_addr_start_reg[4]_0 ;
  output \tx_addr_start_reg[5] ;
  output \tx_addr_start_reg[5]_0 ;
  output \tx_addr_start_reg[6] ;
  output \tx_addr_start_reg[6]_0 ;
  output \tx_addr_start_reg[7] ;
  output \tx_addr_start_reg[7]_0 ;
  output \tx_addr_start_reg[8] ;
  output \tx_addr_start_reg[8]_0 ;
  output \tx_addr_start_reg[9] ;
  output \tx_addr_start_reg[9]_0 ;
  output \tx_addr_start_reg[10] ;
  output \tx_addr_start_reg[10]_0 ;
  output \tx_addr_start_reg[11] ;
  output \tx_addr_start_reg[11]_0 ;
  output \tx_addr_start_reg[12] ;
  output \tx_addr_start_reg[12]_0 ;
  output \tx_addr_start_reg[13] ;
  output \tx_addr_start_reg[13]_0 ;
  output \tx_addr_start_reg[14] ;
  output \tx_addr_start_reg[14]_0 ;
  output \tx_addr_start_reg[15] ;
  output \tx_addr_start_reg[15]_0 ;
  output \tx_addr_start_reg[16] ;
  output \tx_addr_start_reg[16]_0 ;
  output \tx_addr_start_reg[17] ;
  output \tx_addr_start_reg[17]_0 ;
  output \tx_addr_start_reg[18] ;
  output \tx_addr_start_reg[18]_0 ;
  output \tx_addr_start_reg[19] ;
  output \tx_addr_start_reg[19]_0 ;
  output \tx_addr_start_reg[20] ;
  output \tx_addr_start_reg[20]_0 ;
  output \tx_addr_start_reg[21] ;
  output \tx_addr_start_reg[21]_0 ;
  output \tx_addr_start_reg[22] ;
  output \tx_addr_start_reg[22]_0 ;
  output \tx_addr_start_reg[23] ;
  output \tx_addr_start_reg[23]_0 ;
  output \tx_addr_start_reg[24] ;
  output \tx_addr_start_reg[24]_0 ;
  output \tx_addr_start_reg[25] ;
  output \tx_addr_start_reg[25]_0 ;
  output \tx_addr_start_reg[26] ;
  output \tx_addr_start_reg[26]_0 ;
  output \tx_addr_start_reg[27] ;
  output \tx_addr_start_reg[27]_0 ;
  output \tx_addr_start_reg[28] ;
  output \tx_addr_start_reg[28]_0 ;
  output \tx_addr_start_reg[29] ;
  output \tx_addr_start_reg[29]_0 ;
  output \tx_addr_start_reg[30] ;
  output \tx_addr_start_reg[30]_0 ;
  output \tx_addr_start_reg[31] ;
  output \tx_addr_start_reg[31]_0 ;
  output \R_addr_reg[11] ;
  output conf_tx_en_reg_4;
  output IRQ;
  output gbe_phy_reset_n;
  output [47:0]conf_mac_addr;
  output conf_tx_jumbo_en;
  output conf_tx_no_gen_crc;
  output conf_rx_no_chk_crc;
  output conf_rx_jumbo_en;
  output conf_rx_promiscuous;
  output rx_descriptor_wr_rdy;
  output rx_addr_empty;
  output [7:0]S_BID;
  output [7:0]S_RID;
  output [31:0]S_RDATA;
  output [0:0]S_RRESP;
  output S_RLAST;
  output S_RVALID;
  output S_AWREADY_reg_0;
  output S_ARREADY_reg_0;
  output S_WREADY;
  output [0:0]S_BRESP;
  output S_BVALID;
  input R_empty_reg_3;
  input [31:0]R_addr2;
  input [31:0]Q;
  input [0:0]out;
  input \R_brem_reg[15]_i_4_0 ;
  input \R_brem[15]_i_151 ;
  input \R_brem[15]_i_151_0 ;
  input [15:0]\R_brem_reg[15]_i_144 ;
  input [15:0]\R_brem_reg[15]_i_41 ;
  input [0:0]\R_brem_reg[14] ;
  input [0:0]\CID_reg[0] ;
  input [0:0]\R_bmove_reg[0] ;
  input [0:0]\M_ARLEN_reg[0] ;
  input \M_ARSIZE_reg[1] ;
  input [0:0]R_empty_i_38;
  input [2:0]DI;
  input [0:0]\R_brem[15]_i_82_0 ;
  input [0:0]\R_brem[15]_i_82_1 ;
  input [0:0]\R_brem_reg[15]_i_4_1 ;
  input [0:0]\R_brem_reg[15]_i_35_0 ;
  input [3:0]\R_brem[15]_i_173_0 ;
  input [3:0]\R_brem[15]_i_171_0 ;
  input [3:0]\R_brem[15]_i_123_0 ;
  input [3:0]\R_brem[15]_i_121_0 ;
  input [3:0]\R_brem[15]_i_74_0 ;
  input [3:0]\R_brem[15]_i_72_0 ;
  input [3:0]\R_brem[15]_i_34_0 ;
  input [3:0]\R_brem[15]_i_32_0 ;
  input [3:0]\R_brem[15]_i_173_1 ;
  input [3:0]\R_brem[15]_i_171_1 ;
  input [3:0]\R_brem[15]_i_123_1 ;
  input [3:0]\R_brem[15]_i_121_1 ;
  input [3:0]\R_brem[15]_i_74_1 ;
  input [3:0]\R_brem[15]_i_72_1 ;
  input [3:0]\R_brem[15]_i_34_1 ;
  input [3:0]\R_brem[15]_i_32_1 ;
  input W_full_reg_4;
  input W_full_reg_5;
  input [0:0]M_BREADY_reg;
  input W_go_reg;
  input W_go_reg_0;
  input \W_bmove_reg[1]_i_8_0 ;
  input \W_bmove_reg[1]_i_8_1 ;
  input [2:0]W_full_i_5_0;
  input W_empty;
  input [13:0]\W_bmove_reg[1]_i_59_0 ;
  input [15:0]W_bxxx;
  input [15:0]\W_bmove_reg[15]_i_89_0 ;
  input [31:0]W_addr2;
  input [31:0]\DMA_ADDR_HEAD_reg[31]_P ;
  input \W_bmove[15]_i_6_0 ;
  input [0:0]\DMA_ADDR_HEAD_reg[2]_P ;
  input [15:0]\desc_bnum_reg[15] ;
  input [3:0]\M_WID_reg[3] ;
  input \W_bmove_reg[14] ;
  input [0:0]\M_AWLEN_reg[0] ;
  input [0:0]\W_bmove_reg[15]_i_89_1 ;
  input [2:0]\W_bmove_reg[1]_i_59_1 ;
  input [3:0]\W_bmove_reg[1]_i_18_0 ;
  input [2:0]\W_bmove_reg[1]_i_64_0 ;
  input [3:0]\W_bmove_reg[1]_i_23_0 ;
  input [3:0]\W_bmove_reg[1]_i_86_0 ;
  input [3:0]\W_bmove_reg[1]_i_54_0 ;
  input [3:0]\W_bmove_reg[1]_i_69_0 ;
  input [3:0]\W_bmove_reg[1]_i_36_0 ;
  input [3:0]\W_bmove_reg[1]_i_11_0 ;
  input [3:0]\W_bmove[15]_i_25 ;
  input [0:0]\W_bmove[1]_i_56_0 ;
  input [0:0]W_full_i_3_0;
  input \DMA_ADDR_HEAD_reg[0]_C ;
  input \DMA_ADDR_HEAD_reg[0]_C_0 ;
  input \DMA_ADDR_HEAD_reg[1]_C ;
  input [7:0]S_ARADDR;
  input [2:0]S_ARSIZE;
  input \R_addr_reg[0] ;
  input \R_brem_reg[14]_0 ;
  input \R_brem_reg[15]_0 ;
  input \R_brem_reg[12] ;
  input \R_brem_reg[13] ;
  input \R_brem_reg[10] ;
  input \R_brem_reg[11] ;
  input \R_brem_reg[8] ;
  input \R_brem_reg[9] ;
  input \R_brem_reg[6] ;
  input \R_brem_reg[7]_0 ;
  input \R_brem_reg[4] ;
  input \R_brem_reg[5] ;
  input \R_brem_reg[2] ;
  input \R_brem_reg[3] ;
  input \R_brem_reg[0] ;
  input \R_brem_reg[1] ;
  input [3:0]\DMA_BREM_reg[15]_0 ;
  input [3:0]\DMA_BREM_reg[11] ;
  input [3:0]\DMA_BREM_reg[7]_0 ;
  input [3:0]\DMA_BREM_reg[3] ;
  input \R_addr_reg[31]_0 ;
  input \R_addr_reg[30]_0 ;
  input \R_addr_reg[29]_0 ;
  input \R_addr_reg[28]_0 ;
  input \R_addr_reg[27]_0 ;
  input \R_addr_reg[26]_0 ;
  input \R_addr_reg[25]_0 ;
  input \R_addr_reg[24]_0 ;
  input \R_addr_reg[23]_0 ;
  input \R_addr_reg[22]_0 ;
  input \R_addr_reg[21]_0 ;
  input \R_addr_reg[20]_0 ;
  input \R_addr_reg[19]_0 ;
  input \R_addr_reg[18]_0 ;
  input \R_addr_reg[17]_0 ;
  input \R_addr_reg[16]_0 ;
  input \R_addr_reg[15]_0 ;
  input \R_addr_reg[14]_0 ;
  input \R_addr_reg[13]_0 ;
  input \R_addr_reg[12]_0 ;
  input \R_addr_reg[11]_0 ;
  input \R_addr_reg[10]_0 ;
  input \R_addr_reg[9]_0 ;
  input \R_addr_reg[8]_0 ;
  input \R_addr_reg[7]_0 ;
  input \R_addr_reg[6]_0 ;
  input \R_addr_reg[5]_0 ;
  input \R_addr_reg[4]_0 ;
  input \R_addr_reg[3]_0 ;
  input \R_addr_reg[2]_0 ;
  input \R_addr_reg[1] ;
  input [3:0]dout;
  input gtx_clk_stable;
  input client_bnum_rdy_reg_C;
  input desc_ready_reg;
  input ARESETn;
  input ACLK;
  input tx_descriptor_rd_rdy;
  input [31:0]tx_addr_tail;
  input tx_addr_tail_update;
  input rx_descriptor_wr_vld;
  input [31:0]\T_RDATA[2]_i_8 ;
  input [15:0]\T_RDATA[14]_i_2 ;
  input [31:0]rx_addr_head;
  input rx_addr_head_update;
  input crc_err;
  input [7:0]S_AWLEN;
  input [7:0]S_AWID;
  input [7:0]S_ARLEN;
  input [7:0]S_ARID;
  input [1:0]S_AWBURST;
  input [2:0]S_AWSIZE;
  input [3:0]S_WSTRB;
  input [1:0]S_ARBURST;
  input [31:0]S_WDATA;
  input S_BREADY;
  input S_WVALID;
  input S_AWVALID;
  input [7:0]S_AWADDR;
  input S_WLAST;
  input [7:0]S_WID;
  input S_RREADY;
  input S_ARVALID;

  wire ACLK;
  wire ACLK_0;
  wire [1:0]ARBURST_reg;
  wire ARESETn;
  wire [7:0]ARLEN_reg;
  wire ARLEN_reg0__0;
  wire [2:0]ARSIZE_reg;
  wire \AWBURST_reg_reg_n_0_[0] ;
  wire \AWBURST_reg_reg_n_0_[1] ;
  wire [7:0]AWID_reg;
  wire [7:0]AWLEN_reg;
  wire \AWLEN_reg[7]_i_1_n_0 ;
  wire [2:0]AWSIZE_reg;
  wire [0:0]\CID_reg[0] ;
  wire [0:0]CO;
  wire [0:0]D;
  wire [2:0]DI;
  wire \DMA_ADDR_HEAD_reg[0]_C ;
  wire \DMA_ADDR_HEAD_reg[0]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[1]_C ;
  wire [0:0]\DMA_ADDR_HEAD_reg[2]_P ;
  wire [31:0]\DMA_ADDR_HEAD_reg[31]_P ;
  wire \DMA_ADDR_TAIL[31]_P_i_10_n_0 ;
  wire \DMA_ADDR_TAIL[31]_P_i_11_n_0 ;
  wire \DMA_ADDR_TAIL[31]_P_i_12_n_0 ;
  wire \DMA_ADDR_TAIL[31]_P_i_13_n_0 ;
  wire \DMA_ADDR_TAIL[31]_P_i_14_n_0 ;
  wire \DMA_ADDR_TAIL[31]_P_i_15_n_0 ;
  wire \DMA_ADDR_TAIL[31]_P_i_5_n_0 ;
  wire \DMA_ADDR_TAIL[31]_P_i_6_n_0 ;
  wire \DMA_ADDR_TAIL[31]_P_i_8_n_0 ;
  wire \DMA_ADDR_TAIL[31]_P_i_9_n_0 ;
  wire \DMA_ADDR_TAIL_reg[31]_P_i_3_n_3 ;
  wire \DMA_ADDR_TAIL_reg[31]_P_i_4_n_0 ;
  wire \DMA_ADDR_TAIL_reg[31]_P_i_4_n_1 ;
  wire \DMA_ADDR_TAIL_reg[31]_P_i_4_n_2 ;
  wire \DMA_ADDR_TAIL_reg[31]_P_i_4_n_3 ;
  wire \DMA_ADDR_TAIL_reg[31]_P_i_7_n_0 ;
  wire \DMA_ADDR_TAIL_reg[31]_P_i_7_n_1 ;
  wire \DMA_ADDR_TAIL_reg[31]_P_i_7_n_2 ;
  wire \DMA_ADDR_TAIL_reg[31]_P_i_7_n_3 ;
  wire [3:0]\DMA_BREM_reg[11] ;
  wire [3:0]\DMA_BREM_reg[15] ;
  wire [3:0]\DMA_BREM_reg[15]_0 ;
  wire [3:0]\DMA_BREM_reg[3] ;
  wire [3:0]\DMA_BREM_reg[7] ;
  wire [3:0]\DMA_BREM_reg[7]_0 ;
  wire [15:0]DMA_RX_BCHUNK;
  wire [15:0]DMA_TX_BCHUNK;
  wire IRQ;
  wire [0:0]\M_ARLEN_reg[0] ;
  wire \M_ARSIZE_reg[1] ;
  wire [0:0]\M_AWLEN_reg[0] ;
  wire [0:0]M_BREADY_reg;
  wire [3:0]\M_WID_reg[3] ;
  wire [2:0]O;
  wire [31:0]Q;
  wire [31:0]R_addr2;
  wire \R_addr[31]_i_12_n_0 ;
  wire \R_addr[31]_i_13_n_0 ;
  wire \R_addr[31]_i_14_n_0 ;
  wire \R_addr[31]_i_17_n_0 ;
  wire \R_addr[31]_i_18_n_0 ;
  wire \R_addr[31]_i_19_n_0 ;
  wire \R_addr[31]_i_20_n_0 ;
  wire \R_addr[31]_i_21_n_0 ;
  wire \R_addr[31]_i_22_n_0 ;
  wire \R_addr[31]_i_23_n_0 ;
  wire \R_addr[31]_i_24_n_0 ;
  wire \R_addr_reg[0] ;
  wire \R_addr_reg[10] ;
  wire \R_addr_reg[10]_0 ;
  wire \R_addr_reg[11] ;
  wire \R_addr_reg[11]_0 ;
  wire \R_addr_reg[12] ;
  wire \R_addr_reg[12]_0 ;
  wire \R_addr_reg[13] ;
  wire \R_addr_reg[13]_0 ;
  wire \R_addr_reg[14] ;
  wire \R_addr_reg[14]_0 ;
  wire \R_addr_reg[15] ;
  wire \R_addr_reg[15]_0 ;
  wire \R_addr_reg[16] ;
  wire \R_addr_reg[16]_0 ;
  wire \R_addr_reg[17] ;
  wire \R_addr_reg[17]_0 ;
  wire \R_addr_reg[18] ;
  wire \R_addr_reg[18]_0 ;
  wire \R_addr_reg[19] ;
  wire \R_addr_reg[19]_0 ;
  wire \R_addr_reg[1] ;
  wire \R_addr_reg[20] ;
  wire \R_addr_reg[20]_0 ;
  wire \R_addr_reg[21] ;
  wire \R_addr_reg[21]_0 ;
  wire \R_addr_reg[22] ;
  wire \R_addr_reg[22]_0 ;
  wire \R_addr_reg[23] ;
  wire \R_addr_reg[23]_0 ;
  wire \R_addr_reg[24] ;
  wire \R_addr_reg[24]_0 ;
  wire \R_addr_reg[25] ;
  wire \R_addr_reg[25]_0 ;
  wire \R_addr_reg[26] ;
  wire \R_addr_reg[26]_0 ;
  wire \R_addr_reg[27] ;
  wire \R_addr_reg[27]_0 ;
  wire \R_addr_reg[28] ;
  wire \R_addr_reg[28]_0 ;
  wire \R_addr_reg[29] ;
  wire \R_addr_reg[29]_0 ;
  wire \R_addr_reg[2] ;
  wire \R_addr_reg[2]_0 ;
  wire \R_addr_reg[30] ;
  wire \R_addr_reg[30]_0 ;
  wire \R_addr_reg[31] ;
  wire \R_addr_reg[31]_0 ;
  wire \R_addr_reg[31]_i_11_n_0 ;
  wire \R_addr_reg[31]_i_11_n_1 ;
  wire \R_addr_reg[31]_i_11_n_2 ;
  wire \R_addr_reg[31]_i_11_n_3 ;
  wire \R_addr_reg[31]_i_16_n_0 ;
  wire \R_addr_reg[31]_i_16_n_1 ;
  wire \R_addr_reg[31]_i_16_n_2 ;
  wire \R_addr_reg[31]_i_16_n_3 ;
  wire \R_addr_reg[31]_i_7_n_2 ;
  wire \R_addr_reg[31]_i_7_n_3 ;
  wire \R_addr_reg[3] ;
  wire \R_addr_reg[3]_0 ;
  wire \R_addr_reg[4] ;
  wire \R_addr_reg[4]_0 ;
  wire \R_addr_reg[5] ;
  wire \R_addr_reg[5]_0 ;
  wire \R_addr_reg[6] ;
  wire \R_addr_reg[6]_0 ;
  wire \R_addr_reg[7] ;
  wire \R_addr_reg[7]_0 ;
  wire \R_addr_reg[8] ;
  wire \R_addr_reg[8]_0 ;
  wire \R_addr_reg[9] ;
  wire \R_addr_reg[9]_0 ;
  wire [0:0]\R_bmove_reg[0] ;
  wire \R_brem[0]_i_2_n_0 ;
  wire \R_brem[10]_i_2_n_0 ;
  wire \R_brem[11]_i_2_n_0 ;
  wire \R_brem[12]_i_2_n_0 ;
  wire \R_brem[13]_i_2_n_0 ;
  wire \R_brem[14]_i_2_n_0 ;
  wire \R_brem[15]_i_10_n_0 ;
  wire \R_brem[15]_i_116_n_0 ;
  wire \R_brem[15]_i_117_n_0 ;
  wire \R_brem[15]_i_118_n_0 ;
  wire \R_brem[15]_i_119_n_0 ;
  wire \R_brem[15]_i_11_n_0 ;
  wire \R_brem[15]_i_120_n_0 ;
  wire [3:0]\R_brem[15]_i_121_0 ;
  wire [3:0]\R_brem[15]_i_121_1 ;
  wire \R_brem[15]_i_121_n_0 ;
  wire \R_brem[15]_i_122_n_0 ;
  wire [3:0]\R_brem[15]_i_123_0 ;
  wire [3:0]\R_brem[15]_i_123_1 ;
  wire \R_brem[15]_i_123_n_0 ;
  wire \R_brem[15]_i_12_n_0 ;
  wire \R_brem[15]_i_145_n_0 ;
  wire \R_brem[15]_i_146_n_0 ;
  wire \R_brem[15]_i_147_n_0 ;
  wire \R_brem[15]_i_148_n_0 ;
  wire \R_brem[15]_i_14_n_0 ;
  wire \R_brem[15]_i_151 ;
  wire \R_brem[15]_i_151_0 ;
  wire \R_brem[15]_i_15_n_0 ;
  wire \R_brem[15]_i_166_n_0 ;
  wire \R_brem[15]_i_167_n_0 ;
  wire \R_brem[15]_i_168_n_0 ;
  wire \R_brem[15]_i_169_n_0 ;
  wire \R_brem[15]_i_16_n_0 ;
  wire \R_brem[15]_i_170_n_0 ;
  wire [3:0]\R_brem[15]_i_171_0 ;
  wire [3:0]\R_brem[15]_i_171_1 ;
  wire \R_brem[15]_i_171_n_0 ;
  wire \R_brem[15]_i_172_n_0 ;
  wire [3:0]\R_brem[15]_i_173_0 ;
  wire [3:0]\R_brem[15]_i_173_1 ;
  wire \R_brem[15]_i_173_n_0 ;
  wire \R_brem[15]_i_174_n_0 ;
  wire \R_brem[15]_i_175_n_0 ;
  wire \R_brem[15]_i_176_n_0 ;
  wire \R_brem[15]_i_177_n_0 ;
  wire \R_brem[15]_i_17_n_0 ;
  wire \R_brem[15]_i_18_n_0 ;
  wire \R_brem[15]_i_19_n_0 ;
  wire \R_brem[15]_i_20_n_0 ;
  wire \R_brem[15]_i_211_n_0 ;
  wire \R_brem[15]_i_212_n_0 ;
  wire \R_brem[15]_i_213_n_0 ;
  wire \R_brem[15]_i_214_n_0 ;
  wire \R_brem[15]_i_27_n_0 ;
  wire \R_brem[15]_i_28_n_0 ;
  wire \R_brem[15]_i_29_n_0 ;
  wire \R_brem[15]_i_30_n_0 ;
  wire \R_brem[15]_i_31_n_0 ;
  wire [3:0]\R_brem[15]_i_32_0 ;
  wire [3:0]\R_brem[15]_i_32_1 ;
  wire \R_brem[15]_i_32_n_0 ;
  wire \R_brem[15]_i_33_n_0 ;
  wire [3:0]\R_brem[15]_i_34_0 ;
  wire [3:0]\R_brem[15]_i_34_1 ;
  wire \R_brem[15]_i_34_n_0 ;
  wire \R_brem[15]_i_37_n_0 ;
  wire \R_brem[15]_i_38_n_0 ;
  wire \R_brem[15]_i_42_n_0 ;
  wire \R_brem[15]_i_43_n_0 ;
  wire \R_brem[15]_i_44_n_0 ;
  wire \R_brem[15]_i_45_n_0 ;
  wire \R_brem[15]_i_46_n_0 ;
  wire \R_brem[15]_i_47_n_0 ;
  wire \R_brem[15]_i_67_n_0 ;
  wire \R_brem[15]_i_68_n_0 ;
  wire \R_brem[15]_i_69_n_0 ;
  wire \R_brem[15]_i_70_n_0 ;
  wire \R_brem[15]_i_71_n_0 ;
  wire [3:0]\R_brem[15]_i_72_0 ;
  wire [3:0]\R_brem[15]_i_72_1 ;
  wire \R_brem[15]_i_72_n_0 ;
  wire \R_brem[15]_i_73_n_0 ;
  wire [3:0]\R_brem[15]_i_74_0 ;
  wire [3:0]\R_brem[15]_i_74_1 ;
  wire \R_brem[15]_i_74_n_0 ;
  wire \R_brem[15]_i_77_n_0 ;
  wire \R_brem[15]_i_7_n_0 ;
  wire \R_brem[15]_i_81_n_0 ;
  wire [0:0]\R_brem[15]_i_82_0 ;
  wire [0:0]\R_brem[15]_i_82_1 ;
  wire \R_brem[15]_i_82_n_0 ;
  wire \R_brem[15]_i_83_n_0 ;
  wire \R_brem[15]_i_84_n_0 ;
  wire \R_brem[15]_i_90_n_0 ;
  wire \R_brem[15]_i_91_n_0 ;
  wire \R_brem[15]_i_92_n_0 ;
  wire \R_brem[15]_i_94_n_0 ;
  wire \R_brem[15]_i_95_n_0 ;
  wire \R_brem[15]_i_96_n_0 ;
  wire \R_brem[1]_i_2_n_0 ;
  wire \R_brem[2]_i_2_n_0 ;
  wire \R_brem[3]_i_2_n_0 ;
  wire \R_brem[4]_i_2_n_0 ;
  wire \R_brem[5]_i_2_n_0 ;
  wire \R_brem[6]_i_2_n_0 ;
  wire \R_brem[7]_i_22_n_0 ;
  wire \R_brem[7]_i_23_n_0 ;
  wire \R_brem[7]_i_24_n_0 ;
  wire \R_brem[7]_i_25_n_0 ;
  wire \R_brem[7]_i_26_n_0 ;
  wire \R_brem[7]_i_27_n_0 ;
  wire \R_brem[7]_i_28_n_0 ;
  wire \R_brem[7]_i_29_n_0 ;
  wire \R_brem[7]_i_2_n_0 ;
  wire \R_brem[8]_i_2_n_0 ;
  wire \R_brem[9]_i_2_n_0 ;
  wire \R_brem_reg[0] ;
  wire \R_brem_reg[10] ;
  wire \R_brem_reg[11] ;
  wire \R_brem_reg[11]_i_4_n_0 ;
  wire \R_brem_reg[11]_i_4_n_1 ;
  wire \R_brem_reg[11]_i_4_n_2 ;
  wire \R_brem_reg[11]_i_4_n_3 ;
  wire \R_brem_reg[11]_i_4_n_4 ;
  wire \R_brem_reg[11]_i_4_n_5 ;
  wire \R_brem_reg[11]_i_4_n_6 ;
  wire \R_brem_reg[11]_i_4_n_7 ;
  wire \R_brem_reg[11]_i_5_n_0 ;
  wire \R_brem_reg[11]_i_5_n_1 ;
  wire \R_brem_reg[11]_i_5_n_2 ;
  wire \R_brem_reg[11]_i_5_n_3 ;
  wire \R_brem_reg[11]_i_5_n_4 ;
  wire \R_brem_reg[11]_i_5_n_5 ;
  wire \R_brem_reg[11]_i_5_n_6 ;
  wire \R_brem_reg[11]_i_5_n_7 ;
  wire \R_brem_reg[12] ;
  wire \R_brem_reg[13] ;
  wire [0:0]\R_brem_reg[14] ;
  wire \R_brem_reg[14]_0 ;
  wire [3:0]\R_brem_reg[15] ;
  wire \R_brem_reg[15]_0 ;
  wire \R_brem_reg[15]_i_115_n_0 ;
  wire \R_brem_reg[15]_i_115_n_1 ;
  wire \R_brem_reg[15]_i_115_n_2 ;
  wire \R_brem_reg[15]_i_115_n_3 ;
  wire \R_brem_reg[15]_i_124_n_0 ;
  wire \R_brem_reg[15]_i_124_n_1 ;
  wire \R_brem_reg[15]_i_124_n_2 ;
  wire \R_brem_reg[15]_i_124_n_3 ;
  wire \R_brem_reg[15]_i_124_n_4 ;
  wire \R_brem_reg[15]_i_124_n_5 ;
  wire \R_brem_reg[15]_i_124_n_6 ;
  wire \R_brem_reg[15]_i_124_n_7 ;
  wire \R_brem_reg[15]_i_125_n_0 ;
  wire \R_brem_reg[15]_i_125_n_1 ;
  wire \R_brem_reg[15]_i_125_n_2 ;
  wire \R_brem_reg[15]_i_125_n_3 ;
  wire \R_brem_reg[15]_i_125_n_4 ;
  wire \R_brem_reg[15]_i_125_n_5 ;
  wire \R_brem_reg[15]_i_125_n_6 ;
  wire \R_brem_reg[15]_i_125_n_7 ;
  wire \R_brem_reg[15]_i_126_n_0 ;
  wire \R_brem_reg[15]_i_126_n_1 ;
  wire \R_brem_reg[15]_i_126_n_2 ;
  wire \R_brem_reg[15]_i_126_n_3 ;
  wire \R_brem_reg[15]_i_126_n_4 ;
  wire \R_brem_reg[15]_i_126_n_5 ;
  wire \R_brem_reg[15]_i_126_n_6 ;
  wire \R_brem_reg[15]_i_126_n_7 ;
  wire \R_brem_reg[15]_i_127_n_0 ;
  wire \R_brem_reg[15]_i_127_n_1 ;
  wire \R_brem_reg[15]_i_127_n_2 ;
  wire \R_brem_reg[15]_i_127_n_3 ;
  wire \R_brem_reg[15]_i_127_n_4 ;
  wire \R_brem_reg[15]_i_127_n_5 ;
  wire \R_brem_reg[15]_i_127_n_6 ;
  wire \R_brem_reg[15]_i_127_n_7 ;
  wire \R_brem_reg[15]_i_13_n_0 ;
  wire \R_brem_reg[15]_i_13_n_1 ;
  wire \R_brem_reg[15]_i_13_n_2 ;
  wire \R_brem_reg[15]_i_13_n_3 ;
  wire [15:0]\R_brem_reg[15]_i_144 ;
  wire \R_brem_reg[15]_i_23_n_0 ;
  wire \R_brem_reg[15]_i_23_n_1 ;
  wire \R_brem_reg[15]_i_23_n_2 ;
  wire \R_brem_reg[15]_i_23_n_3 ;
  wire \R_brem_reg[15]_i_23_n_4 ;
  wire \R_brem_reg[15]_i_23_n_5 ;
  wire \R_brem_reg[15]_i_23_n_6 ;
  wire \R_brem_reg[15]_i_23_n_7 ;
  wire \R_brem_reg[15]_i_25_n_0 ;
  wire \R_brem_reg[15]_i_25_n_1 ;
  wire \R_brem_reg[15]_i_25_n_2 ;
  wire \R_brem_reg[15]_i_25_n_3 ;
  wire \R_brem_reg[15]_i_25_n_4 ;
  wire \R_brem_reg[15]_i_25_n_5 ;
  wire \R_brem_reg[15]_i_25_n_6 ;
  wire \R_brem_reg[15]_i_25_n_7 ;
  wire \R_brem_reg[15]_i_26_n_0 ;
  wire \R_brem_reg[15]_i_26_n_1 ;
  wire \R_brem_reg[15]_i_26_n_2 ;
  wire \R_brem_reg[15]_i_26_n_3 ;
  wire [0:0]\R_brem_reg[15]_i_35_0 ;
  wire \R_brem_reg[15]_i_35_n_1 ;
  wire \R_brem_reg[15]_i_35_n_2 ;
  wire \R_brem_reg[15]_i_35_n_3 ;
  wire \R_brem_reg[15]_i_39_n_1 ;
  wire \R_brem_reg[15]_i_39_n_2 ;
  wire \R_brem_reg[15]_i_39_n_3 ;
  wire \R_brem_reg[15]_i_39_n_4 ;
  wire \R_brem_reg[15]_i_39_n_5 ;
  wire \R_brem_reg[15]_i_39_n_6 ;
  wire \R_brem_reg[15]_i_39_n_7 ;
  wire \R_brem_reg[15]_i_40_n_1 ;
  wire \R_brem_reg[15]_i_40_n_2 ;
  wire \R_brem_reg[15]_i_40_n_3 ;
  wire \R_brem_reg[15]_i_40_n_4 ;
  wire \R_brem_reg[15]_i_40_n_5 ;
  wire \R_brem_reg[15]_i_40_n_6 ;
  wire \R_brem_reg[15]_i_40_n_7 ;
  wire [15:0]\R_brem_reg[15]_i_41 ;
  wire \R_brem_reg[15]_i_4_0 ;
  wire [0:0]\R_brem_reg[15]_i_4_1 ;
  wire \R_brem_reg[15]_i_4_n_1 ;
  wire \R_brem_reg[15]_i_4_n_2 ;
  wire \R_brem_reg[15]_i_4_n_3 ;
  wire \R_brem_reg[15]_i_66_n_0 ;
  wire \R_brem_reg[15]_i_66_n_1 ;
  wire \R_brem_reg[15]_i_66_n_2 ;
  wire \R_brem_reg[15]_i_66_n_3 ;
  wire \R_brem_reg[15]_i_75_n_1 ;
  wire \R_brem_reg[15]_i_75_n_2 ;
  wire \R_brem_reg[15]_i_75_n_3 ;
  wire \R_brem_reg[15]_i_75_n_4 ;
  wire \R_brem_reg[15]_i_75_n_5 ;
  wire \R_brem_reg[15]_i_75_n_6 ;
  wire \R_brem_reg[15]_i_75_n_7 ;
  wire \R_brem_reg[15]_i_76_n_1 ;
  wire \R_brem_reg[15]_i_76_n_2 ;
  wire \R_brem_reg[15]_i_76_n_3 ;
  wire \R_brem_reg[15]_i_76_n_4 ;
  wire \R_brem_reg[15]_i_76_n_5 ;
  wire \R_brem_reg[15]_i_76_n_6 ;
  wire \R_brem_reg[15]_i_76_n_7 ;
  wire \R_brem_reg[15]_i_78_n_0 ;
  wire \R_brem_reg[15]_i_78_n_1 ;
  wire \R_brem_reg[15]_i_78_n_2 ;
  wire \R_brem_reg[15]_i_78_n_3 ;
  wire \R_brem_reg[15]_i_78_n_4 ;
  wire \R_brem_reg[15]_i_78_n_5 ;
  wire \R_brem_reg[15]_i_78_n_6 ;
  wire \R_brem_reg[15]_i_78_n_7 ;
  wire \R_brem_reg[15]_i_79_n_0 ;
  wire \R_brem_reg[15]_i_79_n_1 ;
  wire \R_brem_reg[15]_i_79_n_2 ;
  wire \R_brem_reg[15]_i_79_n_3 ;
  wire \R_brem_reg[15]_i_79_n_4 ;
  wire \R_brem_reg[15]_i_79_n_5 ;
  wire \R_brem_reg[15]_i_79_n_6 ;
  wire \R_brem_reg[15]_i_79_n_7 ;
  wire \R_brem_reg[15]_i_80_n_0 ;
  wire \R_brem_reg[15]_i_80_n_1 ;
  wire \R_brem_reg[15]_i_80_n_2 ;
  wire \R_brem_reg[15]_i_80_n_3 ;
  wire \R_brem_reg[15]_i_8_n_0 ;
  wire \R_brem_reg[15]_i_8_n_1 ;
  wire \R_brem_reg[15]_i_8_n_2 ;
  wire \R_brem_reg[15]_i_8_n_3 ;
  wire \R_brem_reg[1] ;
  wire \R_brem_reg[2] ;
  wire \R_brem_reg[3] ;
  wire \R_brem_reg[3]_i_4_n_0 ;
  wire \R_brem_reg[3]_i_4_n_1 ;
  wire \R_brem_reg[3]_i_4_n_2 ;
  wire \R_brem_reg[3]_i_4_n_3 ;
  wire \R_brem_reg[3]_i_4_n_4 ;
  wire \R_brem_reg[3]_i_4_n_5 ;
  wire \R_brem_reg[3]_i_4_n_6 ;
  wire \R_brem_reg[3]_i_4_n_7 ;
  wire \R_brem_reg[3]_i_5_n_0 ;
  wire \R_brem_reg[3]_i_5_n_1 ;
  wire \R_brem_reg[3]_i_5_n_2 ;
  wire \R_brem_reg[3]_i_5_n_3 ;
  wire \R_brem_reg[3]_i_5_n_4 ;
  wire \R_brem_reg[3]_i_5_n_5 ;
  wire \R_brem_reg[3]_i_5_n_6 ;
  wire \R_brem_reg[3]_i_5_n_7 ;
  wire \R_brem_reg[4] ;
  wire \R_brem_reg[5] ;
  wire \R_brem_reg[6] ;
  wire [3:0]\R_brem_reg[7] ;
  wire \R_brem_reg[7]_0 ;
  wire \R_brem_reg[7]_i_16_n_0 ;
  wire \R_brem_reg[7]_i_16_n_1 ;
  wire \R_brem_reg[7]_i_16_n_2 ;
  wire \R_brem_reg[7]_i_16_n_3 ;
  wire \R_brem_reg[7]_i_16_n_4 ;
  wire \R_brem_reg[7]_i_16_n_5 ;
  wire \R_brem_reg[7]_i_16_n_6 ;
  wire \R_brem_reg[7]_i_16_n_7 ;
  wire \R_brem_reg[7]_i_17_n_0 ;
  wire \R_brem_reg[7]_i_17_n_1 ;
  wire \R_brem_reg[7]_i_17_n_2 ;
  wire \R_brem_reg[7]_i_17_n_3 ;
  wire \R_brem_reg[7]_i_17_n_4 ;
  wire \R_brem_reg[7]_i_17_n_5 ;
  wire \R_brem_reg[7]_i_17_n_6 ;
  wire \R_brem_reg[7]_i_17_n_7 ;
  wire \R_brem_reg[7]_i_4_n_0 ;
  wire \R_brem_reg[7]_i_4_n_1 ;
  wire \R_brem_reg[7]_i_4_n_2 ;
  wire \R_brem_reg[7]_i_4_n_3 ;
  wire \R_brem_reg[7]_i_4_n_4 ;
  wire \R_brem_reg[7]_i_4_n_5 ;
  wire \R_brem_reg[7]_i_4_n_6 ;
  wire \R_brem_reg[7]_i_4_n_7 ;
  wire \R_brem_reg[7]_i_5_n_0 ;
  wire \R_brem_reg[7]_i_5_n_1 ;
  wire \R_brem_reg[7]_i_5_n_2 ;
  wire \R_brem_reg[7]_i_5_n_3 ;
  wire \R_brem_reg[7]_i_5_n_4 ;
  wire \R_brem_reg[7]_i_5_n_5 ;
  wire \R_brem_reg[7]_i_5_n_6 ;
  wire \R_brem_reg[7]_i_5_n_7 ;
  wire \R_brem_reg[8] ;
  wire \R_brem_reg[9] ;
  wire R_empty_i_104_n_0;
  wire R_empty_i_105_n_0;
  wire R_empty_i_106_n_0;
  wire R_empty_i_107_n_0;
  wire R_empty_i_108_n_0;
  wire R_empty_i_109_n_0;
  wire R_empty_i_10_n_0;
  wire R_empty_i_110_n_0;
  wire R_empty_i_111_n_0;
  wire R_empty_i_112_n_0;
  wire R_empty_i_113_n_0;
  wire R_empty_i_114_n_0;
  wire R_empty_i_115_n_0;
  wire R_empty_i_116_n_0;
  wire R_empty_i_117_n_0;
  wire R_empty_i_118_n_0;
  wire R_empty_i_119_n_0;
  wire R_empty_i_11_n_0;
  wire R_empty_i_120_n_0;
  wire R_empty_i_121_n_0;
  wire R_empty_i_122_n_0;
  wire R_empty_i_123_n_0;
  wire R_empty_i_124_n_0;
  wire R_empty_i_125_n_0;
  wire R_empty_i_126_n_0;
  wire R_empty_i_127_n_0;
  wire R_empty_i_12_n_0;
  wire R_empty_i_13_n_0;
  wire R_empty_i_14_n_0;
  wire R_empty_i_15_n_0;
  wire R_empty_i_18_n_0;
  wire R_empty_i_20_n_0;
  wire R_empty_i_21_n_0;
  wire R_empty_i_22_n_0;
  wire R_empty_i_24_n_0;
  wire R_empty_i_25_n_0;
  wire R_empty_i_26_n_0;
  wire R_empty_i_27_n_0;
  wire R_empty_i_28_n_0;
  wire R_empty_i_29_n_0;
  wire R_empty_i_30_n_0;
  wire [0:0]R_empty_i_38;
  wire R_empty_i_39_n_0;
  wire R_empty_i_40_n_0;
  wire R_empty_i_41_n_0;
  wire R_empty_i_48_n_0;
  wire R_empty_i_49_n_0;
  wire R_empty_i_50_n_0;
  wire R_empty_i_51_n_0;
  wire R_empty_i_53_n_0;
  wire R_empty_i_54_n_0;
  wire R_empty_i_55_n_0;
  wire R_empty_i_56_n_0;
  wire R_empty_i_59_n_0;
  wire R_empty_i_60_n_0;
  wire R_empty_i_61_n_0;
  wire R_empty_i_62_n_0;
  wire R_empty_i_64_n_0;
  wire R_empty_i_68_n_0;
  wire R_empty_i_69_n_0;
  wire R_empty_i_70_n_0;
  wire R_empty_i_71_n_0;
  wire R_empty_i_72_n_0;
  wire R_empty_i_73_n_0;
  wire R_empty_i_74_n_0;
  wire R_empty_i_75_n_0;
  wire R_empty_i_76_n_0;
  wire R_empty_i_77_n_0;
  wire R_empty_i_78_n_0;
  wire R_empty_i_79_n_0;
  wire R_empty_i_7_n_0;
  wire R_empty_i_80_n_0;
  wire R_empty_i_81_n_0;
  wire R_empty_i_82_n_0;
  wire R_empty_i_83_n_0;
  wire R_empty_i_84_n_0;
  wire R_empty_i_85_n_0;
  wire R_empty_i_86_n_0;
  wire R_empty_i_87_n_0;
  wire R_empty_i_88_n_0;
  wire R_empty_i_89_n_0;
  wire R_empty_i_90_n_0;
  wire R_empty_i_91_n_0;
  wire R_empty_i_92_n_0;
  wire R_empty_i_93_n_0;
  wire R_empty_i_94_n_0;
  wire R_empty_i_95_n_0;
  wire R_empty_i_96_n_0;
  wire R_empty_i_97_n_0;
  wire R_empty_i_98_n_0;
  wire R_empty_i_99_n_0;
  wire R_empty_reg;
  wire R_empty_reg_0;
  wire [0:0]R_empty_reg_1;
  wire [0:0]R_empty_reg_2;
  wire R_empty_reg_3;
  wire R_empty_reg_i_19_n_0;
  wire R_empty_reg_i_19_n_1;
  wire R_empty_reg_i_19_n_2;
  wire R_empty_reg_i_19_n_3;
  wire R_empty_reg_i_23_n_0;
  wire R_empty_reg_i_23_n_1;
  wire R_empty_reg_i_23_n_2;
  wire R_empty_reg_i_23_n_3;
  wire R_empty_reg_i_31_n_0;
  wire R_empty_reg_i_31_n_1;
  wire R_empty_reg_i_31_n_2;
  wire R_empty_reg_i_31_n_3;
  wire R_empty_reg_i_31_n_4;
  wire R_empty_reg_i_31_n_5;
  wire R_empty_reg_i_31_n_6;
  wire R_empty_reg_i_31_n_7;
  wire R_empty_reg_i_32_n_1;
  wire R_empty_reg_i_32_n_2;
  wire R_empty_reg_i_32_n_3;
  wire R_empty_reg_i_33_n_0;
  wire R_empty_reg_i_33_n_1;
  wire R_empty_reg_i_33_n_2;
  wire R_empty_reg_i_33_n_3;
  wire R_empty_reg_i_33_n_4;
  wire R_empty_reg_i_33_n_5;
  wire R_empty_reg_i_33_n_6;
  wire R_empty_reg_i_33_n_7;
  wire R_empty_reg_i_34_n_0;
  wire R_empty_reg_i_34_n_1;
  wire R_empty_reg_i_34_n_2;
  wire R_empty_reg_i_34_n_3;
  wire R_empty_reg_i_34_n_4;
  wire R_empty_reg_i_34_n_5;
  wire R_empty_reg_i_34_n_6;
  wire R_empty_reg_i_34_n_7;
  wire R_empty_reg_i_35_n_0;
  wire R_empty_reg_i_35_n_1;
  wire R_empty_reg_i_35_n_2;
  wire R_empty_reg_i_35_n_3;
  wire R_empty_reg_i_35_n_4;
  wire R_empty_reg_i_35_n_5;
  wire R_empty_reg_i_35_n_6;
  wire R_empty_reg_i_35_n_7;
  wire R_empty_reg_i_36_n_0;
  wire R_empty_reg_i_36_n_1;
  wire R_empty_reg_i_36_n_2;
  wire R_empty_reg_i_36_n_3;
  wire R_empty_reg_i_36_n_4;
  wire R_empty_reg_i_36_n_5;
  wire R_empty_reg_i_36_n_6;
  wire R_empty_reg_i_36_n_7;
  wire R_empty_reg_i_37_n_0;
  wire R_empty_reg_i_37_n_1;
  wire R_empty_reg_i_37_n_2;
  wire R_empty_reg_i_37_n_3;
  wire R_empty_reg_i_37_n_4;
  wire R_empty_reg_i_37_n_5;
  wire R_empty_reg_i_37_n_6;
  wire R_empty_reg_i_37_n_7;
  wire R_empty_reg_i_42_n_0;
  wire R_empty_reg_i_42_n_1;
  wire R_empty_reg_i_42_n_2;
  wire R_empty_reg_i_42_n_3;
  wire R_empty_reg_i_42_n_4;
  wire R_empty_reg_i_42_n_5;
  wire R_empty_reg_i_42_n_6;
  wire R_empty_reg_i_42_n_7;
  wire R_empty_reg_i_43_n_0;
  wire R_empty_reg_i_43_n_1;
  wire R_empty_reg_i_43_n_2;
  wire R_empty_reg_i_43_n_3;
  wire R_empty_reg_i_43_n_4;
  wire R_empty_reg_i_43_n_5;
  wire R_empty_reg_i_43_n_6;
  wire R_empty_reg_i_43_n_7;
  wire R_empty_reg_i_45_n_0;
  wire R_empty_reg_i_45_n_1;
  wire R_empty_reg_i_45_n_2;
  wire R_empty_reg_i_45_n_3;
  wire R_empty_reg_i_45_n_4;
  wire R_empty_reg_i_45_n_5;
  wire R_empty_reg_i_45_n_6;
  wire R_empty_reg_i_45_n_7;
  wire R_empty_reg_i_46_n_0;
  wire R_empty_reg_i_46_n_1;
  wire R_empty_reg_i_46_n_2;
  wire R_empty_reg_i_46_n_3;
  wire R_empty_reg_i_46_n_4;
  wire R_empty_reg_i_46_n_5;
  wire R_empty_reg_i_46_n_6;
  wire R_empty_reg_i_46_n_7;
  wire R_empty_reg_i_47_n_0;
  wire R_empty_reg_i_47_n_1;
  wire R_empty_reg_i_47_n_2;
  wire R_empty_reg_i_47_n_3;
  wire R_empty_reg_i_52_n_0;
  wire R_empty_reg_i_52_n_1;
  wire R_empty_reg_i_52_n_2;
  wire R_empty_reg_i_52_n_3;
  wire R_empty_reg_i_57_n_0;
  wire R_empty_reg_i_57_n_1;
  wire R_empty_reg_i_57_n_2;
  wire R_empty_reg_i_57_n_3;
  wire R_empty_reg_i_57_n_4;
  wire R_empty_reg_i_57_n_5;
  wire R_empty_reg_i_57_n_6;
  wire R_empty_reg_i_57_n_7;
  wire R_empty_reg_i_58_n_0;
  wire R_empty_reg_i_58_n_1;
  wire R_empty_reg_i_58_n_2;
  wire R_empty_reg_i_58_n_3;
  wire R_empty_reg_i_58_n_4;
  wire R_empty_reg_i_58_n_5;
  wire R_empty_reg_i_58_n_6;
  wire R_empty_reg_i_58_n_7;
  wire R_empty_reg_i_5_n_2;
  wire R_empty_reg_i_5_n_3;
  wire R_empty_reg_i_6_n_2;
  wire R_empty_reg_i_6_n_3;
  wire R_first_i_5_n_0;
  wire R_first_i_6_n_0;
  wire R_first_i_7_n_0;
  wire R_full14_out;
  wire R_full_reg;
  wire R_full_reg_0;
  wire R_full_reg_1;
  wire R_full_reg_10;
  wire R_full_reg_11;
  wire R_full_reg_12;
  wire R_full_reg_13;
  wire R_full_reg_14;
  wire R_full_reg_15;
  wire R_full_reg_2;
  wire R_full_reg_3;
  wire R_full_reg_4;
  wire R_full_reg_5;
  wire R_full_reg_6;
  wire R_full_reg_7;
  wire R_full_reg_8;
  wire R_full_reg_9;
  wire [1:0]S;
  wire [7:0]S_ARADDR;
  wire [1:0]S_ARBURST;
  wire [7:0]S_ARID;
  wire [7:0]S_ARLEN;
  wire S_ARREADY_i_1_n_0;
  wire S_ARREADY_i_2_n_0;
  wire S_ARREADY_i_3_n_0;
  wire S_ARREADY_reg_0;
  wire [2:0]S_ARSIZE;
  wire S_ARVALID;
  wire [7:0]S_AWADDR;
  wire [1:0]S_AWBURST;
  wire [7:0]S_AWID;
  wire [7:0]S_AWLEN;
  wire S_AWREADY_i_1_n_0;
  wire S_AWREADY_i_2_n_0;
  wire S_AWREADY_reg_0;
  wire [2:0]S_AWSIZE;
  wire S_AWVALID;
  wire [7:0]S_BID;
  wire \S_BID[7]_i_1_n_0 ;
  wire \S_BID[7]_i_2_n_0 ;
  wire S_BREADY;
  wire [0:0]S_BRESP;
  wire \S_BRESP[1]_i_1_n_0 ;
  wire \S_BRESP[1]_i_2_n_0 ;
  wire \S_BRESP[1]_i_3_n_0 ;
  wire \S_BRESP[1]_i_4_n_0 ;
  wire \S_BRESP[1]_i_5_n_0 ;
  wire S_BVALID;
  wire S_BVALID_i_1_n_0;
  wire [31:0]S_RDATA;
  wire \S_RDATA[0]_i_1_n_0 ;
  wire \S_RDATA[10]_i_1_n_0 ;
  wire \S_RDATA[11]_i_1_n_0 ;
  wire \S_RDATA[12]_i_1_n_0 ;
  wire \S_RDATA[13]_i_1_n_0 ;
  wire \S_RDATA[14]_i_1_n_0 ;
  wire \S_RDATA[15]_i_1_n_0 ;
  wire \S_RDATA[16]_i_1_n_0 ;
  wire \S_RDATA[17]_i_1_n_0 ;
  wire \S_RDATA[18]_i_1_n_0 ;
  wire \S_RDATA[19]_i_1_n_0 ;
  wire \S_RDATA[1]_i_1_n_0 ;
  wire \S_RDATA[20]_i_1_n_0 ;
  wire \S_RDATA[21]_i_1_n_0 ;
  wire \S_RDATA[22]_i_1_n_0 ;
  wire \S_RDATA[23]_i_1_n_0 ;
  wire \S_RDATA[24]_i_1_n_0 ;
  wire \S_RDATA[25]_i_1_n_0 ;
  wire \S_RDATA[26]_i_1_n_0 ;
  wire \S_RDATA[27]_i_1_n_0 ;
  wire \S_RDATA[28]_i_1_n_0 ;
  wire \S_RDATA[29]_i_1_n_0 ;
  wire \S_RDATA[2]_i_1_n_0 ;
  wire \S_RDATA[30]_i_1_n_0 ;
  wire \S_RDATA[31]_i_1_n_0 ;
  wire \S_RDATA[31]_i_2_n_0 ;
  wire \S_RDATA[3]_i_1_n_0 ;
  wire \S_RDATA[4]_i_1_n_0 ;
  wire \S_RDATA[5]_i_1_n_0 ;
  wire \S_RDATA[6]_i_1_n_0 ;
  wire \S_RDATA[7]_i_1_n_0 ;
  wire \S_RDATA[8]_i_1_n_0 ;
  wire \S_RDATA[9]_i_1_n_0 ;
  wire [7:0]S_RID;
  wire \S_RID[7]_i_1_n_0 ;
  wire S_RLAST;
  wire S_RLAST_i_1_n_0;
  wire S_RREADY;
  wire [0:0]S_RRESP;
  wire \S_RRESP[1]_i_1_n_0 ;
  wire S_RVALID;
  wire S_RVALID_i_1_n_0;
  wire [31:0]S_WDATA;
  wire [7:0]S_WID;
  wire S_WLAST;
  wire S_WREADY;
  wire S_WREADY0;
  wire S_WREADY0_carry_i_1_n_0;
  wire S_WREADY0_carry_i_2_n_0;
  wire S_WREADY0_carry_i_3_n_0;
  wire S_WREADY0_carry_i_4_n_0;
  wire S_WREADY0_carry_i_5_n_0;
  wire S_WREADY0_carry_i_6_n_0;
  wire S_WREADY0_carry_i_7_n_0;
  wire S_WREADY0_carry_i_8_n_0;
  wire S_WREADY0_carry_n_1;
  wire S_WREADY0_carry_n_2;
  wire S_WREADY0_carry_n_3;
  wire S_WREADY_i_1_n_0;
  wire [3:0]S_WSTRB;
  wire S_WVALID;
  wire [15:0]\T_RDATA[14]_i_2 ;
  wire [31:0]\T_RDATA[2]_i_8 ;
  wire \Traddr[0]_i_1_n_0 ;
  wire \Traddr[1]_i_1_n_0 ;
  wire \Traddr[2]_i_1_n_0 ;
  wire \Traddr[3]_i_1_n_0 ;
  wire \Traddr[4]_i_1_n_0 ;
  wire \Traddr[5]_i_1_n_0 ;
  wire \Traddr[6]_i_1_n_0 ;
  wire \Traddr[7]_i_1_n_0 ;
  wire \Traddr[7]_i_2_n_0 ;
  wire \Traddr[7]_i_3_n_0 ;
  wire \Traddr[7]_i_4_n_0 ;
  wire Traddr__2;
  wire \Traddr_reg_n_0_[0] ;
  wire \Traddr_reg_n_0_[1] ;
  wire \Traddr_reg_n_0_[2] ;
  wire \Traddr_reg_n_0_[3] ;
  wire \Traddr_reg_n_0_[4] ;
  wire \Traddr_reg_n_0_[5] ;
  wire \Traddr_reg_n_0_[6] ;
  wire \Traddr_reg_n_0_[7] ;
  wire [31:0]Trdata;
  wire Tren_i_1_n_0;
  wire Tren_i_2_n_0;
  wire Tren_i_3_n_0;
  wire Tren_reg_n_0;
  wire [7:0]Twaddr;
  wire [31:0]Twdata;
  wire Twen;
  wire Twen_i_1_n_0;
  wire Twstrb;
  wire \Twstrb_reg_n_0_[0] ;
  wire \Twstrb_reg_n_0_[1] ;
  wire \Twstrb_reg_n_0_[2] ;
  wire \Twstrb_reg_n_0_[3] ;
  wire [31:0]W_addr2;
  wire \W_addr[31]_i_12_n_0 ;
  wire \W_addr[31]_i_13_n_0 ;
  wire \W_addr[31]_i_14_n_0 ;
  wire \W_addr[31]_i_16_n_0 ;
  wire \W_addr[31]_i_17_n_0 ;
  wire \W_addr[31]_i_18_n_0 ;
  wire \W_addr[31]_i_19_n_0 ;
  wire \W_addr[31]_i_20_n_0 ;
  wire \W_addr[31]_i_21_n_0 ;
  wire \W_addr[31]_i_22_n_0 ;
  wire \W_addr[31]_i_23_n_0 ;
  wire \W_addr_reg[31]_i_11_n_0 ;
  wire \W_addr_reg[31]_i_11_n_1 ;
  wire \W_addr_reg[31]_i_11_n_2 ;
  wire \W_addr_reg[31]_i_11_n_3 ;
  wire \W_addr_reg[31]_i_15_n_0 ;
  wire \W_addr_reg[31]_i_15_n_1 ;
  wire \W_addr_reg[31]_i_15_n_2 ;
  wire \W_addr_reg[31]_i_15_n_3 ;
  wire \W_addr_reg[31]_i_8_n_2 ;
  wire \W_addr_reg[31]_i_8_n_3 ;
  wire \W_bmove[11]_i_10_n_0 ;
  wire \W_bmove[11]_i_11_n_0 ;
  wire \W_bmove[11]_i_12_n_0 ;
  wire \W_bmove[11]_i_13_n_0 ;
  wire \W_bmove[11]_i_6_n_0 ;
  wire \W_bmove[11]_i_7_n_0 ;
  wire \W_bmove[11]_i_8_n_0 ;
  wire \W_bmove[11]_i_9_n_0 ;
  wire \W_bmove[15]_i_100_n_0 ;
  wire \W_bmove[15]_i_101_n_0 ;
  wire \W_bmove[15]_i_102_n_0 ;
  wire \W_bmove[15]_i_103_n_0 ;
  wire \W_bmove[15]_i_104_n_0 ;
  wire \W_bmove[15]_i_105_n_0 ;
  wire \W_bmove[15]_i_106_n_0 ;
  wire \W_bmove[15]_i_107_n_0 ;
  wire \W_bmove[15]_i_108_n_0 ;
  wire \W_bmove[15]_i_109_n_0 ;
  wire \W_bmove[15]_i_111_n_0 ;
  wire \W_bmove[15]_i_112_n_0 ;
  wire \W_bmove[15]_i_113_n_0 ;
  wire \W_bmove[15]_i_114_n_0 ;
  wire \W_bmove[15]_i_115_n_0 ;
  wire \W_bmove[15]_i_116_n_0 ;
  wire \W_bmove[15]_i_117_n_0 ;
  wire \W_bmove[15]_i_118_n_0 ;
  wire \W_bmove[15]_i_119_n_0 ;
  wire \W_bmove[15]_i_120_n_0 ;
  wire \W_bmove[15]_i_121_n_0 ;
  wire \W_bmove[15]_i_123_n_0 ;
  wire \W_bmove[15]_i_124_n_0 ;
  wire \W_bmove[15]_i_125_n_0 ;
  wire \W_bmove[15]_i_126_n_0 ;
  wire \W_bmove[15]_i_12_n_0 ;
  wire \W_bmove[15]_i_13_n_0 ;
  wire \W_bmove[15]_i_14_n_0 ;
  wire \W_bmove[15]_i_15_n_0 ;
  wire \W_bmove[15]_i_16_n_0 ;
  wire \W_bmove[15]_i_17_n_0 ;
  wire \W_bmove[15]_i_19_n_0 ;
  wire \W_bmove[15]_i_23_n_0 ;
  wire [3:0]\W_bmove[15]_i_25 ;
  wire \W_bmove[15]_i_32_n_0 ;
  wire \W_bmove[15]_i_33_n_0 ;
  wire \W_bmove[15]_i_34_n_0 ;
  wire \W_bmove[15]_i_35_n_0 ;
  wire \W_bmove[15]_i_36_n_0 ;
  wire \W_bmove[15]_i_37_n_0 ;
  wire \W_bmove[15]_i_48_n_0 ;
  wire \W_bmove[15]_i_49_n_0 ;
  wire \W_bmove[15]_i_50_n_0 ;
  wire [0:0]\W_bmove[15]_i_51_0 ;
  wire \W_bmove[15]_i_51_n_0 ;
  wire \W_bmove[15]_i_54_n_0 ;
  wire \W_bmove[15]_i_55_n_0 ;
  wire \W_bmove[15]_i_56_n_0 ;
  wire \W_bmove[15]_i_57_n_0 ;
  wire \W_bmove[15]_i_58_n_0 ;
  wire \W_bmove[15]_i_59_n_0 ;
  wire \W_bmove[15]_i_60_n_0 ;
  wire \W_bmove[15]_i_61_n_0 ;
  wire \W_bmove[15]_i_63_n_0 ;
  wire \W_bmove[15]_i_64_n_0 ;
  wire \W_bmove[15]_i_65_n_0 ;
  wire \W_bmove[15]_i_66_n_0 ;
  wire \W_bmove[15]_i_67_n_0 ;
  wire \W_bmove[15]_i_68_n_0 ;
  wire \W_bmove[15]_i_69_n_0 ;
  wire \W_bmove[15]_i_6_0 ;
  wire \W_bmove[15]_i_71_n_0 ;
  wire \W_bmove[15]_i_72_n_0 ;
  wire \W_bmove[15]_i_73_n_0 ;
  wire \W_bmove[15]_i_74_n_0 ;
  wire \W_bmove[15]_i_76_n_0 ;
  wire \W_bmove[15]_i_77_n_0 ;
  wire \W_bmove[15]_i_78_n_0 ;
  wire \W_bmove[15]_i_79_n_0 ;
  wire \W_bmove[15]_i_90_n_0 ;
  wire \W_bmove[15]_i_91_n_0 ;
  wire \W_bmove[15]_i_92_n_0 ;
  wire \W_bmove[15]_i_93_n_0 ;
  wire \W_bmove[15]_i_94_n_0 ;
  wire \W_bmove[15]_i_95_n_0 ;
  wire \W_bmove[15]_i_96_n_0 ;
  wire \W_bmove[15]_i_97_n_0 ;
  wire \W_bmove[15]_i_98_n_0 ;
  wire \W_bmove[15]_i_99_n_0 ;
  wire \W_bmove[1]_i_105_n_0 ;
  wire \W_bmove[1]_i_106_n_0 ;
  wire \W_bmove[1]_i_107_n_0 ;
  wire \W_bmove[1]_i_108_n_0 ;
  wire \W_bmove[1]_i_110_n_0 ;
  wire \W_bmove[1]_i_111_n_0 ;
  wire \W_bmove[1]_i_112_n_0 ;
  wire \W_bmove[1]_i_113_n_0 ;
  wire \W_bmove[1]_i_119_n_0 ;
  wire \W_bmove[1]_i_120_n_0 ;
  wire \W_bmove[1]_i_121_n_0 ;
  wire \W_bmove[1]_i_122_n_0 ;
  wire \W_bmove[1]_i_130_n_0 ;
  wire \W_bmove[1]_i_131_n_0 ;
  wire \W_bmove[1]_i_132_n_0 ;
  wire \W_bmove[1]_i_133_n_0 ;
  wire \W_bmove[1]_i_137_n_0 ;
  wire \W_bmove[1]_i_138_n_0 ;
  wire \W_bmove[1]_i_139_n_0 ;
  wire \W_bmove[1]_i_140_n_0 ;
  wire \W_bmove[1]_i_141_n_0 ;
  wire \W_bmove[1]_i_142_n_0 ;
  wire \W_bmove[1]_i_143_n_0 ;
  wire \W_bmove[1]_i_144_n_0 ;
  wire \W_bmove[1]_i_149_n_0 ;
  wire \W_bmove[1]_i_150_n_0 ;
  wire \W_bmove[1]_i_151_n_0 ;
  wire \W_bmove[1]_i_152_n_0 ;
  wire \W_bmove[1]_i_19_n_0 ;
  wire \W_bmove[1]_i_20_n_0 ;
  wire \W_bmove[1]_i_21_n_0 ;
  wire [0:0]\W_bmove[1]_i_22_0 ;
  wire \W_bmove[1]_i_22_n_0 ;
  wire \W_bmove[1]_i_24_n_0 ;
  wire \W_bmove[1]_i_25_n_0 ;
  wire \W_bmove[1]_i_26_n_0 ;
  wire [0:0]\W_bmove[1]_i_27_0 ;
  wire \W_bmove[1]_i_27_n_0 ;
  wire \W_bmove[1]_i_28_n_0 ;
  wire \W_bmove[1]_i_29_n_0 ;
  wire \W_bmove[1]_i_30_n_0 ;
  wire \W_bmove[1]_i_31_n_0 ;
  wire \W_bmove[1]_i_32_n_0 ;
  wire \W_bmove[1]_i_33_n_0 ;
  wire \W_bmove[1]_i_34_n_0 ;
  wire \W_bmove[1]_i_35_n_0 ;
  wire \W_bmove[1]_i_37_n_0 ;
  wire \W_bmove[1]_i_38_n_0 ;
  wire \W_bmove[1]_i_39_n_0 ;
  wire \W_bmove[1]_i_40_n_0 ;
  wire \W_bmove[1]_i_55_n_0 ;
  wire [0:0]\W_bmove[1]_i_56_0 ;
  wire \W_bmove[1]_i_56_n_0 ;
  wire \W_bmove[1]_i_57_n_0 ;
  wire [0:0]\W_bmove[1]_i_58_0 ;
  wire \W_bmove[1]_i_58_n_0 ;
  wire \W_bmove[1]_i_60_n_0 ;
  wire \W_bmove[1]_i_61_n_0 ;
  wire \W_bmove[1]_i_62_n_0 ;
  wire \W_bmove[1]_i_63_n_0 ;
  wire \W_bmove[1]_i_65_n_0 ;
  wire \W_bmove[1]_i_66_n_0 ;
  wire \W_bmove[1]_i_67_n_0 ;
  wire \W_bmove[1]_i_68_n_0 ;
  wire \W_bmove[1]_i_70_n_0 ;
  wire \W_bmove[1]_i_71_n_0 ;
  wire \W_bmove[1]_i_72_n_0 ;
  wire \W_bmove[1]_i_73_n_0 ;
  wire \W_bmove[1]_i_87_n_0 ;
  wire \W_bmove[1]_i_88_n_0 ;
  wire \W_bmove[1]_i_89_n_0 ;
  wire \W_bmove[1]_i_90_n_0 ;
  wire \W_bmove[1]_i_96_n_0 ;
  wire \W_bmove[1]_i_97_n_0 ;
  wire \W_bmove[1]_i_98_n_0 ;
  wire \W_bmove[1]_i_99_n_0 ;
  wire \W_bmove[7]_i_10_n_0 ;
  wire \W_bmove[7]_i_11_n_0 ;
  wire \W_bmove[7]_i_12_n_0 ;
  wire \W_bmove[7]_i_13_n_0 ;
  wire \W_bmove[7]_i_6_n_0 ;
  wire \W_bmove[7]_i_7_n_0 ;
  wire \W_bmove[7]_i_8_n_0 ;
  wire \W_bmove[7]_i_9_n_0 ;
  wire \W_bmove_reg[11]_i_4_n_0 ;
  wire \W_bmove_reg[11]_i_4_n_1 ;
  wire \W_bmove_reg[11]_i_4_n_2 ;
  wire \W_bmove_reg[11]_i_4_n_3 ;
  wire \W_bmove_reg[11]_i_4_n_4 ;
  wire \W_bmove_reg[11]_i_4_n_5 ;
  wire \W_bmove_reg[11]_i_4_n_6 ;
  wire \W_bmove_reg[11]_i_4_n_7 ;
  wire \W_bmove_reg[11]_i_5_n_0 ;
  wire \W_bmove_reg[11]_i_5_n_1 ;
  wire \W_bmove_reg[11]_i_5_n_2 ;
  wire \W_bmove_reg[11]_i_5_n_3 ;
  wire \W_bmove_reg[11]_i_5_n_4 ;
  wire \W_bmove_reg[11]_i_5_n_5 ;
  wire \W_bmove_reg[11]_i_5_n_6 ;
  wire \W_bmove_reg[11]_i_5_n_7 ;
  wire \W_bmove_reg[14] ;
  wire \W_bmove_reg[15]_i_110_n_0 ;
  wire \W_bmove_reg[15]_i_110_n_1 ;
  wire \W_bmove_reg[15]_i_110_n_2 ;
  wire \W_bmove_reg[15]_i_110_n_3 ;
  wire \W_bmove_reg[15]_i_21_n_1 ;
  wire \W_bmove_reg[15]_i_21_n_2 ;
  wire \W_bmove_reg[15]_i_21_n_3 ;
  wire \W_bmove_reg[15]_i_24_n_0 ;
  wire \W_bmove_reg[15]_i_24_n_1 ;
  wire \W_bmove_reg[15]_i_24_n_2 ;
  wire \W_bmove_reg[15]_i_24_n_3 ;
  wire \W_bmove_reg[15]_i_24_n_4 ;
  wire \W_bmove_reg[15]_i_24_n_5 ;
  wire \W_bmove_reg[15]_i_24_n_6 ;
  wire \W_bmove_reg[15]_i_24_n_7 ;
  wire \W_bmove_reg[15]_i_26_n_0 ;
  wire \W_bmove_reg[15]_i_26_n_1 ;
  wire \W_bmove_reg[15]_i_26_n_2 ;
  wire \W_bmove_reg[15]_i_26_n_3 ;
  wire \W_bmove_reg[15]_i_26_n_4 ;
  wire \W_bmove_reg[15]_i_26_n_5 ;
  wire \W_bmove_reg[15]_i_26_n_6 ;
  wire \W_bmove_reg[15]_i_26_n_7 ;
  wire \W_bmove_reg[15]_i_28_n_1 ;
  wire \W_bmove_reg[15]_i_28_n_2 ;
  wire \W_bmove_reg[15]_i_28_n_3 ;
  wire \W_bmove_reg[15]_i_28_n_4 ;
  wire \W_bmove_reg[15]_i_28_n_5 ;
  wire \W_bmove_reg[15]_i_28_n_6 ;
  wire \W_bmove_reg[15]_i_28_n_7 ;
  wire \W_bmove_reg[15]_i_29_n_1 ;
  wire \W_bmove_reg[15]_i_29_n_2 ;
  wire \W_bmove_reg[15]_i_29_n_3 ;
  wire \W_bmove_reg[15]_i_29_n_4 ;
  wire \W_bmove_reg[15]_i_29_n_5 ;
  wire \W_bmove_reg[15]_i_29_n_6 ;
  wire \W_bmove_reg[15]_i_29_n_7 ;
  wire \W_bmove_reg[15]_i_30_n_0 ;
  wire \W_bmove_reg[15]_i_30_n_1 ;
  wire \W_bmove_reg[15]_i_30_n_2 ;
  wire \W_bmove_reg[15]_i_30_n_3 ;
  wire \W_bmove_reg[15]_i_30_n_4 ;
  wire \W_bmove_reg[15]_i_30_n_5 ;
  wire \W_bmove_reg[15]_i_30_n_6 ;
  wire \W_bmove_reg[15]_i_30_n_7 ;
  wire \W_bmove_reg[15]_i_31_n_0 ;
  wire \W_bmove_reg[15]_i_31_n_1 ;
  wire \W_bmove_reg[15]_i_31_n_2 ;
  wire \W_bmove_reg[15]_i_31_n_3 ;
  wire \W_bmove_reg[15]_i_31_n_4 ;
  wire \W_bmove_reg[15]_i_31_n_5 ;
  wire \W_bmove_reg[15]_i_31_n_6 ;
  wire \W_bmove_reg[15]_i_31_n_7 ;
  wire \W_bmove_reg[15]_i_47_n_0 ;
  wire \W_bmove_reg[15]_i_47_n_1 ;
  wire \W_bmove_reg[15]_i_47_n_2 ;
  wire \W_bmove_reg[15]_i_47_n_3 ;
  wire \W_bmove_reg[15]_i_52_n_0 ;
  wire \W_bmove_reg[15]_i_52_n_1 ;
  wire \W_bmove_reg[15]_i_52_n_2 ;
  wire \W_bmove_reg[15]_i_52_n_3 ;
  wire \W_bmove_reg[15]_i_52_n_4 ;
  wire \W_bmove_reg[15]_i_52_n_5 ;
  wire \W_bmove_reg[15]_i_52_n_6 ;
  wire \W_bmove_reg[15]_i_52_n_7 ;
  wire \W_bmove_reg[15]_i_53_n_0 ;
  wire \W_bmove_reg[15]_i_53_n_1 ;
  wire \W_bmove_reg[15]_i_53_n_2 ;
  wire \W_bmove_reg[15]_i_53_n_3 ;
  wire \W_bmove_reg[15]_i_53_n_4 ;
  wire \W_bmove_reg[15]_i_53_n_5 ;
  wire \W_bmove_reg[15]_i_53_n_6 ;
  wire \W_bmove_reg[15]_i_53_n_7 ;
  wire \W_bmove_reg[15]_i_70_n_0 ;
  wire \W_bmove_reg[15]_i_70_n_1 ;
  wire \W_bmove_reg[15]_i_70_n_2 ;
  wire \W_bmove_reg[15]_i_70_n_3 ;
  wire \W_bmove_reg[15]_i_70_n_4 ;
  wire \W_bmove_reg[15]_i_70_n_5 ;
  wire \W_bmove_reg[15]_i_70_n_6 ;
  wire \W_bmove_reg[15]_i_70_n_7 ;
  wire \W_bmove_reg[15]_i_75_n_0 ;
  wire \W_bmove_reg[15]_i_75_n_1 ;
  wire \W_bmove_reg[15]_i_75_n_2 ;
  wire \W_bmove_reg[15]_i_75_n_3 ;
  wire \W_bmove_reg[15]_i_75_n_4 ;
  wire \W_bmove_reg[15]_i_75_n_5 ;
  wire \W_bmove_reg[15]_i_75_n_6 ;
  wire \W_bmove_reg[15]_i_75_n_7 ;
  wire [15:0]\W_bmove_reg[15]_i_89_0 ;
  wire [0:0]\W_bmove_reg[15]_i_89_1 ;
  wire \W_bmove_reg[15]_i_89_n_0 ;
  wire \W_bmove_reg[15]_i_89_n_1 ;
  wire \W_bmove_reg[15]_i_89_n_2 ;
  wire \W_bmove_reg[15]_i_89_n_3 ;
  wire \W_bmove_reg[1]_i_100_n_0 ;
  wire \W_bmove_reg[1]_i_100_n_1 ;
  wire \W_bmove_reg[1]_i_100_n_2 ;
  wire \W_bmove_reg[1]_i_100_n_3 ;
  wire \W_bmove_reg[1]_i_109_n_0 ;
  wire \W_bmove_reg[1]_i_109_n_1 ;
  wire \W_bmove_reg[1]_i_109_n_2 ;
  wire \W_bmove_reg[1]_i_109_n_3 ;
  wire \W_bmove_reg[1]_i_10_n_0 ;
  wire \W_bmove_reg[1]_i_10_n_1 ;
  wire \W_bmove_reg[1]_i_10_n_2 ;
  wire \W_bmove_reg[1]_i_10_n_3 ;
  wire \W_bmove_reg[1]_i_10_n_4 ;
  wire \W_bmove_reg[1]_i_10_n_5 ;
  wire \W_bmove_reg[1]_i_10_n_6 ;
  wire \W_bmove_reg[1]_i_10_n_7 ;
  wire \W_bmove_reg[1]_i_118_n_0 ;
  wire \W_bmove_reg[1]_i_118_n_1 ;
  wire \W_bmove_reg[1]_i_118_n_2 ;
  wire \W_bmove_reg[1]_i_118_n_3 ;
  wire [3:0]\W_bmove_reg[1]_i_11_0 ;
  wire \W_bmove_reg[1]_i_11_n_1 ;
  wire \W_bmove_reg[1]_i_11_n_2 ;
  wire \W_bmove_reg[1]_i_11_n_3 ;
  wire \W_bmove_reg[1]_i_13_n_1 ;
  wire \W_bmove_reg[1]_i_13_n_2 ;
  wire \W_bmove_reg[1]_i_13_n_3 ;
  wire [3:0]\W_bmove_reg[1]_i_18_0 ;
  wire \W_bmove_reg[1]_i_18_n_0 ;
  wire \W_bmove_reg[1]_i_18_n_1 ;
  wire \W_bmove_reg[1]_i_18_n_2 ;
  wire \W_bmove_reg[1]_i_18_n_3 ;
  wire [3:0]\W_bmove_reg[1]_i_23_0 ;
  wire \W_bmove_reg[1]_i_23_n_0 ;
  wire \W_bmove_reg[1]_i_23_n_1 ;
  wire \W_bmove_reg[1]_i_23_n_2 ;
  wire \W_bmove_reg[1]_i_23_n_3 ;
  wire [3:0]\W_bmove_reg[1]_i_36_0 ;
  wire \W_bmove_reg[1]_i_36_n_0 ;
  wire \W_bmove_reg[1]_i_36_n_1 ;
  wire \W_bmove_reg[1]_i_36_n_2 ;
  wire \W_bmove_reg[1]_i_36_n_3 ;
  wire [3:0]\W_bmove_reg[1]_i_54_0 ;
  wire \W_bmove_reg[1]_i_54_n_0 ;
  wire \W_bmove_reg[1]_i_54_n_1 ;
  wire \W_bmove_reg[1]_i_54_n_2 ;
  wire \W_bmove_reg[1]_i_54_n_3 ;
  wire [13:0]\W_bmove_reg[1]_i_59_0 ;
  wire [2:0]\W_bmove_reg[1]_i_59_1 ;
  wire \W_bmove_reg[1]_i_59_n_0 ;
  wire \W_bmove_reg[1]_i_59_n_1 ;
  wire \W_bmove_reg[1]_i_59_n_2 ;
  wire \W_bmove_reg[1]_i_59_n_3 ;
  wire [2:0]\W_bmove_reg[1]_i_64_0 ;
  wire \W_bmove_reg[1]_i_64_n_0 ;
  wire \W_bmove_reg[1]_i_64_n_1 ;
  wire \W_bmove_reg[1]_i_64_n_2 ;
  wire \W_bmove_reg[1]_i_64_n_3 ;
  wire [3:0]\W_bmove_reg[1]_i_69_0 ;
  wire \W_bmove_reg[1]_i_69_n_0 ;
  wire \W_bmove_reg[1]_i_69_n_1 ;
  wire \W_bmove_reg[1]_i_69_n_2 ;
  wire \W_bmove_reg[1]_i_69_n_3 ;
  wire \W_bmove_reg[1]_i_7_n_1 ;
  wire \W_bmove_reg[1]_i_7_n_2 ;
  wire \W_bmove_reg[1]_i_7_n_3 ;
  wire [3:0]\W_bmove_reg[1]_i_86_0 ;
  wire \W_bmove_reg[1]_i_86_n_0 ;
  wire \W_bmove_reg[1]_i_86_n_1 ;
  wire \W_bmove_reg[1]_i_86_n_2 ;
  wire \W_bmove_reg[1]_i_86_n_3 ;
  wire \W_bmove_reg[1]_i_8_0 ;
  wire \W_bmove_reg[1]_i_8_1 ;
  wire \W_bmove_reg[1]_i_8_n_1 ;
  wire \W_bmove_reg[1]_i_8_n_2 ;
  wire \W_bmove_reg[1]_i_8_n_3 ;
  wire \W_bmove_reg[1]_i_91_n_0 ;
  wire \W_bmove_reg[1]_i_91_n_1 ;
  wire \W_bmove_reg[1]_i_91_n_2 ;
  wire \W_bmove_reg[1]_i_91_n_3 ;
  wire \W_bmove_reg[1]_i_9_n_0 ;
  wire \W_bmove_reg[1]_i_9_n_1 ;
  wire \W_bmove_reg[1]_i_9_n_2 ;
  wire \W_bmove_reg[1]_i_9_n_3 ;
  wire \W_bmove_reg[1]_i_9_n_4 ;
  wire \W_bmove_reg[1]_i_9_n_5 ;
  wire \W_bmove_reg[1]_i_9_n_6 ;
  wire \W_bmove_reg[1]_i_9_n_7 ;
  wire \W_bmove_reg[7]_i_4_n_0 ;
  wire \W_bmove_reg[7]_i_4_n_1 ;
  wire \W_bmove_reg[7]_i_4_n_2 ;
  wire \W_bmove_reg[7]_i_4_n_3 ;
  wire \W_bmove_reg[7]_i_4_n_4 ;
  wire \W_bmove_reg[7]_i_4_n_5 ;
  wire \W_bmove_reg[7]_i_4_n_6 ;
  wire \W_bmove_reg[7]_i_4_n_7 ;
  wire \W_bmove_reg[7]_i_5_n_0 ;
  wire \W_bmove_reg[7]_i_5_n_1 ;
  wire \W_bmove_reg[7]_i_5_n_2 ;
  wire \W_bmove_reg[7]_i_5_n_3 ;
  wire \W_bmove_reg[7]_i_5_n_4 ;
  wire \W_bmove_reg[7]_i_5_n_5 ;
  wire \W_bmove_reg[7]_i_5_n_6 ;
  wire \W_bmove_reg[7]_i_5_n_7 ;
  wire [15:0]W_bxxx;
  wire W_empty;
  wire W_full_i_10_n_0;
  wire W_full_i_11_n_0;
  wire W_full_i_12_n_0;
  wire W_full_i_16_n_0;
  wire W_full_i_17_n_0;
  wire W_full_i_18_n_0;
  wire W_full_i_21_n_0;
  wire W_full_i_22_n_0;
  wire W_full_i_23_n_0;
  wire W_full_i_26_n_0;
  wire W_full_i_27_n_0;
  wire W_full_i_28_n_0;
  wire W_full_i_29_n_0;
  wire W_full_i_30_n_0;
  wire [0:0]W_full_i_3_0;
  wire W_full_i_3_n_0;
  wire W_full_i_40_n_0;
  wire W_full_i_41_n_0;
  wire W_full_i_42_n_0;
  wire W_full_i_44_n_0;
  wire W_full_i_45_n_0;
  wire W_full_i_46_n_0;
  wire W_full_i_47_n_0;
  wire W_full_i_49_n_0;
  wire W_full_i_4_n_0;
  wire W_full_i_50_n_0;
  wire W_full_i_51_n_0;
  wire W_full_i_52_n_0;
  wire W_full_i_54_n_0;
  wire W_full_i_55_n_0;
  wire W_full_i_56_n_0;
  wire W_full_i_57_n_0;
  wire W_full_i_58_n_0;
  wire W_full_i_59_n_0;
  wire [2:0]W_full_i_5_0;
  wire W_full_i_5_n_0;
  wire W_full_i_60_n_0;
  wire W_full_i_61_n_0;
  wire W_full_i_62_n_0;
  wire W_full_i_63_n_0;
  wire W_full_i_64_n_0;
  wire W_full_i_65_n_0;
  wire W_full_i_66_n_0;
  wire W_full_i_67_n_0;
  wire W_full_i_68_n_0;
  wire W_full_i_69_n_0;
  wire W_full_i_6_n_0;
  wire W_full_i_8_n_0;
  wire W_full_reg;
  wire [4:0]W_full_reg_0;
  wire [10:0]W_full_reg_1;
  wire [3:0]W_full_reg_2;
  wire [1:0]W_full_reg_3;
  wire W_full_reg_4;
  wire W_full_reg_5;
  wire W_full_reg_i_19_n_2;
  wire W_full_reg_i_19_n_3;
  wire W_full_reg_i_20_n_0;
  wire W_full_reg_i_20_n_1;
  wire W_full_reg_i_20_n_2;
  wire W_full_reg_i_20_n_3;
  wire W_full_reg_i_24_n_0;
  wire W_full_reg_i_24_n_1;
  wire W_full_reg_i_24_n_2;
  wire W_full_reg_i_24_n_3;
  wire W_full_reg_i_39_n_0;
  wire W_full_reg_i_39_n_1;
  wire W_full_reg_i_39_n_2;
  wire W_full_reg_i_39_n_3;
  wire W_full_reg_i_43_n_0;
  wire W_full_reg_i_43_n_1;
  wire W_full_reg_i_43_n_2;
  wire W_full_reg_i_43_n_3;
  wire W_full_reg_i_48_n_0;
  wire W_full_reg_i_48_n_1;
  wire W_full_reg_i_48_n_2;
  wire W_full_reg_i_48_n_3;
  wire W_full_reg_i_53_n_0;
  wire W_full_reg_i_53_n_1;
  wire W_full_reg_i_53_n_2;
  wire W_full_reg_i_53_n_3;
  wire W_full_reg_i_7_n_2;
  wire W_full_reg_i_7_n_3;
  wire W_full_reg_i_9_n_1;
  wire W_full_reg_i_9_n_2;
  wire W_full_reg_i_9_n_3;
  wire W_go0;
  wire W_go_i_8_n_0;
  wire W_go_reg;
  wire W_go_reg_0;
  wire \W_len[2]_i_10_n_0 ;
  wire \W_len[2]_i_11_n_0 ;
  wire \W_len[2]_i_12_n_0 ;
  wire \W_len[2]_i_8_n_0 ;
  wire \W_len[2]_i_9_n_0 ;
  wire \W_len[6]_i_6_n_0 ;
  wire \W_len[6]_i_7_n_0 ;
  wire \W_len[6]_i_8_n_0 ;
  wire \W_len[6]_i_9_n_0 ;
  wire \W_len[8]_i_6_n_0 ;
  wire \W_len[8]_i_7_n_0 ;
  wire \W_len_reg[2]_i_6_n_0 ;
  wire \W_len_reg[2]_i_6_n_1 ;
  wire \W_len_reg[2]_i_6_n_2 ;
  wire \W_len_reg[2]_i_6_n_3 ;
  wire \W_len_reg[6]_i_5_n_0 ;
  wire \W_len_reg[6]_i_5_n_1 ;
  wire \W_len_reg[6]_i_5_n_2 ;
  wire \W_len_reg[6]_i_5_n_3 ;
  wire \W_len_reg[8]_i_5_n_3 ;
  wire [7:0]addr;
  wire addrR;
  wire addrR1_carry_i_1_n_0;
  wire addrR1_carry_i_2_n_0;
  wire addrR1_carry_i_3_n_0;
  wire addrR1_carry_i_4_n_0;
  wire addrR1_carry_i_5_n_0;
  wire addrR1_carry_i_6_n_0;
  wire addrR1_carry_i_7_n_0;
  wire addrR1_carry_i_8_n_0;
  wire addrR1_carry_n_0;
  wire addrR1_carry_n_1;
  wire addrR1_carry_n_2;
  wire addrR1_carry_n_3;
  wire \addrR[0]_i_1_n_0 ;
  wire \addrR[1]_i_1_n_0 ;
  wire \addrR[2]_i_1_n_0 ;
  wire \addrR[2]_i_2_n_0 ;
  wire \addrR[3]_i_1_n_0 ;
  wire \addrR[5]_i_4_n_0 ;
  wire \addrR[6]_i_1_n_0 ;
  wire \addrR[6]_i_2_n_0 ;
  wire \addrR[7]_i_10_n_0 ;
  wire \addrR[7]_i_11_n_0 ;
  wire \addrR[7]_i_12_n_0 ;
  wire \addrR[7]_i_13_n_0 ;
  wire \addrR[7]_i_3_n_0 ;
  wire \addrR[7]_i_4_n_0 ;
  wire \addrR[7]_i_5_n_0 ;
  wire \addrR[7]_i_6_n_0 ;
  wire \addrR[7]_i_7_n_0 ;
  wire \addrR_reg[4]_i_1_n_0 ;
  wire \addrR_reg[5]_i_1_n_0 ;
  wire \addrR_reg[7]_i_2_n_0 ;
  wire \addrR_reg_n_0_[0] ;
  wire \addrR_reg_n_0_[1] ;
  wire \addrR_reg_n_0_[2] ;
  wire \addrR_reg_n_0_[3] ;
  wire \addrR_reg_n_0_[4] ;
  wire \addrR_reg_n_0_[5] ;
  wire \addrR_reg_n_0_[6] ;
  wire \addrR_reg_n_0_[7] ;
  wire \addrW[0]_i_1_n_0 ;
  wire \addrW[1]_i_1_n_0 ;
  wire \addrW[2]_i_1_n_0 ;
  wire \addrW[3]_i_1_n_0 ;
  wire \addrW[4]_i_1_n_0 ;
  wire \addrW[4]_i_2_n_0 ;
  wire \addrW[5]_i_1_n_0 ;
  wire \addrW[5]_i_2_n_0 ;
  wire \addrW[6]_i_1_n_0 ;
  wire \addrW[6]_i_2_n_0 ;
  wire \addrW[7]_i_1_n_0 ;
  wire \addrW[7]_i_2_n_0 ;
  wire \addrW[7]_i_3_n_0 ;
  wire beatR;
  wire \beatR[0]_i_1_n_0 ;
  wire \beatR[1]_i_1_n_0 ;
  wire \beatR[2]_i_1_n_0 ;
  wire \beatR[3]_i_1_n_0 ;
  wire \beatR[4]_i_1_n_0 ;
  wire \beatR[4]_i_2_n_0 ;
  wire \beatR[5]_i_1_n_0 ;
  wire \beatR[5]_i_2_n_0 ;
  wire \beatR[6]_i_1_n_0 ;
  wire \beatR[7]_i_2_n_0 ;
  wire \beatR[7]_i_3_n_0 ;
  wire \beatR[7]_i_4_n_0 ;
  wire \beatR[7]_i_5_n_0 ;
  wire \beatR[7]_i_6_n_0 ;
  wire \beatR[7]_i_8_n_0 ;
  wire \beatR_reg_n_0_[0] ;
  wire \beatR_reg_n_0_[1] ;
  wire \beatR_reg_n_0_[2] ;
  wire \beatR_reg_n_0_[3] ;
  wire \beatR_reg_n_0_[4] ;
  wire \beatR_reg_n_0_[5] ;
  wire \beatR_reg_n_0_[6] ;
  wire \beatR_reg_n_0_[7] ;
  wire [7:0]beatW;
  wire \beatW[0]_i_1_n_0 ;
  wire \beatW[1]_i_1_n_0 ;
  wire \beatW[2]_i_1_n_0 ;
  wire \beatW[3]_i_1_n_0 ;
  wire \beatW[4]_i_1_n_0 ;
  wire \beatW[4]_i_2_n_0 ;
  wire \beatW[5]_i_1_n_0 ;
  wire \beatW[5]_i_2_n_0 ;
  wire \beatW[6]_i_1_n_0 ;
  wire \beatW[7]_i_1_n_0 ;
  wire \beatW[7]_i_2_n_0 ;
  wire \beatW[7]_i_3_n_0 ;
  wire client_bnum_rdy_reg_C;
  wire [47:0]conf_mac_addr;
  wire conf_rx_en;
  wire conf_rx_en_reg;
  wire conf_rx_en_reg_0;
  wire conf_rx_en_reg_1;
  wire [13:0]conf_rx_en_reg_2;
  wire [15:0]conf_rx_en_reg_3;
  wire [0:0]conf_rx_en_reg_4;
  wire conf_rx_en_reg_5;
  wire [2:0]conf_rx_en_reg_6;
  wire [31:0]conf_rx_en_reg_7;
  wire [0:0]conf_rx_en_reg_8;
  wire conf_rx_jumbo_en;
  wire conf_rx_no_chk_crc;
  wire conf_rx_promiscuous;
  wire conf_rx_reset;
  wire conf_tx_en;
  wire [1:0]conf_tx_en_reg;
  wire [31:0]conf_tx_en_reg_0;
  wire [13:0]conf_tx_en_reg_1;
  wire [0:0]conf_tx_en_reg_2;
  wire conf_tx_en_reg_3;
  wire conf_tx_en_reg_4;
  wire conf_tx_jumbo_en;
  wire conf_tx_no_gen_crc;
  wire conf_tx_reset;
  wire crc_err;
  wire csr_rx_reset_reg;
  wire csr_rx_reset_reg_0;
  wire [31:0]dataR;
  wire \dataR[31]_i_1_n_0 ;
  wire [15:0]\desc_bnum_reg[15] ;
  wire desc_ready_reg;
  wire [15:0]desc_tx_bnum;
  wire [31:0]desc_tx_src;
  wire [3:0]dout;
  wire gbe_phy_reset_n;
  wire [7:0]get_next_addr_rd0;
  wire [7:0]get_next_addr_rd00;
  wire \get_next_addr_rd00_inferred__0/i__carry__0_n_1 ;
  wire \get_next_addr_rd00_inferred__0/i__carry__0_n_2 ;
  wire \get_next_addr_rd00_inferred__0/i__carry__0_n_3 ;
  wire \get_next_addr_rd00_inferred__0/i__carry_n_0 ;
  wire \get_next_addr_rd00_inferred__0/i__carry_n_1 ;
  wire \get_next_addr_rd00_inferred__0/i__carry_n_2 ;
  wire \get_next_addr_rd00_inferred__0/i__carry_n_3 ;
  wire get_next_addr_rd01_carry_i_1_n_0;
  wire get_next_addr_rd01_carry_i_2_n_0;
  wire get_next_addr_rd01_carry_i_3_n_0;
  wire get_next_addr_rd01_carry_i_4_n_0;
  wire get_next_addr_rd01_carry_n_1;
  wire get_next_addr_rd01_carry_n_2;
  wire get_next_addr_rd01_carry_n_3;
  wire \get_next_addr_rd0_inferred__1/i__carry__0_n_1 ;
  wire \get_next_addr_rd0_inferred__1/i__carry__0_n_2 ;
  wire \get_next_addr_rd0_inferred__1/i__carry__0_n_3 ;
  wire \get_next_addr_rd0_inferred__1/i__carry_n_0 ;
  wire \get_next_addr_rd0_inferred__1/i__carry_n_1 ;
  wire \get_next_addr_rd0_inferred__1/i__carry_n_2 ;
  wire \get_next_addr_rd0_inferred__1/i__carry_n_3 ;
  wire get_next_addr_rd1_carry_i_1_n_0;
  wire get_next_addr_rd1_carry_i_2_n_0;
  wire get_next_addr_rd1_carry_i_3_n_0;
  wire get_next_addr_rd1_carry_i_4_n_0;
  wire get_next_addr_rd1_carry_n_1;
  wire get_next_addr_rd1_carry_n_2;
  wire get_next_addr_rd1_carry_n_3;
  wire [7:4]get_next_addr_rd3;
  wire [7:0]get_next_addr_rd_return;
  wire [7:0]get_next_addr_wr0;
  wire \get_next_addr_wr0_inferred__0/i__carry__0_n_1 ;
  wire \get_next_addr_wr0_inferred__0/i__carry__0_n_2 ;
  wire \get_next_addr_wr0_inferred__0/i__carry__0_n_3 ;
  wire \get_next_addr_wr0_inferred__0/i__carry_n_0 ;
  wire \get_next_addr_wr0_inferred__0/i__carry_n_1 ;
  wire \get_next_addr_wr0_inferred__0/i__carry_n_2 ;
  wire \get_next_addr_wr0_inferred__0/i__carry_n_3 ;
  wire get_next_addr_wr1_carry_i_1_n_0;
  wire get_next_addr_wr1_carry_i_2_n_0;
  wire get_next_addr_wr1_carry_i_3_n_0;
  wire get_next_addr_wr1_carry_i_4_n_0;
  wire get_next_addr_wr1_carry_n_1;
  wire get_next_addr_wr1_carry_n_2;
  wire get_next_addr_wr1_carry_n_3;
  wire gtx_clk_stable;
  wire i__carry__0_i_1__0_n_0;
  wire i__carry__0_i_1__1_n_0;
  wire i__carry__0_i_1_n_0;
  wire i__carry__0_i_2__0_n_0;
  wire i__carry__0_i_2__1_n_0;
  wire i__carry__0_i_2_n_0;
  wire i__carry__0_i_3__0_n_0;
  wire i__carry__0_i_3__1_n_0;
  wire i__carry__0_i_3_n_0;
  wire i__carry__0_i_4__0_n_0;
  wire i__carry__0_i_4__1_n_0;
  wire i__carry__0_i_4_n_0;
  wire i__carry_i_1__0_n_0;
  wire i__carry_i_1__1_n_0;
  wire i__carry_i_1_n_0;
  wire i__carry_i_2__0_n_0;
  wire i__carry_i_2__1_n_0;
  wire i__carry_i_2_n_0;
  wire i__carry_i_3__0_n_0;
  wire i__carry_i_3__1_n_0;
  wire i__carry_i_3_n_0;
  wire i__carry_i_4__0_n_0;
  wire i__carry_i_4__1_n_0;
  wire i__carry_i_4_n_0;
  wire \item_cnt_reg[4] ;
  wire [0:0]out;
  wire [1:0]p_0_in__0;
  wire [3:0]p_0_in__1;
  wire rx_addr_empty;
  wire [1:0]rx_addr_end;
  wire [0:0]\rx_addr_end_reg[30] ;
  wire [29:0]\rx_addr_end_reg[31] ;
  wire rx_addr_full;
  wire [31:0]rx_addr_head;
  wire rx_addr_head_update;
  wire [31:0]rx_addr_start;
  wire \rx_addr_start_reg[0] ;
  wire \rx_addr_start_reg[0]_0 ;
  wire \rx_addr_start_reg[0]_1 ;
  wire \rx_addr_start_reg[0]_2 ;
  wire \rx_addr_start_reg[10] ;
  wire \rx_addr_start_reg[10]_0 ;
  wire \rx_addr_start_reg[10]_1 ;
  wire \rx_addr_start_reg[11] ;
  wire \rx_addr_start_reg[11]_0 ;
  wire \rx_addr_start_reg[11]_1 ;
  wire \rx_addr_start_reg[12] ;
  wire \rx_addr_start_reg[12]_0 ;
  wire \rx_addr_start_reg[12]_1 ;
  wire \rx_addr_start_reg[13] ;
  wire \rx_addr_start_reg[13]_0 ;
  wire \rx_addr_start_reg[13]_1 ;
  wire \rx_addr_start_reg[14] ;
  wire \rx_addr_start_reg[14]_0 ;
  wire \rx_addr_start_reg[14]_1 ;
  wire \rx_addr_start_reg[15] ;
  wire \rx_addr_start_reg[15]_0 ;
  wire \rx_addr_start_reg[15]_1 ;
  wire \rx_addr_start_reg[16] ;
  wire \rx_addr_start_reg[16]_0 ;
  wire \rx_addr_start_reg[16]_1 ;
  wire \rx_addr_start_reg[17] ;
  wire \rx_addr_start_reg[17]_0 ;
  wire \rx_addr_start_reg[17]_1 ;
  wire \rx_addr_start_reg[18] ;
  wire \rx_addr_start_reg[18]_0 ;
  wire \rx_addr_start_reg[18]_1 ;
  wire \rx_addr_start_reg[19] ;
  wire \rx_addr_start_reg[19]_0 ;
  wire \rx_addr_start_reg[19]_1 ;
  wire \rx_addr_start_reg[1] ;
  wire \rx_addr_start_reg[1]_0 ;
  wire \rx_addr_start_reg[1]_1 ;
  wire \rx_addr_start_reg[1]_2 ;
  wire \rx_addr_start_reg[20] ;
  wire \rx_addr_start_reg[20]_0 ;
  wire \rx_addr_start_reg[20]_1 ;
  wire \rx_addr_start_reg[21] ;
  wire \rx_addr_start_reg[21]_0 ;
  wire \rx_addr_start_reg[21]_1 ;
  wire \rx_addr_start_reg[22] ;
  wire \rx_addr_start_reg[22]_0 ;
  wire \rx_addr_start_reg[22]_1 ;
  wire \rx_addr_start_reg[23] ;
  wire \rx_addr_start_reg[23]_0 ;
  wire \rx_addr_start_reg[23]_1 ;
  wire \rx_addr_start_reg[24] ;
  wire \rx_addr_start_reg[24]_0 ;
  wire \rx_addr_start_reg[24]_1 ;
  wire \rx_addr_start_reg[25] ;
  wire \rx_addr_start_reg[25]_0 ;
  wire \rx_addr_start_reg[25]_1 ;
  wire \rx_addr_start_reg[26] ;
  wire \rx_addr_start_reg[26]_0 ;
  wire \rx_addr_start_reg[26]_1 ;
  wire \rx_addr_start_reg[27] ;
  wire \rx_addr_start_reg[27]_0 ;
  wire \rx_addr_start_reg[27]_1 ;
  wire \rx_addr_start_reg[28] ;
  wire \rx_addr_start_reg[28]_0 ;
  wire \rx_addr_start_reg[28]_1 ;
  wire \rx_addr_start_reg[29] ;
  wire \rx_addr_start_reg[29]_0 ;
  wire \rx_addr_start_reg[29]_1 ;
  wire \rx_addr_start_reg[2] ;
  wire \rx_addr_start_reg[2]_0 ;
  wire \rx_addr_start_reg[2]_1 ;
  wire \rx_addr_start_reg[30] ;
  wire \rx_addr_start_reg[30]_0 ;
  wire \rx_addr_start_reg[30]_1 ;
  wire \rx_addr_start_reg[31] ;
  wire \rx_addr_start_reg[31]_0 ;
  wire \rx_addr_start_reg[31]_1 ;
  wire \rx_addr_start_reg[3] ;
  wire \rx_addr_start_reg[3]_0 ;
  wire \rx_addr_start_reg[3]_1 ;
  wire \rx_addr_start_reg[4] ;
  wire \rx_addr_start_reg[4]_0 ;
  wire \rx_addr_start_reg[4]_1 ;
  wire \rx_addr_start_reg[5] ;
  wire \rx_addr_start_reg[5]_0 ;
  wire \rx_addr_start_reg[5]_1 ;
  wire \rx_addr_start_reg[6] ;
  wire \rx_addr_start_reg[6]_0 ;
  wire \rx_addr_start_reg[6]_1 ;
  wire \rx_addr_start_reg[7] ;
  wire \rx_addr_start_reg[7]_0 ;
  wire \rx_addr_start_reg[7]_1 ;
  wire \rx_addr_start_reg[8] ;
  wire \rx_addr_start_reg[8]_0 ;
  wire \rx_addr_start_reg[8]_1 ;
  wire \rx_addr_start_reg[9] ;
  wire \rx_addr_start_reg[9]_0 ;
  wire \rx_addr_start_reg[9]_1 ;
  wire [31:0]rx_addr_tail;
  wire [0:0]\rx_addr_tail_reg[31] ;
  wire rx_descriptor_full;
  wire rx_descriptor_wr_rdy;
  wire rx_descriptor_wr_vld;
  wire sig_in0;
  (* RTL_KEEP = "true" *) wire [3:0]stateR;
  wire \stateR[0]_i_2_n_0 ;
  wire \stateR[0]_i_3_n_0 ;
  wire \stateR[2]_i_2_n_0 ;
  wire \stateR[2]_i_3_n_0 ;
  wire \stateR[2]_i_4_n_0 ;
  wire \stateR[3]_i_1_n_0 ;
  wire \stateR[3]_i_3_n_0 ;
  wire \stateR[3]_i_4_n_0 ;
  (* RTL_KEEP = "true" *) wire [1:0]stateW;
  wire \stateW[0]_i_2_n_0 ;
  wire [31:0]\state_reg[1] ;
  wire [15:0]\state_reg[1]_0 ;
  wire \state_reg[1]_1 ;
  wire [15:0]\state_reg[1]_2 ;
  wire tx_addr_empty;
  wire [31:0]tx_addr_end;
  wire [0:0]\tx_addr_end_reg[29] ;
  wire [0:0]\tx_addr_end_reg[30] ;
  wire tx_addr_full;
  wire [31:0]tx_addr_head;
  wire [3:0]\tx_addr_head_reg[14] ;
  wire [1:0]\tx_addr_head_reg[20] ;
  wire [3:0]\tx_addr_head_reg[23] ;
  wire [1:0]\tx_addr_head_reg[31] ;
  wire [0:0]\tx_addr_head_reg[31]_0 ;
  wire [0:0]\tx_addr_head_reg[31]_1 ;
  wire [3:0]\tx_addr_head_reg[7] ;
  wire [31:0]tx_addr_start;
  wire \tx_addr_start_reg[0] ;
  wire \tx_addr_start_reg[0]_0 ;
  wire \tx_addr_start_reg[0]_1 ;
  wire \tx_addr_start_reg[10] ;
  wire \tx_addr_start_reg[10]_0 ;
  wire \tx_addr_start_reg[11] ;
  wire \tx_addr_start_reg[11]_0 ;
  wire \tx_addr_start_reg[12] ;
  wire \tx_addr_start_reg[12]_0 ;
  wire \tx_addr_start_reg[13] ;
  wire \tx_addr_start_reg[13]_0 ;
  wire \tx_addr_start_reg[14] ;
  wire \tx_addr_start_reg[14]_0 ;
  wire \tx_addr_start_reg[15] ;
  wire \tx_addr_start_reg[15]_0 ;
  wire \tx_addr_start_reg[16] ;
  wire \tx_addr_start_reg[16]_0 ;
  wire \tx_addr_start_reg[17] ;
  wire \tx_addr_start_reg[17]_0 ;
  wire \tx_addr_start_reg[18] ;
  wire \tx_addr_start_reg[18]_0 ;
  wire \tx_addr_start_reg[19] ;
  wire \tx_addr_start_reg[19]_0 ;
  wire \tx_addr_start_reg[1] ;
  wire \tx_addr_start_reg[1]_0 ;
  wire \tx_addr_start_reg[1]_1 ;
  wire \tx_addr_start_reg[20] ;
  wire \tx_addr_start_reg[20]_0 ;
  wire \tx_addr_start_reg[21] ;
  wire \tx_addr_start_reg[21]_0 ;
  wire \tx_addr_start_reg[22] ;
  wire \tx_addr_start_reg[22]_0 ;
  wire \tx_addr_start_reg[23] ;
  wire \tx_addr_start_reg[23]_0 ;
  wire \tx_addr_start_reg[24] ;
  wire \tx_addr_start_reg[24]_0 ;
  wire \tx_addr_start_reg[25] ;
  wire \tx_addr_start_reg[25]_0 ;
  wire \tx_addr_start_reg[26] ;
  wire \tx_addr_start_reg[26]_0 ;
  wire \tx_addr_start_reg[27] ;
  wire \tx_addr_start_reg[27]_0 ;
  wire \tx_addr_start_reg[28] ;
  wire \tx_addr_start_reg[28]_0 ;
  wire \tx_addr_start_reg[29] ;
  wire \tx_addr_start_reg[29]_0 ;
  wire \tx_addr_start_reg[2] ;
  wire \tx_addr_start_reg[2]_0 ;
  wire \tx_addr_start_reg[30] ;
  wire \tx_addr_start_reg[30]_0 ;
  wire \tx_addr_start_reg[31] ;
  wire \tx_addr_start_reg[31]_0 ;
  wire \tx_addr_start_reg[3] ;
  wire \tx_addr_start_reg[3]_0 ;
  wire \tx_addr_start_reg[4] ;
  wire \tx_addr_start_reg[4]_0 ;
  wire \tx_addr_start_reg[5] ;
  wire \tx_addr_start_reg[5]_0 ;
  wire \tx_addr_start_reg[6] ;
  wire \tx_addr_start_reg[6]_0 ;
  wire \tx_addr_start_reg[7] ;
  wire \tx_addr_start_reg[7]_0 ;
  wire \tx_addr_start_reg[8] ;
  wire \tx_addr_start_reg[8]_0 ;
  wire \tx_addr_start_reg[9] ;
  wire \tx_addr_start_reg[9]_0 ;
  wire [31:0]tx_addr_tail;
  wire tx_addr_tail_update;
  wire tx_descriptor_rd_rdy;
  wire tx_descriptor_rd_vld;
  wire u_csr_i_1_n_0;
  wire u_csr_i_2_n_0;
  wire u_csr_i_3_n_0;
  wire u_csr_i_4_n_0;
  wire u_csr_n_34;
  wire u_csr_n_35;
  wire \u_dma_rx/W_full0 ;
  wire \u_dma_rx/W_full00_out ;
  wire \u_dma_rx/W_full15_out ;
  wire [29:16]\u_dma_rx/get_rooms_return ;
  wire [3:2]\NLW_DMA_ADDR_TAIL_reg[31]_P_i_3_CO_UNCONNECTED ;
  wire [3:0]\NLW_DMA_ADDR_TAIL_reg[31]_P_i_3_O_UNCONNECTED ;
  wire [3:0]\NLW_DMA_ADDR_TAIL_reg[31]_P_i_4_O_UNCONNECTED ;
  wire [3:0]\NLW_DMA_ADDR_TAIL_reg[31]_P_i_7_O_UNCONNECTED ;
  wire [3:0]\NLW_R_addr_reg[31]_i_11_O_UNCONNECTED ;
  wire [3:0]\NLW_R_addr_reg[31]_i_16_O_UNCONNECTED ;
  wire [3:3]\NLW_R_addr_reg[31]_i_7_CO_UNCONNECTED ;
  wire [3:0]\NLW_R_addr_reg[31]_i_7_O_UNCONNECTED ;
  wire [3:0]\NLW_R_brem_reg[15]_i_115_O_UNCONNECTED ;
  wire [3:0]\NLW_R_brem_reg[15]_i_13_O_UNCONNECTED ;
  wire [3:0]\NLW_R_brem_reg[15]_i_26_O_UNCONNECTED ;
  wire [3:0]\NLW_R_brem_reg[15]_i_35_O_UNCONNECTED ;
  wire [3:3]\NLW_R_brem_reg[15]_i_39_CO_UNCONNECTED ;
  wire [3:0]\NLW_R_brem_reg[15]_i_4_O_UNCONNECTED ;
  wire [3:3]\NLW_R_brem_reg[15]_i_40_CO_UNCONNECTED ;
  wire [3:0]\NLW_R_brem_reg[15]_i_66_O_UNCONNECTED ;
  wire [3:3]\NLW_R_brem_reg[15]_i_75_CO_UNCONNECTED ;
  wire [3:3]\NLW_R_brem_reg[15]_i_76_CO_UNCONNECTED ;
  wire [3:0]\NLW_R_brem_reg[15]_i_8_O_UNCONNECTED ;
  wire [3:0]\NLW_R_brem_reg[15]_i_80_O_UNCONNECTED ;
  wire [3:0]NLW_R_empty_reg_i_19_O_UNCONNECTED;
  wire [3:0]NLW_R_empty_reg_i_23_O_UNCONNECTED;
  wire [3:0]NLW_R_empty_reg_i_32_O_UNCONNECTED;
  wire [3:0]NLW_R_empty_reg_i_47_O_UNCONNECTED;
  wire [3:3]NLW_R_empty_reg_i_5_CO_UNCONNECTED;
  wire [3:0]NLW_R_empty_reg_i_5_O_UNCONNECTED;
  wire [3:0]NLW_R_empty_reg_i_52_O_UNCONNECTED;
  wire [3:3]NLW_R_empty_reg_i_6_CO_UNCONNECTED;
  wire [3:0]NLW_R_empty_reg_i_6_O_UNCONNECTED;
  wire [3:0]NLW_S_WREADY0_carry_O_UNCONNECTED;
  wire [3:0]\NLW_W_addr_reg[31]_i_11_O_UNCONNECTED ;
  wire [3:0]\NLW_W_addr_reg[31]_i_15_O_UNCONNECTED ;
  wire [3:3]\NLW_W_addr_reg[31]_i_8_CO_UNCONNECTED ;
  wire [3:0]\NLW_W_addr_reg[31]_i_8_O_UNCONNECTED ;
  wire [3:0]\NLW_W_bmove_reg[15]_i_110_O_UNCONNECTED ;
  wire [3:0]\NLW_W_bmove_reg[15]_i_21_O_UNCONNECTED ;
  wire [3:3]\NLW_W_bmove_reg[15]_i_28_CO_UNCONNECTED ;
  wire [3:3]\NLW_W_bmove_reg[15]_i_29_CO_UNCONNECTED ;
  wire [3:0]\NLW_W_bmove_reg[15]_i_47_O_UNCONNECTED ;
  wire [3:0]\NLW_W_bmove_reg[15]_i_89_O_UNCONNECTED ;
  wire [3:0]\NLW_W_bmove_reg[1]_i_100_O_UNCONNECTED ;
  wire [3:0]\NLW_W_bmove_reg[1]_i_109_O_UNCONNECTED ;
  wire [3:0]\NLW_W_bmove_reg[1]_i_11_O_UNCONNECTED ;
  wire [3:0]\NLW_W_bmove_reg[1]_i_118_O_UNCONNECTED ;
  wire [3:0]\NLW_W_bmove_reg[1]_i_13_O_UNCONNECTED ;
  wire [3:0]\NLW_W_bmove_reg[1]_i_18_O_UNCONNECTED ;
  wire [3:0]\NLW_W_bmove_reg[1]_i_23_O_UNCONNECTED ;
  wire [3:0]\NLW_W_bmove_reg[1]_i_36_O_UNCONNECTED ;
  wire [3:0]\NLW_W_bmove_reg[1]_i_54_O_UNCONNECTED ;
  wire [3:0]\NLW_W_bmove_reg[1]_i_59_O_UNCONNECTED ;
  wire [3:0]\NLW_W_bmove_reg[1]_i_64_O_UNCONNECTED ;
  wire [3:0]\NLW_W_bmove_reg[1]_i_69_O_UNCONNECTED ;
  wire [3:0]\NLW_W_bmove_reg[1]_i_7_O_UNCONNECTED ;
  wire [3:0]\NLW_W_bmove_reg[1]_i_8_O_UNCONNECTED ;
  wire [3:0]\NLW_W_bmove_reg[1]_i_86_O_UNCONNECTED ;
  wire [3:0]\NLW_W_bmove_reg[1]_i_91_O_UNCONNECTED ;
  wire [3:3]NLW_W_full_reg_i_19_CO_UNCONNECTED;
  wire [3:0]NLW_W_full_reg_i_19_O_UNCONNECTED;
  wire [3:0]NLW_W_full_reg_i_20_O_UNCONNECTED;
  wire [3:0]NLW_W_full_reg_i_24_O_UNCONNECTED;
  wire [3:0]NLW_W_full_reg_i_39_O_UNCONNECTED;
  wire [3:0]NLW_W_full_reg_i_43_O_UNCONNECTED;
  wire [3:0]NLW_W_full_reg_i_48_O_UNCONNECTED;
  wire [3:0]NLW_W_full_reg_i_53_O_UNCONNECTED;
  wire [3:3]NLW_W_full_reg_i_7_CO_UNCONNECTED;
  wire [3:0]NLW_W_full_reg_i_7_O_UNCONNECTED;
  wire [3:3]NLW_W_full_reg_i_9_CO_UNCONNECTED;
  wire [3:0]NLW_W_full_reg_i_9_O_UNCONNECTED;
  wire [0:0]\NLW_W_len_reg[2]_i_6_O_UNCONNECTED ;
  wire [3:1]\NLW_W_len_reg[8]_i_5_CO_UNCONNECTED ;
  wire [3:2]\NLW_W_len_reg[8]_i_5_O_UNCONNECTED ;
  wire [3:0]NLW_addrR1_carry_O_UNCONNECTED;
  wire [3:3]\NLW_get_next_addr_rd00_inferred__0/i__carry__0_CO_UNCONNECTED ;
  wire [3:3]NLW_get_next_addr_rd01_carry_CO_UNCONNECTED;
  wire [3:0]NLW_get_next_addr_rd01_carry_O_UNCONNECTED;
  wire [3:3]\NLW_get_next_addr_rd0_inferred__1/i__carry__0_CO_UNCONNECTED ;
  wire [3:3]NLW_get_next_addr_rd1_carry_CO_UNCONNECTED;
  wire [3:0]NLW_get_next_addr_rd1_carry_O_UNCONNECTED;
  wire [3:3]\NLW_get_next_addr_wr0_inferred__0/i__carry__0_CO_UNCONNECTED ;
  wire [3:3]NLW_get_next_addr_wr1_carry_CO_UNCONNECTED;
  wire [3:0]NLW_get_next_addr_wr1_carry_O_UNCONNECTED;

  FDCE \ARBURST_reg_reg[0] 
       (.C(ACLK),
        .CE(\S_RID[7]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(S_ARBURST[0]),
        .Q(ARBURST_reg[0]));
  FDCE \ARBURST_reg_reg[1] 
       (.C(ACLK),
        .CE(\S_RID[7]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(S_ARBURST[1]),
        .Q(ARBURST_reg[1]));
  FDCE \ARLEN_reg_reg[0] 
       (.C(ACLK),
        .CE(\S_RID[7]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(S_ARLEN[0]),
        .Q(ARLEN_reg[0]));
  FDCE \ARLEN_reg_reg[1] 
       (.C(ACLK),
        .CE(\S_RID[7]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(S_ARLEN[1]),
        .Q(ARLEN_reg[1]));
  FDCE \ARLEN_reg_reg[2] 
       (.C(ACLK),
        .CE(\S_RID[7]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(S_ARLEN[2]),
        .Q(ARLEN_reg[2]));
  FDCE \ARLEN_reg_reg[3] 
       (.C(ACLK),
        .CE(\S_RID[7]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(S_ARLEN[3]),
        .Q(ARLEN_reg[3]));
  FDCE \ARLEN_reg_reg[4] 
       (.C(ACLK),
        .CE(\S_RID[7]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(S_ARLEN[4]),
        .Q(ARLEN_reg[4]));
  FDCE \ARLEN_reg_reg[5] 
       (.C(ACLK),
        .CE(\S_RID[7]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(S_ARLEN[5]),
        .Q(ARLEN_reg[5]));
  FDCE \ARLEN_reg_reg[6] 
       (.C(ACLK),
        .CE(\S_RID[7]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(S_ARLEN[6]),
        .Q(ARLEN_reg[6]));
  FDCE \ARLEN_reg_reg[7] 
       (.C(ACLK),
        .CE(\S_RID[7]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(S_ARLEN[7]),
        .Q(ARLEN_reg[7]));
  FDCE \ARSIZE_reg_reg[0] 
       (.C(ACLK),
        .CE(\S_RID[7]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(S_ARSIZE[0]),
        .Q(ARSIZE_reg[0]));
  FDCE \ARSIZE_reg_reg[1] 
       (.C(ACLK),
        .CE(\S_RID[7]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(S_ARSIZE[1]),
        .Q(ARSIZE_reg[1]));
  FDCE \ARSIZE_reg_reg[2] 
       (.C(ACLK),
        .CE(\S_RID[7]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(S_ARSIZE[2]),
        .Q(ARSIZE_reg[2]));
  FDCE \AWBURST_reg_reg[0] 
       (.C(ACLK),
        .CE(\AWLEN_reg[7]_i_1_n_0 ),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_AWBURST[0]),
        .Q(\AWBURST_reg_reg_n_0_[0] ));
  FDCE \AWBURST_reg_reg[1] 
       (.C(ACLK),
        .CE(\AWLEN_reg[7]_i_1_n_0 ),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_AWBURST[1]),
        .Q(\AWBURST_reg_reg_n_0_[1] ));
  FDCE \AWID_reg_reg[0] 
       (.C(ACLK),
        .CE(\AWLEN_reg[7]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(S_AWID[0]),
        .Q(AWID_reg[0]));
  FDCE \AWID_reg_reg[1] 
       (.C(ACLK),
        .CE(\AWLEN_reg[7]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(S_AWID[1]),
        .Q(AWID_reg[1]));
  FDCE \AWID_reg_reg[2] 
       (.C(ACLK),
        .CE(\AWLEN_reg[7]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(S_AWID[2]),
        .Q(AWID_reg[2]));
  FDCE \AWID_reg_reg[3] 
       (.C(ACLK),
        .CE(\AWLEN_reg[7]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(S_AWID[3]),
        .Q(AWID_reg[3]));
  FDCE \AWID_reg_reg[4] 
       (.C(ACLK),
        .CE(\AWLEN_reg[7]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(S_AWID[4]),
        .Q(AWID_reg[4]));
  FDCE \AWID_reg_reg[5] 
       (.C(ACLK),
        .CE(\AWLEN_reg[7]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(S_AWID[5]),
        .Q(AWID_reg[5]));
  FDCE \AWID_reg_reg[6] 
       (.C(ACLK),
        .CE(\AWLEN_reg[7]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(S_AWID[6]),
        .Q(AWID_reg[6]));
  FDCE \AWID_reg_reg[7] 
       (.C(ACLK),
        .CE(\AWLEN_reg[7]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(S_AWID[7]),
        .Q(AWID_reg[7]));
  LUT4 #(
    .INIT(16'h0008)) 
    \AWLEN_reg[7]_i_1 
       (.I0(S_AWVALID),
        .I1(S_AWREADY_reg_0),
        .I2(stateW[0]),
        .I3(stateW[1]),
        .O(\AWLEN_reg[7]_i_1_n_0 ));
  FDCE \AWLEN_reg_reg[0] 
       (.C(ACLK),
        .CE(\AWLEN_reg[7]_i_1_n_0 ),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_AWLEN[0]),
        .Q(AWLEN_reg[0]));
  FDCE \AWLEN_reg_reg[1] 
       (.C(ACLK),
        .CE(\AWLEN_reg[7]_i_1_n_0 ),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_AWLEN[1]),
        .Q(AWLEN_reg[1]));
  FDCE \AWLEN_reg_reg[2] 
       (.C(ACLK),
        .CE(\AWLEN_reg[7]_i_1_n_0 ),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_AWLEN[2]),
        .Q(AWLEN_reg[2]));
  FDCE \AWLEN_reg_reg[3] 
       (.C(ACLK),
        .CE(\AWLEN_reg[7]_i_1_n_0 ),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_AWLEN[3]),
        .Q(AWLEN_reg[3]));
  FDCE \AWLEN_reg_reg[4] 
       (.C(ACLK),
        .CE(\AWLEN_reg[7]_i_1_n_0 ),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_AWLEN[4]),
        .Q(AWLEN_reg[4]));
  FDCE \AWLEN_reg_reg[5] 
       (.C(ACLK),
        .CE(\AWLEN_reg[7]_i_1_n_0 ),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_AWLEN[5]),
        .Q(AWLEN_reg[5]));
  FDCE \AWLEN_reg_reg[6] 
       (.C(ACLK),
        .CE(\AWLEN_reg[7]_i_1_n_0 ),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_AWLEN[6]),
        .Q(AWLEN_reg[6]));
  FDCE \AWLEN_reg_reg[7] 
       (.C(ACLK),
        .CE(\AWLEN_reg[7]_i_1_n_0 ),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_AWLEN[7]),
        .Q(AWLEN_reg[7]));
  FDCE \AWSIZE_reg_reg[0] 
       (.C(ACLK),
        .CE(\AWLEN_reg[7]_i_1_n_0 ),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_AWSIZE[0]),
        .Q(AWSIZE_reg[0]));
  FDCE \AWSIZE_reg_reg[1] 
       (.C(ACLK),
        .CE(\AWLEN_reg[7]_i_1_n_0 ),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_AWSIZE[1]),
        .Q(AWSIZE_reg[1]));
  FDCE \AWSIZE_reg_reg[2] 
       (.C(ACLK),
        .CE(\AWLEN_reg[7]_i_1_n_0 ),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_AWSIZE[2]),
        .Q(AWSIZE_reg[2]));
  LUT4 #(
    .INIT(16'h2F20)) 
    \DMA_ADDR_HEAD[0]_C_i_1 
       (.I0(rx_addr_start[0]),
        .I1(conf_rx_en),
        .I2(\DMA_ADDR_HEAD_reg[0]_C ),
        .I3(\DMA_ADDR_HEAD_reg[0]_C_0 ),
        .O(\rx_addr_start_reg[0]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD[0]_P_i_1 
       (.I0(rx_addr_start[0]),
        .I1(conf_rx_en),
        .O(\rx_addr_start_reg[0] ));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \DMA_ADDR_HEAD[10]_P_i_1 
       (.I0(rx_addr_start[10]),
        .I1(\DMA_ADDR_HEAD_reg[2]_P ),
        .I2(conf_rx_en),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [10]),
        .O(\rx_addr_start_reg[10] ));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \DMA_ADDR_HEAD[11]_P_i_1 
       (.I0(rx_addr_start[11]),
        .I1(\DMA_ADDR_HEAD_reg[2]_P ),
        .I2(conf_rx_en),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [11]),
        .O(\rx_addr_start_reg[11] ));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \DMA_ADDR_HEAD[12]_P_i_1 
       (.I0(rx_addr_start[12]),
        .I1(\DMA_ADDR_HEAD_reg[2]_P ),
        .I2(conf_rx_en),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [12]),
        .O(\rx_addr_start_reg[12] ));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \DMA_ADDR_HEAD[13]_P_i_1 
       (.I0(rx_addr_start[13]),
        .I1(\DMA_ADDR_HEAD_reg[2]_P ),
        .I2(conf_rx_en),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [13]),
        .O(\rx_addr_start_reg[13] ));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \DMA_ADDR_HEAD[14]_P_i_1 
       (.I0(rx_addr_start[14]),
        .I1(\DMA_ADDR_HEAD_reg[2]_P ),
        .I2(conf_rx_en),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [14]),
        .O(\rx_addr_start_reg[14] ));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \DMA_ADDR_HEAD[15]_P_i_1 
       (.I0(rx_addr_start[15]),
        .I1(\DMA_ADDR_HEAD_reg[2]_P ),
        .I2(conf_rx_en),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [15]),
        .O(\rx_addr_start_reg[15] ));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \DMA_ADDR_HEAD[16]_P_i_1 
       (.I0(rx_addr_start[16]),
        .I1(\DMA_ADDR_HEAD_reg[2]_P ),
        .I2(conf_rx_en),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [16]),
        .O(\rx_addr_start_reg[16] ));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \DMA_ADDR_HEAD[17]_P_i_1 
       (.I0(rx_addr_start[17]),
        .I1(\DMA_ADDR_HEAD_reg[2]_P ),
        .I2(conf_rx_en),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [17]),
        .O(\rx_addr_start_reg[17] ));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \DMA_ADDR_HEAD[18]_P_i_1 
       (.I0(rx_addr_start[18]),
        .I1(\DMA_ADDR_HEAD_reg[2]_P ),
        .I2(conf_rx_en),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [18]),
        .O(\rx_addr_start_reg[18] ));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \DMA_ADDR_HEAD[19]_P_i_1 
       (.I0(rx_addr_start[19]),
        .I1(\DMA_ADDR_HEAD_reg[2]_P ),
        .I2(conf_rx_en),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [19]),
        .O(\rx_addr_start_reg[19] ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \DMA_ADDR_HEAD[1]_C_i_1 
       (.I0(rx_addr_start[1]),
        .I1(conf_rx_en),
        .I2(\DMA_ADDR_HEAD_reg[0]_C ),
        .I3(\DMA_ADDR_HEAD_reg[1]_C ),
        .O(\rx_addr_start_reg[1]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD[1]_P_i_1 
       (.I0(rx_addr_start[1]),
        .I1(conf_rx_en),
        .O(\rx_addr_start_reg[1] ));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT4 #(
    .INIT(16'hBA8A)) 
    \DMA_ADDR_HEAD[20]_P_i_1 
       (.I0(rx_addr_start[20]),
        .I1(\DMA_ADDR_HEAD_reg[2]_P ),
        .I2(conf_rx_en),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [20]),
        .O(\rx_addr_start_reg[20] ));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \DMA_ADDR_HEAD[21]_P_i_1 
       (.I0(rx_addr_start[21]),
        .I1(\DMA_ADDR_HEAD_reg[2]_P ),
        .I2(conf_rx_en),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [21]),
        .O(\rx_addr_start_reg[21] ));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \DMA_ADDR_HEAD[22]_P_i_1 
       (.I0(rx_addr_start[22]),
        .I1(\DMA_ADDR_HEAD_reg[2]_P ),
        .I2(conf_rx_en),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [22]),
        .O(\rx_addr_start_reg[22] ));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \DMA_ADDR_HEAD[23]_P_i_1 
       (.I0(rx_addr_start[23]),
        .I1(\DMA_ADDR_HEAD_reg[2]_P ),
        .I2(conf_rx_en),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [23]),
        .O(\rx_addr_start_reg[23] ));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \DMA_ADDR_HEAD[24]_P_i_1 
       (.I0(rx_addr_start[24]),
        .I1(\DMA_ADDR_HEAD_reg[2]_P ),
        .I2(conf_rx_en),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [24]),
        .O(\rx_addr_start_reg[24] ));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \DMA_ADDR_HEAD[25]_P_i_1 
       (.I0(rx_addr_start[25]),
        .I1(\DMA_ADDR_HEAD_reg[2]_P ),
        .I2(conf_rx_en),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [25]),
        .O(\rx_addr_start_reg[25] ));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \DMA_ADDR_HEAD[26]_P_i_1 
       (.I0(rx_addr_start[26]),
        .I1(\DMA_ADDR_HEAD_reg[2]_P ),
        .I2(conf_rx_en),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [26]),
        .O(\rx_addr_start_reg[26] ));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \DMA_ADDR_HEAD[27]_P_i_1 
       (.I0(rx_addr_start[27]),
        .I1(\DMA_ADDR_HEAD_reg[2]_P ),
        .I2(conf_rx_en),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [27]),
        .O(\rx_addr_start_reg[27] ));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \DMA_ADDR_HEAD[28]_P_i_1 
       (.I0(rx_addr_start[28]),
        .I1(\DMA_ADDR_HEAD_reg[2]_P ),
        .I2(conf_rx_en),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [28]),
        .O(\rx_addr_start_reg[28] ));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \DMA_ADDR_HEAD[29]_P_i_1 
       (.I0(rx_addr_start[29]),
        .I1(\DMA_ADDR_HEAD_reg[2]_P ),
        .I2(conf_rx_en),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [29]),
        .O(\rx_addr_start_reg[29] ));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \DMA_ADDR_HEAD[2]_P_i_1 
       (.I0(rx_addr_start[2]),
        .I1(\DMA_ADDR_HEAD_reg[2]_P ),
        .I2(conf_rx_en),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [2]),
        .O(\rx_addr_start_reg[2] ));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \DMA_ADDR_HEAD[30]_P_i_1 
       (.I0(rx_addr_start[30]),
        .I1(\DMA_ADDR_HEAD_reg[2]_P ),
        .I2(conf_rx_en),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [30]),
        .O(\rx_addr_start_reg[30] ));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \DMA_ADDR_HEAD[31]_P_i_2 
       (.I0(rx_addr_start[31]),
        .I1(\DMA_ADDR_HEAD_reg[2]_P ),
        .I2(conf_rx_en),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [31]),
        .O(\rx_addr_start_reg[31] ));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \DMA_ADDR_HEAD[3]_P_i_1 
       (.I0(rx_addr_start[3]),
        .I1(\DMA_ADDR_HEAD_reg[2]_P ),
        .I2(conf_rx_en),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [3]),
        .O(\rx_addr_start_reg[3] ));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \DMA_ADDR_HEAD[4]_P_i_1 
       (.I0(rx_addr_start[4]),
        .I1(\DMA_ADDR_HEAD_reg[2]_P ),
        .I2(conf_rx_en),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [4]),
        .O(\rx_addr_start_reg[4] ));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \DMA_ADDR_HEAD[5]_P_i_1 
       (.I0(rx_addr_start[5]),
        .I1(\DMA_ADDR_HEAD_reg[2]_P ),
        .I2(conf_rx_en),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [5]),
        .O(\rx_addr_start_reg[5] ));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \DMA_ADDR_HEAD[6]_P_i_1 
       (.I0(rx_addr_start[6]),
        .I1(\DMA_ADDR_HEAD_reg[2]_P ),
        .I2(conf_rx_en),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [6]),
        .O(\rx_addr_start_reg[6] ));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \DMA_ADDR_HEAD[7]_P_i_1 
       (.I0(rx_addr_start[7]),
        .I1(\DMA_ADDR_HEAD_reg[2]_P ),
        .I2(conf_rx_en),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [7]),
        .O(\rx_addr_start_reg[7] ));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \DMA_ADDR_HEAD[8]_P_i_1 
       (.I0(rx_addr_start[8]),
        .I1(\DMA_ADDR_HEAD_reg[2]_P ),
        .I2(conf_rx_en),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [8]),
        .O(\rx_addr_start_reg[8] ));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \DMA_ADDR_HEAD[9]_P_i_1 
       (.I0(rx_addr_start[9]),
        .I1(\DMA_ADDR_HEAD_reg[2]_P ),
        .I2(conf_rx_en),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [9]),
        .O(\rx_addr_start_reg[9] ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[0]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[0]),
        .O(\rx_addr_start_reg[0]_2 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[0]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[0]),
        .O(\rx_addr_start_reg[0]_1 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[10]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[10]),
        .O(\rx_addr_start_reg[10]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[10]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[10]),
        .O(\rx_addr_start_reg[10]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[11]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[11]),
        .O(\rx_addr_start_reg[11]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[11]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[11]),
        .O(\rx_addr_start_reg[11]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[12]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[12]),
        .O(\rx_addr_start_reg[12]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[12]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[12]),
        .O(\rx_addr_start_reg[12]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[13]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[13]),
        .O(\rx_addr_start_reg[13]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[13]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[13]),
        .O(\rx_addr_start_reg[13]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[14]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[14]),
        .O(\rx_addr_start_reg[14]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[14]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[14]),
        .O(\rx_addr_start_reg[14]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[15]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[15]),
        .O(\rx_addr_start_reg[15]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[15]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[15]),
        .O(\rx_addr_start_reg[15]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[16]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[16]),
        .O(\rx_addr_start_reg[16]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[16]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[16]),
        .O(\rx_addr_start_reg[16]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[17]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[17]),
        .O(\rx_addr_start_reg[17]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[17]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[17]),
        .O(\rx_addr_start_reg[17]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[18]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[18]),
        .O(\rx_addr_start_reg[18]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[18]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[18]),
        .O(\rx_addr_start_reg[18]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[19]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[19]),
        .O(\rx_addr_start_reg[19]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[19]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[19]),
        .O(\rx_addr_start_reg[19]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[1]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[1]),
        .O(\rx_addr_start_reg[1]_2 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[1]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[1]),
        .O(\rx_addr_start_reg[1]_1 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[20]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[20]),
        .O(\rx_addr_start_reg[20]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[20]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[20]),
        .O(\rx_addr_start_reg[20]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[21]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[21]),
        .O(\rx_addr_start_reg[21]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[21]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[21]),
        .O(\rx_addr_start_reg[21]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[22]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[22]),
        .O(\rx_addr_start_reg[22]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[22]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[22]),
        .O(\rx_addr_start_reg[22]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[23]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[23]),
        .O(\rx_addr_start_reg[23]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[23]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[23]),
        .O(\rx_addr_start_reg[23]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[24]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[24]),
        .O(\rx_addr_start_reg[24]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[24]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[24]),
        .O(\rx_addr_start_reg[24]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[25]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[25]),
        .O(\rx_addr_start_reg[25]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[25]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[25]),
        .O(\rx_addr_start_reg[25]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[26]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[26]),
        .O(\rx_addr_start_reg[26]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[26]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[26]),
        .O(\rx_addr_start_reg[26]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[27]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[27]),
        .O(\rx_addr_start_reg[27]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[27]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[27]),
        .O(\rx_addr_start_reg[27]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[28]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[28]),
        .O(\rx_addr_start_reg[28]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[28]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[28]),
        .O(\rx_addr_start_reg[28]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[29]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[29]),
        .O(\rx_addr_start_reg[29]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[29]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[29]),
        .O(\rx_addr_start_reg[29]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[2]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[2]),
        .O(\rx_addr_start_reg[2]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[2]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[2]),
        .O(\rx_addr_start_reg[2]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[30]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[30]),
        .O(\rx_addr_start_reg[30]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[30]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[30]),
        .O(\rx_addr_start_reg[30]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[31]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[31]),
        .O(\rx_addr_start_reg[31]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[31]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[31]),
        .O(\rx_addr_start_reg[31]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[3]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[3]),
        .O(\rx_addr_start_reg[3]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[3]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[3]),
        .O(\rx_addr_start_reg[3]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[4]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[4]),
        .O(\rx_addr_start_reg[4]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[4]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[4]),
        .O(\rx_addr_start_reg[4]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[5]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[5]),
        .O(\rx_addr_start_reg[5]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[5]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[5]),
        .O(\rx_addr_start_reg[5]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[6]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[6]),
        .O(\rx_addr_start_reg[6]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[6]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[6]),
        .O(\rx_addr_start_reg[6]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[7]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[7]),
        .O(\rx_addr_start_reg[7]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[7]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[7]),
        .O(\rx_addr_start_reg[7]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[8]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[8]),
        .O(\rx_addr_start_reg[8]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[8]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[8]),
        .O(\rx_addr_start_reg[8]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_HEAD_reg[9]_LDC_i_1 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[9]),
        .O(\rx_addr_start_reg[9]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_HEAD_reg[9]_LDC_i_2 
       (.I0(conf_rx_reset),
        .I1(rx_addr_start[9]),
        .O(\rx_addr_start_reg[9]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL[0]_P_i_1 
       (.I0(tx_addr_start[0]),
        .I1(conf_tx_en),
        .O(\tx_addr_start_reg[0] ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \DMA_ADDR_TAIL[10]_P_i_1 
       (.I0(Q[10]),
        .I1(conf_tx_en),
        .I2(\tx_addr_end_reg[29] ),
        .I3(tx_addr_start[10]),
        .O(\R_addr_reg[10] ));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \DMA_ADDR_TAIL[11]_P_i_1 
       (.I0(Q[11]),
        .I1(conf_tx_en),
        .I2(\tx_addr_end_reg[29] ),
        .I3(tx_addr_start[11]),
        .O(\R_addr_reg[11] ));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \DMA_ADDR_TAIL[12]_P_i_1 
       (.I0(Q[12]),
        .I1(conf_tx_en),
        .I2(\tx_addr_end_reg[29] ),
        .I3(tx_addr_start[12]),
        .O(\R_addr_reg[12] ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \DMA_ADDR_TAIL[13]_P_i_1 
       (.I0(Q[13]),
        .I1(conf_tx_en),
        .I2(\tx_addr_end_reg[29] ),
        .I3(tx_addr_start[13]),
        .O(\R_addr_reg[13] ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \DMA_ADDR_TAIL[14]_P_i_1 
       (.I0(Q[14]),
        .I1(conf_tx_en),
        .I2(\tx_addr_end_reg[29] ),
        .I3(tx_addr_start[14]),
        .O(\R_addr_reg[14] ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \DMA_ADDR_TAIL[15]_P_i_1 
       (.I0(Q[15]),
        .I1(conf_tx_en),
        .I2(\tx_addr_end_reg[29] ),
        .I3(tx_addr_start[15]),
        .O(\R_addr_reg[15] ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \DMA_ADDR_TAIL[16]_P_i_1 
       (.I0(Q[16]),
        .I1(conf_tx_en),
        .I2(\tx_addr_end_reg[29] ),
        .I3(tx_addr_start[16]),
        .O(\R_addr_reg[16] ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \DMA_ADDR_TAIL[17]_P_i_1 
       (.I0(Q[17]),
        .I1(conf_tx_en),
        .I2(\tx_addr_end_reg[29] ),
        .I3(tx_addr_start[17]),
        .O(\R_addr_reg[17] ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \DMA_ADDR_TAIL[18]_P_i_1 
       (.I0(Q[18]),
        .I1(conf_tx_en),
        .I2(\tx_addr_end_reg[29] ),
        .I3(tx_addr_start[18]),
        .O(\R_addr_reg[18] ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \DMA_ADDR_TAIL[19]_P_i_1 
       (.I0(Q[19]),
        .I1(conf_tx_en),
        .I2(\tx_addr_end_reg[29] ),
        .I3(tx_addr_start[19]),
        .O(\R_addr_reg[19] ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL[1]_P_i_1 
       (.I0(tx_addr_start[1]),
        .I1(conf_tx_en),
        .O(\tx_addr_start_reg[1] ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \DMA_ADDR_TAIL[20]_P_i_1 
       (.I0(Q[20]),
        .I1(conf_tx_en),
        .I2(\tx_addr_end_reg[29] ),
        .I3(tx_addr_start[20]),
        .O(\R_addr_reg[20] ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \DMA_ADDR_TAIL[21]_P_i_1 
       (.I0(Q[21]),
        .I1(conf_tx_en),
        .I2(\tx_addr_end_reg[29] ),
        .I3(tx_addr_start[21]),
        .O(\R_addr_reg[21] ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \DMA_ADDR_TAIL[22]_P_i_1 
       (.I0(Q[22]),
        .I1(conf_tx_en),
        .I2(\tx_addr_end_reg[29] ),
        .I3(tx_addr_start[22]),
        .O(\R_addr_reg[22] ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \DMA_ADDR_TAIL[23]_P_i_1 
       (.I0(Q[23]),
        .I1(conf_tx_en),
        .I2(\tx_addr_end_reg[29] ),
        .I3(tx_addr_start[23]),
        .O(\R_addr_reg[23] ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \DMA_ADDR_TAIL[24]_P_i_1 
       (.I0(Q[24]),
        .I1(conf_tx_en),
        .I2(\tx_addr_end_reg[29] ),
        .I3(tx_addr_start[24]),
        .O(\R_addr_reg[24] ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \DMA_ADDR_TAIL[25]_P_i_1 
       (.I0(Q[25]),
        .I1(conf_tx_en),
        .I2(\tx_addr_end_reg[29] ),
        .I3(tx_addr_start[25]),
        .O(\R_addr_reg[25] ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \DMA_ADDR_TAIL[26]_P_i_1 
       (.I0(Q[26]),
        .I1(conf_tx_en),
        .I2(\tx_addr_end_reg[29] ),
        .I3(tx_addr_start[26]),
        .O(\R_addr_reg[26] ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \DMA_ADDR_TAIL[27]_P_i_1 
       (.I0(Q[27]),
        .I1(conf_tx_en),
        .I2(\tx_addr_end_reg[29] ),
        .I3(tx_addr_start[27]),
        .O(\R_addr_reg[27] ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \DMA_ADDR_TAIL[28]_P_i_1 
       (.I0(Q[28]),
        .I1(conf_tx_en),
        .I2(\tx_addr_end_reg[29] ),
        .I3(tx_addr_start[28]),
        .O(\R_addr_reg[28] ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \DMA_ADDR_TAIL[29]_P_i_1 
       (.I0(Q[29]),
        .I1(conf_tx_en),
        .I2(\tx_addr_end_reg[29] ),
        .I3(tx_addr_start[29]),
        .O(\R_addr_reg[29] ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \DMA_ADDR_TAIL[2]_P_i_1 
       (.I0(Q[2]),
        .I1(conf_tx_en),
        .I2(\tx_addr_end_reg[29] ),
        .I3(tx_addr_start[2]),
        .O(\R_addr_reg[2] ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \DMA_ADDR_TAIL[30]_P_i_1 
       (.I0(Q[30]),
        .I1(conf_tx_en),
        .I2(\tx_addr_end_reg[29] ),
        .I3(tx_addr_start[30]),
        .O(\R_addr_reg[30] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \DMA_ADDR_TAIL[31]_P_i_10 
       (.I0(tx_addr_end[17]),
        .I1(Q[17]),
        .I2(Q[19]),
        .I3(tx_addr_end[19]),
        .I4(Q[18]),
        .I5(tx_addr_end[18]),
        .O(\DMA_ADDR_TAIL[31]_P_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \DMA_ADDR_TAIL[31]_P_i_11 
       (.I0(tx_addr_end[15]),
        .I1(Q[15]),
        .I2(Q[16]),
        .I3(tx_addr_end[16]),
        .I4(Q[14]),
        .I5(tx_addr_end[14]),
        .O(\DMA_ADDR_TAIL[31]_P_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \DMA_ADDR_TAIL[31]_P_i_12 
       (.I0(tx_addr_end[11]),
        .I1(Q[11]),
        .I2(Q[13]),
        .I3(tx_addr_end[13]),
        .I4(Q[12]),
        .I5(tx_addr_end[12]),
        .O(\DMA_ADDR_TAIL[31]_P_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \DMA_ADDR_TAIL[31]_P_i_13 
       (.I0(tx_addr_end[9]),
        .I1(Q[9]),
        .I2(Q[10]),
        .I3(tx_addr_end[10]),
        .I4(Q[8]),
        .I5(tx_addr_end[8]),
        .O(\DMA_ADDR_TAIL[31]_P_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \DMA_ADDR_TAIL[31]_P_i_14 
       (.I0(tx_addr_end[6]),
        .I1(Q[6]),
        .I2(Q[7]),
        .I3(tx_addr_end[7]),
        .I4(Q[5]),
        .I5(tx_addr_end[5]),
        .O(\DMA_ADDR_TAIL[31]_P_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \DMA_ADDR_TAIL[31]_P_i_15 
       (.I0(tx_addr_end[3]),
        .I1(Q[3]),
        .I2(Q[4]),
        .I3(tx_addr_end[4]),
        .I4(Q[2]),
        .I5(tx_addr_end[2]),
        .O(\DMA_ADDR_TAIL[31]_P_i_15_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \DMA_ADDR_TAIL[31]_P_i_2 
       (.I0(Q[31]),
        .I1(conf_tx_en),
        .I2(\tx_addr_end_reg[29] ),
        .I3(tx_addr_start[31]),
        .O(\R_addr_reg[31] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \DMA_ADDR_TAIL[31]_P_i_5 
       (.I0(tx_addr_end[29]),
        .I1(Q[29]),
        .I2(Q[30]),
        .I3(tx_addr_end[30]),
        .I4(Q[31]),
        .I5(tx_addr_end[31]),
        .O(\DMA_ADDR_TAIL[31]_P_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \DMA_ADDR_TAIL[31]_P_i_6 
       (.I0(tx_addr_end[26]),
        .I1(Q[26]),
        .I2(Q[28]),
        .I3(tx_addr_end[28]),
        .I4(Q[27]),
        .I5(tx_addr_end[27]),
        .O(\DMA_ADDR_TAIL[31]_P_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \DMA_ADDR_TAIL[31]_P_i_8 
       (.I0(tx_addr_end[23]),
        .I1(Q[23]),
        .I2(Q[25]),
        .I3(tx_addr_end[25]),
        .I4(Q[24]),
        .I5(tx_addr_end[24]),
        .O(\DMA_ADDR_TAIL[31]_P_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \DMA_ADDR_TAIL[31]_P_i_9 
       (.I0(tx_addr_end[21]),
        .I1(Q[21]),
        .I2(Q[22]),
        .I3(tx_addr_end[22]),
        .I4(Q[20]),
        .I5(tx_addr_end[20]),
        .O(\DMA_ADDR_TAIL[31]_P_i_9_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \DMA_ADDR_TAIL[3]_P_i_1 
       (.I0(Q[3]),
        .I1(conf_tx_en),
        .I2(\tx_addr_end_reg[29] ),
        .I3(tx_addr_start[3]),
        .O(\R_addr_reg[3] ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \DMA_ADDR_TAIL[4]_P_i_1 
       (.I0(Q[4]),
        .I1(conf_tx_en),
        .I2(\tx_addr_end_reg[29] ),
        .I3(tx_addr_start[4]),
        .O(\R_addr_reg[4] ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \DMA_ADDR_TAIL[5]_P_i_1 
       (.I0(Q[5]),
        .I1(conf_tx_en),
        .I2(\tx_addr_end_reg[29] ),
        .I3(tx_addr_start[5]),
        .O(\R_addr_reg[5] ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \DMA_ADDR_TAIL[6]_P_i_1 
       (.I0(Q[6]),
        .I1(conf_tx_en),
        .I2(\tx_addr_end_reg[29] ),
        .I3(tx_addr_start[6]),
        .O(\R_addr_reg[6] ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \DMA_ADDR_TAIL[7]_P_i_1 
       (.I0(Q[7]),
        .I1(conf_tx_en),
        .I2(\tx_addr_end_reg[29] ),
        .I3(tx_addr_start[7]),
        .O(\R_addr_reg[7] ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \DMA_ADDR_TAIL[8]_P_i_1 
       (.I0(Q[8]),
        .I1(conf_tx_en),
        .I2(\tx_addr_end_reg[29] ),
        .I3(tx_addr_start[8]),
        .O(\R_addr_reg[8] ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \DMA_ADDR_TAIL[9]_P_i_1 
       (.I0(Q[9]),
        .I1(conf_tx_en),
        .I2(\tx_addr_end_reg[29] ),
        .I3(tx_addr_start[9]),
        .O(\R_addr_reg[9] ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[0]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[0]),
        .O(\tx_addr_start_reg[0]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[0]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[0]),
        .O(\tx_addr_start_reg[0]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[10]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[10]),
        .O(\tx_addr_start_reg[10]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[10]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[10]),
        .O(\tx_addr_start_reg[10] ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[11]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[11]),
        .O(\tx_addr_start_reg[11]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[11]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[11]),
        .O(\tx_addr_start_reg[11] ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[12]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[12]),
        .O(\tx_addr_start_reg[12]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[12]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[12]),
        .O(\tx_addr_start_reg[12] ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[13]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[13]),
        .O(\tx_addr_start_reg[13]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[13]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[13]),
        .O(\tx_addr_start_reg[13] ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[14]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[14]),
        .O(\tx_addr_start_reg[14]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[14]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[14]),
        .O(\tx_addr_start_reg[14] ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[15]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[15]),
        .O(\tx_addr_start_reg[15]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[15]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[15]),
        .O(\tx_addr_start_reg[15] ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[16]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[16]),
        .O(\tx_addr_start_reg[16]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[16]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[16]),
        .O(\tx_addr_start_reg[16] ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[17]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[17]),
        .O(\tx_addr_start_reg[17]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[17]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[17]),
        .O(\tx_addr_start_reg[17] ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[18]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[18]),
        .O(\tx_addr_start_reg[18]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[18]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[18]),
        .O(\tx_addr_start_reg[18] ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[19]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[19]),
        .O(\tx_addr_start_reg[19]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[19]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[19]),
        .O(\tx_addr_start_reg[19] ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[1]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[1]),
        .O(\tx_addr_start_reg[1]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[1]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[1]),
        .O(\tx_addr_start_reg[1]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[20]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[20]),
        .O(\tx_addr_start_reg[20]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[20]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[20]),
        .O(\tx_addr_start_reg[20] ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[21]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[21]),
        .O(\tx_addr_start_reg[21]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[21]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[21]),
        .O(\tx_addr_start_reg[21] ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[22]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[22]),
        .O(\tx_addr_start_reg[22]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[22]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[22]),
        .O(\tx_addr_start_reg[22] ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[23]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[23]),
        .O(\tx_addr_start_reg[23]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[23]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[23]),
        .O(\tx_addr_start_reg[23] ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[24]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[24]),
        .O(\tx_addr_start_reg[24]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[24]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[24]),
        .O(\tx_addr_start_reg[24] ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[25]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[25]),
        .O(\tx_addr_start_reg[25]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[25]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[25]),
        .O(\tx_addr_start_reg[25] ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[26]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[26]),
        .O(\tx_addr_start_reg[26]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[26]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[26]),
        .O(\tx_addr_start_reg[26] ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[27]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[27]),
        .O(\tx_addr_start_reg[27]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[27]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[27]),
        .O(\tx_addr_start_reg[27] ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[28]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[28]),
        .O(\tx_addr_start_reg[28]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[28]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[28]),
        .O(\tx_addr_start_reg[28] ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[29]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[29]),
        .O(\tx_addr_start_reg[29]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[29]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[29]),
        .O(\tx_addr_start_reg[29] ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[2]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[2]),
        .O(\tx_addr_start_reg[2]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[2]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[2]),
        .O(\tx_addr_start_reg[2] ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[30]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[30]),
        .O(\tx_addr_start_reg[30]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[30]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[30]),
        .O(\tx_addr_start_reg[30] ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[31]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[31]),
        .O(\tx_addr_start_reg[31]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[31]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[31]),
        .O(\tx_addr_start_reg[31] ));
  CARRY4 \DMA_ADDR_TAIL_reg[31]_P_i_3 
       (.CI(\DMA_ADDR_TAIL_reg[31]_P_i_4_n_0 ),
        .CO({\NLW_DMA_ADDR_TAIL_reg[31]_P_i_3_CO_UNCONNECTED [3:2],\tx_addr_end_reg[29] ,\DMA_ADDR_TAIL_reg[31]_P_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_DMA_ADDR_TAIL_reg[31]_P_i_3_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,\DMA_ADDR_TAIL[31]_P_i_5_n_0 ,\DMA_ADDR_TAIL[31]_P_i_6_n_0 }));
  CARRY4 \DMA_ADDR_TAIL_reg[31]_P_i_4 
       (.CI(\DMA_ADDR_TAIL_reg[31]_P_i_7_n_0 ),
        .CO({\DMA_ADDR_TAIL_reg[31]_P_i_4_n_0 ,\DMA_ADDR_TAIL_reg[31]_P_i_4_n_1 ,\DMA_ADDR_TAIL_reg[31]_P_i_4_n_2 ,\DMA_ADDR_TAIL_reg[31]_P_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_DMA_ADDR_TAIL_reg[31]_P_i_4_O_UNCONNECTED [3:0]),
        .S({\DMA_ADDR_TAIL[31]_P_i_8_n_0 ,\DMA_ADDR_TAIL[31]_P_i_9_n_0 ,\DMA_ADDR_TAIL[31]_P_i_10_n_0 ,\DMA_ADDR_TAIL[31]_P_i_11_n_0 }));
  CARRY4 \DMA_ADDR_TAIL_reg[31]_P_i_7 
       (.CI(1'b0),
        .CO({\DMA_ADDR_TAIL_reg[31]_P_i_7_n_0 ,\DMA_ADDR_TAIL_reg[31]_P_i_7_n_1 ,\DMA_ADDR_TAIL_reg[31]_P_i_7_n_2 ,\DMA_ADDR_TAIL_reg[31]_P_i_7_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_DMA_ADDR_TAIL_reg[31]_P_i_7_O_UNCONNECTED [3:0]),
        .S({\DMA_ADDR_TAIL[31]_P_i_12_n_0 ,\DMA_ADDR_TAIL[31]_P_i_13_n_0 ,\DMA_ADDR_TAIL[31]_P_i_14_n_0 ,\DMA_ADDR_TAIL[31]_P_i_15_n_0 }));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[3]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[3]),
        .O(\tx_addr_start_reg[3]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[3]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[3]),
        .O(\tx_addr_start_reg[3] ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[4]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[4]),
        .O(\tx_addr_start_reg[4]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[4]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[4]),
        .O(\tx_addr_start_reg[4] ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[5]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[5]),
        .O(\tx_addr_start_reg[5]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[5]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[5]),
        .O(\tx_addr_start_reg[5] ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[6]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[6]),
        .O(\tx_addr_start_reg[6]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[6]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[6]),
        .O(\tx_addr_start_reg[6] ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[7]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[7]),
        .O(\tx_addr_start_reg[7]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[7]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[7]),
        .O(\tx_addr_start_reg[7] ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[8]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[8]),
        .O(\tx_addr_start_reg[8]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[8]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[8]),
        .O(\tx_addr_start_reg[8] ));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_ADDR_TAIL_reg[9]_LDC_i_1 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[9]),
        .O(\tx_addr_start_reg[9]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \DMA_ADDR_TAIL_reg[9]_LDC_i_2 
       (.I0(conf_tx_reset),
        .I1(tx_addr_start[9]),
        .O(\tx_addr_start_reg[9] ));
  LUT4 #(
    .INIT(16'hE200)) 
    \DMA_BREM[0]_i_1 
       (.I0(desc_tx_bnum[0]),
        .I1(out),
        .I2(\DMA_BREM_reg[3] [0]),
        .I3(conf_tx_en),
        .O(\state_reg[1]_2 [0]));
  LUT4 #(
    .INIT(16'hE200)) 
    \DMA_BREM[10]_i_1 
       (.I0(desc_tx_bnum[10]),
        .I1(out),
        .I2(\DMA_BREM_reg[11] [2]),
        .I3(conf_tx_en),
        .O(\state_reg[1]_2 [10]));
  LUT4 #(
    .INIT(16'hE200)) 
    \DMA_BREM[11]_i_1 
       (.I0(desc_tx_bnum[11]),
        .I1(out),
        .I2(\DMA_BREM_reg[11] [3]),
        .I3(conf_tx_en),
        .O(\state_reg[1]_2 [11]));
  LUT4 #(
    .INIT(16'hE200)) 
    \DMA_BREM[12]_i_1 
       (.I0(desc_tx_bnum[12]),
        .I1(out),
        .I2(\DMA_BREM_reg[15]_0 [0]),
        .I3(conf_tx_en),
        .O(\state_reg[1]_2 [12]));
  LUT4 #(
    .INIT(16'hE200)) 
    \DMA_BREM[13]_i_1 
       (.I0(desc_tx_bnum[13]),
        .I1(out),
        .I2(\DMA_BREM_reg[15]_0 [1]),
        .I3(conf_tx_en),
        .O(\state_reg[1]_2 [13]));
  LUT4 #(
    .INIT(16'hE200)) 
    \DMA_BREM[14]_i_1 
       (.I0(desc_tx_bnum[14]),
        .I1(out),
        .I2(\DMA_BREM_reg[15]_0 [2]),
        .I3(conf_tx_en),
        .O(\state_reg[1]_2 [14]));
  LUT4 #(
    .INIT(16'hE200)) 
    \DMA_BREM[15]_i_1 
       (.I0(desc_tx_bnum[15]),
        .I1(out),
        .I2(\DMA_BREM_reg[15]_0 [3]),
        .I3(conf_tx_en),
        .O(\state_reg[1]_2 [15]));
  LUT4 #(
    .INIT(16'hE200)) 
    \DMA_BREM[1]_i_1 
       (.I0(desc_tx_bnum[1]),
        .I1(out),
        .I2(\DMA_BREM_reg[3] [1]),
        .I3(conf_tx_en),
        .O(\state_reg[1]_2 [1]));
  LUT4 #(
    .INIT(16'hE200)) 
    \DMA_BREM[2]_i_1 
       (.I0(desc_tx_bnum[2]),
        .I1(out),
        .I2(\DMA_BREM_reg[3] [2]),
        .I3(conf_tx_en),
        .O(\state_reg[1]_2 [2]));
  LUT4 #(
    .INIT(16'hE200)) 
    \DMA_BREM[3]_i_1 
       (.I0(desc_tx_bnum[3]),
        .I1(out),
        .I2(\DMA_BREM_reg[3] [3]),
        .I3(conf_tx_en),
        .O(\state_reg[1]_2 [3]));
  LUT4 #(
    .INIT(16'hE200)) 
    \DMA_BREM[4]_i_1 
       (.I0(desc_tx_bnum[4]),
        .I1(out),
        .I2(\DMA_BREM_reg[7]_0 [0]),
        .I3(conf_tx_en),
        .O(\state_reg[1]_2 [4]));
  LUT4 #(
    .INIT(16'hE200)) 
    \DMA_BREM[5]_i_1 
       (.I0(desc_tx_bnum[5]),
        .I1(out),
        .I2(\DMA_BREM_reg[7]_0 [1]),
        .I3(conf_tx_en),
        .O(\state_reg[1]_2 [5]));
  LUT4 #(
    .INIT(16'hE200)) 
    \DMA_BREM[6]_i_1 
       (.I0(desc_tx_bnum[6]),
        .I1(out),
        .I2(\DMA_BREM_reg[7]_0 [2]),
        .I3(conf_tx_en),
        .O(\state_reg[1]_2 [6]));
  LUT4 #(
    .INIT(16'hE200)) 
    \DMA_BREM[7]_i_1 
       (.I0(desc_tx_bnum[7]),
        .I1(out),
        .I2(\DMA_BREM_reg[7]_0 [3]),
        .I3(conf_tx_en),
        .O(\state_reg[1]_2 [7]));
  LUT4 #(
    .INIT(16'hE200)) 
    \DMA_BREM[8]_i_1 
       (.I0(desc_tx_bnum[8]),
        .I1(out),
        .I2(\DMA_BREM_reg[11] [0]),
        .I3(conf_tx_en),
        .O(\state_reg[1]_2 [8]));
  LUT4 #(
    .INIT(16'hE200)) 
    \DMA_BREM[9]_i_1 
       (.I0(desc_tx_bnum[9]),
        .I1(out),
        .I2(\DMA_BREM_reg[11] [1]),
        .I3(conf_tx_en),
        .O(\state_reg[1]_2 [9]));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_WCHUNK[0]_i_1 
       (.I0(conf_tx_en),
        .I1(DMA_TX_BCHUNK[2]),
        .O(conf_tx_en_reg_1[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_WCHUNK[0]_i_1__0 
       (.I0(conf_rx_en),
        .I1(DMA_RX_BCHUNK[2]),
        .O(conf_rx_en_reg_2[0]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_WCHUNK[10]_i_1 
       (.I0(conf_tx_en),
        .I1(DMA_TX_BCHUNK[12]),
        .O(conf_tx_en_reg_1[10]));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_WCHUNK[10]_i_1__0 
       (.I0(conf_rx_en),
        .I1(DMA_RX_BCHUNK[12]),
        .O(conf_rx_en_reg_2[10]));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_WCHUNK[11]_i_1 
       (.I0(conf_tx_en),
        .I1(DMA_TX_BCHUNK[13]),
        .O(conf_tx_en_reg_1[11]));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_WCHUNK[11]_i_1__0 
       (.I0(conf_rx_en),
        .I1(DMA_RX_BCHUNK[13]),
        .O(conf_rx_en_reg_2[11]));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_WCHUNK[12]_i_1 
       (.I0(conf_tx_en),
        .I1(DMA_TX_BCHUNK[14]),
        .O(conf_tx_en_reg_1[12]));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_WCHUNK[12]_i_1__0 
       (.I0(conf_rx_en),
        .I1(DMA_RX_BCHUNK[14]),
        .O(conf_rx_en_reg_2[12]));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_WCHUNK[13]_i_2 
       (.I0(conf_tx_en),
        .I1(DMA_TX_BCHUNK[15]),
        .O(conf_tx_en_reg_1[13]));
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_WCHUNK[13]_i_2__0 
       (.I0(conf_rx_en),
        .I1(DMA_RX_BCHUNK[15]),
        .O(conf_rx_en_reg_2[13]));
  LUT5 #(
    .INIT(32'hBFFFFFFF)) 
    \DMA_WCHUNK[13]_i_3 
       (.I0(rx_descriptor_full),
        .I1(dout[2]),
        .I2(dout[3]),
        .I3(dout[1]),
        .I4(dout[0]),
        .O(\item_cnt_reg[4] ));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_WCHUNK[1]_i_1 
       (.I0(conf_tx_en),
        .I1(DMA_TX_BCHUNK[3]),
        .O(conf_tx_en_reg_1[1]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_WCHUNK[1]_i_1__0 
       (.I0(conf_rx_en),
        .I1(DMA_RX_BCHUNK[3]),
        .O(conf_rx_en_reg_2[1]));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_WCHUNK[2]_i_1 
       (.I0(conf_tx_en),
        .I1(DMA_TX_BCHUNK[4]),
        .O(conf_tx_en_reg_1[2]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_WCHUNK[2]_i_1__0 
       (.I0(conf_rx_en),
        .I1(DMA_RX_BCHUNK[4]),
        .O(conf_rx_en_reg_2[2]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_WCHUNK[3]_i_1 
       (.I0(conf_tx_en),
        .I1(DMA_TX_BCHUNK[5]),
        .O(conf_tx_en_reg_1[3]));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_WCHUNK[3]_i_1__0 
       (.I0(conf_rx_en),
        .I1(DMA_RX_BCHUNK[5]),
        .O(conf_rx_en_reg_2[3]));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_WCHUNK[4]_i_1 
       (.I0(conf_tx_en),
        .I1(DMA_TX_BCHUNK[6]),
        .O(conf_tx_en_reg_1[4]));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_WCHUNK[4]_i_1__0 
       (.I0(conf_rx_en),
        .I1(DMA_RX_BCHUNK[6]),
        .O(conf_rx_en_reg_2[4]));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_WCHUNK[5]_i_1 
       (.I0(conf_tx_en),
        .I1(DMA_TX_BCHUNK[7]),
        .O(conf_tx_en_reg_1[5]));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_WCHUNK[5]_i_1__0 
       (.I0(conf_rx_en),
        .I1(DMA_RX_BCHUNK[7]),
        .O(conf_rx_en_reg_2[5]));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_WCHUNK[6]_i_1 
       (.I0(conf_tx_en),
        .I1(DMA_TX_BCHUNK[8]),
        .O(conf_tx_en_reg_1[6]));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_WCHUNK[6]_i_1__0 
       (.I0(conf_rx_en),
        .I1(DMA_RX_BCHUNK[8]),
        .O(conf_rx_en_reg_2[6]));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_WCHUNK[7]_i_1 
       (.I0(conf_tx_en),
        .I1(DMA_TX_BCHUNK[9]),
        .O(conf_tx_en_reg_1[7]));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_WCHUNK[7]_i_1__0 
       (.I0(conf_rx_en),
        .I1(DMA_RX_BCHUNK[9]),
        .O(conf_rx_en_reg_2[7]));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_WCHUNK[8]_i_1 
       (.I0(conf_tx_en),
        .I1(DMA_TX_BCHUNK[10]),
        .O(conf_tx_en_reg_1[8]));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_WCHUNK[8]_i_1__0 
       (.I0(conf_rx_en),
        .I1(DMA_RX_BCHUNK[10]),
        .O(conf_rx_en_reg_2[8]));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_WCHUNK[9]_i_1 
       (.I0(conf_tx_en),
        .I1(DMA_TX_BCHUNK[11]),
        .O(conf_tx_en_reg_1[9]));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \DMA_WCHUNK[9]_i_1__0 
       (.I0(conf_rx_en),
        .I1(DMA_RX_BCHUNK[11]),
        .O(conf_rx_en_reg_2[9]));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[0]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[0]),
        .O(conf_tx_en_reg_0[0]));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[10]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[10]),
        .O(conf_tx_en_reg_0[10]));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[11]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[11]),
        .O(conf_tx_en_reg_0[11]));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[12]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[12]),
        .O(conf_tx_en_reg_0[12]));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[13]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[13]),
        .O(conf_tx_en_reg_0[13]));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[14]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[14]),
        .O(conf_tx_en_reg_0[14]));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[15]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[15]),
        .O(conf_tx_en_reg_0[15]));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[16]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[16]),
        .O(conf_tx_en_reg_0[16]));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[17]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[17]),
        .O(conf_tx_en_reg_0[17]));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[18]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[18]),
        .O(conf_tx_en_reg_0[18]));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[19]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[19]),
        .O(conf_tx_en_reg_0[19]));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[1]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[1]),
        .O(conf_tx_en_reg_0[1]));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[20]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[20]),
        .O(conf_tx_en_reg_0[20]));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[21]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[21]),
        .O(conf_tx_en_reg_0[21]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[22]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[22]),
        .O(conf_tx_en_reg_0[22]));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[23]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[23]),
        .O(conf_tx_en_reg_0[23]));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[24]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[24]),
        .O(conf_tx_en_reg_0[24]));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[25]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[25]),
        .O(conf_tx_en_reg_0[25]));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[26]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[26]),
        .O(conf_tx_en_reg_0[26]));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[27]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[27]),
        .O(conf_tx_en_reg_0[27]));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[28]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[28]),
        .O(conf_tx_en_reg_0[28]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[29]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[29]),
        .O(conf_tx_en_reg_0[29]));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[2]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[2]),
        .O(conf_tx_en_reg_0[2]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[30]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[30]),
        .O(conf_tx_en_reg_0[30]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[31]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[31]),
        .O(conf_tx_en_reg_0[31]));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[3]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[3]),
        .O(conf_tx_en_reg_0[3]));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[4]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[4]),
        .O(conf_tx_en_reg_0[4]));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[5]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[5]),
        .O(conf_tx_en_reg_0[5]));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[6]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[6]),
        .O(conf_tx_en_reg_0[6]));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[7]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[7]),
        .O(conf_tx_en_reg_0[7]));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[8]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[8]),
        .O(conf_tx_en_reg_0[8]));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARADDR[9]_i_1 
       (.I0(conf_tx_en),
        .I1(Q[9]),
        .O(conf_tx_en_reg_0[9]));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \M_ARID[0]_i_1 
       (.I0(conf_tx_en),
        .I1(\CID_reg[0] ),
        .O(D));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \M_ARLEN[0]_i_1 
       (.I0(conf_tx_en),
        .I1(\M_ARLEN_reg[0] ),
        .O(conf_tx_en_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_ARSIZE[1]_i_1 
       (.I0(conf_tx_en),
        .I1(\M_ARSIZE_reg[1] ),
        .O(conf_tx_en_reg_3));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[0]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [0]),
        .O(conf_rx_en_reg_7[0]));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[10]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [10]),
        .O(conf_rx_en_reg_7[10]));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[11]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [11]),
        .O(conf_rx_en_reg_7[11]));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[12]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [12]),
        .O(conf_rx_en_reg_7[12]));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[13]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [13]),
        .O(conf_rx_en_reg_7[13]));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[14]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [14]),
        .O(conf_rx_en_reg_7[14]));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[15]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [15]),
        .O(conf_rx_en_reg_7[15]));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[16]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [16]),
        .O(conf_rx_en_reg_7[16]));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[17]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [17]),
        .O(conf_rx_en_reg_7[17]));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[18]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [18]),
        .O(conf_rx_en_reg_7[18]));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[19]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [19]),
        .O(conf_rx_en_reg_7[19]));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[1]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [1]),
        .O(conf_rx_en_reg_7[1]));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[20]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [20]),
        .O(conf_rx_en_reg_7[20]));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[21]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [21]),
        .O(conf_rx_en_reg_7[21]));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[22]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [22]),
        .O(conf_rx_en_reg_7[22]));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[23]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [23]),
        .O(conf_rx_en_reg_7[23]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[24]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [24]),
        .O(conf_rx_en_reg_7[24]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[25]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [25]),
        .O(conf_rx_en_reg_7[25]));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[26]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [26]),
        .O(conf_rx_en_reg_7[26]));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[27]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [27]),
        .O(conf_rx_en_reg_7[27]));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[28]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [28]),
        .O(conf_rx_en_reg_7[28]));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[29]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [29]),
        .O(conf_rx_en_reg_7[29]));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[2]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [2]),
        .O(conf_rx_en_reg_7[2]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[30]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [30]),
        .O(conf_rx_en_reg_7[30]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[31]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [31]),
        .O(conf_rx_en_reg_7[31]));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[3]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [3]),
        .O(conf_rx_en_reg_7[3]));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[4]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [4]),
        .O(conf_rx_en_reg_7[4]));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[5]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [5]),
        .O(conf_rx_en_reg_7[5]));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[6]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [6]),
        .O(conf_rx_en_reg_7[6]));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[7]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [7]),
        .O(conf_rx_en_reg_7[7]));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[8]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [8]),
        .O(conf_rx_en_reg_7[8]));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWADDR[9]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [9]),
        .O(conf_rx_en_reg_7[9]));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \M_AWID[0]_i_1 
       (.I0(conf_rx_en),
        .I1(\M_WID_reg[3] [0]),
        .O(conf_rx_en_reg_4));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \M_AWLEN[0]_i_1 
       (.I0(conf_rx_en),
        .I1(\M_AWLEN_reg[0] ),
        .O(conf_rx_en_reg_8));
  LUT2 #(
    .INIT(4'h2)) 
    M_BREADY_i_2
       (.I0(conf_rx_en),
        .I1(M_BREADY_reg),
        .O(conf_rx_en_reg));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_WID[1]_i_1 
       (.I0(conf_rx_en),
        .I1(\M_WID_reg[3] [1]),
        .O(conf_rx_en_reg_6[0]));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_WID[2]_i_1 
       (.I0(conf_rx_en),
        .I1(\M_WID_reg[3] [2]),
        .O(conf_rx_en_reg_6[1]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_WID[3]_i_2 
       (.I0(conf_rx_en),
        .I1(\M_WID_reg[3] [3]),
        .O(conf_rx_en_reg_6[2]));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[0]_i_1 
       (.I0(desc_tx_src[0]),
        .I1(out),
        .I2(\R_addr_reg[0] ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [0]));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[10]_i_1 
       (.I0(desc_tx_src[10]),
        .I1(out),
        .I2(\R_addr_reg[10]_0 ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [10]));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[11]_i_1 
       (.I0(desc_tx_src[11]),
        .I1(out),
        .I2(\R_addr_reg[11]_0 ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [11]));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[12]_i_1 
       (.I0(desc_tx_src[12]),
        .I1(out),
        .I2(\R_addr_reg[12]_0 ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [12]));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[13]_i_1 
       (.I0(desc_tx_src[13]),
        .I1(out),
        .I2(\R_addr_reg[13]_0 ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [13]));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[14]_i_1 
       (.I0(desc_tx_src[14]),
        .I1(out),
        .I2(\R_addr_reg[14]_0 ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [14]));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[15]_i_1 
       (.I0(desc_tx_src[15]),
        .I1(out),
        .I2(\R_addr_reg[15]_0 ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [15]));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[16]_i_1 
       (.I0(desc_tx_src[16]),
        .I1(out),
        .I2(\R_addr_reg[16]_0 ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [16]));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[17]_i_1 
       (.I0(desc_tx_src[17]),
        .I1(out),
        .I2(\R_addr_reg[17]_0 ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [17]));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[18]_i_1 
       (.I0(desc_tx_src[18]),
        .I1(out),
        .I2(\R_addr_reg[18]_0 ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [18]));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[19]_i_1 
       (.I0(desc_tx_src[19]),
        .I1(out),
        .I2(\R_addr_reg[19]_0 ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [19]));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[1]_i_1 
       (.I0(desc_tx_src[1]),
        .I1(out),
        .I2(\R_addr_reg[1] ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [1]));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[20]_i_1 
       (.I0(desc_tx_src[20]),
        .I1(out),
        .I2(\R_addr_reg[20]_0 ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [20]));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[21]_i_1 
       (.I0(desc_tx_src[21]),
        .I1(out),
        .I2(\R_addr_reg[21]_0 ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [21]));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[22]_i_1 
       (.I0(desc_tx_src[22]),
        .I1(out),
        .I2(\R_addr_reg[22]_0 ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [22]));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[23]_i_1 
       (.I0(desc_tx_src[23]),
        .I1(out),
        .I2(\R_addr_reg[23]_0 ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [23]));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[24]_i_1 
       (.I0(desc_tx_src[24]),
        .I1(out),
        .I2(\R_addr_reg[24]_0 ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [24]));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[25]_i_1 
       (.I0(desc_tx_src[25]),
        .I1(out),
        .I2(\R_addr_reg[25]_0 ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [25]));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[26]_i_1 
       (.I0(desc_tx_src[26]),
        .I1(out),
        .I2(\R_addr_reg[26]_0 ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [26]));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[27]_i_1 
       (.I0(desc_tx_src[27]),
        .I1(out),
        .I2(\R_addr_reg[27]_0 ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [27]));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[28]_i_1 
       (.I0(desc_tx_src[28]),
        .I1(out),
        .I2(\R_addr_reg[28]_0 ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [28]));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[29]_i_1 
       (.I0(desc_tx_src[29]),
        .I1(out),
        .I2(\R_addr_reg[29]_0 ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [29]));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[2]_i_1 
       (.I0(desc_tx_src[2]),
        .I1(out),
        .I2(\R_addr_reg[2]_0 ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [2]));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[30]_i_1 
       (.I0(desc_tx_src[30]),
        .I1(out),
        .I2(\R_addr_reg[30]_0 ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [30]));
  LUT4 #(
    .INIT(16'h9009)) 
    \R_addr[31]_i_12 
       (.I0(tx_addr_end[30]),
        .I1(R_addr2[30]),
        .I2(tx_addr_end[31]),
        .I3(R_addr2[31]),
        .O(\R_addr[31]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \R_addr[31]_i_13 
       (.I0(R_addr2[29]),
        .I1(tx_addr_end[29]),
        .I2(R_addr2[28]),
        .I3(tx_addr_end[28]),
        .I4(tx_addr_end[27]),
        .I5(R_addr2[27]),
        .O(\R_addr[31]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \R_addr[31]_i_14 
       (.I0(tx_addr_end[25]),
        .I1(R_addr2[25]),
        .I2(R_addr2[26]),
        .I3(tx_addr_end[26]),
        .I4(R_addr2[24]),
        .I5(tx_addr_end[24]),
        .O(\R_addr[31]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \R_addr[31]_i_17 
       (.I0(tx_addr_end[22]),
        .I1(R_addr2[22]),
        .I2(R_addr2[23]),
        .I3(tx_addr_end[23]),
        .I4(R_addr2[21]),
        .I5(tx_addr_end[21]),
        .O(\R_addr[31]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \R_addr[31]_i_18 
       (.I0(tx_addr_end[19]),
        .I1(R_addr2[19]),
        .I2(R_addr2[20]),
        .I3(tx_addr_end[20]),
        .I4(R_addr2[18]),
        .I5(tx_addr_end[18]),
        .O(\R_addr[31]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \R_addr[31]_i_19 
       (.I0(R_addr2[17]),
        .I1(tx_addr_end[17]),
        .I2(R_addr2[16]),
        .I3(tx_addr_end[16]),
        .I4(tx_addr_end[15]),
        .I5(R_addr2[15]),
        .O(\R_addr[31]_i_19_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[31]_i_2 
       (.I0(desc_tx_src[31]),
        .I1(out),
        .I2(\R_addr_reg[31]_0 ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [31]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \R_addr[31]_i_20 
       (.I0(R_addr2[14]),
        .I1(tx_addr_end[14]),
        .I2(R_addr2[13]),
        .I3(tx_addr_end[13]),
        .I4(tx_addr_end[12]),
        .I5(R_addr2[12]),
        .O(\R_addr[31]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \R_addr[31]_i_21 
       (.I0(tx_addr_end[10]),
        .I1(R_addr2[10]),
        .I2(R_addr2[11]),
        .I3(tx_addr_end[11]),
        .I4(R_addr2[9]),
        .I5(tx_addr_end[9]),
        .O(\R_addr[31]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \R_addr[31]_i_22 
       (.I0(R_addr2[8]),
        .I1(tx_addr_end[8]),
        .I2(R_addr2[7]),
        .I3(tx_addr_end[7]),
        .I4(tx_addr_end[6]),
        .I5(R_addr2[6]),
        .O(\R_addr[31]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \R_addr[31]_i_23 
       (.I0(tx_addr_end[4]),
        .I1(R_addr2[4]),
        .I2(R_addr2[5]),
        .I3(tx_addr_end[5]),
        .I4(R_addr2[3]),
        .I5(tx_addr_end[3]),
        .O(\R_addr[31]_i_23_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \R_addr[31]_i_24 
       (.I0(R_addr2[0]),
        .I1(tx_addr_end[0]),
        .I2(R_addr2[1]),
        .I3(tx_addr_end[1]),
        .I4(tx_addr_end[2]),
        .I5(R_addr2[2]),
        .O(\R_addr[31]_i_24_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[3]_i_1 
       (.I0(desc_tx_src[3]),
        .I1(out),
        .I2(\R_addr_reg[3]_0 ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [3]));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[4]_i_1 
       (.I0(desc_tx_src[4]),
        .I1(out),
        .I2(\R_addr_reg[4]_0 ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [4]));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[5]_i_1 
       (.I0(desc_tx_src[5]),
        .I1(out),
        .I2(\R_addr_reg[5]_0 ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [5]));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[6]_i_1 
       (.I0(desc_tx_src[6]),
        .I1(out),
        .I2(\R_addr_reg[6]_0 ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [6]));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[7]_i_1 
       (.I0(desc_tx_src[7]),
        .I1(out),
        .I2(\R_addr_reg[7]_0 ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [7]));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[8]_i_1 
       (.I0(desc_tx_src[8]),
        .I1(out),
        .I2(\R_addr_reg[8]_0 ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [8]));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_addr[9]_i_1 
       (.I0(desc_tx_src[9]),
        .I1(out),
        .I2(\R_addr_reg[9]_0 ),
        .I3(conf_tx_en),
        .O(\state_reg[1] [9]));
  CARRY4 \R_addr_reg[31]_i_11 
       (.CI(\R_addr_reg[31]_i_16_n_0 ),
        .CO({\R_addr_reg[31]_i_11_n_0 ,\R_addr_reg[31]_i_11_n_1 ,\R_addr_reg[31]_i_11_n_2 ,\R_addr_reg[31]_i_11_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_R_addr_reg[31]_i_11_O_UNCONNECTED [3:0]),
        .S({\R_addr[31]_i_17_n_0 ,\R_addr[31]_i_18_n_0 ,\R_addr[31]_i_19_n_0 ,\R_addr[31]_i_20_n_0 }));
  CARRY4 \R_addr_reg[31]_i_16 
       (.CI(1'b0),
        .CO({\R_addr_reg[31]_i_16_n_0 ,\R_addr_reg[31]_i_16_n_1 ,\R_addr_reg[31]_i_16_n_2 ,\R_addr_reg[31]_i_16_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_R_addr_reg[31]_i_16_O_UNCONNECTED [3:0]),
        .S({\R_addr[31]_i_21_n_0 ,\R_addr[31]_i_22_n_0 ,\R_addr[31]_i_23_n_0 ,\R_addr[31]_i_24_n_0 }));
  CARRY4 \R_addr_reg[31]_i_7 
       (.CI(\R_addr_reg[31]_i_11_n_0 ),
        .CO({\NLW_R_addr_reg[31]_i_7_CO_UNCONNECTED [3],\tx_addr_end_reg[30] ,\R_addr_reg[31]_i_7_n_2 ,\R_addr_reg[31]_i_7_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_R_addr_reg[31]_i_7_O_UNCONNECTED [3:0]),
        .S({1'b0,\R_addr[31]_i_12_n_0 ,\R_addr[31]_i_13_n_0 ,\R_addr[31]_i_14_n_0 }));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \R_bmove[0]_i_1 
       (.I0(\R_bmove_reg[0] ),
        .I1(conf_tx_en),
        .I2(\R_brem_reg[15]_i_41 [0]),
        .O(conf_tx_en_reg[0]));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \R_bmove[1]_i_1 
       (.I0(\R_bmove_reg[0] ),
        .I1(conf_tx_en),
        .I2(\R_brem_reg[15]_i_41 [1]),
        .O(conf_tx_en_reg[1]));
  LUT6 #(
    .INIT(64'hFFB100B100000000)) 
    \R_brem[0]_i_1 
       (.I0(\R_brem_reg[15]_i_8_n_0 ),
        .I1(\R_brem[0]_i_2_n_0 ),
        .I2(desc_tx_bnum[0]),
        .I3(out),
        .I4(\R_brem_reg[0] ),
        .I5(conf_tx_en),
        .O(\state_reg[1]_0 [0]));
  LUT5 #(
    .INIT(32'hFFFF5457)) 
    \R_brem[0]_i_2 
       (.I0(\R_brem_reg[3]_i_4_n_7 ),
        .I1(\R_brem_reg[14] ),
        .I2(tx_addr_full),
        .I3(\R_brem_reg[3]_i_5_n_7 ),
        .I4(tx_addr_empty),
        .O(\R_brem[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \R_brem[10]_i_1 
       (.I0(\R_brem[10]_i_2_n_0 ),
        .I1(\R_brem_reg[15]_i_8_n_0 ),
        .I2(desc_tx_bnum[10]),
        .I3(out),
        .I4(\R_brem_reg[10] ),
        .I5(conf_tx_en),
        .O(\state_reg[1]_0 [10]));
  LUT5 #(
    .INIT(32'h0000ABA8)) 
    \R_brem[10]_i_2 
       (.I0(\R_brem_reg[11]_i_5_n_5 ),
        .I1(\R_brem_reg[14] ),
        .I2(tx_addr_full),
        .I3(\R_brem_reg[11]_i_4_n_5 ),
        .I4(tx_addr_empty),
        .O(\R_brem[10]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0000ABA8)) 
    \R_brem[10]_i_4 
       (.I0(R_empty_reg_i_46_n_5),
        .I1(\R_brem[15]_i_151_0 ),
        .I2(CO),
        .I3(R_empty_reg_i_45_n_5),
        .I4(\R_brem[15]_i_151 ),
        .O(R_full_reg_13));
  LUT6 #(
    .INIT(64'hFFD100D100000000)) 
    \R_brem[11]_i_1 
       (.I0(\R_brem[11]_i_2_n_0 ),
        .I1(\R_brem_reg[15]_i_8_n_0 ),
        .I2(desc_tx_bnum[11]),
        .I3(out),
        .I4(\R_brem_reg[11] ),
        .I5(conf_tx_en),
        .O(\state_reg[1]_0 [11]));
  LUT5 #(
    .INIT(32'hCCCDFFFD)) 
    \R_brem[11]_i_2 
       (.I0(\R_brem_reg[11]_i_4_n_4 ),
        .I1(tx_addr_empty),
        .I2(tx_addr_full),
        .I3(\R_brem_reg[14] ),
        .I4(\R_brem_reg[11]_i_5_n_4 ),
        .O(\R_brem[11]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0000ABA8)) 
    \R_brem[11]_i_6 
       (.I0(R_empty_reg_i_46_n_4),
        .I1(\R_brem[15]_i_151_0 ),
        .I2(CO),
        .I3(R_empty_reg_i_45_n_4),
        .I4(\R_brem[15]_i_151 ),
        .O(R_full_reg_12));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \R_brem[12]_i_1 
       (.I0(\R_brem[12]_i_2_n_0 ),
        .I1(\R_brem_reg[15]_i_8_n_0 ),
        .I2(desc_tx_bnum[12]),
        .I3(out),
        .I4(\R_brem_reg[12] ),
        .I5(conf_tx_en),
        .O(\state_reg[1]_0 [12]));
  LUT5 #(
    .INIT(32'h0000ABA8)) 
    \R_brem[12]_i_2 
       (.I0(\R_brem_reg[15]_i_25_n_7 ),
        .I1(\R_brem_reg[14] ),
        .I2(tx_addr_full),
        .I3(\R_brem_reg[15]_i_23_n_7 ),
        .I4(tx_addr_empty),
        .O(\R_brem[12]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0000ABA8)) 
    \R_brem[12]_i_4 
       (.I0(R_empty_reg_i_42_n_7),
        .I1(\R_brem[15]_i_151_0 ),
        .I2(CO),
        .I3(R_empty_reg_i_43_n_7),
        .I4(\R_brem[15]_i_151 ),
        .O(R_full_reg_9));
  LUT6 #(
    .INIT(64'hFFD100D100000000)) 
    \R_brem[13]_i_1 
       (.I0(\R_brem[13]_i_2_n_0 ),
        .I1(\R_brem_reg[15]_i_8_n_0 ),
        .I2(desc_tx_bnum[13]),
        .I3(out),
        .I4(\R_brem_reg[13] ),
        .I5(conf_tx_en),
        .O(\state_reg[1]_0 [13]));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT5 #(
    .INIT(32'hCCCDFFFD)) 
    \R_brem[13]_i_2 
       (.I0(\R_brem_reg[15]_i_23_n_6 ),
        .I1(tx_addr_empty),
        .I2(tx_addr_full),
        .I3(\R_brem_reg[14] ),
        .I4(\R_brem_reg[15]_i_25_n_6 ),
        .O(\R_brem[13]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0000ABA8)) 
    \R_brem[13]_i_4 
       (.I0(R_empty_reg_i_42_n_6),
        .I1(\R_brem[15]_i_151_0 ),
        .I2(CO),
        .I3(R_empty_reg_i_43_n_6),
        .I4(\R_brem[15]_i_151 ),
        .O(R_full_reg_6));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \R_brem[14]_i_1 
       (.I0(\R_brem[14]_i_2_n_0 ),
        .I1(\R_brem_reg[15]_i_8_n_0 ),
        .I2(desc_tx_bnum[14]),
        .I3(out),
        .I4(\R_brem_reg[14]_0 ),
        .I5(conf_tx_en),
        .O(\state_reg[1]_0 [14]));
  LUT5 #(
    .INIT(32'h0000ABA8)) 
    \R_brem[14]_i_2 
       (.I0(\R_brem_reg[15]_i_25_n_5 ),
        .I1(\R_brem_reg[14] ),
        .I2(tx_addr_full),
        .I3(\R_brem_reg[15]_i_23_n_5 ),
        .I4(tx_addr_empty),
        .O(\R_brem[14]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0000ABA8)) 
    \R_brem[14]_i_4 
       (.I0(R_empty_reg_i_42_n_5),
        .I1(\R_brem[15]_i_151_0 ),
        .I2(CO),
        .I3(R_empty_reg_i_43_n_5),
        .I4(\R_brem[15]_i_151 ),
        .O(R_full_reg_8));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \R_brem[15]_i_10 
       (.I0(R_full_reg_10),
        .I1(\R_brem[15]_i_37_n_0 ),
        .I2(R_full_reg_9),
        .I3(\R_brem[15]_i_38_n_0 ),
        .I4(R_full_reg_2),
        .I5(R_full_reg_11),
        .O(\R_brem[15]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \R_brem[15]_i_102 
       (.I0(R_full_reg),
        .I1(\R_brem_reg[15]_i_41 [15]),
        .I2(R_full_reg_8),
        .I3(\R_brem_reg[15]_i_41 [14]),
        .O(\R_brem_reg[15] [3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \R_brem[15]_i_103 
       (.I0(R_full_reg_6),
        .I1(\R_brem_reg[15]_i_41 [13]),
        .I2(R_full_reg_9),
        .I3(\R_brem_reg[15]_i_41 [12]),
        .O(\R_brem_reg[15] [2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \R_brem[15]_i_104 
       (.I0(R_full_reg_12),
        .I1(\R_brem_reg[15]_i_41 [11]),
        .I2(R_full_reg_13),
        .I3(\R_brem_reg[15]_i_41 [10]),
        .O(\R_brem_reg[15] [1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \R_brem[15]_i_105 
       (.I0(R_full_reg_14),
        .I1(\R_brem_reg[15]_i_41 [9]),
        .I2(R_full_reg_5),
        .I3(\R_brem_reg[15]_i_41 [8]),
        .O(\R_brem_reg[15] [0]));
  LUT6 #(
    .INIT(64'h0000000055550151)) 
    \R_brem[15]_i_11 
       (.I0(R_empty_i_18_n_0),
        .I1(R_empty_reg_i_31_n_5),
        .I2(\R_brem_reg[15]_i_4_0 ),
        .I3(R_empty_reg_i_33_n_5),
        .I4(\R_brem[15]_i_151 ),
        .I5(R_full_reg_1),
        .O(\R_brem[15]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h1171)) 
    \R_brem[15]_i_116 
       (.I0(desc_tx_bnum[15]),
        .I1(\R_brem[15]_i_7_n_0 ),
        .I2(\R_brem[14]_i_2_n_0 ),
        .I3(desc_tx_bnum[14]),
        .O(\R_brem[15]_i_116_n_0 ));
  LUT4 #(
    .INIT(16'h1171)) 
    \R_brem[15]_i_117 
       (.I0(desc_tx_bnum[13]),
        .I1(\R_brem[13]_i_2_n_0 ),
        .I2(\R_brem[12]_i_2_n_0 ),
        .I3(desc_tx_bnum[12]),
        .O(\R_brem[15]_i_117_n_0 ));
  LUT4 #(
    .INIT(16'h1171)) 
    \R_brem[15]_i_118 
       (.I0(desc_tx_bnum[11]),
        .I1(\R_brem[11]_i_2_n_0 ),
        .I2(\R_brem[10]_i_2_n_0 ),
        .I3(desc_tx_bnum[10]),
        .O(\R_brem[15]_i_118_n_0 ));
  LUT4 #(
    .INIT(16'h1171)) 
    \R_brem[15]_i_119 
       (.I0(desc_tx_bnum[9]),
        .I1(\R_brem[9]_i_2_n_0 ),
        .I2(\R_brem[8]_i_2_n_0 ),
        .I3(desc_tx_bnum[8]),
        .O(\R_brem[15]_i_119_n_0 ));
  LUT6 #(
    .INIT(64'h0F0C0F0F0F0C0A0A)) 
    \R_brem[15]_i_12 
       (.I0(\R_brem_reg[15]_i_39_n_6 ),
        .I1(\R_brem_reg[15]_i_40_n_6 ),
        .I2(\R_brem[15]_i_151 ),
        .I3(\R_brem_reg[15]_i_40_n_7 ),
        .I4(\R_brem_reg[15]_i_4_0 ),
        .I5(\R_brem_reg[15]_i_39_n_7 ),
        .O(\R_brem[15]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h0000A808AAAA02A2)) 
    \R_brem[15]_i_120 
       (.I0(\R_brem[15]_i_174_n_0 ),
        .I1(\R_brem_reg[15]_i_25_n_5 ),
        .I2(\R_brem[15]_i_77_n_0 ),
        .I3(\R_brem_reg[15]_i_23_n_5 ),
        .I4(tx_addr_empty),
        .I5(desc_tx_bnum[14]),
        .O(\R_brem[15]_i_120_n_0 ));
  LUT6 #(
    .INIT(64'h0000A808AAAA02A2)) 
    \R_brem[15]_i_121 
       (.I0(\R_brem[15]_i_175_n_0 ),
        .I1(\R_brem_reg[15]_i_25_n_7 ),
        .I2(\R_brem[15]_i_77_n_0 ),
        .I3(\R_brem_reg[15]_i_23_n_7 ),
        .I4(tx_addr_empty),
        .I5(desc_tx_bnum[12]),
        .O(\R_brem[15]_i_121_n_0 ));
  LUT6 #(
    .INIT(64'h0000A808AAAA02A2)) 
    \R_brem[15]_i_122 
       (.I0(\R_brem[15]_i_176_n_0 ),
        .I1(\R_brem_reg[11]_i_5_n_5 ),
        .I2(\R_brem[15]_i_77_n_0 ),
        .I3(\R_brem_reg[11]_i_4_n_5 ),
        .I4(tx_addr_empty),
        .I5(desc_tx_bnum[10]),
        .O(\R_brem[15]_i_122_n_0 ));
  LUT6 #(
    .INIT(64'h0000A808AAAA02A2)) 
    \R_brem[15]_i_123 
       (.I0(\R_brem[15]_i_177_n_0 ),
        .I1(\R_brem_reg[11]_i_5_n_7 ),
        .I2(\R_brem[15]_i_77_n_0 ),
        .I3(\R_brem_reg[11]_i_4_n_7 ),
        .I4(tx_addr_empty),
        .I5(desc_tx_bnum[8]),
        .O(\R_brem[15]_i_123_n_0 ));
  LUT6 #(
    .INIT(64'h00000000EFEFEFE0)) 
    \R_brem[15]_i_14 
       (.I0(\R_brem_reg[15]_i_40_n_5 ),
        .I1(\R_brem_reg[15]_i_40_n_4 ),
        .I2(\R_brem_reg[15]_i_4_0 ),
        .I3(\R_brem_reg[15]_i_39_n_4 ),
        .I4(\R_brem_reg[15]_i_39_n_5 ),
        .I5(\R_brem[15]_i_151 ),
        .O(\R_brem[15]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hFF00FF0CFF11FF1D)) 
    \R_brem[15]_i_145 
       (.I0(R_empty_reg_i_58_n_5),
        .I1(\R_brem_reg[15]_i_4_0 ),
        .I2(R_empty_reg_i_57_n_5),
        .I3(\R_brem[15]_i_151 ),
        .I4(R_empty_reg_i_57_n_4),
        .I5(R_empty_reg_i_58_n_4),
        .O(\R_brem[15]_i_145_n_0 ));
  LUT6 #(
    .INIT(64'hF0F5F0F0F0F5F3F3)) 
    \R_brem[15]_i_146 
       (.I0(R_empty_reg_i_57_n_6),
        .I1(R_empty_reg_i_58_n_6),
        .I2(\R_brem[15]_i_151 ),
        .I3(R_empty_reg_i_57_n_7),
        .I4(\R_brem_reg[15]_i_4_0 ),
        .I5(R_empty_reg_i_58_n_7),
        .O(\R_brem[15]_i_146_n_0 ));
  LUT6 #(
    .INIT(64'hF0F5F0F0F0F5F3F3)) 
    \R_brem[15]_i_147 
       (.I0(R_empty_reg_i_36_n_4),
        .I1(R_empty_reg_i_37_n_4),
        .I2(\R_brem[15]_i_151 ),
        .I3(R_empty_reg_i_36_n_5),
        .I4(\R_brem_reg[15]_i_4_0 ),
        .I5(R_empty_reg_i_37_n_5),
        .O(\R_brem[15]_i_147_n_0 ));
  LUT6 #(
    .INIT(64'hFF00FF0CFF11FF1D)) 
    \R_brem[15]_i_148 
       (.I0(R_empty_reg_i_37_n_7),
        .I1(\R_brem_reg[15]_i_4_0 ),
        .I2(R_empty_reg_i_36_n_7),
        .I3(\R_brem[15]_i_151 ),
        .I4(R_empty_reg_i_36_n_6),
        .I5(R_empty_reg_i_37_n_6),
        .O(\R_brem[15]_i_148_n_0 ));
  LUT6 #(
    .INIT(64'h00FF00EE00F300E2)) 
    \R_brem[15]_i_15 
       (.I0(R_empty_reg_i_35_n_5),
        .I1(\R_brem_reg[15]_i_4_0 ),
        .I2(R_empty_reg_i_34_n_5),
        .I3(\R_brem[15]_i_151 ),
        .I4(R_empty_reg_i_35_n_4),
        .I5(R_empty_reg_i_34_n_4),
        .O(\R_brem[15]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \R_brem[15]_i_153 
       (.I0(R_full_reg_7),
        .I1(\R_brem_reg[15]_i_41 [7]),
        .I2(R_full_reg_10),
        .I3(\R_brem_reg[15]_i_41 [6]),
        .O(\R_brem_reg[7] [3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \R_brem[15]_i_154 
       (.I0(R_full_reg_11),
        .I1(\R_brem_reg[15]_i_41 [5]),
        .I2(R_full_reg_4),
        .I3(\R_brem_reg[15]_i_41 [4]),
        .O(\R_brem_reg[7] [2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \R_brem[15]_i_155 
       (.I0(R_full_reg_3),
        .I1(\R_brem_reg[15]_i_41 [3]),
        .I2(R_full_reg_15),
        .I3(\R_brem_reg[15]_i_41 [2]),
        .O(\R_brem_reg[7] [1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \R_brem[15]_i_156 
       (.I0(R_full_reg_1),
        .I1(\R_brem_reg[15]_i_41 [1]),
        .I2(R_full_reg_2),
        .I3(\R_brem_reg[15]_i_41 [0]),
        .O(\R_brem_reg[7] [0]));
  LUT6 #(
    .INIT(64'h00FF00EE00F300E2)) 
    \R_brem[15]_i_16 
       (.I0(R_empty_reg_i_35_n_7),
        .I1(\R_brem_reg[15]_i_4_0 ),
        .I2(R_empty_reg_i_34_n_7),
        .I3(\R_brem[15]_i_151 ),
        .I4(R_empty_reg_i_35_n_6),
        .I5(R_empty_reg_i_34_n_6),
        .O(\R_brem[15]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'h1117)) 
    \R_brem[15]_i_166 
       (.I0(desc_tx_bnum[7]),
        .I1(\R_brem[7]_i_2_n_0 ),
        .I2(desc_tx_bnum[6]),
        .I3(\R_brem[6]_i_2_n_0 ),
        .O(\R_brem[15]_i_166_n_0 ));
  LUT4 #(
    .INIT(16'h1171)) 
    \R_brem[15]_i_167 
       (.I0(desc_tx_bnum[5]),
        .I1(\R_brem[5]_i_2_n_0 ),
        .I2(\R_brem[4]_i_2_n_0 ),
        .I3(desc_tx_bnum[4]),
        .O(\R_brem[15]_i_167_n_0 ));
  LUT4 #(
    .INIT(16'h1171)) 
    \R_brem[15]_i_168 
       (.I0(desc_tx_bnum[3]),
        .I1(\R_brem[3]_i_2_n_0 ),
        .I2(\R_brem[2]_i_2_n_0 ),
        .I3(desc_tx_bnum[2]),
        .O(\R_brem[15]_i_168_n_0 ));
  LUT4 #(
    .INIT(16'h1117)) 
    \R_brem[15]_i_169 
       (.I0(desc_tx_bnum[1]),
        .I1(\R_brem[1]_i_2_n_0 ),
        .I2(desc_tx_bnum[0]),
        .I3(\R_brem[0]_i_2_n_0 ),
        .O(\R_brem[15]_i_169_n_0 ));
  LUT6 #(
    .INIT(64'hAAABAAABAAABFFAB)) 
    \R_brem[15]_i_17 
       (.I0(\R_brem[15]_i_151 ),
        .I1(\R_brem_reg[15]_i_39_n_5 ),
        .I2(\R_brem_reg[15]_i_39_n_4 ),
        .I3(\R_brem_reg[15]_i_4_0 ),
        .I4(\R_brem_reg[15]_i_40_n_4 ),
        .I5(\R_brem_reg[15]_i_40_n_5 ),
        .O(\R_brem[15]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'h0000A808AAAA02A2)) 
    \R_brem[15]_i_170 
       (.I0(\R_brem[15]_i_211_n_0 ),
        .I1(\R_brem_reg[7]_i_5_n_5 ),
        .I2(\R_brem[15]_i_77_n_0 ),
        .I3(\R_brem_reg[7]_i_4_n_5 ),
        .I4(tx_addr_empty),
        .I5(desc_tx_bnum[6]),
        .O(\R_brem[15]_i_170_n_0 ));
  LUT6 #(
    .INIT(64'h0000A808AAAA02A2)) 
    \R_brem[15]_i_171 
       (.I0(\R_brem[15]_i_212_n_0 ),
        .I1(\R_brem_reg[7]_i_5_n_7 ),
        .I2(\R_brem[15]_i_77_n_0 ),
        .I3(\R_brem_reg[7]_i_4_n_7 ),
        .I4(tx_addr_empty),
        .I5(desc_tx_bnum[4]),
        .O(\R_brem[15]_i_171_n_0 ));
  LUT6 #(
    .INIT(64'h0000A808AAAA02A2)) 
    \R_brem[15]_i_172 
       (.I0(\R_brem[15]_i_213_n_0 ),
        .I1(\R_brem_reg[3]_i_4_n_5 ),
        .I2(\R_brem[15]_i_77_n_0 ),
        .I3(\R_brem_reg[3]_i_5_n_5 ),
        .I4(tx_addr_empty),
        .I5(desc_tx_bnum[2]),
        .O(\R_brem[15]_i_172_n_0 ));
  LUT6 #(
    .INIT(64'h0000A808AAAA02A2)) 
    \R_brem[15]_i_173 
       (.I0(\R_brem[15]_i_214_n_0 ),
        .I1(\R_brem_reg[3]_i_4_n_7 ),
        .I2(\R_brem[15]_i_77_n_0 ),
        .I3(\R_brem_reg[3]_i_5_n_7 ),
        .I4(tx_addr_empty),
        .I5(desc_tx_bnum[0]),
        .O(\R_brem[15]_i_173_n_0 ));
  LUT6 #(
    .INIT(64'h5555999A55559995)) 
    \R_brem[15]_i_174 
       (.I0(desc_tx_bnum[15]),
        .I1(\R_brem_reg[15]_i_25_n_4 ),
        .I2(\R_brem_reg[14] ),
        .I3(tx_addr_full),
        .I4(tx_addr_empty),
        .I5(\R_brem_reg[15]_i_23_n_4 ),
        .O(\R_brem[15]_i_174_n_0 ));
  LUT6 #(
    .INIT(64'h5555999A55559995)) 
    \R_brem[15]_i_175 
       (.I0(desc_tx_bnum[13]),
        .I1(\R_brem_reg[15]_i_25_n_6 ),
        .I2(\R_brem_reg[14] ),
        .I3(tx_addr_full),
        .I4(tx_addr_empty),
        .I5(\R_brem_reg[15]_i_23_n_6 ),
        .O(\R_brem[15]_i_175_n_0 ));
  LUT6 #(
    .INIT(64'h5555999A55559995)) 
    \R_brem[15]_i_176 
       (.I0(desc_tx_bnum[11]),
        .I1(\R_brem_reg[11]_i_5_n_4 ),
        .I2(\R_brem_reg[14] ),
        .I3(tx_addr_full),
        .I4(tx_addr_empty),
        .I5(\R_brem_reg[11]_i_4_n_4 ),
        .O(\R_brem[15]_i_176_n_0 ));
  LUT6 #(
    .INIT(64'h5555999A55559995)) 
    \R_brem[15]_i_177 
       (.I0(desc_tx_bnum[9]),
        .I1(\R_brem_reg[11]_i_5_n_6 ),
        .I2(\R_brem_reg[14] ),
        .I3(tx_addr_full),
        .I4(tx_addr_empty),
        .I5(\R_brem_reg[11]_i_4_n_6 ),
        .O(\R_brem[15]_i_177_n_0 ));
  LUT6 #(
    .INIT(64'hFF00FF0CFF11FF1D)) 
    \R_brem[15]_i_18 
       (.I0(\R_brem_reg[15]_i_39_n_7 ),
        .I1(\R_brem_reg[15]_i_4_0 ),
        .I2(\R_brem_reg[15]_i_40_n_7 ),
        .I3(\R_brem[15]_i_151 ),
        .I4(\R_brem_reg[15]_i_40_n_6 ),
        .I5(\R_brem_reg[15]_i_39_n_6 ),
        .O(\R_brem[15]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hF0F5F0F0F0F5F3F3)) 
    \R_brem[15]_i_19 
       (.I0(R_empty_reg_i_34_n_4),
        .I1(R_empty_reg_i_35_n_4),
        .I2(\R_brem[15]_i_151 ),
        .I3(R_empty_reg_i_34_n_5),
        .I4(\R_brem_reg[15]_i_4_0 ),
        .I5(R_empty_reg_i_35_n_5),
        .O(\R_brem[15]_i_19_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \R_brem[15]_i_199 
       (.I0(R_full_reg),
        .I1(\R_brem_reg[15]_i_144 [15]),
        .I2(R_full_reg_8),
        .I3(\R_brem_reg[15]_i_144 [14]),
        .O(\DMA_BREM_reg[15] [3]));
  LUT6 #(
    .INIT(64'hFFD100D100000000)) 
    \R_brem[15]_i_2 
       (.I0(\R_brem[15]_i_7_n_0 ),
        .I1(\R_brem_reg[15]_i_8_n_0 ),
        .I2(desc_tx_bnum[15]),
        .I3(out),
        .I4(\R_brem_reg[15]_0 ),
        .I5(conf_tx_en),
        .O(\state_reg[1]_0 [15]));
  LUT6 #(
    .INIT(64'hF0F5F0F0F0F5F3F3)) 
    \R_brem[15]_i_20 
       (.I0(R_empty_reg_i_34_n_6),
        .I1(R_empty_reg_i_35_n_6),
        .I2(\R_brem[15]_i_151 ),
        .I3(R_empty_reg_i_34_n_7),
        .I4(\R_brem_reg[15]_i_4_0 ),
        .I5(R_empty_reg_i_35_n_7),
        .O(\R_brem[15]_i_20_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \R_brem[15]_i_200 
       (.I0(R_full_reg_6),
        .I1(\R_brem_reg[15]_i_144 [13]),
        .I2(R_full_reg_9),
        .I3(\R_brem_reg[15]_i_144 [12]),
        .O(\DMA_BREM_reg[15] [2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \R_brem[15]_i_201 
       (.I0(R_full_reg_12),
        .I1(\R_brem_reg[15]_i_144 [11]),
        .I2(R_full_reg_13),
        .I3(\R_brem_reg[15]_i_144 [10]),
        .O(\DMA_BREM_reg[15] [1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \R_brem[15]_i_202 
       (.I0(R_full_reg_14),
        .I1(\R_brem_reg[15]_i_144 [9]),
        .I2(R_full_reg_5),
        .I3(\R_brem_reg[15]_i_144 [8]),
        .O(\DMA_BREM_reg[15] [0]));
  LUT6 #(
    .INIT(64'h5555999A55559995)) 
    \R_brem[15]_i_211 
       (.I0(desc_tx_bnum[7]),
        .I1(\R_brem_reg[7]_i_5_n_4 ),
        .I2(\R_brem_reg[14] ),
        .I3(tx_addr_full),
        .I4(tx_addr_empty),
        .I5(\R_brem_reg[7]_i_4_n_4 ),
        .O(\R_brem[15]_i_211_n_0 ));
  LUT6 #(
    .INIT(64'h6666666555555565)) 
    \R_brem[15]_i_212 
       (.I0(desc_tx_bnum[5]),
        .I1(tx_addr_empty),
        .I2(\R_brem_reg[7]_i_4_n_6 ),
        .I3(tx_addr_full),
        .I4(\R_brem_reg[14] ),
        .I5(\R_brem_reg[7]_i_5_n_6 ),
        .O(\R_brem[15]_i_212_n_0 ));
  LUT6 #(
    .INIT(64'h6666666555555565)) 
    \R_brem[15]_i_213 
       (.I0(desc_tx_bnum[3]),
        .I1(tx_addr_empty),
        .I2(\R_brem_reg[3]_i_5_n_4 ),
        .I3(tx_addr_full),
        .I4(\R_brem_reg[14] ),
        .I5(\R_brem_reg[3]_i_4_n_4 ),
        .O(\R_brem[15]_i_213_n_0 ));
  LUT6 #(
    .INIT(64'h6666666555555565)) 
    \R_brem[15]_i_214 
       (.I0(desc_tx_bnum[1]),
        .I1(tx_addr_empty),
        .I2(\R_brem_reg[3]_i_5_n_6 ),
        .I3(tx_addr_full),
        .I4(\R_brem_reg[14] ),
        .I5(\R_brem_reg[3]_i_4_n_6 ),
        .O(\R_brem[15]_i_214_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \R_brem[15]_i_219 
       (.I0(R_full_reg_7),
        .I1(\R_brem_reg[15]_i_144 [7]),
        .I2(R_full_reg_10),
        .I3(\R_brem_reg[15]_i_144 [6]),
        .O(\DMA_BREM_reg[7] [3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \R_brem[15]_i_220 
       (.I0(R_full_reg_11),
        .I1(\R_brem_reg[15]_i_144 [5]),
        .I2(R_full_reg_4),
        .I3(\R_brem_reg[15]_i_144 [4]),
        .O(\DMA_BREM_reg[7] [2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \R_brem[15]_i_221 
       (.I0(R_full_reg_3),
        .I1(\R_brem_reg[15]_i_144 [3]),
        .I2(R_full_reg_15),
        .I3(\R_brem_reg[15]_i_144 [2]),
        .O(\DMA_BREM_reg[7] [1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \R_brem[15]_i_222 
       (.I0(R_full_reg_1),
        .I1(\R_brem_reg[15]_i_144 [1]),
        .I2(R_full_reg_2),
        .I3(\R_brem_reg[15]_i_144 [0]),
        .O(\DMA_BREM_reg[7] [0]));
  LUT6 #(
    .INIT(64'h00000000EEEEFFF0)) 
    \R_brem[15]_i_27 
       (.I0(\R_brem_reg[15]_i_75_n_5 ),
        .I1(\R_brem_reg[15]_i_75_n_4 ),
        .I2(\R_brem_reg[15]_i_76_n_4 ),
        .I3(\R_brem_reg[15]_i_76_n_5 ),
        .I4(\R_brem[15]_i_77_n_0 ),
        .I5(tx_addr_empty),
        .O(\R_brem[15]_i_27_n_0 ));
  LUT6 #(
    .INIT(64'h00000000EEEEFFF0)) 
    \R_brem[15]_i_28 
       (.I0(\R_brem_reg[15]_i_75_n_7 ),
        .I1(\R_brem_reg[15]_i_75_n_6 ),
        .I2(\R_brem_reg[15]_i_76_n_6 ),
        .I3(\R_brem_reg[15]_i_76_n_7 ),
        .I4(\R_brem[15]_i_77_n_0 ),
        .I5(tx_addr_empty),
        .O(\R_brem[15]_i_28_n_0 ));
  LUT6 #(
    .INIT(64'h00000000EEEEFFF0)) 
    \R_brem[15]_i_29 
       (.I0(\R_brem_reg[15]_i_78_n_5 ),
        .I1(\R_brem_reg[15]_i_78_n_4 ),
        .I2(\R_brem_reg[15]_i_79_n_4 ),
        .I3(\R_brem_reg[15]_i_79_n_5 ),
        .I4(\R_brem[15]_i_77_n_0 ),
        .I5(tx_addr_empty),
        .O(\R_brem[15]_i_29_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \R_brem[15]_i_3 
       (.I0(\R_brem[15]_i_10_n_0 ),
        .I1(\R_brem[15]_i_11_n_0 ),
        .I2(R_empty_i_10_n_0),
        .I3(\R_brem[15]_i_12_n_0 ),
        .I4(R_empty_i_12_n_0),
        .I5(R_empty_i_7_n_0),
        .O(R_empty_reg_0));
  LUT6 #(
    .INIT(64'h00000000EEEEFFF0)) 
    \R_brem[15]_i_30 
       (.I0(\R_brem_reg[15]_i_78_n_7 ),
        .I1(\R_brem_reg[15]_i_78_n_6 ),
        .I2(\R_brem_reg[15]_i_79_n_6 ),
        .I3(\R_brem_reg[15]_i_79_n_7 ),
        .I4(\R_brem[15]_i_77_n_0 ),
        .I5(tx_addr_empty),
        .O(\R_brem[15]_i_30_n_0 ));
  LUT6 #(
    .INIT(64'hAAABAAABAAABEEEF)) 
    \R_brem[15]_i_31 
       (.I0(tx_addr_empty),
        .I1(\R_brem[15]_i_77_n_0 ),
        .I2(\R_brem_reg[15]_i_76_n_5 ),
        .I3(\R_brem_reg[15]_i_76_n_4 ),
        .I4(\R_brem_reg[15]_i_75_n_4 ),
        .I5(\R_brem_reg[15]_i_75_n_5 ),
        .O(\R_brem[15]_i_31_n_0 ));
  LUT6 #(
    .INIT(64'hAAABAAABAAABEEEF)) 
    \R_brem[15]_i_32 
       (.I0(tx_addr_empty),
        .I1(\R_brem[15]_i_77_n_0 ),
        .I2(\R_brem_reg[15]_i_76_n_7 ),
        .I3(\R_brem_reg[15]_i_76_n_6 ),
        .I4(\R_brem_reg[15]_i_75_n_6 ),
        .I5(\R_brem_reg[15]_i_75_n_7 ),
        .O(\R_brem[15]_i_32_n_0 ));
  LUT6 #(
    .INIT(64'hAAABAAABAAABEEEF)) 
    \R_brem[15]_i_33 
       (.I0(tx_addr_empty),
        .I1(\R_brem[15]_i_77_n_0 ),
        .I2(\R_brem_reg[15]_i_79_n_5 ),
        .I3(\R_brem_reg[15]_i_79_n_4 ),
        .I4(\R_brem_reg[15]_i_78_n_4 ),
        .I5(\R_brem_reg[15]_i_78_n_5 ),
        .O(\R_brem[15]_i_33_n_0 ));
  LUT6 #(
    .INIT(64'hAAABAAABAAABEEEF)) 
    \R_brem[15]_i_34 
       (.I0(tx_addr_empty),
        .I1(\R_brem[15]_i_77_n_0 ),
        .I2(\R_brem_reg[15]_i_79_n_7 ),
        .I3(\R_brem_reg[15]_i_79_n_6 ),
        .I4(\R_brem_reg[15]_i_78_n_6 ),
        .I5(\R_brem_reg[15]_i_78_n_7 ),
        .O(\R_brem[15]_i_34_n_0 ));
  LUT5 #(
    .INIT(32'h0000ABA8)) 
    \R_brem[15]_i_37 
       (.I0(R_empty_reg_i_58_n_6),
        .I1(\R_brem[15]_i_151_0 ),
        .I2(CO),
        .I3(R_empty_reg_i_57_n_6),
        .I4(\R_brem[15]_i_151 ),
        .O(\R_brem[15]_i_37_n_0 ));
  LUT6 #(
    .INIT(64'h0F0A0F0F0F0A0C0C)) 
    \R_brem[15]_i_38 
       (.I0(R_empty_reg_i_43_n_4),
        .I1(R_empty_reg_i_42_n_4),
        .I2(\R_brem[15]_i_151 ),
        .I3(R_empty_reg_i_36_n_5),
        .I4(\R_brem_reg[15]_i_4_0 ),
        .I5(R_empty_reg_i_37_n_5),
        .O(\R_brem[15]_i_38_n_0 ));
  LUT6 #(
    .INIT(64'h00FF00EE00F300E2)) 
    \R_brem[15]_i_42 
       (.I0(R_empty_reg_i_58_n_7),
        .I1(\R_brem_reg[15]_i_4_0 ),
        .I2(R_empty_reg_i_57_n_7),
        .I3(\R_brem[15]_i_151 ),
        .I4(R_empty_reg_i_58_n_6),
        .I5(R_empty_reg_i_57_n_6),
        .O(\R_brem[15]_i_42_n_0 ));
  LUT6 #(
    .INIT(64'h00FF00EE00F300E2)) 
    \R_brem[15]_i_43 
       (.I0(R_empty_reg_i_37_n_5),
        .I1(\R_brem_reg[15]_i_4_0 ),
        .I2(R_empty_reg_i_36_n_5),
        .I3(\R_brem[15]_i_151 ),
        .I4(R_empty_reg_i_37_n_4),
        .I5(R_empty_reg_i_36_n_4),
        .O(\R_brem[15]_i_43_n_0 ));
  LUT6 #(
    .INIT(64'hFF00FF0CFF11FF1D)) 
    \R_brem[15]_i_44 
       (.I0(R_empty_reg_i_58_n_5),
        .I1(\R_brem_reg[15]_i_4_0 ),
        .I2(R_empty_reg_i_57_n_5),
        .I3(\R_brem[15]_i_151 ),
        .I4(R_empty_reg_i_57_n_4),
        .I5(R_empty_reg_i_58_n_4),
        .O(\R_brem[15]_i_44_n_0 ));
  LUT6 #(
    .INIT(64'hF0F5F0F0F0F5F3F3)) 
    \R_brem[15]_i_45 
       (.I0(R_empty_reg_i_57_n_6),
        .I1(R_empty_reg_i_58_n_6),
        .I2(\R_brem[15]_i_151 ),
        .I3(R_empty_reg_i_57_n_7),
        .I4(\R_brem_reg[15]_i_4_0 ),
        .I5(R_empty_reg_i_58_n_7),
        .O(\R_brem[15]_i_45_n_0 ));
  LUT6 #(
    .INIT(64'hF0F5F0F0F0F5F3F3)) 
    \R_brem[15]_i_46 
       (.I0(R_empty_reg_i_36_n_4),
        .I1(R_empty_reg_i_37_n_4),
        .I2(\R_brem[15]_i_151 ),
        .I3(R_empty_reg_i_36_n_5),
        .I4(\R_brem_reg[15]_i_4_0 ),
        .I5(R_empty_reg_i_37_n_5),
        .O(\R_brem[15]_i_46_n_0 ));
  LUT6 #(
    .INIT(64'hFF00FF0CFF11FF1D)) 
    \R_brem[15]_i_47 
       (.I0(R_empty_reg_i_37_n_7),
        .I1(\R_brem_reg[15]_i_4_0 ),
        .I2(R_empty_reg_i_36_n_7),
        .I3(\R_brem[15]_i_151 ),
        .I4(R_empty_reg_i_36_n_6),
        .I5(R_empty_reg_i_37_n_6),
        .O(\R_brem[15]_i_47_n_0 ));
  LUT6 #(
    .INIT(64'h00000000EEEEFFF0)) 
    \R_brem[15]_i_67 
       (.I0(\R_brem_reg[15]_i_124_n_5 ),
        .I1(\R_brem_reg[15]_i_124_n_4 ),
        .I2(\R_brem_reg[15]_i_125_n_4 ),
        .I3(\R_brem_reg[15]_i_125_n_5 ),
        .I4(\R_brem[15]_i_77_n_0 ),
        .I5(tx_addr_empty),
        .O(\R_brem[15]_i_67_n_0 ));
  LUT6 #(
    .INIT(64'h00000000EEEEFFF0)) 
    \R_brem[15]_i_68 
       (.I0(\R_brem_reg[15]_i_124_n_7 ),
        .I1(\R_brem_reg[15]_i_124_n_6 ),
        .I2(\R_brem_reg[15]_i_125_n_6 ),
        .I3(\R_brem_reg[15]_i_125_n_7 ),
        .I4(\R_brem[15]_i_77_n_0 ),
        .I5(tx_addr_empty),
        .O(\R_brem[15]_i_68_n_0 ));
  LUT6 #(
    .INIT(64'h00000000EEEEFFF0)) 
    \R_brem[15]_i_69 
       (.I0(\R_brem_reg[15]_i_126_n_5 ),
        .I1(\R_brem_reg[15]_i_126_n_4 ),
        .I2(\R_brem_reg[15]_i_127_n_4 ),
        .I3(\R_brem_reg[15]_i_127_n_5 ),
        .I4(\R_brem[15]_i_77_n_0 ),
        .I5(tx_addr_empty),
        .O(\R_brem[15]_i_69_n_0 ));
  LUT5 #(
    .INIT(32'hCCCDFFFD)) 
    \R_brem[15]_i_7 
       (.I0(\R_brem_reg[15]_i_23_n_4 ),
        .I1(tx_addr_empty),
        .I2(tx_addr_full),
        .I3(\R_brem_reg[14] ),
        .I4(\R_brem_reg[15]_i_25_n_4 ),
        .O(\R_brem[15]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00000000EEEEFFF0)) 
    \R_brem[15]_i_70 
       (.I0(\R_brem_reg[15]_i_126_n_7 ),
        .I1(\R_brem_reg[15]_i_126_n_6 ),
        .I2(\R_brem_reg[15]_i_127_n_6 ),
        .I3(\R_brem_reg[15]_i_127_n_7 ),
        .I4(\R_brem[15]_i_77_n_0 ),
        .I5(tx_addr_empty),
        .O(\R_brem[15]_i_70_n_0 ));
  LUT6 #(
    .INIT(64'hAAABAAABAAABEEEF)) 
    \R_brem[15]_i_71 
       (.I0(tx_addr_empty),
        .I1(\R_brem[15]_i_77_n_0 ),
        .I2(\R_brem_reg[15]_i_125_n_5 ),
        .I3(\R_brem_reg[15]_i_125_n_4 ),
        .I4(\R_brem_reg[15]_i_124_n_4 ),
        .I5(\R_brem_reg[15]_i_124_n_5 ),
        .O(\R_brem[15]_i_71_n_0 ));
  LUT6 #(
    .INIT(64'hAAABAAABAAABEEEF)) 
    \R_brem[15]_i_72 
       (.I0(tx_addr_empty),
        .I1(\R_brem[15]_i_77_n_0 ),
        .I2(\R_brem_reg[15]_i_125_n_7 ),
        .I3(\R_brem_reg[15]_i_125_n_6 ),
        .I4(\R_brem_reg[15]_i_124_n_6 ),
        .I5(\R_brem_reg[15]_i_124_n_7 ),
        .O(\R_brem[15]_i_72_n_0 ));
  LUT6 #(
    .INIT(64'hAAABAAABAAABEEEF)) 
    \R_brem[15]_i_73 
       (.I0(tx_addr_empty),
        .I1(\R_brem[15]_i_77_n_0 ),
        .I2(\R_brem_reg[15]_i_127_n_5 ),
        .I3(\R_brem_reg[15]_i_127_n_4 ),
        .I4(\R_brem_reg[15]_i_126_n_4 ),
        .I5(\R_brem_reg[15]_i_126_n_5 ),
        .O(\R_brem[15]_i_73_n_0 ));
  LUT6 #(
    .INIT(64'hAAABAAABAAABEEEF)) 
    \R_brem[15]_i_74 
       (.I0(tx_addr_empty),
        .I1(\R_brem[15]_i_77_n_0 ),
        .I2(\R_brem_reg[15]_i_127_n_7 ),
        .I3(\R_brem_reg[15]_i_127_n_6 ),
        .I4(\R_brem_reg[15]_i_126_n_6 ),
        .I5(\R_brem_reg[15]_i_126_n_7 ),
        .O(\R_brem[15]_i_74_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \R_brem[15]_i_77 
       (.I0(tx_addr_full),
        .I1(\R_brem_reg[14] ),
        .O(\R_brem[15]_i_77_n_0 ));
  LUT6 #(
    .INIT(64'hAAABAAABAAABFFAB)) 
    \R_brem[15]_i_81 
       (.I0(\R_brem[15]_i_151 ),
        .I1(\R_brem_reg[15]_i_39_n_5 ),
        .I2(\R_brem_reg[15]_i_39_n_4 ),
        .I3(\R_brem_reg[15]_i_4_0 ),
        .I4(\R_brem_reg[15]_i_40_n_4 ),
        .I5(\R_brem_reg[15]_i_40_n_5 ),
        .O(\R_brem[15]_i_81_n_0 ));
  LUT6 #(
    .INIT(64'hFF00FF0CFF11FF1D)) 
    \R_brem[15]_i_82 
       (.I0(\R_brem_reg[15]_i_39_n_7 ),
        .I1(\R_brem_reg[15]_i_4_0 ),
        .I2(\R_brem_reg[15]_i_40_n_7 ),
        .I3(\R_brem[15]_i_151 ),
        .I4(\R_brem_reg[15]_i_40_n_6 ),
        .I5(\R_brem_reg[15]_i_39_n_6 ),
        .O(\R_brem[15]_i_82_n_0 ));
  LUT6 #(
    .INIT(64'hF0F5F0F0F0F5F3F3)) 
    \R_brem[15]_i_83 
       (.I0(R_empty_reg_i_34_n_4),
        .I1(R_empty_reg_i_35_n_4),
        .I2(\R_brem[15]_i_151 ),
        .I3(R_empty_reg_i_34_n_5),
        .I4(\R_brem_reg[15]_i_4_0 ),
        .I5(R_empty_reg_i_35_n_5),
        .O(\R_brem[15]_i_83_n_0 ));
  LUT6 #(
    .INIT(64'hF0F5F0F0F0F5F3F3)) 
    \R_brem[15]_i_84 
       (.I0(R_empty_reg_i_34_n_6),
        .I1(R_empty_reg_i_35_n_6),
        .I2(\R_brem[15]_i_151 ),
        .I3(R_empty_reg_i_34_n_7),
        .I4(\R_brem_reg[15]_i_4_0 ),
        .I5(R_empty_reg_i_35_n_7),
        .O(\R_brem[15]_i_84_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[15]_i_90 
       (.I0(tx_addr_end[30]),
        .I1(Q[30]),
        .O(\R_brem[15]_i_90_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[15]_i_91 
       (.I0(tx_addr_end[29]),
        .I1(Q[29]),
        .O(\R_brem[15]_i_91_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[15]_i_92 
       (.I0(tx_addr_end[28]),
        .I1(Q[28]),
        .O(\R_brem[15]_i_92_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[15]_i_94 
       (.I0(tx_addr_head[30]),
        .I1(Q[30]),
        .O(\R_brem[15]_i_94_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[15]_i_95 
       (.I0(tx_addr_head[29]),
        .I1(Q[29]),
        .O(\R_brem[15]_i_95_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[15]_i_96 
       (.I0(tx_addr_head[28]),
        .I1(Q[28]),
        .O(\R_brem[15]_i_96_n_0 ));
  LUT6 #(
    .INIT(64'hFFB100B100000000)) 
    \R_brem[1]_i_1 
       (.I0(\R_brem_reg[15]_i_8_n_0 ),
        .I1(\R_brem[1]_i_2_n_0 ),
        .I2(desc_tx_bnum[1]),
        .I3(out),
        .I4(\R_brem_reg[1] ),
        .I5(conf_tx_en),
        .O(\state_reg[1]_0 [1]));
  LUT5 #(
    .INIT(32'hFFFF5457)) 
    \R_brem[1]_i_2 
       (.I0(\R_brem_reg[3]_i_4_n_6 ),
        .I1(\R_brem_reg[14] ),
        .I2(tx_addr_full),
        .I3(\R_brem_reg[3]_i_5_n_6 ),
        .I4(tx_addr_empty),
        .O(\R_brem[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \R_brem[2]_i_1 
       (.I0(\R_brem[2]_i_2_n_0 ),
        .I1(\R_brem_reg[15]_i_8_n_0 ),
        .I2(desc_tx_bnum[2]),
        .I3(out),
        .I4(\R_brem_reg[2] ),
        .I5(conf_tx_en),
        .O(\state_reg[1]_0 [2]));
  LUT5 #(
    .INIT(32'h0000ABA8)) 
    \R_brem[2]_i_2 
       (.I0(\R_brem_reg[3]_i_4_n_5 ),
        .I1(\R_brem_reg[14] ),
        .I2(tx_addr_full),
        .I3(\R_brem_reg[3]_i_5_n_5 ),
        .I4(tx_addr_empty),
        .O(\R_brem[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT5 #(
    .INIT(32'h0000ABA8)) 
    \R_brem[2]_i_4 
       (.I0(R_empty_reg_i_31_n_5),
        .I1(\R_brem[15]_i_151_0 ),
        .I2(CO),
        .I3(R_empty_reg_i_33_n_5),
        .I4(\R_brem[15]_i_151 ),
        .O(R_full_reg_15));
  LUT6 #(
    .INIT(64'hFFB100B100000000)) 
    \R_brem[3]_i_1 
       (.I0(\R_brem_reg[15]_i_8_n_0 ),
        .I1(\R_brem[3]_i_2_n_0 ),
        .I2(desc_tx_bnum[3]),
        .I3(out),
        .I4(\R_brem_reg[3] ),
        .I5(conf_tx_en),
        .O(\state_reg[1]_0 [3]));
  LUT5 #(
    .INIT(32'hFFFF5457)) 
    \R_brem[3]_i_2 
       (.I0(\R_brem_reg[3]_i_4_n_4 ),
        .I1(\R_brem_reg[14] ),
        .I2(tx_addr_full),
        .I3(\R_brem_reg[3]_i_5_n_4 ),
        .I4(tx_addr_empty),
        .O(\R_brem[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0000ABA8)) 
    \R_brem[3]_i_6 
       (.I0(R_empty_reg_i_31_n_4),
        .I1(\R_brem[15]_i_151_0 ),
        .I2(CO),
        .I3(R_empty_reg_i_33_n_4),
        .I4(\R_brem[15]_i_151 ),
        .O(R_full_reg_3));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \R_brem[4]_i_1 
       (.I0(\R_brem[4]_i_2_n_0 ),
        .I1(\R_brem_reg[15]_i_8_n_0 ),
        .I2(desc_tx_bnum[4]),
        .I3(out),
        .I4(\R_brem_reg[4] ),
        .I5(conf_tx_en),
        .O(\state_reg[1]_0 [4]));
  LUT5 #(
    .INIT(32'h0000ABA8)) 
    \R_brem[4]_i_2 
       (.I0(\R_brem_reg[7]_i_5_n_7 ),
        .I1(\R_brem_reg[14] ),
        .I2(tx_addr_full),
        .I3(\R_brem_reg[7]_i_4_n_7 ),
        .I4(tx_addr_empty),
        .O(\R_brem[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0000ABA8)) 
    \R_brem[4]_i_4 
       (.I0(\R_brem_reg[7]_i_16_n_7 ),
        .I1(\R_brem[15]_i_151_0 ),
        .I2(CO),
        .I3(\R_brem_reg[7]_i_17_n_7 ),
        .I4(\R_brem[15]_i_151 ),
        .O(R_full_reg_4));
  LUT6 #(
    .INIT(64'hFFB100B100000000)) 
    \R_brem[5]_i_1 
       (.I0(\R_brem_reg[15]_i_8_n_0 ),
        .I1(\R_brem[5]_i_2_n_0 ),
        .I2(desc_tx_bnum[5]),
        .I3(out),
        .I4(\R_brem_reg[5] ),
        .I5(conf_tx_en),
        .O(\state_reg[1]_0 [5]));
  LUT5 #(
    .INIT(32'hFFFF5457)) 
    \R_brem[5]_i_2 
       (.I0(\R_brem_reg[7]_i_5_n_6 ),
        .I1(\R_brem_reg[14] ),
        .I2(tx_addr_full),
        .I3(\R_brem_reg[7]_i_4_n_6 ),
        .I4(tx_addr_empty),
        .O(\R_brem[5]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0000ABA8)) 
    \R_brem[5]_i_4 
       (.I0(\R_brem_reg[7]_i_16_n_6 ),
        .I1(\R_brem[15]_i_151_0 ),
        .I2(CO),
        .I3(\R_brem_reg[7]_i_17_n_6 ),
        .I4(\R_brem[15]_i_151 ),
        .O(R_full_reg_11));
  LUT6 #(
    .INIT(64'hFFB100B100000000)) 
    \R_brem[6]_i_1 
       (.I0(\R_brem_reg[15]_i_8_n_0 ),
        .I1(\R_brem[6]_i_2_n_0 ),
        .I2(desc_tx_bnum[6]),
        .I3(out),
        .I4(\R_brem_reg[6] ),
        .I5(conf_tx_en),
        .O(\state_reg[1]_0 [6]));
  LUT5 #(
    .INIT(32'hFFFF5457)) 
    \R_brem[6]_i_2 
       (.I0(\R_brem_reg[7]_i_5_n_5 ),
        .I1(\R_brem_reg[14] ),
        .I2(tx_addr_full),
        .I3(\R_brem_reg[7]_i_4_n_5 ),
        .I4(tx_addr_empty),
        .O(\R_brem[6]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0000ABA8)) 
    \R_brem[6]_i_4 
       (.I0(\R_brem_reg[7]_i_16_n_5 ),
        .I1(\R_brem[15]_i_151_0 ),
        .I2(CO),
        .I3(\R_brem_reg[7]_i_17_n_5 ),
        .I4(\R_brem[15]_i_151 ),
        .O(R_full_reg_10));
  LUT6 #(
    .INIT(64'hFFD100D100000000)) 
    \R_brem[7]_i_1 
       (.I0(\R_brem[7]_i_2_n_0 ),
        .I1(\R_brem_reg[15]_i_8_n_0 ),
        .I2(desc_tx_bnum[7]),
        .I3(out),
        .I4(\R_brem_reg[7]_0 ),
        .I5(conf_tx_en),
        .O(\state_reg[1]_0 [7]));
  LUT5 #(
    .INIT(32'hCCCDFFFD)) 
    \R_brem[7]_i_2 
       (.I0(\R_brem_reg[7]_i_4_n_4 ),
        .I1(tx_addr_empty),
        .I2(tx_addr_full),
        .I3(\R_brem_reg[14] ),
        .I4(\R_brem_reg[7]_i_5_n_4 ),
        .O(\R_brem[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[7]_i_22 
       (.I0(tx_addr_end[7]),
        .I1(Q[7]),
        .O(\R_brem[7]_i_22_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[7]_i_23 
       (.I0(tx_addr_end[6]),
        .I1(Q[6]),
        .O(\R_brem[7]_i_23_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[7]_i_24 
       (.I0(tx_addr_end[5]),
        .I1(Q[5]),
        .O(\R_brem[7]_i_24_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[7]_i_25 
       (.I0(tx_addr_end[4]),
        .I1(Q[4]),
        .O(\R_brem[7]_i_25_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[7]_i_26 
       (.I0(tx_addr_head[7]),
        .I1(Q[7]),
        .O(\R_brem[7]_i_26_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[7]_i_27 
       (.I0(tx_addr_head[6]),
        .I1(Q[6]),
        .O(\R_brem[7]_i_27_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[7]_i_28 
       (.I0(tx_addr_head[5]),
        .I1(Q[5]),
        .O(\R_brem[7]_i_28_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[7]_i_29 
       (.I0(tx_addr_head[4]),
        .I1(Q[4]),
        .O(\R_brem[7]_i_29_n_0 ));
  LUT5 #(
    .INIT(32'h0000ABA8)) 
    \R_brem[7]_i_6 
       (.I0(\R_brem_reg[7]_i_16_n_4 ),
        .I1(\R_brem[15]_i_151_0 ),
        .I2(CO),
        .I3(\R_brem_reg[7]_i_17_n_4 ),
        .I4(\R_brem[15]_i_151 ),
        .O(R_full_reg_7));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \R_brem[8]_i_1 
       (.I0(\R_brem[8]_i_2_n_0 ),
        .I1(\R_brem_reg[15]_i_8_n_0 ),
        .I2(desc_tx_bnum[8]),
        .I3(out),
        .I4(\R_brem_reg[8] ),
        .I5(conf_tx_en),
        .O(\state_reg[1]_0 [8]));
  LUT5 #(
    .INIT(32'h0000ABA8)) 
    \R_brem[8]_i_2 
       (.I0(\R_brem_reg[11]_i_5_n_7 ),
        .I1(\R_brem_reg[14] ),
        .I2(tx_addr_full),
        .I3(\R_brem_reg[11]_i_4_n_7 ),
        .I4(tx_addr_empty),
        .O(\R_brem[8]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0000ABA8)) 
    \R_brem[8]_i_4 
       (.I0(R_empty_reg_i_46_n_7),
        .I1(\R_brem[15]_i_151_0 ),
        .I2(CO),
        .I3(R_empty_reg_i_45_n_7),
        .I4(\R_brem[15]_i_151 ),
        .O(R_full_reg_5));
  LUT6 #(
    .INIT(64'hFFD100D100000000)) 
    \R_brem[9]_i_1 
       (.I0(\R_brem[9]_i_2_n_0 ),
        .I1(\R_brem_reg[15]_i_8_n_0 ),
        .I2(desc_tx_bnum[9]),
        .I3(out),
        .I4(\R_brem_reg[9] ),
        .I5(conf_tx_en),
        .O(\state_reg[1]_0 [9]));
  LUT5 #(
    .INIT(32'hCCCDFFFD)) 
    \R_brem[9]_i_2 
       (.I0(\R_brem_reg[11]_i_4_n_6 ),
        .I1(tx_addr_empty),
        .I2(tx_addr_full),
        .I3(\R_brem_reg[14] ),
        .I4(\R_brem_reg[11]_i_5_n_6 ),
        .O(\R_brem[9]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0000ABA8)) 
    \R_brem[9]_i_4 
       (.I0(R_empty_reg_i_46_n_6),
        .I1(\R_brem[15]_i_151_0 ),
        .I2(CO),
        .I3(R_empty_reg_i_45_n_6),
        .I4(\R_brem[15]_i_151 ),
        .O(R_full_reg_14));
  CARRY4 \R_brem_reg[11]_i_4 
       (.CI(\R_brem_reg[7]_i_4_n_0 ),
        .CO({\R_brem_reg[11]_i_4_n_0 ,\R_brem_reg[11]_i_4_n_1 ,\R_brem_reg[11]_i_4_n_2 ,\R_brem_reg[11]_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI(tx_addr_head[11:8]),
        .O({\R_brem_reg[11]_i_4_n_4 ,\R_brem_reg[11]_i_4_n_5 ,\R_brem_reg[11]_i_4_n_6 ,\R_brem_reg[11]_i_4_n_7 }),
        .S(\R_brem[15]_i_123_0 ));
  CARRY4 \R_brem_reg[11]_i_5 
       (.CI(\R_brem_reg[7]_i_5_n_0 ),
        .CO({\R_brem_reg[11]_i_5_n_0 ,\R_brem_reg[11]_i_5_n_1 ,\R_brem_reg[11]_i_5_n_2 ,\R_brem_reg[11]_i_5_n_3 }),
        .CYINIT(1'b0),
        .DI(tx_addr_end[11:8]),
        .O({\R_brem_reg[11]_i_5_n_4 ,\R_brem_reg[11]_i_5_n_5 ,\R_brem_reg[11]_i_5_n_6 ,\R_brem_reg[11]_i_5_n_7 }),
        .S(\R_brem[15]_i_123_1 ));
  CARRY4 \R_brem_reg[15]_i_115 
       (.CI(1'b0),
        .CO({\R_brem_reg[15]_i_115_n_0 ,\R_brem_reg[15]_i_115_n_1 ,\R_brem_reg[15]_i_115_n_2 ,\R_brem_reg[15]_i_115_n_3 }),
        .CYINIT(1'b0),
        .DI({\R_brem[15]_i_166_n_0 ,\R_brem[15]_i_167_n_0 ,\R_brem[15]_i_168_n_0 ,\R_brem[15]_i_169_n_0 }),
        .O(\NLW_R_brem_reg[15]_i_115_O_UNCONNECTED [3:0]),
        .S({\R_brem[15]_i_170_n_0 ,\R_brem[15]_i_171_n_0 ,\R_brem[15]_i_172_n_0 ,\R_brem[15]_i_173_n_0 }));
  CARRY4 \R_brem_reg[15]_i_124 
       (.CI(\R_brem_reg[15]_i_126_n_0 ),
        .CO({\R_brem_reg[15]_i_124_n_0 ,\R_brem_reg[15]_i_124_n_1 ,\R_brem_reg[15]_i_124_n_2 ,\R_brem_reg[15]_i_124_n_3 }),
        .CYINIT(1'b0),
        .DI(tx_addr_head[23:20]),
        .O({\R_brem_reg[15]_i_124_n_4 ,\R_brem_reg[15]_i_124_n_5 ,\R_brem_reg[15]_i_124_n_6 ,\R_brem_reg[15]_i_124_n_7 }),
        .S(\R_brem[15]_i_72_0 ));
  CARRY4 \R_brem_reg[15]_i_125 
       (.CI(\R_brem_reg[15]_i_127_n_0 ),
        .CO({\R_brem_reg[15]_i_125_n_0 ,\R_brem_reg[15]_i_125_n_1 ,\R_brem_reg[15]_i_125_n_2 ,\R_brem_reg[15]_i_125_n_3 }),
        .CYINIT(1'b0),
        .DI(tx_addr_end[23:20]),
        .O({\R_brem_reg[15]_i_125_n_4 ,\R_brem_reg[15]_i_125_n_5 ,\R_brem_reg[15]_i_125_n_6 ,\R_brem_reg[15]_i_125_n_7 }),
        .S(\R_brem[15]_i_72_1 ));
  CARRY4 \R_brem_reg[15]_i_126 
       (.CI(\R_brem_reg[15]_i_23_n_0 ),
        .CO({\R_brem_reg[15]_i_126_n_0 ,\R_brem_reg[15]_i_126_n_1 ,\R_brem_reg[15]_i_126_n_2 ,\R_brem_reg[15]_i_126_n_3 }),
        .CYINIT(1'b0),
        .DI(tx_addr_head[19:16]),
        .O({\R_brem_reg[15]_i_126_n_4 ,\R_brem_reg[15]_i_126_n_5 ,\R_brem_reg[15]_i_126_n_6 ,\R_brem_reg[15]_i_126_n_7 }),
        .S(\R_brem[15]_i_74_0 ));
  CARRY4 \R_brem_reg[15]_i_127 
       (.CI(\R_brem_reg[15]_i_25_n_0 ),
        .CO({\R_brem_reg[15]_i_127_n_0 ,\R_brem_reg[15]_i_127_n_1 ,\R_brem_reg[15]_i_127_n_2 ,\R_brem_reg[15]_i_127_n_3 }),
        .CYINIT(1'b0),
        .DI(tx_addr_end[19:16]),
        .O({\R_brem_reg[15]_i_127_n_4 ,\R_brem_reg[15]_i_127_n_5 ,\R_brem_reg[15]_i_127_n_6 ,\R_brem_reg[15]_i_127_n_7 }),
        .S(\R_brem[15]_i_74_1 ));
  CARRY4 \R_brem_reg[15]_i_13 
       (.CI(\R_brem_reg[15]_i_4_1 ),
        .CO({\R_brem_reg[15]_i_13_n_0 ,\R_brem_reg[15]_i_13_n_1 ,\R_brem_reg[15]_i_13_n_2 ,\R_brem_reg[15]_i_13_n_3 }),
        .CYINIT(1'b0),
        .DI({R_empty_i_40_n_0,\R_brem[15]_i_42_n_0 ,\R_brem[15]_i_43_n_0 ,R_empty_i_30_n_0}),
        .O(\NLW_R_brem_reg[15]_i_13_O_UNCONNECTED [3:0]),
        .S({\R_brem[15]_i_44_n_0 ,\R_brem[15]_i_45_n_0 ,\R_brem[15]_i_46_n_0 ,\R_brem[15]_i_47_n_0 }));
  CARRY4 \R_brem_reg[15]_i_23 
       (.CI(\R_brem_reg[11]_i_4_n_0 ),
        .CO({\R_brem_reg[15]_i_23_n_0 ,\R_brem_reg[15]_i_23_n_1 ,\R_brem_reg[15]_i_23_n_2 ,\R_brem_reg[15]_i_23_n_3 }),
        .CYINIT(1'b0),
        .DI(tx_addr_head[15:12]),
        .O({\R_brem_reg[15]_i_23_n_4 ,\R_brem_reg[15]_i_23_n_5 ,\R_brem_reg[15]_i_23_n_6 ,\R_brem_reg[15]_i_23_n_7 }),
        .S(\R_brem[15]_i_121_0 ));
  CARRY4 \R_brem_reg[15]_i_25 
       (.CI(\R_brem_reg[11]_i_5_n_0 ),
        .CO({\R_brem_reg[15]_i_25_n_0 ,\R_brem_reg[15]_i_25_n_1 ,\R_brem_reg[15]_i_25_n_2 ,\R_brem_reg[15]_i_25_n_3 }),
        .CYINIT(1'b0),
        .DI(tx_addr_end[15:12]),
        .O({\R_brem_reg[15]_i_25_n_4 ,\R_brem_reg[15]_i_25_n_5 ,\R_brem_reg[15]_i_25_n_6 ,\R_brem_reg[15]_i_25_n_7 }),
        .S(\R_brem[15]_i_121_1 ));
  CARRY4 \R_brem_reg[15]_i_26 
       (.CI(\R_brem_reg[15]_i_66_n_0 ),
        .CO({\R_brem_reg[15]_i_26_n_0 ,\R_brem_reg[15]_i_26_n_1 ,\R_brem_reg[15]_i_26_n_2 ,\R_brem_reg[15]_i_26_n_3 }),
        .CYINIT(1'b0),
        .DI({\R_brem[15]_i_67_n_0 ,\R_brem[15]_i_68_n_0 ,\R_brem[15]_i_69_n_0 ,\R_brem[15]_i_70_n_0 }),
        .O(\NLW_R_brem_reg[15]_i_26_O_UNCONNECTED [3:0]),
        .S({\R_brem[15]_i_71_n_0 ,\R_brem[15]_i_72_n_0 ,\R_brem[15]_i_73_n_0 ,\R_brem[15]_i_74_n_0 }));
  CARRY4 \R_brem_reg[15]_i_35 
       (.CI(\R_brem_reg[15]_i_80_n_0 ),
        .CO({R_empty_reg_2,\R_brem_reg[15]_i_35_n_1 ,\R_brem_reg[15]_i_35_n_2 ,\R_brem_reg[15]_i_35_n_3 }),
        .CYINIT(1'b0),
        .DI({\R_brem[15]_i_14_n_0 ,\R_brem[15]_i_12_n_0 ,\R_brem[15]_i_15_n_0 ,\R_brem[15]_i_16_n_0 }),
        .O(\NLW_R_brem_reg[15]_i_35_O_UNCONNECTED [3:0]),
        .S({\R_brem[15]_i_81_n_0 ,\R_brem[15]_i_82_n_0 ,\R_brem[15]_i_83_n_0 ,\R_brem[15]_i_84_n_0 }));
  CARRY4 \R_brem_reg[15]_i_39 
       (.CI(R_empty_reg_i_35_n_0),
        .CO({\NLW_R_brem_reg[15]_i_39_CO_UNCONNECTED [3],\R_brem_reg[15]_i_39_n_1 ,\R_brem_reg[15]_i_39_n_2 ,\R_brem_reg[15]_i_39_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,tx_addr_end[30:28]}),
        .O({\R_brem_reg[15]_i_39_n_4 ,\R_brem_reg[15]_i_39_n_5 ,\R_brem_reg[15]_i_39_n_6 ,\R_brem_reg[15]_i_39_n_7 }),
        .S({\R_brem[15]_i_82_1 ,\R_brem[15]_i_90_n_0 ,\R_brem[15]_i_91_n_0 ,\R_brem[15]_i_92_n_0 }));
  CARRY4 \R_brem_reg[15]_i_4 
       (.CI(\R_brem_reg[15]_i_13_n_0 ),
        .CO({R_empty_reg_1,\R_brem_reg[15]_i_4_n_1 ,\R_brem_reg[15]_i_4_n_2 ,\R_brem_reg[15]_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI({\R_brem[15]_i_14_n_0 ,\R_brem[15]_i_12_n_0 ,\R_brem[15]_i_15_n_0 ,\R_brem[15]_i_16_n_0 }),
        .O(\NLW_R_brem_reg[15]_i_4_O_UNCONNECTED [3:0]),
        .S({\R_brem[15]_i_17_n_0 ,\R_brem[15]_i_18_n_0 ,\R_brem[15]_i_19_n_0 ,\R_brem[15]_i_20_n_0 }));
  CARRY4 \R_brem_reg[15]_i_40 
       (.CI(R_empty_reg_i_34_n_0),
        .CO({\NLW_R_brem_reg[15]_i_40_CO_UNCONNECTED [3],\R_brem_reg[15]_i_40_n_1 ,\R_brem_reg[15]_i_40_n_2 ,\R_brem_reg[15]_i_40_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,tx_addr_head[30:28]}),
        .O({\R_brem_reg[15]_i_40_n_4 ,\R_brem_reg[15]_i_40_n_5 ,\R_brem_reg[15]_i_40_n_6 ,\R_brem_reg[15]_i_40_n_7 }),
        .S({\R_brem[15]_i_82_0 ,\R_brem[15]_i_94_n_0 ,\R_brem[15]_i_95_n_0 ,\R_brem[15]_i_96_n_0 }));
  CARRY4 \R_brem_reg[15]_i_66 
       (.CI(\R_brem_reg[15]_i_115_n_0 ),
        .CO({\R_brem_reg[15]_i_66_n_0 ,\R_brem_reg[15]_i_66_n_1 ,\R_brem_reg[15]_i_66_n_2 ,\R_brem_reg[15]_i_66_n_3 }),
        .CYINIT(1'b0),
        .DI({\R_brem[15]_i_116_n_0 ,\R_brem[15]_i_117_n_0 ,\R_brem[15]_i_118_n_0 ,\R_brem[15]_i_119_n_0 }),
        .O(\NLW_R_brem_reg[15]_i_66_O_UNCONNECTED [3:0]),
        .S({\R_brem[15]_i_120_n_0 ,\R_brem[15]_i_121_n_0 ,\R_brem[15]_i_122_n_0 ,\R_brem[15]_i_123_n_0 }));
  CARRY4 \R_brem_reg[15]_i_75 
       (.CI(\R_brem_reg[15]_i_78_n_0 ),
        .CO({\NLW_R_brem_reg[15]_i_75_CO_UNCONNECTED [3],\R_brem_reg[15]_i_75_n_1 ,\R_brem_reg[15]_i_75_n_2 ,\R_brem_reg[15]_i_75_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,tx_addr_head[30:28]}),
        .O({\R_brem_reg[15]_i_75_n_4 ,\R_brem_reg[15]_i_75_n_5 ,\R_brem_reg[15]_i_75_n_6 ,\R_brem_reg[15]_i_75_n_7 }),
        .S(\R_brem[15]_i_32_0 ));
  CARRY4 \R_brem_reg[15]_i_76 
       (.CI(\R_brem_reg[15]_i_79_n_0 ),
        .CO({\NLW_R_brem_reg[15]_i_76_CO_UNCONNECTED [3],\R_brem_reg[15]_i_76_n_1 ,\R_brem_reg[15]_i_76_n_2 ,\R_brem_reg[15]_i_76_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,tx_addr_end[30:28]}),
        .O({\R_brem_reg[15]_i_76_n_4 ,\R_brem_reg[15]_i_76_n_5 ,\R_brem_reg[15]_i_76_n_6 ,\R_brem_reg[15]_i_76_n_7 }),
        .S(\R_brem[15]_i_32_1 ));
  CARRY4 \R_brem_reg[15]_i_78 
       (.CI(\R_brem_reg[15]_i_124_n_0 ),
        .CO({\R_brem_reg[15]_i_78_n_0 ,\R_brem_reg[15]_i_78_n_1 ,\R_brem_reg[15]_i_78_n_2 ,\R_brem_reg[15]_i_78_n_3 }),
        .CYINIT(1'b0),
        .DI(tx_addr_head[27:24]),
        .O({\R_brem_reg[15]_i_78_n_4 ,\R_brem_reg[15]_i_78_n_5 ,\R_brem_reg[15]_i_78_n_6 ,\R_brem_reg[15]_i_78_n_7 }),
        .S(\R_brem[15]_i_34_0 ));
  CARRY4 \R_brem_reg[15]_i_79 
       (.CI(\R_brem_reg[15]_i_125_n_0 ),
        .CO({\R_brem_reg[15]_i_79_n_0 ,\R_brem_reg[15]_i_79_n_1 ,\R_brem_reg[15]_i_79_n_2 ,\R_brem_reg[15]_i_79_n_3 }),
        .CYINIT(1'b0),
        .DI(tx_addr_end[27:24]),
        .O({\R_brem_reg[15]_i_79_n_4 ,\R_brem_reg[15]_i_79_n_5 ,\R_brem_reg[15]_i_79_n_6 ,\R_brem_reg[15]_i_79_n_7 }),
        .S(\R_brem[15]_i_34_1 ));
  CARRY4 \R_brem_reg[15]_i_8 
       (.CI(\R_brem_reg[15]_i_26_n_0 ),
        .CO({\R_brem_reg[15]_i_8_n_0 ,\R_brem_reg[15]_i_8_n_1 ,\R_brem_reg[15]_i_8_n_2 ,\R_brem_reg[15]_i_8_n_3 }),
        .CYINIT(1'b0),
        .DI({\R_brem[15]_i_27_n_0 ,\R_brem[15]_i_28_n_0 ,\R_brem[15]_i_29_n_0 ,\R_brem[15]_i_30_n_0 }),
        .O(\NLW_R_brem_reg[15]_i_8_O_UNCONNECTED [3:0]),
        .S({\R_brem[15]_i_31_n_0 ,\R_brem[15]_i_32_n_0 ,\R_brem[15]_i_33_n_0 ,\R_brem[15]_i_34_n_0 }));
  CARRY4 \R_brem_reg[15]_i_80 
       (.CI(\R_brem_reg[15]_i_35_0 ),
        .CO({\R_brem_reg[15]_i_80_n_0 ,\R_brem_reg[15]_i_80_n_1 ,\R_brem_reg[15]_i_80_n_2 ,\R_brem_reg[15]_i_80_n_3 }),
        .CYINIT(1'b0),
        .DI({R_empty_i_40_n_0,\R_brem[15]_i_42_n_0 ,\R_brem[15]_i_43_n_0 ,R_empty_i_30_n_0}),
        .O(\NLW_R_brem_reg[15]_i_80_O_UNCONNECTED [3:0]),
        .S({\R_brem[15]_i_145_n_0 ,\R_brem[15]_i_146_n_0 ,\R_brem[15]_i_147_n_0 ,\R_brem[15]_i_148_n_0 }));
  CARRY4 \R_brem_reg[3]_i_4 
       (.CI(1'b0),
        .CO({\R_brem_reg[3]_i_4_n_0 ,\R_brem_reg[3]_i_4_n_1 ,\R_brem_reg[3]_i_4_n_2 ,\R_brem_reg[3]_i_4_n_3 }),
        .CYINIT(1'b1),
        .DI(tx_addr_end[3:0]),
        .O({\R_brem_reg[3]_i_4_n_4 ,\R_brem_reg[3]_i_4_n_5 ,\R_brem_reg[3]_i_4_n_6 ,\R_brem_reg[3]_i_4_n_7 }),
        .S(\R_brem[15]_i_173_1 ));
  CARRY4 \R_brem_reg[3]_i_5 
       (.CI(1'b0),
        .CO({\R_brem_reg[3]_i_5_n_0 ,\R_brem_reg[3]_i_5_n_1 ,\R_brem_reg[3]_i_5_n_2 ,\R_brem_reg[3]_i_5_n_3 }),
        .CYINIT(1'b1),
        .DI(tx_addr_head[3:0]),
        .O({\R_brem_reg[3]_i_5_n_4 ,\R_brem_reg[3]_i_5_n_5 ,\R_brem_reg[3]_i_5_n_6 ,\R_brem_reg[3]_i_5_n_7 }),
        .S(\R_brem[15]_i_173_0 ));
  CARRY4 \R_brem_reg[7]_i_16 
       (.CI(R_empty_reg_i_31_n_0),
        .CO({\R_brem_reg[7]_i_16_n_0 ,\R_brem_reg[7]_i_16_n_1 ,\R_brem_reg[7]_i_16_n_2 ,\R_brem_reg[7]_i_16_n_3 }),
        .CYINIT(1'b0),
        .DI(tx_addr_end[7:4]),
        .O({\R_brem_reg[7]_i_16_n_4 ,\R_brem_reg[7]_i_16_n_5 ,\R_brem_reg[7]_i_16_n_6 ,\R_brem_reg[7]_i_16_n_7 }),
        .S({\R_brem[7]_i_22_n_0 ,\R_brem[7]_i_23_n_0 ,\R_brem[7]_i_24_n_0 ,\R_brem[7]_i_25_n_0 }));
  CARRY4 \R_brem_reg[7]_i_17 
       (.CI(R_empty_reg_i_33_n_0),
        .CO({\R_brem_reg[7]_i_17_n_0 ,\R_brem_reg[7]_i_17_n_1 ,\R_brem_reg[7]_i_17_n_2 ,\R_brem_reg[7]_i_17_n_3 }),
        .CYINIT(1'b0),
        .DI(tx_addr_head[7:4]),
        .O({\R_brem_reg[7]_i_17_n_4 ,\R_brem_reg[7]_i_17_n_5 ,\R_brem_reg[7]_i_17_n_6 ,\R_brem_reg[7]_i_17_n_7 }),
        .S({\R_brem[7]_i_26_n_0 ,\R_brem[7]_i_27_n_0 ,\R_brem[7]_i_28_n_0 ,\R_brem[7]_i_29_n_0 }));
  CARRY4 \R_brem_reg[7]_i_4 
       (.CI(\R_brem_reg[3]_i_5_n_0 ),
        .CO({\R_brem_reg[7]_i_4_n_0 ,\R_brem_reg[7]_i_4_n_1 ,\R_brem_reg[7]_i_4_n_2 ,\R_brem_reg[7]_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI(tx_addr_head[7:4]),
        .O({\R_brem_reg[7]_i_4_n_4 ,\R_brem_reg[7]_i_4_n_5 ,\R_brem_reg[7]_i_4_n_6 ,\R_brem_reg[7]_i_4_n_7 }),
        .S(\R_brem[15]_i_171_0 ));
  CARRY4 \R_brem_reg[7]_i_5 
       (.CI(\R_brem_reg[3]_i_4_n_0 ),
        .CO({\R_brem_reg[7]_i_5_n_0 ,\R_brem_reg[7]_i_5_n_1 ,\R_brem_reg[7]_i_5_n_2 ,\R_brem_reg[7]_i_5_n_3 }),
        .CYINIT(1'b0),
        .DI(tx_addr_end[7:4]),
        .O({\R_brem_reg[7]_i_5_n_4 ,\R_brem_reg[7]_i_5_n_5 ,\R_brem_reg[7]_i_5_n_6 ,\R_brem_reg[7]_i_5_n_7 }),
        .S(\R_brem[15]_i_171_1 ));
  LUT6 #(
    .INIT(64'hBBBBBBBAAAAAAABA)) 
    R_empty_i_10
       (.I0(\R_brem[15]_i_14_n_0 ),
        .I1(\R_brem[15]_i_151 ),
        .I2(R_empty_reg_i_34_n_7),
        .I3(CO),
        .I4(\R_brem[15]_i_151_0 ),
        .I5(R_empty_reg_i_35_n_7),
        .O(R_empty_i_10_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    R_empty_i_101
       (.I0(tx_addr_head[31]),
        .I1(Q[31]),
        .I2(tx_addr_head[30]),
        .I3(Q[30]),
        .O(\tx_addr_head_reg[31] [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_empty_i_103
       (.I0(tx_addr_head[26]),
        .I1(Q[26]),
        .I2(Q[24]),
        .I3(tx_addr_head[24]),
        .I4(Q[25]),
        .I5(tx_addr_head[25]),
        .O(\tx_addr_head_reg[31] [0]));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_104
       (.I0(tx_addr_head[11]),
        .I1(Q[11]),
        .O(R_empty_i_104_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_105
       (.I0(tx_addr_head[10]),
        .I1(Q[10]),
        .O(R_empty_i_105_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_106
       (.I0(tx_addr_head[9]),
        .I1(Q[9]),
        .O(R_empty_i_106_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_107
       (.I0(tx_addr_head[8]),
        .I1(Q[8]),
        .O(R_empty_i_107_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_108
       (.I0(tx_addr_end[11]),
        .I1(Q[11]),
        .O(R_empty_i_108_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_109
       (.I0(tx_addr_end[10]),
        .I1(Q[10]),
        .O(R_empty_i_109_n_0));
  LUT6 #(
    .INIT(64'h000A0000000A0C0C)) 
    R_empty_i_11
       (.I0(R_empty_reg_i_36_n_5),
        .I1(R_empty_reg_i_37_n_5),
        .I2(\R_brem[15]_i_151 ),
        .I3(R_empty_reg_i_36_n_4),
        .I4(\R_brem_reg[15]_i_4_0 ),
        .I5(R_empty_reg_i_37_n_4),
        .O(R_empty_i_11_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_110
       (.I0(tx_addr_end[9]),
        .I1(Q[9]),
        .O(R_empty_i_110_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_111
       (.I0(tx_addr_end[8]),
        .I1(Q[8]),
        .O(R_empty_i_111_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_empty_i_112
       (.I0(tx_addr_head[10]),
        .I1(R_addr2[10]),
        .I2(R_addr2[11]),
        .I3(tx_addr_head[11]),
        .I4(R_addr2[9]),
        .I5(tx_addr_head[9]),
        .O(R_empty_i_112_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_empty_i_113
       (.I0(R_addr2[8]),
        .I1(tx_addr_head[8]),
        .I2(R_addr2[6]),
        .I3(tx_addr_head[6]),
        .I4(tx_addr_head[7]),
        .I5(R_addr2[7]),
        .O(R_empty_i_113_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_empty_i_114
       (.I0(tx_addr_head[4]),
        .I1(R_addr2[4]),
        .I2(R_addr2[5]),
        .I3(tx_addr_head[5]),
        .I4(R_addr2[3]),
        .I5(tx_addr_head[3]),
        .O(R_empty_i_114_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_empty_i_115
       (.I0(R_addr2[2]),
        .I1(tx_addr_head[2]),
        .I2(R_addr2[0]),
        .I3(tx_addr_head[0]),
        .I4(tx_addr_head[1]),
        .I5(R_addr2[1]),
        .O(R_empty_i_115_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_empty_i_116
       (.I0(tx_addr_start[11]),
        .I1(tx_addr_head[11]),
        .I2(tx_addr_start[9]),
        .I3(tx_addr_head[9]),
        .I4(tx_addr_head[10]),
        .I5(tx_addr_start[10]),
        .O(R_empty_i_116_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_empty_i_117
       (.I0(tx_addr_start[8]),
        .I1(tx_addr_head[8]),
        .I2(tx_addr_start[6]),
        .I3(tx_addr_head[6]),
        .I4(tx_addr_head[7]),
        .I5(tx_addr_start[7]),
        .O(R_empty_i_117_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_empty_i_118
       (.I0(tx_addr_start[5]),
        .I1(tx_addr_head[5]),
        .I2(tx_addr_start[3]),
        .I3(tx_addr_head[3]),
        .I4(tx_addr_head[4]),
        .I5(tx_addr_start[4]),
        .O(R_empty_i_118_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_empty_i_119
       (.I0(tx_addr_start[2]),
        .I1(tx_addr_head[2]),
        .I2(tx_addr_start[0]),
        .I3(tx_addr_head[0]),
        .I4(tx_addr_head[1]),
        .I5(tx_addr_start[1]),
        .O(R_empty_i_119_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    R_empty_i_12
       (.I0(R_empty_i_39_n_0),
        .I1(R_full_reg_5),
        .I2(R_full_reg_6),
        .I3(R_full_reg_7),
        .I4(R_full_reg_8),
        .I5(R_empty_i_40_n_0),
        .O(R_empty_i_12_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_120
       (.I0(tx_addr_head[23]),
        .I1(Q[23]),
        .O(R_empty_i_120_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_121
       (.I0(tx_addr_head[22]),
        .I1(Q[22]),
        .O(R_empty_i_121_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_122
       (.I0(tx_addr_head[21]),
        .I1(Q[21]),
        .O(R_empty_i_122_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_123
       (.I0(tx_addr_head[20]),
        .I1(Q[20]),
        .O(R_empty_i_123_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_124
       (.I0(tx_addr_end[23]),
        .I1(Q[23]),
        .O(R_empty_i_124_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_125
       (.I0(tx_addr_end[22]),
        .I1(Q[22]),
        .O(R_empty_i_125_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_126
       (.I0(tx_addr_end[21]),
        .I1(Q[21]),
        .O(R_empty_i_126_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_127
       (.I0(tx_addr_end[20]),
        .I1(Q[20]),
        .O(R_empty_i_127_n_0));
  LUT6 #(
    .INIT(64'h000000000000D0DD)) 
    R_empty_i_13
       (.I0(R_full_reg_9),
        .I1(R_full_reg_6),
        .I2(R_full_reg_7),
        .I3(R_full_reg_10),
        .I4(R_empty_i_41_n_0),
        .I5(\R_brem[15]_i_12_n_0 ),
        .O(R_empty_i_13_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    R_empty_i_133
       (.I0(tx_addr_head[23]),
        .I1(Q[23]),
        .I2(tx_addr_head[22]),
        .I3(Q[22]),
        .O(\tx_addr_head_reg[23] [3]));
  LUT4 #(
    .INIT(16'h9009)) 
    R_empty_i_134
       (.I0(tx_addr_head[20]),
        .I1(Q[20]),
        .I2(tx_addr_head[21]),
        .I3(Q[21]),
        .O(\tx_addr_head_reg[23] [2]));
  LUT4 #(
    .INIT(16'h9009)) 
    R_empty_i_135
       (.I0(tx_addr_head[19]),
        .I1(Q[19]),
        .I2(tx_addr_head[18]),
        .I3(Q[18]),
        .O(\tx_addr_head_reg[23] [1]));
  LUT4 #(
    .INIT(16'h9009)) 
    R_empty_i_136
       (.I0(tx_addr_head[17]),
        .I1(Q[17]),
        .I2(tx_addr_head[16]),
        .I3(Q[16]),
        .O(\tx_addr_head_reg[23] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_empty_i_139
       (.I0(tx_addr_head[20]),
        .I1(Q[20]),
        .I2(Q[18]),
        .I3(tx_addr_head[18]),
        .I4(Q[19]),
        .I5(tx_addr_head[19]),
        .O(\tx_addr_head_reg[20] [1]));
  LUT6 #(
    .INIT(64'h0F0A0F0F0F0A0C0C)) 
    R_empty_i_14
       (.I0(R_empty_reg_i_33_n_6),
        .I1(R_empty_reg_i_31_n_6),
        .I2(\R_brem[15]_i_151 ),
        .I3(R_empty_reg_i_33_n_5),
        .I4(\R_brem_reg[15]_i_4_0 ),
        .I5(R_empty_reg_i_31_n_5),
        .O(R_empty_i_14_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_empty_i_141
       (.I0(tx_addr_head[14]),
        .I1(Q[14]),
        .I2(Q[12]),
        .I3(tx_addr_head[12]),
        .I4(Q[13]),
        .I5(tx_addr_head[13]),
        .O(\tx_addr_head_reg[20] [0]));
  LUT4 #(
    .INIT(16'h9009)) 
    R_empty_i_147
       (.I0(tx_addr_head[14]),
        .I1(Q[14]),
        .I2(tx_addr_head[15]),
        .I3(Q[15]),
        .O(\tx_addr_head_reg[14] [3]));
  LUT4 #(
    .INIT(16'h9009)) 
    R_empty_i_148
       (.I0(tx_addr_head[13]),
        .I1(Q[13]),
        .I2(tx_addr_head[12]),
        .I3(Q[12]),
        .O(\tx_addr_head_reg[14] [2]));
  LUT4 #(
    .INIT(16'h9009)) 
    R_empty_i_149
       (.I0(tx_addr_head[11]),
        .I1(Q[11]),
        .I2(tx_addr_head[10]),
        .I3(Q[10]),
        .O(\tx_addr_head_reg[14] [1]));
  LUT5 #(
    .INIT(32'h0000ABA8)) 
    R_empty_i_15
       (.I0(R_empty_reg_i_37_n_7),
        .I1(\R_brem[15]_i_151_0 ),
        .I2(CO),
        .I3(R_empty_reg_i_36_n_7),
        .I4(\R_brem[15]_i_151 ),
        .O(R_empty_i_15_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    R_empty_i_150
       (.I0(tx_addr_head[8]),
        .I1(Q[8]),
        .I2(tx_addr_head[9]),
        .I3(Q[9]),
        .O(\tx_addr_head_reg[14] [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_empty_i_152
       (.I0(tx_addr_head[8]),
        .I1(Q[8]),
        .I2(Q[6]),
        .I3(tx_addr_head[6]),
        .I4(Q[7]),
        .I5(tx_addr_head[7]),
        .O(S[1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_empty_i_154
       (.I0(tx_addr_head[2]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(tx_addr_head[0]),
        .I4(Q[1]),
        .I5(tx_addr_head[1]),
        .O(S[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    R_empty_i_159
       (.I0(tx_addr_head[7]),
        .I1(Q[7]),
        .I2(tx_addr_head[6]),
        .I3(Q[6]),
        .O(\tx_addr_head_reg[7] [3]));
  LUT5 #(
    .INIT(32'h0000ABA8)) 
    R_empty_i_16
       (.I0(R_empty_reg_i_42_n_4),
        .I1(\R_brem[15]_i_151_0 ),
        .I2(CO),
        .I3(R_empty_reg_i_43_n_4),
        .I4(\R_brem[15]_i_151 ),
        .O(R_full_reg));
  LUT4 #(
    .INIT(16'h9009)) 
    R_empty_i_160
       (.I0(tx_addr_head[5]),
        .I1(Q[5]),
        .I2(tx_addr_head[4]),
        .I3(Q[4]),
        .O(\tx_addr_head_reg[7] [2]));
  LUT4 #(
    .INIT(16'h9009)) 
    R_empty_i_161
       (.I0(tx_addr_head[2]),
        .I1(Q[2]),
        .I2(tx_addr_head[3]),
        .I3(Q[3]),
        .O(\tx_addr_head_reg[7] [1]));
  LUT4 #(
    .INIT(16'h9009)) 
    R_empty_i_162
       (.I0(tx_addr_head[1]),
        .I1(Q[1]),
        .I2(tx_addr_head[0]),
        .I3(Q[0]),
        .O(\tx_addr_head_reg[7] [0]));
  LUT6 #(
    .INIT(64'h0F0A0F0F0F0A0C0C)) 
    R_empty_i_18
       (.I0(R_empty_reg_i_45_n_4),
        .I1(R_empty_reg_i_46_n_4),
        .I2(\R_brem[15]_i_151 ),
        .I3(R_empty_reg_i_34_n_4),
        .I4(\R_brem_reg[15]_i_4_0 ),
        .I5(R_empty_reg_i_35_n_4),
        .O(R_empty_i_18_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    R_empty_i_20
       (.I0(tx_addr_head[31]),
        .I1(R_addr2[31]),
        .I2(tx_addr_head[30]),
        .I3(R_addr2[30]),
        .O(R_empty_i_20_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_empty_i_21
       (.I0(R_addr2[29]),
        .I1(tx_addr_head[29]),
        .I2(R_addr2[27]),
        .I3(tx_addr_head[27]),
        .I4(tx_addr_head[28]),
        .I5(R_addr2[28]),
        .O(R_empty_i_21_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_empty_i_22
       (.I0(tx_addr_head[25]),
        .I1(R_addr2[25]),
        .I2(R_addr2[26]),
        .I3(tx_addr_head[26]),
        .I4(R_addr2[24]),
        .I5(tx_addr_head[24]),
        .O(R_empty_i_22_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    R_empty_i_24
       (.I0(tx_addr_head[31]),
        .I1(tx_addr_start[31]),
        .I2(tx_addr_head[30]),
        .I3(tx_addr_start[30]),
        .O(R_empty_i_24_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_empty_i_25
       (.I0(tx_addr_start[29]),
        .I1(tx_addr_head[29]),
        .I2(tx_addr_start[27]),
        .I3(tx_addr_head[27]),
        .I4(tx_addr_head[28]),
        .I5(tx_addr_start[28]),
        .O(R_empty_i_25_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_empty_i_26
       (.I0(tx_addr_start[26]),
        .I1(tx_addr_head[26]),
        .I2(tx_addr_start[24]),
        .I3(tx_addr_head[24]),
        .I4(tx_addr_head[25]),
        .I5(tx_addr_start[25]),
        .O(R_empty_i_26_n_0));
  LUT6 #(
    .INIT(64'h0F0A0F0F0F0A0C0C)) 
    R_empty_i_27
       (.I0(R_empty_reg_i_34_n_6),
        .I1(R_empty_reg_i_35_n_6),
        .I2(\R_brem[15]_i_151 ),
        .I3(R_empty_reg_i_57_n_7),
        .I4(\R_brem_reg[15]_i_4_0 ),
        .I5(R_empty_reg_i_58_n_7),
        .O(R_empty_i_27_n_0));
  LUT5 #(
    .INIT(32'h0000ABA8)) 
    R_empty_i_28
       (.I0(R_empty_reg_i_35_n_5),
        .I1(\R_brem[15]_i_151_0 ),
        .I2(CO),
        .I3(R_empty_reg_i_34_n_5),
        .I4(\R_brem[15]_i_151 ),
        .O(R_empty_i_28_n_0));
  LUT5 #(
    .INIT(32'h0000ABA8)) 
    R_empty_i_29
       (.I0(R_empty_reg_i_37_n_4),
        .I1(\R_brem[15]_i_151_0 ),
        .I2(CO),
        .I3(R_empty_reg_i_36_n_4),
        .I4(\R_brem[15]_i_151 ),
        .O(R_empty_i_29_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFBA)) 
    R_empty_i_3
       (.I0(R_empty_i_7_n_0),
        .I1(R_full_reg_1),
        .I2(R_full_reg_2),
        .I3(R_empty_i_10_n_0),
        .I4(R_empty_i_11_n_0),
        .I5(R_empty_i_12_n_0),
        .O(R_full_reg_0));
  LUT6 #(
    .INIT(64'h0F0C0F0F0F0C0A0A)) 
    R_empty_i_30
       (.I0(R_empty_reg_i_37_n_6),
        .I1(R_empty_reg_i_36_n_6),
        .I2(\R_brem[15]_i_151 ),
        .I3(R_empty_reg_i_36_n_7),
        .I4(\R_brem_reg[15]_i_4_0 ),
        .I5(R_empty_reg_i_37_n_7),
        .O(R_empty_i_30_n_0));
  LUT6 #(
    .INIT(64'h0F0A0F0F0F0A0C0C)) 
    R_empty_i_39
       (.I0(R_empty_reg_i_45_n_6),
        .I1(R_empty_reg_i_46_n_6),
        .I2(\R_brem[15]_i_151 ),
        .I3(R_empty_reg_i_45_n_5),
        .I4(\R_brem_reg[15]_i_4_0 ),
        .I5(R_empty_reg_i_46_n_5),
        .O(R_empty_i_39_n_0));
  LUT6 #(
    .INIT(64'h0000000000002022)) 
    R_empty_i_4
       (.I0(R_empty_i_13_n_0),
        .I1(R_empty_i_14_n_0),
        .I2(R_empty_i_15_n_0),
        .I3(R_full_reg),
        .I4(R_empty_reg_3),
        .I5(R_empty_i_18_n_0),
        .O(R_empty_reg));
  LUT6 #(
    .INIT(64'h0F0C0F0F0F0C0A0A)) 
    R_empty_i_40
       (.I0(R_empty_reg_i_58_n_4),
        .I1(R_empty_reg_i_57_n_4),
        .I2(\R_brem[15]_i_151 ),
        .I3(R_empty_reg_i_57_n_5),
        .I4(\R_brem_reg[15]_i_4_0 ),
        .I5(R_empty_reg_i_58_n_5),
        .O(R_empty_i_40_n_0));
  LUT6 #(
    .INIT(64'h000A0000000A0C0C)) 
    R_empty_i_41
       (.I0(R_empty_reg_i_57_n_6),
        .I1(R_empty_reg_i_58_n_6),
        .I2(\R_brem[15]_i_151 ),
        .I3(R_empty_reg_i_57_n_5),
        .I4(\R_brem_reg[15]_i_4_0 ),
        .I5(R_empty_reg_i_58_n_5),
        .O(R_empty_i_41_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_empty_i_48
       (.I0(tx_addr_head[22]),
        .I1(R_addr2[22]),
        .I2(R_addr2[23]),
        .I3(tx_addr_head[23]),
        .I4(R_addr2[21]),
        .I5(tx_addr_head[21]),
        .O(R_empty_i_48_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_empty_i_49
       (.I0(tx_addr_head[19]),
        .I1(R_addr2[19]),
        .I2(R_addr2[20]),
        .I3(tx_addr_head[20]),
        .I4(R_addr2[18]),
        .I5(tx_addr_head[18]),
        .O(R_empty_i_49_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_empty_i_50
       (.I0(R_addr2[17]),
        .I1(tx_addr_head[17]),
        .I2(R_addr2[15]),
        .I3(tx_addr_head[15]),
        .I4(tx_addr_head[16]),
        .I5(R_addr2[16]),
        .O(R_empty_i_50_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_empty_i_51
       (.I0(R_addr2[14]),
        .I1(tx_addr_head[14]),
        .I2(R_addr2[12]),
        .I3(tx_addr_head[12]),
        .I4(tx_addr_head[13]),
        .I5(R_addr2[13]),
        .O(R_empty_i_51_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_empty_i_53
       (.I0(tx_addr_start[23]),
        .I1(tx_addr_head[23]),
        .I2(tx_addr_start[21]),
        .I3(tx_addr_head[21]),
        .I4(tx_addr_head[22]),
        .I5(tx_addr_start[22]),
        .O(R_empty_i_53_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_empty_i_54
       (.I0(tx_addr_start[20]),
        .I1(tx_addr_head[20]),
        .I2(tx_addr_start[18]),
        .I3(tx_addr_head[18]),
        .I4(tx_addr_head[19]),
        .I5(tx_addr_start[19]),
        .O(R_empty_i_54_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_empty_i_55
       (.I0(tx_addr_start[17]),
        .I1(tx_addr_head[17]),
        .I2(tx_addr_start[15]),
        .I3(tx_addr_head[15]),
        .I4(tx_addr_head[16]),
        .I5(tx_addr_start[16]),
        .O(R_empty_i_55_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_empty_i_56
       (.I0(tx_addr_start[14]),
        .I1(tx_addr_head[14]),
        .I2(tx_addr_start[12]),
        .I3(tx_addr_head[12]),
        .I4(tx_addr_head[13]),
        .I5(tx_addr_start[13]),
        .O(R_empty_i_56_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_59
       (.I0(tx_addr_end[3]),
        .I1(Q[3]),
        .O(R_empty_i_59_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_60
       (.I0(tx_addr_end[2]),
        .I1(Q[2]),
        .O(R_empty_i_60_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_61
       (.I0(tx_addr_end[1]),
        .I1(Q[1]),
        .O(R_empty_i_61_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_62
       (.I0(tx_addr_end[0]),
        .I1(Q[0]),
        .O(R_empty_i_62_n_0));
  LUT4 #(
    .INIT(16'h40F4)) 
    R_empty_i_64
       (.I0(tx_addr_head[30]),
        .I1(Q[30]),
        .I2(Q[31]),
        .I3(tx_addr_head[31]),
        .O(R_empty_i_64_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    R_empty_i_68
       (.I0(tx_addr_head[31]),
        .I1(Q[31]),
        .I2(tx_addr_head[30]),
        .I3(Q[30]),
        .O(R_empty_i_68_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    R_empty_i_69
       (.I0(tx_addr_head[29]),
        .I1(Q[29]),
        .I2(tx_addr_head[28]),
        .I3(Q[28]),
        .O(R_empty_i_69_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    R_empty_i_7
       (.I0(R_full_reg_3),
        .I1(R_full_reg_4),
        .I2(R_empty_i_27_n_0),
        .I3(R_empty_i_28_n_0),
        .I4(R_empty_i_29_n_0),
        .I5(R_empty_i_30_n_0),
        .O(R_empty_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    R_empty_i_70
       (.I0(tx_addr_head[26]),
        .I1(Q[26]),
        .I2(tx_addr_head[27]),
        .I3(Q[27]),
        .O(R_empty_i_70_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    R_empty_i_71
       (.I0(tx_addr_head[25]),
        .I1(Q[25]),
        .I2(tx_addr_head[24]),
        .I3(Q[24]),
        .O(R_empty_i_71_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_72
       (.I0(tx_addr_head[3]),
        .I1(Q[3]),
        .O(R_empty_i_72_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_73
       (.I0(tx_addr_head[2]),
        .I1(Q[2]),
        .O(R_empty_i_73_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_74
       (.I0(tx_addr_head[1]),
        .I1(Q[1]),
        .O(R_empty_i_74_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_75
       (.I0(tx_addr_head[0]),
        .I1(Q[0]),
        .O(R_empty_i_75_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_76
       (.I0(tx_addr_head[27]),
        .I1(Q[27]),
        .O(R_empty_i_76_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_77
       (.I0(tx_addr_head[26]),
        .I1(Q[26]),
        .O(R_empty_i_77_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_78
       (.I0(tx_addr_head[25]),
        .I1(Q[25]),
        .O(R_empty_i_78_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_79
       (.I0(tx_addr_head[24]),
        .I1(Q[24]),
        .O(R_empty_i_79_n_0));
  LUT5 #(
    .INIT(32'h0000ABA8)) 
    R_empty_i_8
       (.I0(R_empty_reg_i_31_n_6),
        .I1(\R_brem[15]_i_151_0 ),
        .I2(CO),
        .I3(R_empty_reg_i_33_n_6),
        .I4(\R_brem[15]_i_151 ),
        .O(R_full_reg_1));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_80
       (.I0(tx_addr_end[27]),
        .I1(Q[27]),
        .O(R_empty_i_80_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_81
       (.I0(tx_addr_end[26]),
        .I1(Q[26]),
        .O(R_empty_i_81_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_82
       (.I0(tx_addr_end[25]),
        .I1(Q[25]),
        .O(R_empty_i_82_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_83
       (.I0(tx_addr_end[24]),
        .I1(Q[24]),
        .O(R_empty_i_83_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_84
       (.I0(tx_addr_head[19]),
        .I1(Q[19]),
        .O(R_empty_i_84_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_85
       (.I0(tx_addr_head[18]),
        .I1(Q[18]),
        .O(R_empty_i_85_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_86
       (.I0(tx_addr_head[17]),
        .I1(Q[17]),
        .O(R_empty_i_86_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_87
       (.I0(tx_addr_head[16]),
        .I1(Q[16]),
        .O(R_empty_i_87_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_88
       (.I0(tx_addr_end[19]),
        .I1(Q[19]),
        .O(R_empty_i_88_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_89
       (.I0(tx_addr_end[18]),
        .I1(Q[18]),
        .O(R_empty_i_89_n_0));
  LUT5 #(
    .INIT(32'h0000ABA8)) 
    R_empty_i_9
       (.I0(R_empty_reg_i_31_n_7),
        .I1(\R_brem[15]_i_151_0 ),
        .I2(CO),
        .I3(R_empty_reg_i_33_n_7),
        .I4(\R_brem[15]_i_151 ),
        .O(R_full_reg_2));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_90
       (.I0(tx_addr_end[17]),
        .I1(Q[17]),
        .O(R_empty_i_90_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_91
       (.I0(tx_addr_end[16]),
        .I1(Q[16]),
        .O(R_empty_i_91_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_92
       (.I0(tx_addr_end[15]),
        .I1(Q[15]),
        .O(R_empty_i_92_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_93
       (.I0(tx_addr_end[14]),
        .I1(Q[14]),
        .O(R_empty_i_93_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_94
       (.I0(tx_addr_end[13]),
        .I1(Q[13]),
        .O(R_empty_i_94_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_95
       (.I0(tx_addr_end[12]),
        .I1(Q[12]),
        .O(R_empty_i_95_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_96
       (.I0(tx_addr_head[15]),
        .I1(Q[15]),
        .O(R_empty_i_96_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_97
       (.I0(tx_addr_head[14]),
        .I1(Q[14]),
        .O(R_empty_i_97_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_98
       (.I0(tx_addr_head[13]),
        .I1(Q[13]),
        .O(R_empty_i_98_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_empty_i_99
       (.I0(tx_addr_head[12]),
        .I1(Q[12]),
        .O(R_empty_i_99_n_0));
  CARRY4 R_empty_reg_i_19
       (.CI(R_empty_reg_i_47_n_0),
        .CO({R_empty_reg_i_19_n_0,R_empty_reg_i_19_n_1,R_empty_reg_i_19_n_2,R_empty_reg_i_19_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_R_empty_reg_i_19_O_UNCONNECTED[3:0]),
        .S({R_empty_i_48_n_0,R_empty_i_49_n_0,R_empty_i_50_n_0,R_empty_i_51_n_0}));
  CARRY4 R_empty_reg_i_23
       (.CI(R_empty_reg_i_52_n_0),
        .CO({R_empty_reg_i_23_n_0,R_empty_reg_i_23_n_1,R_empty_reg_i_23_n_2,R_empty_reg_i_23_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_R_empty_reg_i_23_O_UNCONNECTED[3:0]),
        .S({R_empty_i_53_n_0,R_empty_i_54_n_0,R_empty_i_55_n_0,R_empty_i_56_n_0}));
  CARRY4 R_empty_reg_i_31
       (.CI(1'b0),
        .CO({R_empty_reg_i_31_n_0,R_empty_reg_i_31_n_1,R_empty_reg_i_31_n_2,R_empty_reg_i_31_n_3}),
        .CYINIT(1'b1),
        .DI(tx_addr_end[3:0]),
        .O({R_empty_reg_i_31_n_4,R_empty_reg_i_31_n_5,R_empty_reg_i_31_n_6,R_empty_reg_i_31_n_7}),
        .S({R_empty_i_59_n_0,R_empty_i_60_n_0,R_empty_i_61_n_0,R_empty_i_62_n_0}));
  CARRY4 R_empty_reg_i_32
       (.CI(R_empty_i_38),
        .CO({CO,R_empty_reg_i_32_n_1,R_empty_reg_i_32_n_2,R_empty_reg_i_32_n_3}),
        .CYINIT(1'b0),
        .DI({R_empty_i_64_n_0,DI}),
        .O(NLW_R_empty_reg_i_32_O_UNCONNECTED[3:0]),
        .S({R_empty_i_68_n_0,R_empty_i_69_n_0,R_empty_i_70_n_0,R_empty_i_71_n_0}));
  CARRY4 R_empty_reg_i_33
       (.CI(1'b0),
        .CO({R_empty_reg_i_33_n_0,R_empty_reg_i_33_n_1,R_empty_reg_i_33_n_2,R_empty_reg_i_33_n_3}),
        .CYINIT(1'b1),
        .DI(tx_addr_head[3:0]),
        .O({R_empty_reg_i_33_n_4,R_empty_reg_i_33_n_5,R_empty_reg_i_33_n_6,R_empty_reg_i_33_n_7}),
        .S({R_empty_i_72_n_0,R_empty_i_73_n_0,R_empty_i_74_n_0,R_empty_i_75_n_0}));
  CARRY4 R_empty_reg_i_34
       (.CI(R_empty_reg_i_57_n_0),
        .CO({R_empty_reg_i_34_n_0,R_empty_reg_i_34_n_1,R_empty_reg_i_34_n_2,R_empty_reg_i_34_n_3}),
        .CYINIT(1'b0),
        .DI(tx_addr_head[27:24]),
        .O({R_empty_reg_i_34_n_4,R_empty_reg_i_34_n_5,R_empty_reg_i_34_n_6,R_empty_reg_i_34_n_7}),
        .S({R_empty_i_76_n_0,R_empty_i_77_n_0,R_empty_i_78_n_0,R_empty_i_79_n_0}));
  CARRY4 R_empty_reg_i_35
       (.CI(R_empty_reg_i_58_n_0),
        .CO({R_empty_reg_i_35_n_0,R_empty_reg_i_35_n_1,R_empty_reg_i_35_n_2,R_empty_reg_i_35_n_3}),
        .CYINIT(1'b0),
        .DI(tx_addr_end[27:24]),
        .O({R_empty_reg_i_35_n_4,R_empty_reg_i_35_n_5,R_empty_reg_i_35_n_6,R_empty_reg_i_35_n_7}),
        .S({R_empty_i_80_n_0,R_empty_i_81_n_0,R_empty_i_82_n_0,R_empty_i_83_n_0}));
  CARRY4 R_empty_reg_i_36
       (.CI(R_empty_reg_i_43_n_0),
        .CO({R_empty_reg_i_36_n_0,R_empty_reg_i_36_n_1,R_empty_reg_i_36_n_2,R_empty_reg_i_36_n_3}),
        .CYINIT(1'b0),
        .DI(tx_addr_head[19:16]),
        .O({R_empty_reg_i_36_n_4,R_empty_reg_i_36_n_5,R_empty_reg_i_36_n_6,R_empty_reg_i_36_n_7}),
        .S({R_empty_i_84_n_0,R_empty_i_85_n_0,R_empty_i_86_n_0,R_empty_i_87_n_0}));
  CARRY4 R_empty_reg_i_37
       (.CI(R_empty_reg_i_42_n_0),
        .CO({R_empty_reg_i_37_n_0,R_empty_reg_i_37_n_1,R_empty_reg_i_37_n_2,R_empty_reg_i_37_n_3}),
        .CYINIT(1'b0),
        .DI(tx_addr_end[19:16]),
        .O({R_empty_reg_i_37_n_4,R_empty_reg_i_37_n_5,R_empty_reg_i_37_n_6,R_empty_reg_i_37_n_7}),
        .S({R_empty_i_88_n_0,R_empty_i_89_n_0,R_empty_i_90_n_0,R_empty_i_91_n_0}));
  CARRY4 R_empty_reg_i_42
       (.CI(R_empty_reg_i_46_n_0),
        .CO({R_empty_reg_i_42_n_0,R_empty_reg_i_42_n_1,R_empty_reg_i_42_n_2,R_empty_reg_i_42_n_3}),
        .CYINIT(1'b0),
        .DI(tx_addr_end[15:12]),
        .O({R_empty_reg_i_42_n_4,R_empty_reg_i_42_n_5,R_empty_reg_i_42_n_6,R_empty_reg_i_42_n_7}),
        .S({R_empty_i_92_n_0,R_empty_i_93_n_0,R_empty_i_94_n_0,R_empty_i_95_n_0}));
  CARRY4 R_empty_reg_i_43
       (.CI(R_empty_reg_i_45_n_0),
        .CO({R_empty_reg_i_43_n_0,R_empty_reg_i_43_n_1,R_empty_reg_i_43_n_2,R_empty_reg_i_43_n_3}),
        .CYINIT(1'b0),
        .DI(tx_addr_head[15:12]),
        .O({R_empty_reg_i_43_n_4,R_empty_reg_i_43_n_5,R_empty_reg_i_43_n_6,R_empty_reg_i_43_n_7}),
        .S({R_empty_i_96_n_0,R_empty_i_97_n_0,R_empty_i_98_n_0,R_empty_i_99_n_0}));
  CARRY4 R_empty_reg_i_45
       (.CI(\R_brem_reg[7]_i_17_n_0 ),
        .CO({R_empty_reg_i_45_n_0,R_empty_reg_i_45_n_1,R_empty_reg_i_45_n_2,R_empty_reg_i_45_n_3}),
        .CYINIT(1'b0),
        .DI(tx_addr_head[11:8]),
        .O({R_empty_reg_i_45_n_4,R_empty_reg_i_45_n_5,R_empty_reg_i_45_n_6,R_empty_reg_i_45_n_7}),
        .S({R_empty_i_104_n_0,R_empty_i_105_n_0,R_empty_i_106_n_0,R_empty_i_107_n_0}));
  CARRY4 R_empty_reg_i_46
       (.CI(\R_brem_reg[7]_i_16_n_0 ),
        .CO({R_empty_reg_i_46_n_0,R_empty_reg_i_46_n_1,R_empty_reg_i_46_n_2,R_empty_reg_i_46_n_3}),
        .CYINIT(1'b0),
        .DI(tx_addr_end[11:8]),
        .O({R_empty_reg_i_46_n_4,R_empty_reg_i_46_n_5,R_empty_reg_i_46_n_6,R_empty_reg_i_46_n_7}),
        .S({R_empty_i_108_n_0,R_empty_i_109_n_0,R_empty_i_110_n_0,R_empty_i_111_n_0}));
  CARRY4 R_empty_reg_i_47
       (.CI(1'b0),
        .CO({R_empty_reg_i_47_n_0,R_empty_reg_i_47_n_1,R_empty_reg_i_47_n_2,R_empty_reg_i_47_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_R_empty_reg_i_47_O_UNCONNECTED[3:0]),
        .S({R_empty_i_112_n_0,R_empty_i_113_n_0,R_empty_i_114_n_0,R_empty_i_115_n_0}));
  CARRY4 R_empty_reg_i_5
       (.CI(R_empty_reg_i_19_n_0),
        .CO({NLW_R_empty_reg_i_5_CO_UNCONNECTED[3],\tx_addr_head_reg[31]_0 ,R_empty_reg_i_5_n_2,R_empty_reg_i_5_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_R_empty_reg_i_5_O_UNCONNECTED[3:0]),
        .S({1'b0,R_empty_i_20_n_0,R_empty_i_21_n_0,R_empty_i_22_n_0}));
  CARRY4 R_empty_reg_i_52
       (.CI(1'b0),
        .CO({R_empty_reg_i_52_n_0,R_empty_reg_i_52_n_1,R_empty_reg_i_52_n_2,R_empty_reg_i_52_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_R_empty_reg_i_52_O_UNCONNECTED[3:0]),
        .S({R_empty_i_116_n_0,R_empty_i_117_n_0,R_empty_i_118_n_0,R_empty_i_119_n_0}));
  CARRY4 R_empty_reg_i_57
       (.CI(R_empty_reg_i_36_n_0),
        .CO({R_empty_reg_i_57_n_0,R_empty_reg_i_57_n_1,R_empty_reg_i_57_n_2,R_empty_reg_i_57_n_3}),
        .CYINIT(1'b0),
        .DI(tx_addr_head[23:20]),
        .O({R_empty_reg_i_57_n_4,R_empty_reg_i_57_n_5,R_empty_reg_i_57_n_6,R_empty_reg_i_57_n_7}),
        .S({R_empty_i_120_n_0,R_empty_i_121_n_0,R_empty_i_122_n_0,R_empty_i_123_n_0}));
  CARRY4 R_empty_reg_i_58
       (.CI(R_empty_reg_i_37_n_0),
        .CO({R_empty_reg_i_58_n_0,R_empty_reg_i_58_n_1,R_empty_reg_i_58_n_2,R_empty_reg_i_58_n_3}),
        .CYINIT(1'b0),
        .DI(tx_addr_end[23:20]),
        .O({R_empty_reg_i_58_n_4,R_empty_reg_i_58_n_5,R_empty_reg_i_58_n_6,R_empty_reg_i_58_n_7}),
        .S({R_empty_i_124_n_0,R_empty_i_125_n_0,R_empty_i_126_n_0,R_empty_i_127_n_0}));
  CARRY4 R_empty_reg_i_6
       (.CI(R_empty_reg_i_23_n_0),
        .CO({NLW_R_empty_reg_i_6_CO_UNCONNECTED[3],\tx_addr_head_reg[31]_1 ,R_empty_reg_i_6_n_2,R_empty_reg_i_6_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_R_empty_reg_i_6_O_UNCONNECTED[3:0]),
        .S({1'b0,R_empty_i_24_n_0,R_empty_i_25_n_0,R_empty_i_26_n_0}));
  LUT3 #(
    .INIT(8'h4F)) 
    R_first_i_2
       (.I0(out),
        .I1(tx_descriptor_rd_vld),
        .I2(conf_tx_en),
        .O(\state_reg[1]_1 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    R_first_i_4
       (.I0(R_first_i_5_n_0),
        .I1(desc_tx_bnum[1]),
        .I2(desc_tx_bnum[0]),
        .I3(desc_tx_bnum[3]),
        .I4(desc_tx_bnum[2]),
        .I5(R_first_i_6_n_0),
        .O(ACLK_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    R_first_i_5
       (.I0(desc_tx_bnum[5]),
        .I1(desc_tx_bnum[4]),
        .I2(desc_tx_bnum[7]),
        .I3(desc_tx_bnum[6]),
        .O(R_first_i_5_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    R_first_i_6
       (.I0(desc_tx_bnum[8]),
        .I1(desc_tx_bnum[9]),
        .I2(desc_tx_bnum[10]),
        .I3(desc_tx_bnum[11]),
        .I4(R_first_i_7_n_0),
        .O(R_first_i_6_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    R_first_i_7
       (.I0(desc_tx_bnum[13]),
        .I1(desc_tx_bnum[12]),
        .I2(desc_tx_bnum[15]),
        .I3(desc_tx_bnum[14]),
        .O(R_first_i_7_n_0));
  LUT3 #(
    .INIT(8'h20)) 
    R_full_i_1
       (.I0(tx_addr_full),
        .I1(out),
        .I2(conf_tx_en),
        .O(R_full14_out));
  LUT5 #(
    .INIT(32'h8BFFBB00)) 
    S_ARREADY_i_1
       (.I0(S_RREADY),
        .I1(stateR[0]),
        .I2(S_ARVALID),
        .I3(S_ARREADY_i_3_n_0),
        .I4(S_ARREADY_reg_0),
        .O(S_ARREADY_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    S_ARREADY_i_2
       (.I0(ARESETn),
        .O(S_ARREADY_i_2_n_0));
  LUT5 #(
    .INIT(32'h00008101)) 
    S_ARREADY_i_3
       (.I0(stateR[0]),
        .I1(stateR[3]),
        .I2(stateR[1]),
        .I3(S_RREADY),
        .I4(stateR[2]),
        .O(S_ARREADY_i_3_n_0));
  FDCE #(
    .INIT(1'b0)) 
    S_ARREADY_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(S_ARREADY_i_2_n_0),
        .D(S_ARREADY_i_1_n_0),
        .Q(S_ARREADY_reg_0));
  LUT5 #(
    .INIT(32'hFDFDC303)) 
    S_AWREADY_i_1
       (.I0(S_AWVALID),
        .I1(stateW[1]),
        .I2(stateW[0]),
        .I3(S_BREADY),
        .I4(S_AWREADY_reg_0),
        .O(S_AWREADY_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    S_AWREADY_i_2
       (.I0(ARESETn),
        .O(S_AWREADY_i_2_n_0));
  FDCE #(
    .INIT(1'b0)) 
    S_AWREADY_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_AWREADY_i_1_n_0),
        .Q(S_AWREADY_reg_0));
  LUT4 #(
    .INIT(16'h6000)) 
    \S_BID[7]_i_1 
       (.I0(stateW[0]),
        .I1(stateW[1]),
        .I2(S_WVALID),
        .I3(S_WREADY0),
        .O(\S_BID[7]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \S_BID[7]_i_2 
       (.I0(ARESETn),
        .O(\S_BID[7]_i_2_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \S_BID_reg[0] 
       (.C(ACLK),
        .CE(\S_BID[7]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(AWID_reg[0]),
        .Q(S_BID[0]));
  FDCE #(
    .INIT(1'b0)) 
    \S_BID_reg[1] 
       (.C(ACLK),
        .CE(\S_BID[7]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(AWID_reg[1]),
        .Q(S_BID[1]));
  FDCE #(
    .INIT(1'b0)) 
    \S_BID_reg[2] 
       (.C(ACLK),
        .CE(\S_BID[7]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(AWID_reg[2]),
        .Q(S_BID[2]));
  FDCE #(
    .INIT(1'b0)) 
    \S_BID_reg[3] 
       (.C(ACLK),
        .CE(\S_BID[7]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(AWID_reg[3]),
        .Q(S_BID[3]));
  FDCE #(
    .INIT(1'b0)) 
    \S_BID_reg[4] 
       (.C(ACLK),
        .CE(\S_BID[7]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(AWID_reg[4]),
        .Q(S_BID[4]));
  FDCE #(
    .INIT(1'b0)) 
    \S_BID_reg[5] 
       (.C(ACLK),
        .CE(\S_BID[7]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(AWID_reg[5]),
        .Q(S_BID[5]));
  FDCE #(
    .INIT(1'b0)) 
    \S_BID_reg[6] 
       (.C(ACLK),
        .CE(\S_BID[7]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(AWID_reg[6]),
        .Q(S_BID[6]));
  FDCE #(
    .INIT(1'b0)) 
    \S_BID_reg[7] 
       (.C(ACLK),
        .CE(\S_BID[7]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(AWID_reg[7]),
        .Q(S_BID[7]));
  LUT6 #(
    .INIT(64'hFCFFFCFFFC00FC28)) 
    \S_BRESP[1]_i_1 
       (.I0(S_WVALID),
        .I1(stateW[0]),
        .I2(stateW[1]),
        .I3(\AWLEN_reg[7]_i_1_n_0 ),
        .I4(\S_BRESP[1]_i_2_n_0 ),
        .I5(S_BRESP),
        .O(\S_BRESP[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h0D)) 
    \S_BRESP[1]_i_2 
       (.I0(S_WREADY0),
        .I1(S_WLAST),
        .I2(\S_BRESP[1]_i_3_n_0 ),
        .O(\S_BRESP[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hEFFEFFFFFFFFEFFE)) 
    \S_BRESP[1]_i_3 
       (.I0(\S_BRESP[1]_i_4_n_0 ),
        .I1(\S_BRESP[1]_i_5_n_0 ),
        .I2(S_WID[7]),
        .I3(AWID_reg[7]),
        .I4(S_WID[6]),
        .I5(AWID_reg[6]),
        .O(\S_BRESP[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \S_BRESP[1]_i_4 
       (.I0(AWID_reg[0]),
        .I1(S_WID[0]),
        .I2(S_WID[2]),
        .I3(AWID_reg[2]),
        .I4(S_WID[1]),
        .I5(AWID_reg[1]),
        .O(\S_BRESP[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \S_BRESP[1]_i_5 
       (.I0(AWID_reg[3]),
        .I1(S_WID[3]),
        .I2(S_WID[4]),
        .I3(AWID_reg[4]),
        .I4(S_WID[5]),
        .I5(AWID_reg[5]),
        .O(\S_BRESP[1]_i_5_n_0 ));
  FDPE #(
    .INIT(1'b0)) 
    \S_BRESP_reg[1] 
       (.C(ACLK),
        .CE(1'b1),
        .D(\S_BRESP[1]_i_1_n_0 ),
        .PRE(S_AWREADY_i_2_n_0),
        .Q(S_BRESP));
  LUT6 #(
    .INIT(64'h55FFFFFF00C0C000)) 
    S_BVALID_i_1
       (.I0(S_BREADY),
        .I1(S_WREADY0),
        .I2(S_WVALID),
        .I3(stateW[1]),
        .I4(stateW[0]),
        .I5(S_BVALID),
        .O(S_BVALID_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    S_BVALID_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_BVALID_i_1_n_0),
        .Q(S_BVALID));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[0]_i_1 
       (.I0(dataR[0]),
        .I1(Trdata[0]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[10]_i_1 
       (.I0(dataR[10]),
        .I1(Trdata[10]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[11]_i_1 
       (.I0(dataR[11]),
        .I1(Trdata[11]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[12]_i_1 
       (.I0(dataR[12]),
        .I1(Trdata[12]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[13]_i_1 
       (.I0(dataR[13]),
        .I1(Trdata[13]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[14]_i_1 
       (.I0(dataR[14]),
        .I1(Trdata[14]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[15]_i_1 
       (.I0(dataR[15]),
        .I1(Trdata[15]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[16]_i_1 
       (.I0(dataR[16]),
        .I1(Trdata[16]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[17]_i_1 
       (.I0(dataR[17]),
        .I1(Trdata[17]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[18]_i_1 
       (.I0(dataR[18]),
        .I1(Trdata[18]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[19]_i_1 
       (.I0(dataR[19]),
        .I1(Trdata[19]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[19]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[1]_i_1 
       (.I0(dataR[1]),
        .I1(Trdata[1]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[20]_i_1 
       (.I0(dataR[20]),
        .I1(Trdata[20]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[20]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[21]_i_1 
       (.I0(dataR[21]),
        .I1(Trdata[21]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[22]_i_1 
       (.I0(dataR[22]),
        .I1(Trdata[22]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[23]_i_1 
       (.I0(dataR[23]),
        .I1(Trdata[23]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[24]_i_1 
       (.I0(dataR[24]),
        .I1(Trdata[24]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[25]_i_1 
       (.I0(dataR[25]),
        .I1(Trdata[25]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[25]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[26]_i_1 
       (.I0(dataR[26]),
        .I1(Trdata[26]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[26]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[27]_i_1 
       (.I0(dataR[27]),
        .I1(Trdata[27]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[27]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[28]_i_1 
       (.I0(dataR[28]),
        .I1(Trdata[28]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[28]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[29]_i_1 
       (.I0(dataR[29]),
        .I1(Trdata[29]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[29]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[2]_i_1 
       (.I0(dataR[2]),
        .I1(Trdata[2]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[30]_i_1 
       (.I0(dataR[30]),
        .I1(Trdata[30]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[30]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00F2F0AA)) 
    \S_RDATA[31]_i_1 
       (.I0(stateR[1]),
        .I1(stateR[0]),
        .I2(S_RREADY),
        .I3(stateR[3]),
        .I4(stateR[2]),
        .O(\S_RDATA[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[31]_i_2 
       (.I0(dataR[31]),
        .I1(Trdata[31]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[3]_i_1 
       (.I0(dataR[3]),
        .I1(Trdata[3]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[4]_i_1 
       (.I0(dataR[4]),
        .I1(Trdata[4]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[5]_i_1 
       (.I0(dataR[5]),
        .I1(Trdata[5]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[6]_i_1 
       (.I0(dataR[6]),
        .I1(Trdata[6]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[7]_i_1 
       (.I0(dataR[7]),
        .I1(Trdata[7]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[8]_i_1 
       (.I0(dataR[8]),
        .I1(Trdata[8]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0CAAACAC0CCCACAC)) 
    \S_RDATA[9]_i_1 
       (.I0(dataR[9]),
        .I1(Trdata[9]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(stateR[2]),
        .O(\S_RDATA[9]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[0] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[0]_i_1_n_0 ),
        .Q(S_RDATA[0]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[10] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[10]_i_1_n_0 ),
        .Q(S_RDATA[10]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[11] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[11]_i_1_n_0 ),
        .Q(S_RDATA[11]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[12] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[12]_i_1_n_0 ),
        .Q(S_RDATA[12]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[13] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[13]_i_1_n_0 ),
        .Q(S_RDATA[13]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[14] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[14]_i_1_n_0 ),
        .Q(S_RDATA[14]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[15] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[15]_i_1_n_0 ),
        .Q(S_RDATA[15]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[16] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[16]_i_1_n_0 ),
        .Q(S_RDATA[16]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[17] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[17]_i_1_n_0 ),
        .Q(S_RDATA[17]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[18] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[18]_i_1_n_0 ),
        .Q(S_RDATA[18]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[19] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[19]_i_1_n_0 ),
        .Q(S_RDATA[19]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[1] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[1]_i_1_n_0 ),
        .Q(S_RDATA[1]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[20] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[20]_i_1_n_0 ),
        .Q(S_RDATA[20]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[21] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[21]_i_1_n_0 ),
        .Q(S_RDATA[21]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[22] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[22]_i_1_n_0 ),
        .Q(S_RDATA[22]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[23] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[23]_i_1_n_0 ),
        .Q(S_RDATA[23]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[24] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[24]_i_1_n_0 ),
        .Q(S_RDATA[24]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[25] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[25]_i_1_n_0 ),
        .Q(S_RDATA[25]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[26] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[26]_i_1_n_0 ),
        .Q(S_RDATA[26]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[27] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[27]_i_1_n_0 ),
        .Q(S_RDATA[27]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[28] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[28]_i_1_n_0 ),
        .Q(S_RDATA[28]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[29] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[29]_i_1_n_0 ),
        .Q(S_RDATA[29]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[2] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[2]_i_1_n_0 ),
        .Q(S_RDATA[2]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[30] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[30]_i_1_n_0 ),
        .Q(S_RDATA[30]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[31] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[31]_i_2_n_0 ),
        .Q(S_RDATA[31]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[3] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[3]_i_1_n_0 ),
        .Q(S_RDATA[3]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[4] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[4]_i_1_n_0 ),
        .Q(S_RDATA[4]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[5] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[5]_i_1_n_0 ),
        .Q(S_RDATA[5]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[6] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[6]_i_1_n_0 ),
        .Q(S_RDATA[6]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[7] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[7]_i_1_n_0 ),
        .Q(S_RDATA[7]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[8] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[8]_i_1_n_0 ),
        .Q(S_RDATA[8]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RDATA_reg[9] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(\S_RDATA[9]_i_1_n_0 ),
        .Q(S_RDATA[9]));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    \S_RID[7]_i_1 
       (.I0(S_ARVALID),
        .I1(S_ARREADY_reg_0),
        .I2(stateR[0]),
        .I3(stateR[3]),
        .I4(stateR[2]),
        .I5(stateR[1]),
        .O(\S_RID[7]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \S_RID_reg[0] 
       (.C(ACLK),
        .CE(\S_RID[7]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(S_ARID[0]),
        .Q(S_RID[0]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RID_reg[1] 
       (.C(ACLK),
        .CE(\S_RID[7]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(S_ARID[1]),
        .Q(S_RID[1]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RID_reg[2] 
       (.C(ACLK),
        .CE(\S_RID[7]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(S_ARID[2]),
        .Q(S_RID[2]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RID_reg[3] 
       (.C(ACLK),
        .CE(\S_RID[7]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(S_ARID[3]),
        .Q(S_RID[3]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RID_reg[4] 
       (.C(ACLK),
        .CE(\S_RID[7]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(S_ARID[4]),
        .Q(S_RID[4]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RID_reg[5] 
       (.C(ACLK),
        .CE(\S_RID[7]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(S_ARID[5]),
        .Q(S_RID[5]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RID_reg[6] 
       (.C(ACLK),
        .CE(\S_RID[7]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(S_ARID[6]),
        .Q(S_RID[6]));
  FDCE #(
    .INIT(1'b0)) 
    \S_RID_reg[7] 
       (.C(ACLK),
        .CE(\S_RID[7]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(S_ARID[7]),
        .Q(S_RID[7]));
  LUT5 #(
    .INIT(32'h333D0005)) 
    S_RLAST_i_1
       (.I0(stateR[3]),
        .I1(stateR[1]),
        .I2(stateR[2]),
        .I3(stateR[0]),
        .I4(S_RREADY),
        .O(S_RLAST_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    S_RLAST_reg
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(S_RLAST_i_1_n_0),
        .Q(S_RLAST));
  LUT3 #(
    .INIT(8'h80)) 
    \S_RRESP[1]_i_1 
       (.I0(stateR[3]),
        .I1(stateR[0]),
        .I2(stateR[1]),
        .O(\S_RRESP[1]_i_1_n_0 ));
  FDPE #(
    .INIT(1'b0)) 
    \S_RRESP_reg[1] 
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .D(\S_RRESP[1]_i_1_n_0 ),
        .PRE(\S_BID[7]_i_2_n_0 ),
        .Q(S_RRESP));
  LUT5 #(
    .INIT(32'h23BBAAAA)) 
    S_RVALID_i_1
       (.I0(S_RREADY),
        .I1(stateR[3]),
        .I2(stateR[2]),
        .I3(stateR[0]),
        .I4(stateR[1]),
        .O(S_RVALID_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    S_RVALID_reg
       (.C(ACLK),
        .CE(\S_RDATA[31]_i_1_n_0 ),
        .CLR(\S_BID[7]_i_2_n_0 ),
        .D(S_RVALID_i_1_n_0),
        .Q(S_RVALID));
  CARRY4 S_WREADY0_carry
       (.CI(1'b0),
        .CO({S_WREADY0,S_WREADY0_carry_n_1,S_WREADY0_carry_n_2,S_WREADY0_carry_n_3}),
        .CYINIT(1'b1),
        .DI({S_WREADY0_carry_i_1_n_0,S_WREADY0_carry_i_2_n_0,S_WREADY0_carry_i_3_n_0,S_WREADY0_carry_i_4_n_0}),
        .O(NLW_S_WREADY0_carry_O_UNCONNECTED[3:0]),
        .S({S_WREADY0_carry_i_5_n_0,S_WREADY0_carry_i_6_n_0,S_WREADY0_carry_i_7_n_0,S_WREADY0_carry_i_8_n_0}));
  LUT4 #(
    .INIT(16'h22B2)) 
    S_WREADY0_carry_i_1
       (.I0(beatW[7]),
        .I1(AWLEN_reg[7]),
        .I2(beatW[6]),
        .I3(AWLEN_reg[6]),
        .O(S_WREADY0_carry_i_1_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    S_WREADY0_carry_i_2
       (.I0(beatW[5]),
        .I1(AWLEN_reg[5]),
        .I2(beatW[4]),
        .I3(AWLEN_reg[4]),
        .O(S_WREADY0_carry_i_2_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    S_WREADY0_carry_i_3
       (.I0(beatW[3]),
        .I1(AWLEN_reg[3]),
        .I2(beatW[2]),
        .I3(AWLEN_reg[2]),
        .O(S_WREADY0_carry_i_3_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    S_WREADY0_carry_i_4
       (.I0(beatW[1]),
        .I1(AWLEN_reg[1]),
        .I2(beatW[0]),
        .I3(AWLEN_reg[0]),
        .O(S_WREADY0_carry_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    S_WREADY0_carry_i_5
       (.I0(AWLEN_reg[7]),
        .I1(beatW[7]),
        .I2(AWLEN_reg[6]),
        .I3(beatW[6]),
        .O(S_WREADY0_carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    S_WREADY0_carry_i_6
       (.I0(AWLEN_reg[5]),
        .I1(beatW[5]),
        .I2(AWLEN_reg[4]),
        .I3(beatW[4]),
        .O(S_WREADY0_carry_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    S_WREADY0_carry_i_7
       (.I0(AWLEN_reg[3]),
        .I1(beatW[3]),
        .I2(AWLEN_reg[2]),
        .I3(beatW[2]),
        .O(S_WREADY0_carry_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    S_WREADY0_carry_i_8
       (.I0(AWLEN_reg[1]),
        .I1(beatW[1]),
        .I2(AWLEN_reg[0]),
        .I3(beatW[0]),
        .O(S_WREADY0_carry_i_8_n_0));
  LUT6 #(
    .INIT(64'hFFBFBFFFAAAAAAAA)) 
    S_WREADY_i_1
       (.I0(\AWLEN_reg[7]_i_1_n_0 ),
        .I1(S_WREADY0),
        .I2(S_WVALID),
        .I3(stateW[1]),
        .I4(stateW[0]),
        .I5(S_WREADY),
        .O(S_WREADY_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    S_WREADY_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_WREADY_i_1_n_0),
        .Q(S_WREADY));
  LUT5 #(
    .INIT(32'hAAABAAA8)) 
    \Traddr[0]_i_1 
       (.I0(\addrR_reg_n_0_[0] ),
        .I1(stateR[0]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(S_ARADDR[0]),
        .O(\Traddr[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAAABAAA8)) 
    \Traddr[1]_i_1 
       (.I0(\addrR_reg_n_0_[1] ),
        .I1(stateR[0]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(S_ARADDR[1]),
        .O(\Traddr[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAAABAAA8)) 
    \Traddr[2]_i_1 
       (.I0(\addrR_reg_n_0_[2] ),
        .I1(stateR[0]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(S_ARADDR[2]),
        .O(\Traddr[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAAABAAA8)) 
    \Traddr[3]_i_1 
       (.I0(\addrR_reg_n_0_[3] ),
        .I1(stateR[0]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(S_ARADDR[3]),
        .O(\Traddr[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAAABAAA8)) 
    \Traddr[4]_i_1 
       (.I0(\addrR_reg_n_0_[4] ),
        .I1(stateR[0]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(S_ARADDR[4]),
        .O(\Traddr[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAAABAAA8)) 
    \Traddr[5]_i_1 
       (.I0(\addrR_reg_n_0_[5] ),
        .I1(stateR[0]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(S_ARADDR[5]),
        .O(\Traddr[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAAABAAA8)) 
    \Traddr[6]_i_1 
       (.I0(\addrR_reg_n_0_[6] ),
        .I1(stateR[0]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(S_ARADDR[6]),
        .O(\Traddr[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF22A2)) 
    \Traddr[7]_i_1 
       (.I0(\Traddr[7]_i_3_n_0 ),
        .I1(stateR[3]),
        .I2(S_RREADY),
        .I3(addrR1_carry_n_0),
        .I4(\Traddr[7]_i_4_n_0 ),
        .O(\Traddr[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAAABAAA8)) 
    \Traddr[7]_i_2 
       (.I0(\addrR_reg_n_0_[7] ),
        .I1(stateR[0]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(S_ARADDR[7]),
        .O(\Traddr[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000003E0E)) 
    \Traddr[7]_i_3 
       (.I0(ARLEN_reg0__0),
        .I1(stateR[3]),
        .I2(stateR[0]),
        .I3(Traddr__2),
        .I4(stateR[2]),
        .I5(stateR[1]),
        .O(\Traddr[7]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h40400040)) 
    \Traddr[7]_i_4 
       (.I0(stateR[3]),
        .I1(stateR[1]),
        .I2(stateR[2]),
        .I3(stateR[0]),
        .I4(S_RREADY),
        .O(\Traddr[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \Traddr[7]_i_5 
       (.I0(ARLEN_reg[0]),
        .I1(\beatR[7]_i_8_n_0 ),
        .I2(ARLEN_reg[4]),
        .I3(ARLEN_reg[5]),
        .I4(ARLEN_reg[7]),
        .I5(ARLEN_reg[6]),
        .O(Traddr__2));
  FDCE \Traddr_reg[0] 
       (.C(ACLK),
        .CE(\Traddr[7]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(\Traddr[0]_i_1_n_0 ),
        .Q(\Traddr_reg_n_0_[0] ));
  FDCE \Traddr_reg[1] 
       (.C(ACLK),
        .CE(\Traddr[7]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(\Traddr[1]_i_1_n_0 ),
        .Q(\Traddr_reg_n_0_[1] ));
  FDCE \Traddr_reg[2] 
       (.C(ACLK),
        .CE(\Traddr[7]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(\Traddr[2]_i_1_n_0 ),
        .Q(\Traddr_reg_n_0_[2] ));
  FDCE \Traddr_reg[3] 
       (.C(ACLK),
        .CE(\Traddr[7]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(\Traddr[3]_i_1_n_0 ),
        .Q(\Traddr_reg_n_0_[3] ));
  FDCE \Traddr_reg[4] 
       (.C(ACLK),
        .CE(\Traddr[7]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(\Traddr[4]_i_1_n_0 ),
        .Q(\Traddr_reg_n_0_[4] ));
  FDCE \Traddr_reg[5] 
       (.C(ACLK),
        .CE(\Traddr[7]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(\Traddr[5]_i_1_n_0 ),
        .Q(\Traddr_reg_n_0_[5] ));
  FDCE \Traddr_reg[6] 
       (.C(ACLK),
        .CE(\Traddr[7]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(\Traddr[6]_i_1_n_0 ),
        .Q(\Traddr_reg_n_0_[6] ));
  FDCE \Traddr_reg[7] 
       (.C(ACLK),
        .CE(\Traddr[7]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(\Traddr[7]_i_2_n_0 ),
        .Q(\Traddr_reg_n_0_[7] ));
  LUT6 #(
    .INIT(64'hFF2AFFFFFF2A0000)) 
    Tren_i_1
       (.I0(\Traddr[7]_i_3_n_0 ),
        .I1(addrR1_carry_n_0),
        .I2(stateR[3]),
        .I3(Tren_i_2_n_0),
        .I4(Tren_i_3_n_0),
        .I5(Tren_reg_n_0),
        .O(Tren_i_1_n_0));
  LUT5 #(
    .INIT(32'h08888888)) 
    Tren_i_2
       (.I0(stateR[2]),
        .I1(stateR[1]),
        .I2(stateR[0]),
        .I3(S_RREADY),
        .I4(addrR1_carry_n_0),
        .O(Tren_i_2_n_0));
  LUT6 #(
    .INIT(64'h00FF00AAFFFEF0FE)) 
    Tren_i_3
       (.I0(stateR[0]),
        .I1(ARLEN_reg0__0),
        .I2(stateR[1]),
        .I3(stateR[2]),
        .I4(S_RREADY),
        .I5(stateR[3]),
        .O(Tren_i_3_n_0));
  FDCE Tren_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Tren_i_1_n_0),
        .Q(Tren_reg_n_0));
  LUT3 #(
    .INIT(8'h28)) 
    \Twaddr[7]_i_1 
       (.I0(S_WVALID),
        .I1(stateW[0]),
        .I2(stateW[1]),
        .O(Twstrb));
  FDCE \Twaddr_reg[0] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(addr[0]),
        .Q(Twaddr[0]));
  FDCE \Twaddr_reg[1] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(addr[1]),
        .Q(Twaddr[1]));
  FDCE \Twaddr_reg[2] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(addr[2]),
        .Q(Twaddr[2]));
  FDCE \Twaddr_reg[3] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(addr[3]),
        .Q(Twaddr[3]));
  FDCE \Twaddr_reg[4] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(addr[4]),
        .Q(Twaddr[4]));
  FDCE \Twaddr_reg[5] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(addr[5]),
        .Q(Twaddr[5]));
  FDCE \Twaddr_reg[6] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(addr[6]),
        .Q(Twaddr[6]));
  FDCE \Twaddr_reg[7] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(addr[7]),
        .Q(Twaddr[7]));
  FDCE \Twdata_reg[0] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_WDATA[0]),
        .Q(Twdata[0]));
  FDCE \Twdata_reg[10] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_WDATA[10]),
        .Q(Twdata[10]));
  FDCE \Twdata_reg[11] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_WDATA[11]),
        .Q(Twdata[11]));
  FDCE \Twdata_reg[12] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_WDATA[12]),
        .Q(Twdata[12]));
  FDCE \Twdata_reg[13] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_WDATA[13]),
        .Q(Twdata[13]));
  FDCE \Twdata_reg[14] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_WDATA[14]),
        .Q(Twdata[14]));
  FDCE \Twdata_reg[15] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_WDATA[15]),
        .Q(Twdata[15]));
  FDCE \Twdata_reg[16] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_WDATA[16]),
        .Q(Twdata[16]));
  FDCE \Twdata_reg[17] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_WDATA[17]),
        .Q(Twdata[17]));
  FDCE \Twdata_reg[18] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_ARREADY_i_2_n_0),
        .D(S_WDATA[18]),
        .Q(Twdata[18]));
  FDCE \Twdata_reg[19] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_ARREADY_i_2_n_0),
        .D(S_WDATA[19]),
        .Q(Twdata[19]));
  FDCE \Twdata_reg[1] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_WDATA[1]),
        .Q(Twdata[1]));
  FDCE \Twdata_reg[20] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_ARREADY_i_2_n_0),
        .D(S_WDATA[20]),
        .Q(Twdata[20]));
  FDCE \Twdata_reg[21] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_ARREADY_i_2_n_0),
        .D(S_WDATA[21]),
        .Q(Twdata[21]));
  FDCE \Twdata_reg[22] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_ARREADY_i_2_n_0),
        .D(S_WDATA[22]),
        .Q(Twdata[22]));
  FDCE \Twdata_reg[23] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_ARREADY_i_2_n_0),
        .D(S_WDATA[23]),
        .Q(Twdata[23]));
  FDCE \Twdata_reg[24] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_ARREADY_i_2_n_0),
        .D(S_WDATA[24]),
        .Q(Twdata[24]));
  FDCE \Twdata_reg[25] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_ARREADY_i_2_n_0),
        .D(S_WDATA[25]),
        .Q(Twdata[25]));
  FDCE \Twdata_reg[26] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_ARREADY_i_2_n_0),
        .D(S_WDATA[26]),
        .Q(Twdata[26]));
  FDCE \Twdata_reg[27] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_ARREADY_i_2_n_0),
        .D(S_WDATA[27]),
        .Q(Twdata[27]));
  FDCE \Twdata_reg[28] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_ARREADY_i_2_n_0),
        .D(S_WDATA[28]),
        .Q(Twdata[28]));
  FDCE \Twdata_reg[29] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_ARREADY_i_2_n_0),
        .D(S_WDATA[29]),
        .Q(Twdata[29]));
  FDCE \Twdata_reg[2] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_WDATA[2]),
        .Q(Twdata[2]));
  FDCE \Twdata_reg[30] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_WDATA[30]),
        .Q(Twdata[30]));
  FDCE \Twdata_reg[31] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_WDATA[31]),
        .Q(Twdata[31]));
  FDCE \Twdata_reg[3] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_WDATA[3]),
        .Q(Twdata[3]));
  FDCE \Twdata_reg[4] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_WDATA[4]),
        .Q(Twdata[4]));
  FDCE \Twdata_reg[5] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_WDATA[5]),
        .Q(Twdata[5]));
  FDCE \Twdata_reg[6] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_WDATA[6]),
        .Q(Twdata[6]));
  FDCE \Twdata_reg[7] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_WDATA[7]),
        .Q(Twdata[7]));
  FDCE \Twdata_reg[8] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_WDATA[8]),
        .Q(Twdata[8]));
  FDCE \Twdata_reg[9] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_WDATA[9]),
        .Q(Twdata[9]));
  LUT4 #(
    .INIT(16'h3E02)) 
    Twen_i_1
       (.I0(Twen),
        .I1(stateW[1]),
        .I2(stateW[0]),
        .I3(S_WVALID),
        .O(Twen_i_1_n_0));
  FDCE Twen_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(S_AWREADY_i_2_n_0),
        .D(Twen_i_1_n_0),
        .Q(Twen));
  FDCE \Twstrb_reg[0] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_WSTRB[0]),
        .Q(\Twstrb_reg_n_0_[0] ));
  FDCE \Twstrb_reg[1] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_WSTRB[1]),
        .Q(\Twstrb_reg_n_0_[1] ));
  FDCE \Twstrb_reg[2] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_WSTRB[2]),
        .Q(\Twstrb_reg_n_0_[2] ));
  FDCE \Twstrb_reg[3] 
       (.C(ACLK),
        .CE(Twstrb),
        .CLR(S_AWREADY_i_2_n_0),
        .D(S_WSTRB[3]),
        .Q(\Twstrb_reg_n_0_[3] ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_addr[31]_i_12 
       (.I0(W_addr2[30]),
        .I1(\rx_addr_end_reg[31] [28]),
        .I2(\rx_addr_end_reg[31] [29]),
        .I3(W_addr2[31]),
        .O(\W_addr[31]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \W_addr[31]_i_13 
       (.I0(W_addr2[27]),
        .I1(\rx_addr_end_reg[31] [25]),
        .I2(W_addr2[28]),
        .I3(\rx_addr_end_reg[31] [26]),
        .I4(\rx_addr_end_reg[31] [27]),
        .I5(W_addr2[29]),
        .O(\W_addr[31]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \W_addr[31]_i_14 
       (.I0(W_addr2[24]),
        .I1(\rx_addr_end_reg[31] [22]),
        .I2(W_addr2[25]),
        .I3(\rx_addr_end_reg[31] [23]),
        .I4(\rx_addr_end_reg[31] [24]),
        .I5(W_addr2[26]),
        .O(\W_addr[31]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \W_addr[31]_i_16 
       (.I0(W_addr2[21]),
        .I1(\rx_addr_end_reg[31] [19]),
        .I2(W_addr2[22]),
        .I3(\rx_addr_end_reg[31] [20]),
        .I4(\rx_addr_end_reg[31] [21]),
        .I5(W_addr2[23]),
        .O(\W_addr[31]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \W_addr[31]_i_17 
       (.I0(W_addr2[18]),
        .I1(\rx_addr_end_reg[31] [16]),
        .I2(W_addr2[19]),
        .I3(\rx_addr_end_reg[31] [17]),
        .I4(\rx_addr_end_reg[31] [18]),
        .I5(W_addr2[20]),
        .O(\W_addr[31]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \W_addr[31]_i_18 
       (.I0(W_addr2[15]),
        .I1(\rx_addr_end_reg[31] [13]),
        .I2(W_addr2[16]),
        .I3(\rx_addr_end_reg[31] [14]),
        .I4(\rx_addr_end_reg[31] [15]),
        .I5(W_addr2[17]),
        .O(\W_addr[31]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \W_addr[31]_i_19 
       (.I0(W_addr2[12]),
        .I1(\rx_addr_end_reg[31] [10]),
        .I2(W_addr2[13]),
        .I3(\rx_addr_end_reg[31] [11]),
        .I4(\rx_addr_end_reg[31] [12]),
        .I5(W_addr2[14]),
        .O(\W_addr[31]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \W_addr[31]_i_20 
       (.I0(W_addr2[9]),
        .I1(\rx_addr_end_reg[31] [7]),
        .I2(W_addr2[10]),
        .I3(\rx_addr_end_reg[31] [8]),
        .I4(\rx_addr_end_reg[31] [9]),
        .I5(W_addr2[11]),
        .O(\W_addr[31]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \W_addr[31]_i_21 
       (.I0(W_addr2[6]),
        .I1(\rx_addr_end_reg[31] [4]),
        .I2(W_addr2[7]),
        .I3(\rx_addr_end_reg[31] [5]),
        .I4(\rx_addr_end_reg[31] [6]),
        .I5(W_addr2[8]),
        .O(\W_addr[31]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \W_addr[31]_i_22 
       (.I0(W_addr2[3]),
        .I1(\rx_addr_end_reg[31] [1]),
        .I2(W_addr2[4]),
        .I3(\rx_addr_end_reg[31] [2]),
        .I4(\rx_addr_end_reg[31] [3]),
        .I5(W_addr2[5]),
        .O(\W_addr[31]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \W_addr[31]_i_23 
       (.I0(W_addr2[0]),
        .I1(rx_addr_end[0]),
        .I2(W_addr2[1]),
        .I3(rx_addr_end[1]),
        .I4(\rx_addr_end_reg[31] [0]),
        .I5(W_addr2[2]),
        .O(\W_addr[31]_i_23_n_0 ));
  CARRY4 \W_addr_reg[31]_i_11 
       (.CI(\W_addr_reg[31]_i_15_n_0 ),
        .CO({\W_addr_reg[31]_i_11_n_0 ,\W_addr_reg[31]_i_11_n_1 ,\W_addr_reg[31]_i_11_n_2 ,\W_addr_reg[31]_i_11_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_W_addr_reg[31]_i_11_O_UNCONNECTED [3:0]),
        .S({\W_addr[31]_i_16_n_0 ,\W_addr[31]_i_17_n_0 ,\W_addr[31]_i_18_n_0 ,\W_addr[31]_i_19_n_0 }));
  CARRY4 \W_addr_reg[31]_i_15 
       (.CI(1'b0),
        .CO({\W_addr_reg[31]_i_15_n_0 ,\W_addr_reg[31]_i_15_n_1 ,\W_addr_reg[31]_i_15_n_2 ,\W_addr_reg[31]_i_15_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_W_addr_reg[31]_i_15_O_UNCONNECTED [3:0]),
        .S({\W_addr[31]_i_20_n_0 ,\W_addr[31]_i_21_n_0 ,\W_addr[31]_i_22_n_0 ,\W_addr[31]_i_23_n_0 }));
  CARRY4 \W_addr_reg[31]_i_8 
       (.CI(\W_addr_reg[31]_i_11_n_0 ),
        .CO({\NLW_W_addr_reg[31]_i_8_CO_UNCONNECTED [3],\rx_addr_end_reg[30] ,\W_addr_reg[31]_i_8_n_2 ,\W_addr_reg[31]_i_8_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_W_addr_reg[31]_i_8_O_UNCONNECTED [3:0]),
        .S({1'b0,\W_addr[31]_i_12_n_0 ,\W_addr[31]_i_13_n_0 ,\W_addr[31]_i_14_n_0 }));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    \W_bmove[0]_i_2 
       (.I0(\W_bmove_reg[1]_i_9_n_7 ),
        .I1(\W_bmove_reg[1]_i_10_n_7 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(W_full_reg_1[0]));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    \W_bmove[10]_i_3 
       (.I0(\W_bmove_reg[11]_i_4_n_5 ),
        .I1(\W_bmove_reg[11]_i_5_n_5 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(W_full_reg_1[10]));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[11]_i_10 
       (.I0(\rx_addr_end_reg[31] [9]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [11]),
        .O(\W_bmove[11]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[11]_i_11 
       (.I0(\rx_addr_end_reg[31] [8]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [10]),
        .O(\W_bmove[11]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[11]_i_12 
       (.I0(\rx_addr_end_reg[31] [7]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [9]),
        .O(\W_bmove[11]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[11]_i_13 
       (.I0(\rx_addr_end_reg[31] [6]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [8]),
        .O(\W_bmove[11]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    \W_bmove[11]_i_3 
       (.I0(\W_bmove_reg[11]_i_4_n_4 ),
        .I1(\W_bmove_reg[11]_i_5_n_4 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(W_full_reg_0[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[11]_i_6 
       (.I0(rx_addr_tail[11]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [11]),
        .O(\W_bmove[11]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[11]_i_7 
       (.I0(rx_addr_tail[10]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [10]),
        .O(\W_bmove[11]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[11]_i_8 
       (.I0(rx_addr_tail[9]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [9]),
        .O(\W_bmove[11]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[11]_i_9 
       (.I0(rx_addr_tail[8]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [8]),
        .O(\W_bmove[11]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    \W_bmove[12]_i_3 
       (.I0(\W_bmove_reg[15]_i_52_n_7 ),
        .I1(\W_bmove_reg[15]_i_53_n_7 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(W_full_reg_0[1]));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    \W_bmove[13]_i_3 
       (.I0(\W_bmove_reg[15]_i_52_n_6 ),
        .I1(\W_bmove_reg[15]_i_53_n_6 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(W_full_reg_0[2]));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    \W_bmove[14]_i_3 
       (.I0(\W_bmove_reg[15]_i_52_n_5 ),
        .I1(\W_bmove_reg[15]_i_53_n_5 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(W_full_reg_0[3]));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_100 
       (.I0(\rx_addr_end_reg[31] [11]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [13]),
        .O(\W_bmove[15]_i_100_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_101 
       (.I0(\rx_addr_end_reg[31] [10]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [12]),
        .O(\W_bmove[15]_i_101_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_102 
       (.I0(\rx_addr_end_reg[31] [21]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [23]),
        .O(\W_bmove[15]_i_102_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_103 
       (.I0(\rx_addr_end_reg[31] [20]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [22]),
        .O(\W_bmove[15]_i_103_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_104 
       (.I0(\rx_addr_end_reg[31] [19]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [21]),
        .O(\W_bmove[15]_i_104_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_105 
       (.I0(\rx_addr_end_reg[31] [18]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [20]),
        .O(\W_bmove[15]_i_105_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_106 
       (.I0(rx_addr_tail[23]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [23]),
        .O(\W_bmove[15]_i_106_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_107 
       (.I0(rx_addr_tail[22]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [22]),
        .O(\W_bmove[15]_i_107_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_108 
       (.I0(rx_addr_tail[21]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [21]),
        .O(\W_bmove[15]_i_108_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_109 
       (.I0(rx_addr_tail[20]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [20]),
        .O(\W_bmove[15]_i_109_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[15]_i_111 
       (.I0(W_full_reg_0[4]),
        .I1(\W_bmove_reg[15]_i_89_0 [15]),
        .I2(W_full_reg_0[3]),
        .I3(\W_bmove_reg[15]_i_89_0 [14]),
        .O(\W_bmove[15]_i_111_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[15]_i_112 
       (.I0(W_full_reg_0[2]),
        .I1(\W_bmove_reg[15]_i_89_0 [13]),
        .I2(W_full_reg_0[1]),
        .I3(\W_bmove_reg[15]_i_89_0 [12]),
        .O(\W_bmove[15]_i_112_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[15]_i_113 
       (.I0(W_full_reg_0[0]),
        .I1(\W_bmove_reg[15]_i_89_0 [11]),
        .I2(W_full_reg_1[10]),
        .I3(\W_bmove_reg[15]_i_89_0 [10]),
        .O(\W_bmove[15]_i_113_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[15]_i_114 
       (.I0(W_full_reg_1[9]),
        .I1(\W_bmove_reg[15]_i_89_0 [9]),
        .I2(W_full_reg_1[8]),
        .I3(\W_bmove_reg[15]_i_89_0 [8]),
        .O(\W_bmove[15]_i_114_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[15]_i_115 
       (.I0(W_full_reg_0[4]),
        .I1(\W_bmove_reg[15]_i_89_0 [15]),
        .I2(W_full_reg_0[3]),
        .I3(\W_bmove_reg[15]_i_89_0 [14]),
        .O(\W_bmove[15]_i_115_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[15]_i_116 
       (.I0(W_full_reg_0[2]),
        .I1(\W_bmove_reg[15]_i_89_0 [13]),
        .I2(W_full_reg_0[1]),
        .I3(\W_bmove_reg[15]_i_89_0 [12]),
        .O(\W_bmove[15]_i_116_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[15]_i_117 
       (.I0(W_full_reg_0[0]),
        .I1(\W_bmove_reg[15]_i_89_0 [11]),
        .I2(W_full_reg_1[10]),
        .I3(\W_bmove_reg[15]_i_89_0 [10]),
        .O(\W_bmove[15]_i_117_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[15]_i_118 
       (.I0(W_full_reg_1[9]),
        .I1(\W_bmove_reg[15]_i_89_0 [9]),
        .I2(W_full_reg_1[8]),
        .I3(\W_bmove_reg[15]_i_89_0 [8]),
        .O(\W_bmove[15]_i_118_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[15]_i_119 
       (.I0(W_full_reg_1[7]),
        .I1(\W_bmove_reg[15]_i_89_0 [7]),
        .I2(W_full_reg_1[6]),
        .I3(\W_bmove_reg[15]_i_89_0 [6]),
        .O(\W_bmove[15]_i_119_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \W_bmove[15]_i_12 
       (.I0(\W_bmove[15]_i_23_n_0 ),
        .I1(\W_bmove_reg[15]_i_24_n_6 ),
        .I2(\W_bmove_reg[1]_i_8_0 ),
        .I3(\W_bmove_reg[15]_i_26_n_6 ),
        .I4(\W_bmove_reg[1]_i_8_1 ),
        .I5(W_full_reg_1[0]),
        .O(\W_bmove[15]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[15]_i_120 
       (.I0(W_full_reg_1[5]),
        .I1(\W_bmove_reg[15]_i_89_0 [5]),
        .I2(W_full_reg_1[4]),
        .I3(\W_bmove_reg[15]_i_89_0 [4]),
        .O(\W_bmove[15]_i_120_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[15]_i_121 
       (.I0(W_full_reg_1[3]),
        .I1(\W_bmove_reg[15]_i_89_0 [3]),
        .I2(W_full_reg_1[2]),
        .I3(\W_bmove_reg[15]_i_89_0 [2]),
        .O(\W_bmove[15]_i_121_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[15]_i_123 
       (.I0(W_full_reg_1[7]),
        .I1(\W_bmove_reg[15]_i_89_0 [7]),
        .I2(W_full_reg_1[6]),
        .I3(\W_bmove_reg[15]_i_89_0 [6]),
        .O(\W_bmove[15]_i_123_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[15]_i_124 
       (.I0(W_full_reg_1[5]),
        .I1(\W_bmove_reg[15]_i_89_0 [5]),
        .I2(W_full_reg_1[4]),
        .I3(\W_bmove_reg[15]_i_89_0 [4]),
        .O(\W_bmove[15]_i_124_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[15]_i_125 
       (.I0(W_full_reg_1[3]),
        .I1(\W_bmove_reg[15]_i_89_0 [3]),
        .I2(W_full_reg_1[2]),
        .I3(\W_bmove_reg[15]_i_89_0 [2]),
        .O(\W_bmove[15]_i_125_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[15]_i_126 
       (.I0(W_full_reg_1[1]),
        .I1(\W_bmove_reg[15]_i_89_0 [1]),
        .I2(W_full_reg_1[0]),
        .I3(\W_bmove_reg[15]_i_89_0 [0]),
        .O(\W_bmove[15]_i_126_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF0A0FCECF0A0)) 
    \W_bmove[15]_i_13 
       (.I0(\W_bmove_reg[15]_i_28_n_6 ),
        .I1(\W_bmove_reg[15]_i_29_n_6 ),
        .I2(\W_bmove_reg[1]_i_8_1 ),
        .I3(\W_bmove_reg[15]_i_28_n_7 ),
        .I4(\W_bmove_reg[1]_i_8_0 ),
        .I5(\W_bmove_reg[15]_i_29_n_7 ),
        .O(\W_bmove[15]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF0A0FCECF0A0)) 
    \W_bmove[15]_i_14 
       (.I0(\W_bmove_reg[15]_i_28_n_4 ),
        .I1(\W_bmove_reg[15]_i_29_n_4 ),
        .I2(\W_bmove_reg[1]_i_8_1 ),
        .I3(\W_bmove_reg[15]_i_28_n_5 ),
        .I4(\W_bmove_reg[1]_i_8_0 ),
        .I5(\W_bmove_reg[15]_i_29_n_5 ),
        .O(\W_bmove[15]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF0A0FCECF0A0)) 
    \W_bmove[15]_i_15 
       (.I0(\W_bmove_reg[15]_i_30_n_6 ),
        .I1(\W_bmove_reg[15]_i_31_n_6 ),
        .I2(\W_bmove_reg[1]_i_8_1 ),
        .I3(\W_bmove_reg[15]_i_30_n_7 ),
        .I4(\W_bmove_reg[1]_i_8_0 ),
        .I5(\W_bmove_reg[15]_i_31_n_7 ),
        .O(\W_bmove[15]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF0A0FCECF0A0)) 
    \W_bmove[15]_i_16 
       (.I0(\W_bmove_reg[15]_i_30_n_4 ),
        .I1(\W_bmove_reg[15]_i_31_n_4 ),
        .I2(\W_bmove_reg[1]_i_8_1 ),
        .I3(\W_bmove_reg[15]_i_30_n_5 ),
        .I4(\W_bmove_reg[1]_i_8_0 ),
        .I5(\W_bmove_reg[15]_i_31_n_5 ),
        .O(\W_bmove[15]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \W_bmove[15]_i_17 
       (.I0(\W_bmove[15]_i_32_n_0 ),
        .I1(\W_bmove[15]_i_33_n_0 ),
        .I2(\W_bmove[15]_i_34_n_0 ),
        .I3(\W_bmove[15]_i_35_n_0 ),
        .I4(\W_bmove[15]_i_36_n_0 ),
        .I5(\W_bmove[15]_i_37_n_0 ),
        .O(\W_bmove[15]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'h0000CCCC0ACA0ACA)) 
    \W_bmove[15]_i_19 
       (.I0(\W_bmove[1]_i_27_0 ),
        .I1(\W_bmove[1]_i_22_0 ),
        .I2(\W_bmove[15]_i_6_0 ),
        .I3(\W_bmove[1]_i_58_0 ),
        .I4(\W_bmove[15]_i_51_0 ),
        .I5(W_full_i_5_0[1]),
        .O(\W_bmove[15]_i_19_n_0 ));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    \W_bmove[15]_i_22 
       (.I0(\W_bmove_reg[15]_i_52_n_4 ),
        .I1(\W_bmove_reg[15]_i_53_n_4 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(W_full_reg_0[4]));
  LUT6 #(
    .INIT(64'hFFFFF0A0FCECF0A0)) 
    \W_bmove[15]_i_23 
       (.I0(\W_bmove_reg[15]_i_26_n_4 ),
        .I1(\W_bmove_reg[15]_i_24_n_4 ),
        .I2(\W_bmove_reg[1]_i_8_1 ),
        .I3(\W_bmove_reg[15]_i_26_n_5 ),
        .I4(\W_bmove_reg[1]_i_8_0 ),
        .I5(\W_bmove_reg[15]_i_24_n_5 ),
        .O(\W_bmove[15]_i_23_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF0A0FCECF0A0)) 
    \W_bmove[15]_i_32 
       (.I0(\W_bmove_reg[15]_i_70_n_6 ),
        .I1(\W_bmove_reg[15]_i_75_n_6 ),
        .I2(\W_bmove_reg[1]_i_8_1 ),
        .I3(\W_bmove_reg[15]_i_70_n_7 ),
        .I4(\W_bmove_reg[1]_i_8_0 ),
        .I5(\W_bmove_reg[15]_i_75_n_7 ),
        .O(\W_bmove[15]_i_32_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF0A0FCECF0A0)) 
    \W_bmove[15]_i_33 
       (.I0(\W_bmove_reg[15]_i_70_n_4 ),
        .I1(\W_bmove_reg[15]_i_75_n_4 ),
        .I2(\W_bmove_reg[1]_i_8_1 ),
        .I3(\W_bmove_reg[15]_i_70_n_5 ),
        .I4(\W_bmove_reg[1]_i_8_0 ),
        .I5(\W_bmove_reg[15]_i_75_n_5 ),
        .O(\W_bmove[15]_i_33_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \W_bmove[15]_i_34 
       (.I0(W_full_reg_1[8]),
        .I1(W_full_reg_1[7]),
        .I2(W_full_reg_1[6]),
        .I3(W_full_reg_1[5]),
        .O(\W_bmove[15]_i_34_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \W_bmove[15]_i_35 
       (.I0(W_full_reg_1[4]),
        .I1(W_full_reg_1[3]),
        .I2(W_full_reg_1[2]),
        .I3(W_full_reg_1[1]),
        .O(\W_bmove[15]_i_35_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \W_bmove[15]_i_36 
       (.I0(\u_dma_rx/get_rooms_return [16]),
        .I1(W_full_reg_0[4]),
        .I2(W_full_reg_0[3]),
        .I3(W_full_reg_0[2]),
        .O(\W_bmove[15]_i_36_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \W_bmove[15]_i_37 
       (.I0(W_full_reg_0[1]),
        .I1(W_full_reg_0[0]),
        .I2(W_full_reg_1[10]),
        .I3(W_full_reg_1[9]),
        .O(\W_bmove[15]_i_37_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[15]_i_48 
       (.I0(\W_bmove_reg[15]_i_29_n_5 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_28_n_5 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_29_n_4 ),
        .I5(\W_bmove_reg[15]_i_28_n_4 ),
        .O(\W_bmove[15]_i_48_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[15]_i_49 
       (.I0(\W_bmove_reg[15]_i_29_n_7 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_28_n_7 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_29_n_6 ),
        .I5(\W_bmove_reg[15]_i_28_n_6 ),
        .O(\W_bmove[15]_i_49_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \W_bmove[15]_i_5 
       (.I0(\W_bmove[15]_i_12_n_0 ),
        .I1(\W_bmove[15]_i_13_n_0 ),
        .I2(\W_bmove[15]_i_14_n_0 ),
        .I3(\W_bmove[15]_i_15_n_0 ),
        .I4(\W_bmove[15]_i_16_n_0 ),
        .I5(\W_bmove[15]_i_17_n_0 ),
        .O(W_go0));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[15]_i_50 
       (.I0(\W_bmove_reg[15]_i_31_n_5 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_30_n_5 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_31_n_4 ),
        .I5(\W_bmove_reg[15]_i_30_n_4 ),
        .O(\W_bmove[15]_i_50_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[15]_i_51 
       (.I0(\W_bmove_reg[15]_i_31_n_7 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_30_n_7 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_31_n_6 ),
        .I5(\W_bmove_reg[15]_i_30_n_6 ),
        .O(\W_bmove[15]_i_51_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_54 
       (.I0(rx_addr_tail[19]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [19]),
        .O(\W_bmove[15]_i_54_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_55 
       (.I0(rx_addr_tail[18]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [18]),
        .O(\W_bmove[15]_i_55_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_56 
       (.I0(rx_addr_tail[17]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [17]),
        .O(\W_bmove[15]_i_56_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_57 
       (.I0(rx_addr_tail[16]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [16]),
        .O(\W_bmove[15]_i_57_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_58 
       (.I0(\rx_addr_end_reg[31] [17]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [19]),
        .O(\W_bmove[15]_i_58_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_59 
       (.I0(\rx_addr_end_reg[31] [16]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [18]),
        .O(\W_bmove[15]_i_59_n_0 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \W_bmove[15]_i_6 
       (.I0(\W_bmove_reg[14] ),
        .I1(\W_bmove[15]_i_19_n_0 ),
        .I2(conf_rx_en),
        .O(conf_rx_en_reg_5));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_60 
       (.I0(\rx_addr_end_reg[31] [15]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [17]),
        .O(\W_bmove[15]_i_60_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_61 
       (.I0(\rx_addr_end_reg[31] [14]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [16]),
        .O(\W_bmove[15]_i_61_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_63 
       (.I0(\rx_addr_end_reg[31] [28]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [30]),
        .O(\W_bmove[15]_i_63_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_64 
       (.I0(\rx_addr_end_reg[31] [27]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [29]),
        .O(\W_bmove[15]_i_64_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_65 
       (.I0(\rx_addr_end_reg[31] [26]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [28]),
        .O(\W_bmove[15]_i_65_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_66 
       (.I0(rx_addr_tail[31]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [31]),
        .O(\W_bmove[15]_i_66_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_67 
       (.I0(rx_addr_tail[30]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [30]),
        .O(\W_bmove[15]_i_67_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_68 
       (.I0(rx_addr_tail[29]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [29]),
        .O(\W_bmove[15]_i_68_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_69 
       (.I0(rx_addr_tail[28]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [28]),
        .O(\W_bmove[15]_i_69_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_71 
       (.I0(\rx_addr_end_reg[31] [25]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [27]),
        .O(\W_bmove[15]_i_71_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_72 
       (.I0(\rx_addr_end_reg[31] [24]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [26]),
        .O(\W_bmove[15]_i_72_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_73 
       (.I0(\rx_addr_end_reg[31] [23]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [25]),
        .O(\W_bmove[15]_i_73_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_74 
       (.I0(\rx_addr_end_reg[31] [22]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [24]),
        .O(\W_bmove[15]_i_74_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_76 
       (.I0(rx_addr_tail[27]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [27]),
        .O(\W_bmove[15]_i_76_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_77 
       (.I0(rx_addr_tail[26]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [26]),
        .O(\W_bmove[15]_i_77_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_78 
       (.I0(rx_addr_tail[25]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [25]),
        .O(\W_bmove[15]_i_78_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_79 
       (.I0(rx_addr_tail[24]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [24]),
        .O(\W_bmove[15]_i_79_n_0 ));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    \W_bmove[15]_i_80 
       (.I0(\W_bmove_reg[15]_i_24_n_7 ),
        .I1(\W_bmove_reg[15]_i_26_n_7 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(\u_dma_rx/get_rooms_return [16]));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[15]_i_90 
       (.I0(\W_bmove_reg[15]_i_75_n_5 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_70_n_5 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_75_n_4 ),
        .I5(\W_bmove_reg[15]_i_70_n_4 ),
        .O(\W_bmove[15]_i_90_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[15]_i_91 
       (.I0(\W_bmove_reg[15]_i_75_n_7 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_70_n_7 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_75_n_6 ),
        .I5(\W_bmove_reg[15]_i_70_n_6 ),
        .O(\W_bmove[15]_i_91_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[15]_i_92 
       (.I0(\W_bmove_reg[15]_i_24_n_5 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_26_n_5 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_24_n_4 ),
        .I5(\W_bmove_reg[15]_i_26_n_4 ),
        .O(\W_bmove[15]_i_92_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[15]_i_93 
       (.I0(\W_bmove_reg[15]_i_24_n_7 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_26_n_7 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_24_n_6 ),
        .I5(\W_bmove_reg[15]_i_26_n_6 ),
        .O(\W_bmove[15]_i_93_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_94 
       (.I0(rx_addr_tail[15]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [15]),
        .O(\W_bmove[15]_i_94_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_95 
       (.I0(rx_addr_tail[14]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [14]),
        .O(\W_bmove[15]_i_95_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_96 
       (.I0(rx_addr_tail[13]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [13]),
        .O(\W_bmove[15]_i_96_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_97 
       (.I0(rx_addr_tail[12]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [12]),
        .O(\W_bmove[15]_i_97_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_98 
       (.I0(\rx_addr_end_reg[31] [13]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [15]),
        .O(\W_bmove[15]_i_98_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_99 
       (.I0(\rx_addr_end_reg[31] [12]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [14]),
        .O(\W_bmove[15]_i_99_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_105 
       (.I0(W_full_reg_0[3]),
        .I1(\W_bmove_reg[1]_i_59_0 [12]),
        .I2(W_full_reg_0[4]),
        .I3(\W_bmove_reg[1]_i_59_0 [13]),
        .O(\W_bmove[1]_i_105_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_106 
       (.I0(W_full_reg_0[1]),
        .I1(\W_bmove_reg[1]_i_59_0 [10]),
        .I2(W_full_reg_0[2]),
        .I3(\W_bmove_reg[1]_i_59_0 [11]),
        .O(\W_bmove[1]_i_106_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_107 
       (.I0(W_full_reg_1[10]),
        .I1(\W_bmove_reg[1]_i_59_0 [8]),
        .I2(W_full_reg_0[0]),
        .I3(\W_bmove_reg[1]_i_59_0 [9]),
        .O(\W_bmove[1]_i_107_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_108 
       (.I0(W_full_reg_1[9]),
        .I1(\W_bmove_reg[1]_i_59_0 [7]),
        .I2(W_full_reg_1[8]),
        .I3(\W_bmove_reg[1]_i_59_0 [6]),
        .O(\W_bmove[1]_i_108_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[1]_i_110 
       (.I0(rx_addr_tail[15]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [15]),
        .I2(rx_addr_tail[14]),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [14]),
        .O(\W_bmove[1]_i_110_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[1]_i_111 
       (.I0(rx_addr_tail[13]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [13]),
        .I2(rx_addr_tail[12]),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [12]),
        .O(\W_bmove[1]_i_111_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[1]_i_112 
       (.I0(rx_addr_tail[11]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [11]),
        .I2(rx_addr_tail[10]),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [10]),
        .O(\W_bmove[1]_i_112_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[1]_i_113 
       (.I0(rx_addr_tail[9]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [9]),
        .I2(rx_addr_tail[8]),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [8]),
        .O(\W_bmove[1]_i_113_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[1]_i_119 
       (.I0(W_full_reg_0[4]),
        .I1(W_bxxx[15]),
        .I2(W_full_reg_0[3]),
        .I3(W_bxxx[14]),
        .O(\W_bmove[1]_i_119_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[1]_i_120 
       (.I0(W_full_reg_0[2]),
        .I1(W_bxxx[13]),
        .I2(W_full_reg_0[1]),
        .I3(W_bxxx[12]),
        .O(\W_bmove[1]_i_120_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[1]_i_121 
       (.I0(W_full_reg_0[0]),
        .I1(W_bxxx[11]),
        .I2(W_full_reg_1[10]),
        .I3(W_bxxx[10]),
        .O(\W_bmove[1]_i_121_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[1]_i_122 
       (.I0(W_full_reg_1[9]),
        .I1(W_bxxx[9]),
        .I2(W_full_reg_1[8]),
        .I3(W_bxxx[8]),
        .O(\W_bmove[1]_i_122_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_130 
       (.I0(W_full_reg_1[7]),
        .I1(\W_bmove_reg[1]_i_59_0 [5]),
        .I2(W_full_reg_1[6]),
        .I3(\W_bmove_reg[1]_i_59_0 [4]),
        .O(\W_bmove[1]_i_130_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_131 
       (.I0(W_full_reg_1[5]),
        .I1(\W_bmove_reg[1]_i_59_0 [3]),
        .I2(W_full_reg_1[4]),
        .I3(\W_bmove_reg[1]_i_59_0 [2]),
        .O(\W_bmove[1]_i_131_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_132 
       (.I0(W_full_reg_1[3]),
        .I1(\W_bmove_reg[1]_i_59_0 [1]),
        .I2(W_full_reg_1[2]),
        .I3(\W_bmove_reg[1]_i_59_0 [0]),
        .O(\W_bmove[1]_i_132_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[1]_i_133 
       (.I0(\W_bmove_reg[1]_i_9_n_7 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[1]_i_10_n_7 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[1]_i_9_n_6 ),
        .I5(\W_bmove_reg[1]_i_10_n_6 ),
        .O(\W_bmove[1]_i_133_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_137 
       (.I0(W_full_reg_1[7]),
        .I1(\W_bmove_reg[1]_i_59_0 [5]),
        .I2(W_full_reg_1[6]),
        .I3(\W_bmove_reg[1]_i_59_0 [4]),
        .O(\W_bmove[1]_i_137_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_138 
       (.I0(W_full_reg_1[5]),
        .I1(\W_bmove_reg[1]_i_59_0 [3]),
        .I2(W_full_reg_1[4]),
        .I3(\W_bmove_reg[1]_i_59_0 [2]),
        .O(\W_bmove[1]_i_138_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_139 
       (.I0(W_full_reg_1[3]),
        .I1(\W_bmove_reg[1]_i_59_0 [1]),
        .I2(W_full_reg_1[2]),
        .I3(\W_bmove_reg[1]_i_59_0 [0]),
        .O(\W_bmove[1]_i_139_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[1]_i_140 
       (.I0(\W_bmove_reg[1]_i_9_n_7 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[1]_i_10_n_7 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[1]_i_9_n_6 ),
        .I5(\W_bmove_reg[1]_i_10_n_6 ),
        .O(\W_bmove[1]_i_140_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[1]_i_141 
       (.I0(rx_addr_tail[7]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [7]),
        .I2(rx_addr_tail[6]),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [6]),
        .O(\W_bmove[1]_i_141_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[1]_i_142 
       (.I0(rx_addr_tail[5]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [5]),
        .I2(rx_addr_tail[4]),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [4]),
        .O(\W_bmove[1]_i_142_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[1]_i_143 
       (.I0(rx_addr_tail[3]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [3]),
        .I2(rx_addr_tail[2]),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [2]),
        .O(\W_bmove[1]_i_143_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[1]_i_144 
       (.I0(rx_addr_tail[1]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [1]),
        .I2(rx_addr_tail[0]),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [0]),
        .O(\W_bmove[1]_i_144_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[1]_i_149 
       (.I0(W_full_reg_1[7]),
        .I1(W_bxxx[7]),
        .I2(W_full_reg_1[6]),
        .I3(W_bxxx[6]),
        .O(\W_bmove[1]_i_149_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[1]_i_150 
       (.I0(W_full_reg_1[5]),
        .I1(W_bxxx[5]),
        .I2(W_full_reg_1[4]),
        .I3(W_bxxx[4]),
        .O(\W_bmove[1]_i_150_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[1]_i_151 
       (.I0(W_full_reg_1[3]),
        .I1(W_bxxx[3]),
        .I2(W_full_reg_1[2]),
        .I3(W_bxxx[2]),
        .O(\W_bmove[1]_i_151_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[1]_i_152 
       (.I0(W_full_reg_1[1]),
        .I1(W_bxxx[1]),
        .I2(W_full_reg_1[0]),
        .I3(W_bxxx[0]),
        .O(\W_bmove[1]_i_152_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[1]_i_19 
       (.I0(\W_bmove_reg[15]_i_29_n_5 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_28_n_5 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_29_n_4 ),
        .I5(\W_bmove_reg[15]_i_28_n_4 ),
        .O(\W_bmove[1]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[1]_i_20 
       (.I0(\W_bmove_reg[15]_i_29_n_7 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_28_n_7 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_29_n_6 ),
        .I5(\W_bmove_reg[15]_i_28_n_6 ),
        .O(\W_bmove[1]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[1]_i_21 
       (.I0(\W_bmove_reg[15]_i_31_n_5 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_30_n_5 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_31_n_4 ),
        .I5(\W_bmove_reg[15]_i_30_n_4 ),
        .O(\W_bmove[1]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[1]_i_22 
       (.I0(\W_bmove_reg[15]_i_31_n_7 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_30_n_7 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_31_n_6 ),
        .I5(\W_bmove_reg[15]_i_30_n_6 ),
        .O(\W_bmove[1]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[1]_i_24 
       (.I0(\W_bmove_reg[15]_i_29_n_5 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_28_n_5 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_29_n_4 ),
        .I5(\W_bmove_reg[15]_i_28_n_4 ),
        .O(\W_bmove[1]_i_24_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[1]_i_25 
       (.I0(\W_bmove_reg[15]_i_29_n_7 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_28_n_7 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_29_n_6 ),
        .I5(\W_bmove_reg[15]_i_28_n_6 ),
        .O(\W_bmove[1]_i_25_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[1]_i_26 
       (.I0(\W_bmove_reg[15]_i_31_n_5 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_30_n_5 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_31_n_4 ),
        .I5(\W_bmove_reg[15]_i_30_n_4 ),
        .O(\W_bmove[1]_i_26_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[1]_i_27 
       (.I0(\W_bmove_reg[15]_i_31_n_7 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_30_n_7 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_31_n_6 ),
        .I5(\W_bmove_reg[15]_i_30_n_6 ),
        .O(\W_bmove[1]_i_27_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[1]_i_28 
       (.I0(rx_addr_tail[3]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [3]),
        .O(\W_bmove[1]_i_28_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[1]_i_29 
       (.I0(rx_addr_tail[2]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [2]),
        .O(\W_bmove[1]_i_29_n_0 ));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    \W_bmove[1]_i_3 
       (.I0(\W_bmove_reg[1]_i_9_n_6 ),
        .I1(\W_bmove_reg[1]_i_10_n_6 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(W_full_reg_1[1]));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[1]_i_30 
       (.I0(rx_addr_tail[1]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [1]),
        .O(\W_bmove[1]_i_30_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[1]_i_31 
       (.I0(rx_addr_tail[0]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [0]),
        .O(\W_bmove[1]_i_31_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[1]_i_32 
       (.I0(\rx_addr_end_reg[31] [1]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [3]),
        .O(\W_bmove[1]_i_32_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[1]_i_33 
       (.I0(\rx_addr_end_reg[31] [0]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [2]),
        .O(\W_bmove[1]_i_33_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[1]_i_34 
       (.I0(rx_addr_end[1]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [1]),
        .O(\W_bmove[1]_i_34_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[1]_i_35 
       (.I0(rx_addr_end[0]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [0]),
        .O(\W_bmove[1]_i_35_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[1]_i_37 
       (.I0(rx_addr_tail[31]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [31]),
        .I2(rx_addr_tail[30]),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [30]),
        .O(\W_bmove[1]_i_37_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[1]_i_38 
       (.I0(rx_addr_tail[29]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [29]),
        .I2(rx_addr_tail[28]),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [28]),
        .O(\W_bmove[1]_i_38_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[1]_i_39 
       (.I0(rx_addr_tail[27]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [27]),
        .I2(rx_addr_tail[26]),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [26]),
        .O(\W_bmove[1]_i_39_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[1]_i_40 
       (.I0(rx_addr_tail[25]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [25]),
        .I2(rx_addr_tail[24]),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [24]),
        .O(\W_bmove[1]_i_40_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[1]_i_55 
       (.I0(\W_bmove_reg[15]_i_29_n_5 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_28_n_5 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_29_n_4 ),
        .I5(\W_bmove_reg[15]_i_28_n_4 ),
        .O(\W_bmove[1]_i_55_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[1]_i_56 
       (.I0(\W_bmove_reg[15]_i_29_n_7 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_28_n_7 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_29_n_6 ),
        .I5(\W_bmove_reg[15]_i_28_n_6 ),
        .O(\W_bmove[1]_i_56_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[1]_i_57 
       (.I0(\W_bmove_reg[15]_i_31_n_5 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_30_n_5 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_31_n_4 ),
        .I5(\W_bmove_reg[15]_i_30_n_4 ),
        .O(\W_bmove[1]_i_57_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[1]_i_58 
       (.I0(\W_bmove_reg[15]_i_31_n_7 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_30_n_7 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_31_n_6 ),
        .I5(\W_bmove_reg[15]_i_30_n_6 ),
        .O(\W_bmove[1]_i_58_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[1]_i_60 
       (.I0(\W_bmove_reg[15]_i_75_n_5 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_70_n_5 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_75_n_4 ),
        .I5(\W_bmove_reg[15]_i_70_n_4 ),
        .O(\W_bmove[1]_i_60_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[1]_i_61 
       (.I0(\W_bmove_reg[15]_i_75_n_7 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_70_n_7 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_75_n_6 ),
        .I5(\W_bmove_reg[15]_i_70_n_6 ),
        .O(\W_bmove[1]_i_61_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[1]_i_62 
       (.I0(\W_bmove_reg[15]_i_24_n_5 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_26_n_5 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_24_n_4 ),
        .I5(\W_bmove_reg[15]_i_26_n_4 ),
        .O(\W_bmove[1]_i_62_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[1]_i_63 
       (.I0(\W_bmove_reg[15]_i_24_n_7 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_26_n_7 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_24_n_6 ),
        .I5(\W_bmove_reg[15]_i_26_n_6 ),
        .O(\W_bmove[1]_i_63_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[1]_i_65 
       (.I0(\W_bmove_reg[15]_i_75_n_5 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_70_n_5 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_75_n_4 ),
        .I5(\W_bmove_reg[15]_i_70_n_4 ),
        .O(\W_bmove[1]_i_65_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[1]_i_66 
       (.I0(\W_bmove_reg[15]_i_75_n_7 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_70_n_7 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_75_n_6 ),
        .I5(\W_bmove_reg[15]_i_70_n_6 ),
        .O(\W_bmove[1]_i_66_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[1]_i_67 
       (.I0(\W_bmove_reg[15]_i_24_n_5 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_26_n_5 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_24_n_4 ),
        .I5(\W_bmove_reg[15]_i_26_n_4 ),
        .O(\W_bmove[1]_i_67_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[1]_i_68 
       (.I0(\W_bmove_reg[15]_i_24_n_7 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_26_n_7 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_24_n_6 ),
        .I5(\W_bmove_reg[15]_i_26_n_6 ),
        .O(\W_bmove[1]_i_68_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[1]_i_70 
       (.I0(rx_addr_tail[23]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [23]),
        .I2(rx_addr_tail[22]),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [22]),
        .O(\W_bmove[1]_i_70_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[1]_i_71 
       (.I0(rx_addr_tail[21]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [21]),
        .I2(rx_addr_tail[20]),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [20]),
        .O(\W_bmove[1]_i_71_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[1]_i_72 
       (.I0(rx_addr_tail[19]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [19]),
        .I2(rx_addr_tail[18]),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [18]),
        .O(\W_bmove[1]_i_72_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_bmove[1]_i_73 
       (.I0(rx_addr_tail[17]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [17]),
        .I2(rx_addr_tail[16]),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [16]),
        .O(\W_bmove[1]_i_73_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[1]_i_87 
       (.I0(\W_bmove_reg[15]_i_75_n_5 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_70_n_5 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_75_n_4 ),
        .I5(\W_bmove_reg[15]_i_70_n_4 ),
        .O(\W_bmove[1]_i_87_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[1]_i_88 
       (.I0(\W_bmove_reg[15]_i_75_n_7 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_70_n_7 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_75_n_6 ),
        .I5(\W_bmove_reg[15]_i_70_n_6 ),
        .O(\W_bmove[1]_i_88_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[1]_i_89 
       (.I0(\W_bmove_reg[15]_i_24_n_5 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_26_n_5 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_24_n_4 ),
        .I5(\W_bmove_reg[15]_i_26_n_4 ),
        .O(\W_bmove[1]_i_89_n_0 ));
  LUT6 #(
    .INIT(64'h0033007703330777)) 
    \W_bmove[1]_i_90 
       (.I0(\W_bmove_reg[15]_i_24_n_7 ),
        .I1(\W_bmove_reg[1]_i_8_0 ),
        .I2(\W_bmove_reg[15]_i_26_n_7 ),
        .I3(\W_bmove_reg[1]_i_8_1 ),
        .I4(\W_bmove_reg[15]_i_24_n_6 ),
        .I5(\W_bmove_reg[15]_i_26_n_6 ),
        .O(\W_bmove[1]_i_90_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_96 
       (.I0(W_full_reg_0[3]),
        .I1(\W_bmove_reg[1]_i_59_0 [12]),
        .I2(W_full_reg_0[4]),
        .I3(\W_bmove_reg[1]_i_59_0 [13]),
        .O(\W_bmove[1]_i_96_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_97 
       (.I0(W_full_reg_0[1]),
        .I1(\W_bmove_reg[1]_i_59_0 [10]),
        .I2(W_full_reg_0[2]),
        .I3(\W_bmove_reg[1]_i_59_0 [11]),
        .O(\W_bmove[1]_i_97_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_98 
       (.I0(W_full_reg_1[10]),
        .I1(\W_bmove_reg[1]_i_59_0 [8]),
        .I2(W_full_reg_0[0]),
        .I3(\W_bmove_reg[1]_i_59_0 [9]),
        .O(\W_bmove[1]_i_98_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_99 
       (.I0(W_full_reg_1[9]),
        .I1(\W_bmove_reg[1]_i_59_0 [7]),
        .I2(W_full_reg_1[8]),
        .I3(\W_bmove_reg[1]_i_59_0 [6]),
        .O(\W_bmove[1]_i_99_n_0 ));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    \W_bmove[2]_i_3 
       (.I0(\W_bmove_reg[1]_i_9_n_5 ),
        .I1(\W_bmove_reg[1]_i_10_n_5 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(W_full_reg_1[2]));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    \W_bmove[3]_i_3 
       (.I0(\W_bmove_reg[1]_i_9_n_4 ),
        .I1(\W_bmove_reg[1]_i_10_n_4 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(W_full_reg_1[3]));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    \W_bmove[4]_i_3 
       (.I0(\W_bmove_reg[7]_i_4_n_7 ),
        .I1(\W_bmove_reg[7]_i_5_n_7 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(W_full_reg_1[4]));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    \W_bmove[5]_i_3 
       (.I0(\W_bmove_reg[7]_i_4_n_6 ),
        .I1(\W_bmove_reg[7]_i_5_n_6 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(W_full_reg_1[5]));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    \W_bmove[6]_i_3 
       (.I0(\W_bmove_reg[7]_i_4_n_5 ),
        .I1(\W_bmove_reg[7]_i_5_n_5 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(W_full_reg_1[6]));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[7]_i_10 
       (.I0(\rx_addr_end_reg[31] [5]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [7]),
        .O(\W_bmove[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[7]_i_11 
       (.I0(\rx_addr_end_reg[31] [4]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [6]),
        .O(\W_bmove[7]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[7]_i_12 
       (.I0(\rx_addr_end_reg[31] [3]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [5]),
        .O(\W_bmove[7]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[7]_i_13 
       (.I0(\rx_addr_end_reg[31] [2]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [4]),
        .O(\W_bmove[7]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    \W_bmove[7]_i_3 
       (.I0(\W_bmove_reg[7]_i_4_n_4 ),
        .I1(\W_bmove_reg[7]_i_5_n_4 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(W_full_reg_1[7]));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[7]_i_6 
       (.I0(rx_addr_tail[7]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [7]),
        .O(\W_bmove[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[7]_i_7 
       (.I0(rx_addr_tail[6]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [6]),
        .O(\W_bmove[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[7]_i_8 
       (.I0(rx_addr_tail[5]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [5]),
        .O(\W_bmove[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[7]_i_9 
       (.I0(rx_addr_tail[4]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [4]),
        .O(\W_bmove[7]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    \W_bmove[8]_i_3 
       (.I0(\W_bmove_reg[11]_i_4_n_7 ),
        .I1(\W_bmove_reg[11]_i_5_n_7 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(W_full_reg_1[8]));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    \W_bmove[9]_i_3 
       (.I0(\W_bmove_reg[11]_i_4_n_6 ),
        .I1(\W_bmove_reg[11]_i_5_n_6 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(W_full_reg_1[9]));
  CARRY4 \W_bmove_reg[11]_i_4 
       (.CI(\W_bmove_reg[7]_i_4_n_0 ),
        .CO({\W_bmove_reg[11]_i_4_n_0 ,\W_bmove_reg[11]_i_4_n_1 ,\W_bmove_reg[11]_i_4_n_2 ,\W_bmove_reg[11]_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI(rx_addr_tail[11:8]),
        .O({\W_bmove_reg[11]_i_4_n_4 ,\W_bmove_reg[11]_i_4_n_5 ,\W_bmove_reg[11]_i_4_n_6 ,\W_bmove_reg[11]_i_4_n_7 }),
        .S({\W_bmove[11]_i_6_n_0 ,\W_bmove[11]_i_7_n_0 ,\W_bmove[11]_i_8_n_0 ,\W_bmove[11]_i_9_n_0 }));
  CARRY4 \W_bmove_reg[11]_i_5 
       (.CI(\W_bmove_reg[7]_i_5_n_0 ),
        .CO({\W_bmove_reg[11]_i_5_n_0 ,\W_bmove_reg[11]_i_5_n_1 ,\W_bmove_reg[11]_i_5_n_2 ,\W_bmove_reg[11]_i_5_n_3 }),
        .CYINIT(1'b0),
        .DI(\rx_addr_end_reg[31] [9:6]),
        .O({\W_bmove_reg[11]_i_5_n_4 ,\W_bmove_reg[11]_i_5_n_5 ,\W_bmove_reg[11]_i_5_n_6 ,\W_bmove_reg[11]_i_5_n_7 }),
        .S({\W_bmove[11]_i_10_n_0 ,\W_bmove[11]_i_11_n_0 ,\W_bmove[11]_i_12_n_0 ,\W_bmove[11]_i_13_n_0 }));
  CARRY4 \W_bmove_reg[15]_i_110 
       (.CI(1'b0),
        .CO({\W_bmove_reg[15]_i_110_n_0 ,\W_bmove_reg[15]_i_110_n_1 ,\W_bmove_reg[15]_i_110_n_2 ,\W_bmove_reg[15]_i_110_n_3 }),
        .CYINIT(1'b0),
        .DI({\W_bmove[15]_i_119_n_0 ,\W_bmove[15]_i_120_n_0 ,\W_bmove[15]_i_121_n_0 ,\W_bmove_reg[15]_i_89_1 }),
        .O(\NLW_W_bmove_reg[15]_i_110_O_UNCONNECTED [3:0]),
        .S({\W_bmove[15]_i_123_n_0 ,\W_bmove[15]_i_124_n_0 ,\W_bmove[15]_i_125_n_0 ,\W_bmove[15]_i_126_n_0 }));
  CARRY4 \W_bmove_reg[15]_i_21 
       (.CI(\W_bmove_reg[15]_i_47_n_0 ),
        .CO({\W_bmove[15]_i_51_0 ,\W_bmove_reg[15]_i_21_n_1 ,\W_bmove_reg[15]_i_21_n_2 ,\W_bmove_reg[15]_i_21_n_3 }),
        .CYINIT(1'b0),
        .DI({\W_bmove[15]_i_14_n_0 ,\W_bmove[15]_i_13_n_0 ,\W_bmove[15]_i_16_n_0 ,\W_bmove[15]_i_15_n_0 }),
        .O(\NLW_W_bmove_reg[15]_i_21_O_UNCONNECTED [3:0]),
        .S({\W_bmove[15]_i_48_n_0 ,\W_bmove[15]_i_49_n_0 ,\W_bmove[15]_i_50_n_0 ,\W_bmove[15]_i_51_n_0 }));
  CARRY4 \W_bmove_reg[15]_i_24 
       (.CI(\W_bmove_reg[15]_i_52_n_0 ),
        .CO({\W_bmove_reg[15]_i_24_n_0 ,\W_bmove_reg[15]_i_24_n_1 ,\W_bmove_reg[15]_i_24_n_2 ,\W_bmove_reg[15]_i_24_n_3 }),
        .CYINIT(1'b0),
        .DI(rx_addr_tail[19:16]),
        .O({\W_bmove_reg[15]_i_24_n_4 ,\W_bmove_reg[15]_i_24_n_5 ,\W_bmove_reg[15]_i_24_n_6 ,\W_bmove_reg[15]_i_24_n_7 }),
        .S({\W_bmove[15]_i_54_n_0 ,\W_bmove[15]_i_55_n_0 ,\W_bmove[15]_i_56_n_0 ,\W_bmove[15]_i_57_n_0 }));
  CARRY4 \W_bmove_reg[15]_i_26 
       (.CI(\W_bmove_reg[15]_i_53_n_0 ),
        .CO({\W_bmove_reg[15]_i_26_n_0 ,\W_bmove_reg[15]_i_26_n_1 ,\W_bmove_reg[15]_i_26_n_2 ,\W_bmove_reg[15]_i_26_n_3 }),
        .CYINIT(1'b0),
        .DI(\rx_addr_end_reg[31] [17:14]),
        .O({\W_bmove_reg[15]_i_26_n_4 ,\W_bmove_reg[15]_i_26_n_5 ,\W_bmove_reg[15]_i_26_n_6 ,\W_bmove_reg[15]_i_26_n_7 }),
        .S({\W_bmove[15]_i_58_n_0 ,\W_bmove[15]_i_59_n_0 ,\W_bmove[15]_i_60_n_0 ,\W_bmove[15]_i_61_n_0 }));
  CARRY4 \W_bmove_reg[15]_i_28 
       (.CI(\W_bmove_reg[15]_i_30_n_0 ),
        .CO({\NLW_W_bmove_reg[15]_i_28_CO_UNCONNECTED [3],\W_bmove_reg[15]_i_28_n_1 ,\W_bmove_reg[15]_i_28_n_2 ,\W_bmove_reg[15]_i_28_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\rx_addr_end_reg[31] [28:26]}),
        .O({\W_bmove_reg[15]_i_28_n_4 ,\W_bmove_reg[15]_i_28_n_5 ,\W_bmove_reg[15]_i_28_n_6 ,\W_bmove_reg[15]_i_28_n_7 }),
        .S({\W_bmove[1]_i_56_0 ,\W_bmove[15]_i_63_n_0 ,\W_bmove[15]_i_64_n_0 ,\W_bmove[15]_i_65_n_0 }));
  CARRY4 \W_bmove_reg[15]_i_29 
       (.CI(\W_bmove_reg[15]_i_31_n_0 ),
        .CO({\NLW_W_bmove_reg[15]_i_29_CO_UNCONNECTED [3],\W_bmove_reg[15]_i_29_n_1 ,\W_bmove_reg[15]_i_29_n_2 ,\W_bmove_reg[15]_i_29_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,rx_addr_tail[30:28]}),
        .O({\W_bmove_reg[15]_i_29_n_4 ,\W_bmove_reg[15]_i_29_n_5 ,\W_bmove_reg[15]_i_29_n_6 ,\W_bmove_reg[15]_i_29_n_7 }),
        .S({\W_bmove[15]_i_66_n_0 ,\W_bmove[15]_i_67_n_0 ,\W_bmove[15]_i_68_n_0 ,\W_bmove[15]_i_69_n_0 }));
  CARRY4 \W_bmove_reg[15]_i_30 
       (.CI(\W_bmove_reg[15]_i_70_n_0 ),
        .CO({\W_bmove_reg[15]_i_30_n_0 ,\W_bmove_reg[15]_i_30_n_1 ,\W_bmove_reg[15]_i_30_n_2 ,\W_bmove_reg[15]_i_30_n_3 }),
        .CYINIT(1'b0),
        .DI(\rx_addr_end_reg[31] [25:22]),
        .O({\W_bmove_reg[15]_i_30_n_4 ,\W_bmove_reg[15]_i_30_n_5 ,\W_bmove_reg[15]_i_30_n_6 ,\W_bmove_reg[15]_i_30_n_7 }),
        .S({\W_bmove[15]_i_71_n_0 ,\W_bmove[15]_i_72_n_0 ,\W_bmove[15]_i_73_n_0 ,\W_bmove[15]_i_74_n_0 }));
  CARRY4 \W_bmove_reg[15]_i_31 
       (.CI(\W_bmove_reg[15]_i_75_n_0 ),
        .CO({\W_bmove_reg[15]_i_31_n_0 ,\W_bmove_reg[15]_i_31_n_1 ,\W_bmove_reg[15]_i_31_n_2 ,\W_bmove_reg[15]_i_31_n_3 }),
        .CYINIT(1'b0),
        .DI(rx_addr_tail[27:24]),
        .O({\W_bmove_reg[15]_i_31_n_4 ,\W_bmove_reg[15]_i_31_n_5 ,\W_bmove_reg[15]_i_31_n_6 ,\W_bmove_reg[15]_i_31_n_7 }),
        .S({\W_bmove[15]_i_76_n_0 ,\W_bmove[15]_i_77_n_0 ,\W_bmove[15]_i_78_n_0 ,\W_bmove[15]_i_79_n_0 }));
  CARRY4 \W_bmove_reg[15]_i_47 
       (.CI(\W_bmove_reg[15]_i_89_n_0 ),
        .CO({\W_bmove_reg[15]_i_47_n_0 ,\W_bmove_reg[15]_i_47_n_1 ,\W_bmove_reg[15]_i_47_n_2 ,\W_bmove_reg[15]_i_47_n_3 }),
        .CYINIT(1'b0),
        .DI({\W_bmove[15]_i_33_n_0 ,\W_bmove[15]_i_32_n_0 ,\W_bmove[15]_i_23_n_0 ,W_full_i_30_n_0}),
        .O(\NLW_W_bmove_reg[15]_i_47_O_UNCONNECTED [3:0]),
        .S({\W_bmove[15]_i_90_n_0 ,\W_bmove[15]_i_91_n_0 ,\W_bmove[15]_i_92_n_0 ,\W_bmove[15]_i_93_n_0 }));
  CARRY4 \W_bmove_reg[15]_i_52 
       (.CI(\W_bmove_reg[11]_i_4_n_0 ),
        .CO({\W_bmove_reg[15]_i_52_n_0 ,\W_bmove_reg[15]_i_52_n_1 ,\W_bmove_reg[15]_i_52_n_2 ,\W_bmove_reg[15]_i_52_n_3 }),
        .CYINIT(1'b0),
        .DI(rx_addr_tail[15:12]),
        .O({\W_bmove_reg[15]_i_52_n_4 ,\W_bmove_reg[15]_i_52_n_5 ,\W_bmove_reg[15]_i_52_n_6 ,\W_bmove_reg[15]_i_52_n_7 }),
        .S({\W_bmove[15]_i_94_n_0 ,\W_bmove[15]_i_95_n_0 ,\W_bmove[15]_i_96_n_0 ,\W_bmove[15]_i_97_n_0 }));
  CARRY4 \W_bmove_reg[15]_i_53 
       (.CI(\W_bmove_reg[11]_i_5_n_0 ),
        .CO({\W_bmove_reg[15]_i_53_n_0 ,\W_bmove_reg[15]_i_53_n_1 ,\W_bmove_reg[15]_i_53_n_2 ,\W_bmove_reg[15]_i_53_n_3 }),
        .CYINIT(1'b0),
        .DI(\rx_addr_end_reg[31] [13:10]),
        .O({\W_bmove_reg[15]_i_53_n_4 ,\W_bmove_reg[15]_i_53_n_5 ,\W_bmove_reg[15]_i_53_n_6 ,\W_bmove_reg[15]_i_53_n_7 }),
        .S({\W_bmove[15]_i_98_n_0 ,\W_bmove[15]_i_99_n_0 ,\W_bmove[15]_i_100_n_0 ,\W_bmove[15]_i_101_n_0 }));
  CARRY4 \W_bmove_reg[15]_i_70 
       (.CI(\W_bmove_reg[15]_i_26_n_0 ),
        .CO({\W_bmove_reg[15]_i_70_n_0 ,\W_bmove_reg[15]_i_70_n_1 ,\W_bmove_reg[15]_i_70_n_2 ,\W_bmove_reg[15]_i_70_n_3 }),
        .CYINIT(1'b0),
        .DI(\rx_addr_end_reg[31] [21:18]),
        .O({\W_bmove_reg[15]_i_70_n_4 ,\W_bmove_reg[15]_i_70_n_5 ,\W_bmove_reg[15]_i_70_n_6 ,\W_bmove_reg[15]_i_70_n_7 }),
        .S({\W_bmove[15]_i_102_n_0 ,\W_bmove[15]_i_103_n_0 ,\W_bmove[15]_i_104_n_0 ,\W_bmove[15]_i_105_n_0 }));
  CARRY4 \W_bmove_reg[15]_i_75 
       (.CI(\W_bmove_reg[15]_i_24_n_0 ),
        .CO({\W_bmove_reg[15]_i_75_n_0 ,\W_bmove_reg[15]_i_75_n_1 ,\W_bmove_reg[15]_i_75_n_2 ,\W_bmove_reg[15]_i_75_n_3 }),
        .CYINIT(1'b0),
        .DI(rx_addr_tail[23:20]),
        .O({\W_bmove_reg[15]_i_75_n_4 ,\W_bmove_reg[15]_i_75_n_5 ,\W_bmove_reg[15]_i_75_n_6 ,\W_bmove_reg[15]_i_75_n_7 }),
        .S({\W_bmove[15]_i_106_n_0 ,\W_bmove[15]_i_107_n_0 ,\W_bmove[15]_i_108_n_0 ,\W_bmove[15]_i_109_n_0 }));
  CARRY4 \W_bmove_reg[15]_i_89 
       (.CI(\W_bmove_reg[15]_i_110_n_0 ),
        .CO({\W_bmove_reg[15]_i_89_n_0 ,\W_bmove_reg[15]_i_89_n_1 ,\W_bmove_reg[15]_i_89_n_2 ,\W_bmove_reg[15]_i_89_n_3 }),
        .CYINIT(1'b0),
        .DI({\W_bmove[15]_i_111_n_0 ,\W_bmove[15]_i_112_n_0 ,\W_bmove[15]_i_113_n_0 ,\W_bmove[15]_i_114_n_0 }),
        .O(\NLW_W_bmove_reg[15]_i_89_O_UNCONNECTED [3:0]),
        .S({\W_bmove[15]_i_115_n_0 ,\W_bmove[15]_i_116_n_0 ,\W_bmove[15]_i_117_n_0 ,\W_bmove[15]_i_118_n_0 }));
  CARRY4 \W_bmove_reg[1]_i_10 
       (.CI(1'b0),
        .CO({\W_bmove_reg[1]_i_10_n_0 ,\W_bmove_reg[1]_i_10_n_1 ,\W_bmove_reg[1]_i_10_n_2 ,\W_bmove_reg[1]_i_10_n_3 }),
        .CYINIT(1'b1),
        .DI({\rx_addr_end_reg[31] [1:0],rx_addr_end}),
        .O({\W_bmove_reg[1]_i_10_n_4 ,\W_bmove_reg[1]_i_10_n_5 ,\W_bmove_reg[1]_i_10_n_6 ,\W_bmove_reg[1]_i_10_n_7 }),
        .S({\W_bmove[1]_i_32_n_0 ,\W_bmove[1]_i_33_n_0 ,\W_bmove[1]_i_34_n_0 ,\W_bmove[1]_i_35_n_0 }));
  CARRY4 \W_bmove_reg[1]_i_100 
       (.CI(1'b0),
        .CO({\W_bmove_reg[1]_i_100_n_0 ,\W_bmove_reg[1]_i_100_n_1 ,\W_bmove_reg[1]_i_100_n_2 ,\W_bmove_reg[1]_i_100_n_3 }),
        .CYINIT(1'b0),
        .DI({\W_bmove_reg[1]_i_64_0 ,W_full_i_29_n_0}),
        .O(\NLW_W_bmove_reg[1]_i_100_O_UNCONNECTED [3:0]),
        .S({\W_bmove[1]_i_137_n_0 ,\W_bmove[1]_i_138_n_0 ,\W_bmove[1]_i_139_n_0 ,\W_bmove[1]_i_140_n_0 }));
  CARRY4 \W_bmove_reg[1]_i_109 
       (.CI(1'b0),
        .CO({\W_bmove_reg[1]_i_109_n_0 ,\W_bmove_reg[1]_i_109_n_1 ,\W_bmove_reg[1]_i_109_n_2 ,\W_bmove_reg[1]_i_109_n_3 }),
        .CYINIT(1'b0),
        .DI({\W_bmove[1]_i_141_n_0 ,\W_bmove[1]_i_142_n_0 ,\W_bmove[1]_i_143_n_0 ,\W_bmove[1]_i_144_n_0 }),
        .O(\NLW_W_bmove_reg[1]_i_109_O_UNCONNECTED [3:0]),
        .S(\W_bmove_reg[1]_i_69_0 ));
  CARRY4 \W_bmove_reg[1]_i_11 
       (.CI(\W_bmove_reg[1]_i_36_n_0 ),
        .CO({\rx_addr_tail_reg[31] ,\W_bmove_reg[1]_i_11_n_1 ,\W_bmove_reg[1]_i_11_n_2 ,\W_bmove_reg[1]_i_11_n_3 }),
        .CYINIT(1'b0),
        .DI({\W_bmove[1]_i_37_n_0 ,\W_bmove[1]_i_38_n_0 ,\W_bmove[1]_i_39_n_0 ,\W_bmove[1]_i_40_n_0 }),
        .O(\NLW_W_bmove_reg[1]_i_11_O_UNCONNECTED [3:0]),
        .S(\W_bmove[15]_i_25 ));
  CARRY4 \W_bmove_reg[1]_i_118 
       (.CI(1'b0),
        .CO({\W_bmove_reg[1]_i_118_n_0 ,\W_bmove_reg[1]_i_118_n_1 ,\W_bmove_reg[1]_i_118_n_2 ,\W_bmove_reg[1]_i_118_n_3 }),
        .CYINIT(1'b0),
        .DI({\W_bmove[1]_i_149_n_0 ,\W_bmove[1]_i_150_n_0 ,\W_bmove[1]_i_151_n_0 ,\W_bmove[1]_i_152_n_0 }),
        .O(\NLW_W_bmove_reg[1]_i_118_O_UNCONNECTED [3:0]),
        .S(\W_bmove_reg[1]_i_86_0 ));
  CARRY4 \W_bmove_reg[1]_i_13 
       (.CI(\W_bmove_reg[1]_i_54_n_0 ),
        .CO({\W_bmove[1]_i_58_0 ,\W_bmove_reg[1]_i_13_n_1 ,\W_bmove_reg[1]_i_13_n_2 ,\W_bmove_reg[1]_i_13_n_3 }),
        .CYINIT(1'b0),
        .DI({\W_bmove[15]_i_14_n_0 ,\W_bmove[15]_i_13_n_0 ,\W_bmove[15]_i_16_n_0 ,\W_bmove[15]_i_15_n_0 }),
        .O(\NLW_W_bmove_reg[1]_i_13_O_UNCONNECTED [3:0]),
        .S({\W_bmove[1]_i_55_n_0 ,\W_bmove[1]_i_56_n_0 ,\W_bmove[1]_i_57_n_0 ,\W_bmove[1]_i_58_n_0 }));
  CARRY4 \W_bmove_reg[1]_i_18 
       (.CI(\W_bmove_reg[1]_i_59_n_0 ),
        .CO({\W_bmove_reg[1]_i_18_n_0 ,\W_bmove_reg[1]_i_18_n_1 ,\W_bmove_reg[1]_i_18_n_2 ,\W_bmove_reg[1]_i_18_n_3 }),
        .CYINIT(1'b0),
        .DI({\W_bmove[15]_i_33_n_0 ,\W_bmove[15]_i_32_n_0 ,\W_bmove[15]_i_23_n_0 ,W_full_i_30_n_0}),
        .O(\NLW_W_bmove_reg[1]_i_18_O_UNCONNECTED [3:0]),
        .S({\W_bmove[1]_i_60_n_0 ,\W_bmove[1]_i_61_n_0 ,\W_bmove[1]_i_62_n_0 ,\W_bmove[1]_i_63_n_0 }));
  CARRY4 \W_bmove_reg[1]_i_23 
       (.CI(\W_bmove_reg[1]_i_64_n_0 ),
        .CO({\W_bmove_reg[1]_i_23_n_0 ,\W_bmove_reg[1]_i_23_n_1 ,\W_bmove_reg[1]_i_23_n_2 ,\W_bmove_reg[1]_i_23_n_3 }),
        .CYINIT(1'b0),
        .DI({\W_bmove[15]_i_33_n_0 ,\W_bmove[15]_i_32_n_0 ,\W_bmove[15]_i_23_n_0 ,W_full_i_30_n_0}),
        .O(\NLW_W_bmove_reg[1]_i_23_O_UNCONNECTED [3:0]),
        .S({\W_bmove[1]_i_65_n_0 ,\W_bmove[1]_i_66_n_0 ,\W_bmove[1]_i_67_n_0 ,\W_bmove[1]_i_68_n_0 }));
  CARRY4 \W_bmove_reg[1]_i_36 
       (.CI(\W_bmove_reg[1]_i_69_n_0 ),
        .CO({\W_bmove_reg[1]_i_36_n_0 ,\W_bmove_reg[1]_i_36_n_1 ,\W_bmove_reg[1]_i_36_n_2 ,\W_bmove_reg[1]_i_36_n_3 }),
        .CYINIT(1'b0),
        .DI({\W_bmove[1]_i_70_n_0 ,\W_bmove[1]_i_71_n_0 ,\W_bmove[1]_i_72_n_0 ,\W_bmove[1]_i_73_n_0 }),
        .O(\NLW_W_bmove_reg[1]_i_36_O_UNCONNECTED [3:0]),
        .S(\W_bmove_reg[1]_i_11_0 ));
  CARRY4 \W_bmove_reg[1]_i_54 
       (.CI(\W_bmove_reg[1]_i_86_n_0 ),
        .CO({\W_bmove_reg[1]_i_54_n_0 ,\W_bmove_reg[1]_i_54_n_1 ,\W_bmove_reg[1]_i_54_n_2 ,\W_bmove_reg[1]_i_54_n_3 }),
        .CYINIT(1'b0),
        .DI({\W_bmove[15]_i_33_n_0 ,\W_bmove[15]_i_32_n_0 ,\W_bmove[15]_i_23_n_0 ,W_full_i_30_n_0}),
        .O(\NLW_W_bmove_reg[1]_i_54_O_UNCONNECTED [3:0]),
        .S({\W_bmove[1]_i_87_n_0 ,\W_bmove[1]_i_88_n_0 ,\W_bmove[1]_i_89_n_0 ,\W_bmove[1]_i_90_n_0 }));
  CARRY4 \W_bmove_reg[1]_i_59 
       (.CI(\W_bmove_reg[1]_i_91_n_0 ),
        .CO({\W_bmove_reg[1]_i_59_n_0 ,\W_bmove_reg[1]_i_59_n_1 ,\W_bmove_reg[1]_i_59_n_2 ,\W_bmove_reg[1]_i_59_n_3 }),
        .CYINIT(1'b0),
        .DI(\W_bmove_reg[1]_i_18_0 ),
        .O(\NLW_W_bmove_reg[1]_i_59_O_UNCONNECTED [3:0]),
        .S({\W_bmove[1]_i_96_n_0 ,\W_bmove[1]_i_97_n_0 ,\W_bmove[1]_i_98_n_0 ,\W_bmove[1]_i_99_n_0 }));
  CARRY4 \W_bmove_reg[1]_i_64 
       (.CI(\W_bmove_reg[1]_i_100_n_0 ),
        .CO({\W_bmove_reg[1]_i_64_n_0 ,\W_bmove_reg[1]_i_64_n_1 ,\W_bmove_reg[1]_i_64_n_2 ,\W_bmove_reg[1]_i_64_n_3 }),
        .CYINIT(1'b0),
        .DI(\W_bmove_reg[1]_i_23_0 ),
        .O(\NLW_W_bmove_reg[1]_i_64_O_UNCONNECTED [3:0]),
        .S({\W_bmove[1]_i_105_n_0 ,\W_bmove[1]_i_106_n_0 ,\W_bmove[1]_i_107_n_0 ,\W_bmove[1]_i_108_n_0 }));
  CARRY4 \W_bmove_reg[1]_i_69 
       (.CI(\W_bmove_reg[1]_i_109_n_0 ),
        .CO({\W_bmove_reg[1]_i_69_n_0 ,\W_bmove_reg[1]_i_69_n_1 ,\W_bmove_reg[1]_i_69_n_2 ,\W_bmove_reg[1]_i_69_n_3 }),
        .CYINIT(1'b0),
        .DI({\W_bmove[1]_i_110_n_0 ,\W_bmove[1]_i_111_n_0 ,\W_bmove[1]_i_112_n_0 ,\W_bmove[1]_i_113_n_0 }),
        .O(\NLW_W_bmove_reg[1]_i_69_O_UNCONNECTED [3:0]),
        .S(\W_bmove_reg[1]_i_36_0 ));
  CARRY4 \W_bmove_reg[1]_i_7 
       (.CI(\W_bmove_reg[1]_i_18_n_0 ),
        .CO({\W_bmove[1]_i_22_0 ,\W_bmove_reg[1]_i_7_n_1 ,\W_bmove_reg[1]_i_7_n_2 ,\W_bmove_reg[1]_i_7_n_3 }),
        .CYINIT(1'b0),
        .DI({\W_bmove[15]_i_14_n_0 ,\W_bmove[15]_i_13_n_0 ,\W_bmove[15]_i_16_n_0 ,\W_bmove[15]_i_15_n_0 }),
        .O(\NLW_W_bmove_reg[1]_i_7_O_UNCONNECTED [3:0]),
        .S({\W_bmove[1]_i_19_n_0 ,\W_bmove[1]_i_20_n_0 ,\W_bmove[1]_i_21_n_0 ,\W_bmove[1]_i_22_n_0 }));
  CARRY4 \W_bmove_reg[1]_i_8 
       (.CI(\W_bmove_reg[1]_i_23_n_0 ),
        .CO({\W_bmove[1]_i_27_0 ,\W_bmove_reg[1]_i_8_n_1 ,\W_bmove_reg[1]_i_8_n_2 ,\W_bmove_reg[1]_i_8_n_3 }),
        .CYINIT(1'b0),
        .DI({\W_bmove[15]_i_14_n_0 ,\W_bmove[15]_i_13_n_0 ,\W_bmove[15]_i_16_n_0 ,\W_bmove[15]_i_15_n_0 }),
        .O(\NLW_W_bmove_reg[1]_i_8_O_UNCONNECTED [3:0]),
        .S({\W_bmove[1]_i_24_n_0 ,\W_bmove[1]_i_25_n_0 ,\W_bmove[1]_i_26_n_0 ,\W_bmove[1]_i_27_n_0 }));
  CARRY4 \W_bmove_reg[1]_i_86 
       (.CI(\W_bmove_reg[1]_i_118_n_0 ),
        .CO({\W_bmove_reg[1]_i_86_n_0 ,\W_bmove_reg[1]_i_86_n_1 ,\W_bmove_reg[1]_i_86_n_2 ,\W_bmove_reg[1]_i_86_n_3 }),
        .CYINIT(1'b0),
        .DI({\W_bmove[1]_i_119_n_0 ,\W_bmove[1]_i_120_n_0 ,\W_bmove[1]_i_121_n_0 ,\W_bmove[1]_i_122_n_0 }),
        .O(\NLW_W_bmove_reg[1]_i_86_O_UNCONNECTED [3:0]),
        .S(\W_bmove_reg[1]_i_54_0 ));
  CARRY4 \W_bmove_reg[1]_i_9 
       (.CI(1'b0),
        .CO({\W_bmove_reg[1]_i_9_n_0 ,\W_bmove_reg[1]_i_9_n_1 ,\W_bmove_reg[1]_i_9_n_2 ,\W_bmove_reg[1]_i_9_n_3 }),
        .CYINIT(1'b1),
        .DI(rx_addr_tail[3:0]),
        .O({\W_bmove_reg[1]_i_9_n_4 ,\W_bmove_reg[1]_i_9_n_5 ,\W_bmove_reg[1]_i_9_n_6 ,\W_bmove_reg[1]_i_9_n_7 }),
        .S({\W_bmove[1]_i_28_n_0 ,\W_bmove[1]_i_29_n_0 ,\W_bmove[1]_i_30_n_0 ,\W_bmove[1]_i_31_n_0 }));
  CARRY4 \W_bmove_reg[1]_i_91 
       (.CI(1'b0),
        .CO({\W_bmove_reg[1]_i_91_n_0 ,\W_bmove_reg[1]_i_91_n_1 ,\W_bmove_reg[1]_i_91_n_2 ,\W_bmove_reg[1]_i_91_n_3 }),
        .CYINIT(1'b1),
        .DI({\W_bmove_reg[1]_i_59_1 ,W_full_i_29_n_0}),
        .O(\NLW_W_bmove_reg[1]_i_91_O_UNCONNECTED [3:0]),
        .S({\W_bmove[1]_i_130_n_0 ,\W_bmove[1]_i_131_n_0 ,\W_bmove[1]_i_132_n_0 ,\W_bmove[1]_i_133_n_0 }));
  CARRY4 \W_bmove_reg[7]_i_4 
       (.CI(\W_bmove_reg[1]_i_9_n_0 ),
        .CO({\W_bmove_reg[7]_i_4_n_0 ,\W_bmove_reg[7]_i_4_n_1 ,\W_bmove_reg[7]_i_4_n_2 ,\W_bmove_reg[7]_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI(rx_addr_tail[7:4]),
        .O({\W_bmove_reg[7]_i_4_n_4 ,\W_bmove_reg[7]_i_4_n_5 ,\W_bmove_reg[7]_i_4_n_6 ,\W_bmove_reg[7]_i_4_n_7 }),
        .S({\W_bmove[7]_i_6_n_0 ,\W_bmove[7]_i_7_n_0 ,\W_bmove[7]_i_8_n_0 ,\W_bmove[7]_i_9_n_0 }));
  CARRY4 \W_bmove_reg[7]_i_5 
       (.CI(\W_bmove_reg[1]_i_10_n_0 ),
        .CO({\W_bmove_reg[7]_i_5_n_0 ,\W_bmove_reg[7]_i_5_n_1 ,\W_bmove_reg[7]_i_5_n_2 ,\W_bmove_reg[7]_i_5_n_3 }),
        .CYINIT(1'b0),
        .DI(\rx_addr_end_reg[31] [5:2]),
        .O({\W_bmove_reg[7]_i_5_n_4 ,\W_bmove_reg[7]_i_5_n_5 ,\W_bmove_reg[7]_i_5_n_6 ,\W_bmove_reg[7]_i_5_n_7 }),
        .S({\W_bmove[7]_i_10_n_0 ,\W_bmove[7]_i_11_n_0 ,\W_bmove[7]_i_12_n_0 ,\W_bmove[7]_i_13_n_0 }));
  LUT6 #(
    .INIT(64'hAAAABFFFAAAA8000)) 
    W_full_i_1
       (.I0(\u_dma_rx/W_full15_out ),
        .I1(W_full_i_3_n_0),
        .I2(W_full_i_4_n_0),
        .I3(W_full_i_5_n_0),
        .I4(W_full_reg_4),
        .I5(W_full_reg_5),
        .O(W_full_reg));
  LUT6 #(
    .INIT(64'h0000000000000023)) 
    W_full_i_10
       (.I0(W_full_reg_1[4]),
        .I1(W_full_reg_1[5]),
        .I2(W_full_reg_1[3]),
        .I3(W_full_i_28_n_0),
        .I4(W_full_i_29_n_0),
        .I5(W_full_i_30_n_0),
        .O(W_full_i_10_n_0));
  LUT6 #(
    .INIT(64'h3333311131113111)) 
    W_full_i_11
       (.I0(W_full_reg_0[4]),
        .I1(\u_dma_rx/get_rooms_return [17]),
        .I2(\W_bmove_reg[15]_i_24_n_7 ),
        .I3(\W_bmove_reg[1]_i_8_0 ),
        .I4(\W_bmove_reg[15]_i_26_n_7 ),
        .I5(\W_bmove_reg[1]_i_8_1 ),
        .O(W_full_i_11_n_0));
  LUT6 #(
    .INIT(64'h0000230000002323)) 
    W_full_i_12
       (.I0(W_full_reg_1[10]),
        .I1(W_full_reg_0[0]),
        .I2(W_full_reg_1[9]),
        .I3(W_full_reg_1[7]),
        .I4(W_full_reg_1[8]),
        .I5(W_full_reg_1[6]),
        .O(W_full_i_12_n_0));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    W_full_i_13
       (.I0(\W_bmove_reg[15]_i_31_n_4 ),
        .I1(\W_bmove_reg[15]_i_30_n_4 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(\u_dma_rx/get_rooms_return [27]));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    W_full_i_14
       (.I0(\W_bmove_reg[15]_i_29_n_6 ),
        .I1(\W_bmove_reg[15]_i_28_n_6 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(\u_dma_rx/get_rooms_return [29]));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    W_full_i_15
       (.I0(\W_bmove_reg[15]_i_29_n_7 ),
        .I1(\W_bmove_reg[15]_i_28_n_7 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(\u_dma_rx/get_rooms_return [28]));
  LUT6 #(
    .INIT(64'h0000230000002323)) 
    W_full_i_16
       (.I0(\u_dma_rx/get_rooms_return [25]),
        .I1(\u_dma_rx/get_rooms_return [26]),
        .I2(\u_dma_rx/get_rooms_return [24]),
        .I3(\u_dma_rx/get_rooms_return [22]),
        .I4(\u_dma_rx/get_rooms_return [23]),
        .I5(\u_dma_rx/get_rooms_return [21]),
        .O(W_full_i_16_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    W_full_i_17
       (.I0(\u_dma_rx/get_rooms_return [25]),
        .I1(\u_dma_rx/get_rooms_return [26]),
        .I2(\W_bmove[15]_i_14_n_0 ),
        .I3(\u_dma_rx/get_rooms_return [20]),
        .O(W_full_i_17_n_0));
  LUT5 #(
    .INIT(32'h00000004)) 
    W_full_i_18
       (.I0(\W_bmove[15]_i_23_n_0 ),
        .I1(W_full_i_5_0[0]),
        .I2(W_full_i_5_0[2]),
        .I3(\W_bmove[15]_i_33_n_0 ),
        .I4(\W_bmove[15]_i_13_n_0 ),
        .O(W_full_i_18_n_0));
  LUT6 #(
    .INIT(64'hAEAAAAAAAAAAAAAA)) 
    W_full_i_2
       (.I0(W_full_i_6_n_0),
        .I1(\u_dma_rx/W_full00_out ),
        .I2(W_full_i_5_0[0]),
        .I3(W_full_i_5_0[1]),
        .I4(conf_rx_en),
        .I5(\rx_addr_end_reg[30] ),
        .O(\u_dma_rx/W_full15_out ));
  LUT4 #(
    .INIT(16'h9009)) 
    W_full_i_21
       (.I0(rx_addr_start[31]),
        .I1(rx_addr_tail[31]),
        .I2(rx_addr_start[30]),
        .I3(rx_addr_tail[30]),
        .O(W_full_i_21_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    W_full_i_22
       (.I0(rx_addr_start[27]),
        .I1(rx_addr_tail[27]),
        .I2(rx_addr_start[29]),
        .I3(rx_addr_tail[29]),
        .I4(rx_addr_tail[28]),
        .I5(rx_addr_start[28]),
        .O(W_full_i_22_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    W_full_i_23
       (.I0(rx_addr_start[25]),
        .I1(rx_addr_tail[25]),
        .I2(rx_addr_start[24]),
        .I3(rx_addr_tail[24]),
        .I4(rx_addr_tail[26]),
        .I5(rx_addr_start[26]),
        .O(W_full_i_23_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    W_full_i_26
       (.I0(rx_addr_tail[27]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [27]),
        .I2(rx_addr_tail[28]),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [28]),
        .I4(\DMA_ADDR_HEAD_reg[31]_P [29]),
        .I5(rx_addr_tail[29]),
        .O(W_full_i_26_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    W_full_i_27
       (.I0(rx_addr_tail[24]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [24]),
        .I2(rx_addr_tail[25]),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [25]),
        .I4(\DMA_ADDR_HEAD_reg[31]_P [26]),
        .I5(rx_addr_tail[26]),
        .O(W_full_i_27_n_0));
  LUT6 #(
    .INIT(64'hFFFFF0A0FCECF0A0)) 
    W_full_i_28
       (.I0(\W_bmove_reg[15]_i_53_n_6 ),
        .I1(\W_bmove_reg[15]_i_52_n_6 ),
        .I2(\W_bmove_reg[1]_i_8_1 ),
        .I3(\W_bmove_reg[15]_i_53_n_5 ),
        .I4(\W_bmove_reg[1]_i_8_0 ),
        .I5(\W_bmove_reg[15]_i_52_n_5 ),
        .O(W_full_i_28_n_0));
  LUT6 #(
    .INIT(64'hFFFFF0A0FCECF0A0)) 
    W_full_i_29
       (.I0(\W_bmove_reg[1]_i_10_n_6 ),
        .I1(\W_bmove_reg[1]_i_9_n_6 ),
        .I2(\W_bmove_reg[1]_i_8_1 ),
        .I3(\W_bmove_reg[1]_i_10_n_7 ),
        .I4(\W_bmove_reg[1]_i_8_0 ),
        .I5(\W_bmove_reg[1]_i_9_n_7 ),
        .O(W_full_i_29_n_0));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    W_full_i_3
       (.I0(W_full_i_8_n_0),
        .I1(W_full_reg_1[2]),
        .I2(W_full_reg_i_9_n_1),
        .I3(W_full_reg_1[4]),
        .I4(W_full_reg_1[5]),
        .I5(W_full_i_10_n_0),
        .O(W_full_i_3_n_0));
  LUT6 #(
    .INIT(64'hFFFFF0A0FCECF0A0)) 
    W_full_i_30
       (.I0(\W_bmove_reg[15]_i_26_n_6 ),
        .I1(\W_bmove_reg[15]_i_24_n_6 ),
        .I2(\W_bmove_reg[1]_i_8_1 ),
        .I3(\W_bmove_reg[15]_i_26_n_7 ),
        .I4(\W_bmove_reg[1]_i_8_0 ),
        .I5(\W_bmove_reg[15]_i_24_n_7 ),
        .O(W_full_i_30_n_0));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    W_full_i_31
       (.I0(\W_bmove_reg[15]_i_24_n_6 ),
        .I1(\W_bmove_reg[15]_i_26_n_6 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(\u_dma_rx/get_rooms_return [17]));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    W_full_i_32
       (.I0(\W_bmove_reg[15]_i_31_n_6 ),
        .I1(\W_bmove_reg[15]_i_30_n_6 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(\u_dma_rx/get_rooms_return [25]));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    W_full_i_33
       (.I0(\W_bmove_reg[15]_i_31_n_5 ),
        .I1(\W_bmove_reg[15]_i_30_n_5 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(\u_dma_rx/get_rooms_return [26]));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    W_full_i_34
       (.I0(\W_bmove_reg[15]_i_31_n_7 ),
        .I1(\W_bmove_reg[15]_i_30_n_7 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(\u_dma_rx/get_rooms_return [24]));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    W_full_i_35
       (.I0(\W_bmove_reg[15]_i_75_n_5 ),
        .I1(\W_bmove_reg[15]_i_70_n_5 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(\u_dma_rx/get_rooms_return [22]));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    W_full_i_36
       (.I0(\W_bmove_reg[15]_i_75_n_4 ),
        .I1(\W_bmove_reg[15]_i_70_n_4 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(\u_dma_rx/get_rooms_return [23]));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    W_full_i_37
       (.I0(\W_bmove_reg[15]_i_75_n_6 ),
        .I1(\W_bmove_reg[15]_i_70_n_6 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(\u_dma_rx/get_rooms_return [21]));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    W_full_i_38
       (.I0(\W_bmove_reg[15]_i_75_n_7 ),
        .I1(\W_bmove_reg[15]_i_70_n_7 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(\u_dma_rx/get_rooms_return [20]));
  LUT5 #(
    .INIT(32'h31000000)) 
    W_full_i_4
       (.I0(W_full_reg_0[1]),
        .I1(W_full_reg_0[3]),
        .I2(W_full_reg_0[2]),
        .I3(W_full_i_11_n_0),
        .I4(W_full_i_12_n_0),
        .O(W_full_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    W_full_i_40
       (.I0(rx_addr_tail[30]),
        .I1(W_addr2[30]),
        .I2(rx_addr_tail[31]),
        .I3(W_addr2[31]),
        .O(W_full_i_40_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    W_full_i_41
       (.I0(rx_addr_tail[27]),
        .I1(W_addr2[27]),
        .I2(rx_addr_tail[28]),
        .I3(W_addr2[28]),
        .I4(W_addr2[29]),
        .I5(rx_addr_tail[29]),
        .O(W_full_i_41_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    W_full_i_42
       (.I0(rx_addr_tail[24]),
        .I1(W_addr2[24]),
        .I2(rx_addr_tail[25]),
        .I3(W_addr2[25]),
        .I4(W_addr2[26]),
        .I5(rx_addr_tail[26]),
        .O(W_full_i_42_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    W_full_i_44
       (.I0(rx_addr_start[21]),
        .I1(rx_addr_tail[21]),
        .I2(rx_addr_start[23]),
        .I3(rx_addr_tail[23]),
        .I4(rx_addr_tail[22]),
        .I5(rx_addr_start[22]),
        .O(W_full_i_44_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    W_full_i_45
       (.I0(rx_addr_start[19]),
        .I1(rx_addr_tail[19]),
        .I2(rx_addr_start[18]),
        .I3(rx_addr_tail[18]),
        .I4(rx_addr_tail[20]),
        .I5(rx_addr_start[20]),
        .O(W_full_i_45_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    W_full_i_46
       (.I0(rx_addr_start[15]),
        .I1(rx_addr_tail[15]),
        .I2(rx_addr_start[17]),
        .I3(rx_addr_tail[17]),
        .I4(rx_addr_tail[16]),
        .I5(rx_addr_start[16]),
        .O(W_full_i_46_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    W_full_i_47
       (.I0(rx_addr_start[13]),
        .I1(rx_addr_tail[13]),
        .I2(rx_addr_start[12]),
        .I3(rx_addr_tail[12]),
        .I4(rx_addr_tail[14]),
        .I5(rx_addr_start[14]),
        .O(W_full_i_47_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    W_full_i_49
       (.I0(rx_addr_tail[21]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [21]),
        .I2(rx_addr_tail[22]),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [22]),
        .I4(\DMA_ADDR_HEAD_reg[31]_P [23]),
        .I5(rx_addr_tail[23]),
        .O(W_full_i_49_n_0));
  LUT6 #(
    .INIT(64'h3100000000000000)) 
    W_full_i_5
       (.I0(\u_dma_rx/get_rooms_return [27]),
        .I1(\u_dma_rx/get_rooms_return [29]),
        .I2(\u_dma_rx/get_rooms_return [28]),
        .I3(W_full_i_16_n_0),
        .I4(W_full_i_17_n_0),
        .I5(W_full_i_18_n_0),
        .O(W_full_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    W_full_i_50
       (.I0(rx_addr_tail[18]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [18]),
        .I2(rx_addr_tail[19]),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [19]),
        .I4(\DMA_ADDR_HEAD_reg[31]_P [20]),
        .I5(rx_addr_tail[20]),
        .O(W_full_i_50_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    W_full_i_51
       (.I0(rx_addr_tail[15]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [15]),
        .I2(rx_addr_tail[16]),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [16]),
        .I4(\DMA_ADDR_HEAD_reg[31]_P [17]),
        .I5(rx_addr_tail[17]),
        .O(W_full_i_51_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    W_full_i_52
       (.I0(rx_addr_tail[12]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [12]),
        .I2(rx_addr_tail[13]),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [13]),
        .I4(\DMA_ADDR_HEAD_reg[31]_P [14]),
        .I5(rx_addr_tail[14]),
        .O(W_full_i_52_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    W_full_i_54
       (.I0(rx_addr_tail[21]),
        .I1(W_addr2[21]),
        .I2(rx_addr_tail[22]),
        .I3(W_addr2[22]),
        .I4(W_addr2[23]),
        .I5(rx_addr_tail[23]),
        .O(W_full_i_54_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    W_full_i_55
       (.I0(rx_addr_tail[18]),
        .I1(W_addr2[18]),
        .I2(rx_addr_tail[19]),
        .I3(W_addr2[19]),
        .I4(W_addr2[20]),
        .I5(rx_addr_tail[20]),
        .O(W_full_i_55_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    W_full_i_56
       (.I0(rx_addr_tail[15]),
        .I1(W_addr2[15]),
        .I2(rx_addr_tail[16]),
        .I3(W_addr2[16]),
        .I4(W_addr2[17]),
        .I5(rx_addr_tail[17]),
        .O(W_full_i_56_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    W_full_i_57
       (.I0(rx_addr_tail[12]),
        .I1(W_addr2[12]),
        .I2(rx_addr_tail[13]),
        .I3(W_addr2[13]),
        .I4(W_addr2[14]),
        .I5(rx_addr_tail[14]),
        .O(W_full_i_57_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    W_full_i_58
       (.I0(rx_addr_start[9]),
        .I1(rx_addr_tail[9]),
        .I2(rx_addr_start[11]),
        .I3(rx_addr_tail[11]),
        .I4(rx_addr_tail[10]),
        .I5(rx_addr_start[10]),
        .O(W_full_i_58_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    W_full_i_59
       (.I0(rx_addr_start[7]),
        .I1(rx_addr_tail[7]),
        .I2(rx_addr_start[6]),
        .I3(rx_addr_tail[6]),
        .I4(rx_addr_tail[8]),
        .I5(rx_addr_start[8]),
        .O(W_full_i_59_n_0));
  LUT6 #(
    .INIT(64'h0000000020F02000)) 
    W_full_i_6
       (.I0(\u_dma_rx/W_full0 ),
        .I1(\rx_addr_end_reg[30] ),
        .I2(conf_rx_en),
        .I3(W_full_i_5_0[1]),
        .I4(rx_addr_full),
        .I5(W_full_i_5_0[0]),
        .O(W_full_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    W_full_i_60
       (.I0(rx_addr_start[3]),
        .I1(rx_addr_tail[3]),
        .I2(rx_addr_start[5]),
        .I3(rx_addr_tail[5]),
        .I4(rx_addr_tail[4]),
        .I5(rx_addr_start[4]),
        .O(W_full_i_60_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    W_full_i_61
       (.I0(rx_addr_start[1]),
        .I1(rx_addr_tail[1]),
        .I2(rx_addr_start[0]),
        .I3(rx_addr_tail[0]),
        .I4(rx_addr_tail[2]),
        .I5(rx_addr_start[2]),
        .O(W_full_i_61_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    W_full_i_62
       (.I0(rx_addr_tail[9]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [9]),
        .I2(rx_addr_tail[10]),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [10]),
        .I4(\DMA_ADDR_HEAD_reg[31]_P [11]),
        .I5(rx_addr_tail[11]),
        .O(W_full_i_62_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    W_full_i_63
       (.I0(rx_addr_tail[6]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [6]),
        .I2(rx_addr_tail[7]),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [7]),
        .I4(\DMA_ADDR_HEAD_reg[31]_P [8]),
        .I5(rx_addr_tail[8]),
        .O(W_full_i_63_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    W_full_i_64
       (.I0(rx_addr_tail[3]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [3]),
        .I2(rx_addr_tail[4]),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [4]),
        .I4(\DMA_ADDR_HEAD_reg[31]_P [5]),
        .I5(rx_addr_tail[5]),
        .O(W_full_i_64_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    W_full_i_65
       (.I0(rx_addr_tail[0]),
        .I1(\DMA_ADDR_HEAD_reg[31]_P [0]),
        .I2(rx_addr_tail[1]),
        .I3(\DMA_ADDR_HEAD_reg[31]_P [1]),
        .I4(\DMA_ADDR_HEAD_reg[31]_P [2]),
        .I5(rx_addr_tail[2]),
        .O(W_full_i_65_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    W_full_i_66
       (.I0(rx_addr_tail[9]),
        .I1(W_addr2[9]),
        .I2(rx_addr_tail[10]),
        .I3(W_addr2[10]),
        .I4(W_addr2[11]),
        .I5(rx_addr_tail[11]),
        .O(W_full_i_66_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    W_full_i_67
       (.I0(rx_addr_tail[6]),
        .I1(W_addr2[6]),
        .I2(rx_addr_tail[7]),
        .I3(W_addr2[7]),
        .I4(W_addr2[8]),
        .I5(rx_addr_tail[8]),
        .O(W_full_i_67_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    W_full_i_68
       (.I0(rx_addr_tail[3]),
        .I1(W_addr2[3]),
        .I2(rx_addr_tail[4]),
        .I3(W_addr2[4]),
        .I4(W_addr2[5]),
        .I5(rx_addr_tail[5]),
        .O(W_full_i_68_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    W_full_i_69
       (.I0(rx_addr_tail[0]),
        .I1(W_addr2[0]),
        .I2(rx_addr_tail[1]),
        .I3(W_addr2[1]),
        .I4(W_addr2[2]),
        .I5(rx_addr_tail[2]),
        .O(W_full_i_69_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    W_full_i_8
       (.I0(W_full_reg_1[10]),
        .I1(W_full_reg_0[0]),
        .I2(W_full_reg_1[8]),
        .I3(W_full_reg_1[7]),
        .O(W_full_i_8_n_0));
  CARRY4 W_full_reg_i_19
       (.CI(W_full_reg_i_39_n_0),
        .CO({NLW_W_full_reg_i_19_CO_UNCONNECTED[3],\u_dma_rx/W_full0 ,W_full_reg_i_19_n_2,W_full_reg_i_19_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_W_full_reg_i_19_O_UNCONNECTED[3:0]),
        .S({1'b0,W_full_i_40_n_0,W_full_i_41_n_0,W_full_i_42_n_0}));
  CARRY4 W_full_reg_i_20
       (.CI(W_full_reg_i_43_n_0),
        .CO({W_full_reg_i_20_n_0,W_full_reg_i_20_n_1,W_full_reg_i_20_n_2,W_full_reg_i_20_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_W_full_reg_i_20_O_UNCONNECTED[3:0]),
        .S({W_full_i_44_n_0,W_full_i_45_n_0,W_full_i_46_n_0,W_full_i_47_n_0}));
  CARRY4 W_full_reg_i_24
       (.CI(W_full_reg_i_48_n_0),
        .CO({W_full_reg_i_24_n_0,W_full_reg_i_24_n_1,W_full_reg_i_24_n_2,W_full_reg_i_24_n_3}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_W_full_reg_i_24_O_UNCONNECTED[3:0]),
        .S({W_full_i_49_n_0,W_full_i_50_n_0,W_full_i_51_n_0,W_full_i_52_n_0}));
  CARRY4 W_full_reg_i_39
       (.CI(W_full_reg_i_53_n_0),
        .CO({W_full_reg_i_39_n_0,W_full_reg_i_39_n_1,W_full_reg_i_39_n_2,W_full_reg_i_39_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_W_full_reg_i_39_O_UNCONNECTED[3:0]),
        .S({W_full_i_54_n_0,W_full_i_55_n_0,W_full_i_56_n_0,W_full_i_57_n_0}));
  CARRY4 W_full_reg_i_43
       (.CI(1'b0),
        .CO({W_full_reg_i_43_n_0,W_full_reg_i_43_n_1,W_full_reg_i_43_n_2,W_full_reg_i_43_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_W_full_reg_i_43_O_UNCONNECTED[3:0]),
        .S({W_full_i_58_n_0,W_full_i_59_n_0,W_full_i_60_n_0,W_full_i_61_n_0}));
  CARRY4 W_full_reg_i_48
       (.CI(1'b0),
        .CO({W_full_reg_i_48_n_0,W_full_reg_i_48_n_1,W_full_reg_i_48_n_2,W_full_reg_i_48_n_3}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_W_full_reg_i_48_O_UNCONNECTED[3:0]),
        .S({W_full_i_62_n_0,W_full_i_63_n_0,W_full_i_64_n_0,W_full_i_65_n_0}));
  CARRY4 W_full_reg_i_53
       (.CI(1'b0),
        .CO({W_full_reg_i_53_n_0,W_full_reg_i_53_n_1,W_full_reg_i_53_n_2,W_full_reg_i_53_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_W_full_reg_i_53_O_UNCONNECTED[3:0]),
        .S({W_full_i_66_n_0,W_full_i_67_n_0,W_full_i_68_n_0,W_full_i_69_n_0}));
  CARRY4 W_full_reg_i_7
       (.CI(W_full_reg_i_20_n_0),
        .CO({NLW_W_full_reg_i_7_CO_UNCONNECTED[3],\u_dma_rx/W_full00_out ,W_full_reg_i_7_n_2,W_full_reg_i_7_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_W_full_reg_i_7_O_UNCONNECTED[3:0]),
        .S({1'b0,W_full_i_21_n_0,W_full_i_22_n_0,W_full_i_23_n_0}));
  CARRY4 W_full_reg_i_9
       (.CI(W_full_reg_i_24_n_0),
        .CO({NLW_W_full_reg_i_9_CO_UNCONNECTED[3],W_full_reg_i_9_n_1,W_full_reg_i_9_n_2,W_full_reg_i_9_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O(NLW_W_full_reg_i_9_O_UNCONNECTED[3:0]),
        .S({1'b0,W_full_i_3_0,W_full_i_26_n_0,W_full_i_27_n_0}));
  LUT6 #(
    .INIT(64'hFBFBFBFBFBFBFBBB)) 
    W_go_i_5
       (.I0(W_go_reg),
        .I1(conf_rx_en),
        .I2(W_go_reg_0),
        .I3(\W_bmove[15]_i_17_n_0 ),
        .I4(W_go_i_8_n_0),
        .I5(\W_bmove[15]_i_12_n_0 ),
        .O(conf_rx_en_reg_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    W_go_i_8
       (.I0(\W_bmove[15]_i_13_n_0 ),
        .I1(\W_bmove[15]_i_14_n_0 ),
        .I2(\W_bmove[15]_i_15_n_0 ),
        .I3(\W_bmove[15]_i_16_n_0 ),
        .O(W_go_i_8_n_0));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    \W_len[2]_i_10 
       (.I0(\W_bmove_reg[1]_i_9_n_4 ),
        .I1(\W_bmove_reg[1]_i_10_n_4 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(\W_len[2]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    \W_len[2]_i_11 
       (.I0(\W_bmove_reg[1]_i_9_n_5 ),
        .I1(\W_bmove_reg[1]_i_10_n_5 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(\W_len[2]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'h44EF54FF)) 
    \W_len[2]_i_12 
       (.I0(W_empty),
        .I1(W_full_reg_5),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(\W_bmove_reg[1]_i_10_n_6 ),
        .I4(\W_bmove_reg[1]_i_9_n_6 ),
        .O(\W_len[2]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    \W_len[2]_i_8 
       (.I0(\W_bmove_reg[1]_i_9_n_6 ),
        .I1(\W_bmove_reg[1]_i_10_n_6 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(\W_len[2]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    \W_len[2]_i_9 
       (.I0(\W_bmove_reg[7]_i_4_n_7 ),
        .I1(\W_bmove_reg[7]_i_5_n_7 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(\W_len[2]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    \W_len[6]_i_6 
       (.I0(\W_bmove_reg[11]_i_4_n_7 ),
        .I1(\W_bmove_reg[11]_i_5_n_7 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(\W_len[6]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    \W_len[6]_i_7 
       (.I0(\W_bmove_reg[7]_i_4_n_4 ),
        .I1(\W_bmove_reg[7]_i_5_n_4 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(\W_len[6]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    \W_len[6]_i_8 
       (.I0(\W_bmove_reg[7]_i_4_n_5 ),
        .I1(\W_bmove_reg[7]_i_5_n_5 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(\W_len[6]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    \W_len[6]_i_9 
       (.I0(\W_bmove_reg[7]_i_4_n_6 ),
        .I1(\W_bmove_reg[7]_i_5_n_6 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(\W_len[6]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    \W_len[8]_i_6 
       (.I0(\W_bmove_reg[11]_i_4_n_5 ),
        .I1(\W_bmove_reg[11]_i_5_n_5 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(\W_len[8]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hCCCC00AC)) 
    \W_len[8]_i_7 
       (.I0(\W_bmove_reg[11]_i_4_n_6 ),
        .I1(\W_bmove_reg[11]_i_5_n_6 ),
        .I2(\rx_addr_tail_reg[31] ),
        .I3(W_full_reg_5),
        .I4(W_empty),
        .O(\W_len[8]_i_7_n_0 ));
  CARRY4 \W_len_reg[2]_i_6 
       (.CI(1'b0),
        .CO({\W_len_reg[2]_i_6_n_0 ,\W_len_reg[2]_i_6_n_1 ,\W_len_reg[2]_i_6_n_2 ,\W_len_reg[2]_i_6_n_3 }),
        .CYINIT(W_full_reg_1[0]),
        .DI({1'b0,1'b0,1'b0,\W_len[2]_i_8_n_0 }),
        .O({O,\NLW_W_len_reg[2]_i_6_O_UNCONNECTED [0]}),
        .S({\W_len[2]_i_9_n_0 ,\W_len[2]_i_10_n_0 ,\W_len[2]_i_11_n_0 ,\W_len[2]_i_12_n_0 }));
  CARRY4 \W_len_reg[6]_i_5 
       (.CI(\W_len_reg[2]_i_6_n_0 ),
        .CO({\W_len_reg[6]_i_5_n_0 ,\W_len_reg[6]_i_5_n_1 ,\W_len_reg[6]_i_5_n_2 ,\W_len_reg[6]_i_5_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(W_full_reg_2),
        .S({\W_len[6]_i_6_n_0 ,\W_len[6]_i_7_n_0 ,\W_len[6]_i_8_n_0 ,\W_len[6]_i_9_n_0 }));
  CARRY4 \W_len_reg[8]_i_5 
       (.CI(\W_len_reg[6]_i_5_n_0 ),
        .CO({\NLW_W_len_reg[8]_i_5_CO_UNCONNECTED [3:1],\W_len_reg[8]_i_5_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_W_len_reg[8]_i_5_O_UNCONNECTED [3:2],W_full_reg_3}),
        .S({1'b0,1'b0,\W_len[8]_i_6_n_0 ,\W_len[8]_i_7_n_0 }));
  CARRY4 addrR1_carry
       (.CI(1'b0),
        .CO({addrR1_carry_n_0,addrR1_carry_n_1,addrR1_carry_n_2,addrR1_carry_n_3}),
        .CYINIT(1'b1),
        .DI({addrR1_carry_i_1_n_0,addrR1_carry_i_2_n_0,addrR1_carry_i_3_n_0,addrR1_carry_i_4_n_0}),
        .O(NLW_addrR1_carry_O_UNCONNECTED[3:0]),
        .S({addrR1_carry_i_5_n_0,addrR1_carry_i_6_n_0,addrR1_carry_i_7_n_0,addrR1_carry_i_8_n_0}));
  LUT4 #(
    .INIT(16'h2F02)) 
    addrR1_carry_i_1
       (.I0(\beatR_reg_n_0_[6] ),
        .I1(ARLEN_reg[6]),
        .I2(ARLEN_reg[7]),
        .I3(\beatR_reg_n_0_[7] ),
        .O(addrR1_carry_i_1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    addrR1_carry_i_2
       (.I0(\beatR_reg_n_0_[4] ),
        .I1(ARLEN_reg[4]),
        .I2(ARLEN_reg[5]),
        .I3(\beatR_reg_n_0_[5] ),
        .O(addrR1_carry_i_2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    addrR1_carry_i_3
       (.I0(\beatR_reg_n_0_[2] ),
        .I1(ARLEN_reg[2]),
        .I2(ARLEN_reg[3]),
        .I3(\beatR_reg_n_0_[3] ),
        .O(addrR1_carry_i_3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    addrR1_carry_i_4
       (.I0(\beatR_reg_n_0_[0] ),
        .I1(ARLEN_reg[0]),
        .I2(ARLEN_reg[1]),
        .I3(\beatR_reg_n_0_[1] ),
        .O(addrR1_carry_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    addrR1_carry_i_5
       (.I0(ARLEN_reg[7]),
        .I1(\beatR_reg_n_0_[7] ),
        .I2(ARLEN_reg[6]),
        .I3(\beatR_reg_n_0_[6] ),
        .O(addrR1_carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    addrR1_carry_i_6
       (.I0(ARLEN_reg[5]),
        .I1(\beatR_reg_n_0_[5] ),
        .I2(ARLEN_reg[4]),
        .I3(\beatR_reg_n_0_[4] ),
        .O(addrR1_carry_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    addrR1_carry_i_7
       (.I0(ARLEN_reg[3]),
        .I1(\beatR_reg_n_0_[3] ),
        .I2(ARLEN_reg[2]),
        .I3(\beatR_reg_n_0_[2] ),
        .O(addrR1_carry_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    addrR1_carry_i_8
       (.I0(ARLEN_reg[1]),
        .I1(\beatR_reg_n_0_[1] ),
        .I2(ARLEN_reg[0]),
        .I3(\beatR_reg_n_0_[0] ),
        .O(addrR1_carry_i_8_n_0));
  LUT6 #(
    .INIT(64'hFFFE000200020002)) 
    \addrR[0]_i_1 
       (.I0(get_next_addr_rd_return[0]),
        .I1(stateR[0]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(get_next_addr_rd01_carry_n_1),
        .I5(get_next_addr_rd00[0]),
        .O(\addrR[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF088F0F0)) 
    \addrR[0]_i_2 
       (.I0(get_next_addr_rd1_carry_n_1),
        .I1(get_next_addr_rd0[0]),
        .I2(S_ARADDR[0]),
        .I3(S_ARBURST[1]),
        .I4(S_ARBURST[0]),
        .O(get_next_addr_rd_return[0]));
  LUT6 #(
    .INIT(64'hFFFE000200020002)) 
    \addrR[1]_i_1 
       (.I0(get_next_addr_rd_return[1]),
        .I1(stateR[0]),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(get_next_addr_rd01_carry_n_1),
        .I5(get_next_addr_rd00[1]),
        .O(\addrR[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT5 #(
    .INIT(32'hF088F0F0)) 
    \addrR[1]_i_2 
       (.I0(get_next_addr_rd1_carry_n_1),
        .I1(get_next_addr_rd0[1]),
        .I2(S_ARADDR[1]),
        .I3(S_ARBURST[1]),
        .I4(S_ARBURST[0]),
        .O(get_next_addr_rd_return[1]));
  LUT6 #(
    .INIT(64'hEFA0A0A0EFA0EFEF)) 
    \addrR[2]_i_1 
       (.I0(\addrR[2]_i_2_n_0 ),
        .I1(stateR[0]),
        .I2(\beatR[4]_i_2_n_0 ),
        .I3(get_next_addr_rd00[2]),
        .I4(get_next_addr_rd01_carry_n_1),
        .I5(\addrR_reg_n_0_[2] ),
        .O(\addrR[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAAA0000E626)) 
    \addrR[2]_i_2 
       (.I0(S_ARADDR[2]),
        .I1(S_ARBURST[0]),
        .I2(get_next_addr_rd1_carry_n_1),
        .I3(get_next_addr_rd0[2]),
        .I4(stateR[0]),
        .I5(S_ARBURST[1]),
        .O(\addrR[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF606FFFFF6060000)) 
    \addrR[3]_i_1 
       (.I0(\addrR_reg_n_0_[3] ),
        .I1(\addrR_reg_n_0_[2] ),
        .I2(get_next_addr_rd01_carry_n_1),
        .I3(get_next_addr_rd00[3]),
        .I4(\addrR[7]_i_7_n_0 ),
        .I5(get_next_addr_rd_return[3]),
        .O(\addrR[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF4F4B4F0B0B0B4F0)) 
    \addrR[3]_i_2 
       (.I0(S_ARBURST[1]),
        .I1(S_ARBURST[0]),
        .I2(S_ARADDR[3]),
        .I3(S_ARADDR[2]),
        .I4(get_next_addr_rd1_carry_n_1),
        .I5(get_next_addr_rd0[3]),
        .O(get_next_addr_rd_return[3]));
  LUT6 #(
    .INIT(64'hDDDD9CCC88889CCC)) 
    \addrR[4]_i_2 
       (.I0(\addrR[7]_i_12_n_0 ),
        .I1(S_ARADDR[4]),
        .I2(S_ARADDR[2]),
        .I3(S_ARADDR[3]),
        .I4(get_next_addr_rd1_carry_n_1),
        .I5(get_next_addr_rd0[4]),
        .O(get_next_addr_rd_return[4]));
  LUT5 #(
    .INIT(32'hFF6A006A)) 
    \addrR[4]_i_3 
       (.I0(\addrR_reg_n_0_[4] ),
        .I1(\addrR_reg_n_0_[2] ),
        .I2(\addrR_reg_n_0_[3] ),
        .I3(get_next_addr_rd01_carry_n_1),
        .I4(get_next_addr_rd00[4]),
        .O(get_next_addr_rd3[4]));
  LUT6 #(
    .INIT(64'hF4F4B4F0B0B0B4F0)) 
    \addrR[5]_i_2 
       (.I0(S_ARBURST[1]),
        .I1(S_ARBURST[0]),
        .I2(S_ARADDR[5]),
        .I3(\addrR[5]_i_4_n_0 ),
        .I4(get_next_addr_rd1_carry_n_1),
        .I5(get_next_addr_rd0[5]),
        .O(get_next_addr_rd_return[5]));
  LUT6 #(
    .INIT(64'hFFFF6AAA00006AAA)) 
    \addrR[5]_i_3 
       (.I0(\addrR_reg_n_0_[5] ),
        .I1(\addrR_reg_n_0_[3] ),
        .I2(\addrR_reg_n_0_[2] ),
        .I3(\addrR_reg_n_0_[4] ),
        .I4(get_next_addr_rd01_carry_n_1),
        .I5(get_next_addr_rd00[5]),
        .O(get_next_addr_rd3[5]));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \addrR[5]_i_4 
       (.I0(S_ARADDR[3]),
        .I1(S_ARADDR[2]),
        .I2(S_ARADDR[4]),
        .O(\addrR[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hF606FFFFF6060000)) 
    \addrR[6]_i_1 
       (.I0(\addrR_reg_n_0_[6] ),
        .I1(\addrR[6]_i_2_n_0 ),
        .I2(get_next_addr_rd01_carry_n_1),
        .I3(get_next_addr_rd00[6]),
        .I4(\addrR[7]_i_7_n_0 ),
        .I5(get_next_addr_rd_return[6]),
        .O(\addrR[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \addrR[6]_i_2 
       (.I0(\addrR_reg_n_0_[5] ),
        .I1(\addrR_reg_n_0_[3] ),
        .I2(\addrR_reg_n_0_[2] ),
        .I3(\addrR_reg_n_0_[4] ),
        .O(\addrR[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF4F4B4F0B0B0B4F0)) 
    \addrR[6]_i_3 
       (.I0(S_ARBURST[1]),
        .I1(S_ARBURST[0]),
        .I2(S_ARADDR[6]),
        .I3(\addrR[7]_i_13_n_0 ),
        .I4(get_next_addr_rd1_carry_n_1),
        .I5(get_next_addr_rd0[6]),
        .O(get_next_addr_rd_return[6]));
  LUT6 #(
    .INIT(64'hFCCCEEEECCCCEEEE)) 
    \addrR[7]_i_1 
       (.I0(\addrR[7]_i_3_n_0 ),
        .I1(\addrR[7]_i_4_n_0 ),
        .I2(\addrR[7]_i_5_n_0 ),
        .I3(stateR[2]),
        .I4(stateR[0]),
        .I5(\addrR[7]_i_6_n_0 ),
        .O(addrR));
  LUT2 #(
    .INIT(4'hB)) 
    \addrR[7]_i_10 
       (.I0(addrR1_carry_n_0),
        .I1(S_RREADY),
        .O(\addrR[7]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \addrR[7]_i_11 
       (.I0(ARBURST_reg[1]),
        .I1(ARBURST_reg[0]),
        .O(\addrR[7]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \addrR[7]_i_12 
       (.I0(S_ARBURST[1]),
        .I1(S_ARBURST[0]),
        .O(\addrR[7]_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \addrR[7]_i_13 
       (.I0(S_ARADDR[5]),
        .I1(S_ARADDR[3]),
        .I2(S_ARADDR[2]),
        .I3(S_ARADDR[4]),
        .O(\addrR[7]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h00F00000000030AA)) 
    \addrR[7]_i_3 
       (.I0(ARLEN_reg0__0),
        .I1(\addrR[7]_i_10_n_0 ),
        .I2(\addrR[7]_i_11_n_0 ),
        .I3(stateR[3]),
        .I4(stateR[1]),
        .I5(stateR[2]),
        .O(\addrR[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000200000000)) 
    \addrR[7]_i_4 
       (.I0(ARBURST_reg[0]),
        .I1(ARBURST_reg[1]),
        .I2(stateR[3]),
        .I3(stateR[2]),
        .I4(\beatR[7]_i_5_n_0 ),
        .I5(\beatR[7]_i_4_n_0 ),
        .O(\addrR[7]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT4 #(
    .INIT(16'h0040)) 
    \addrR[7]_i_5 
       (.I0(ARBURST_reg[1]),
        .I1(ARBURST_reg[0]),
        .I2(S_RREADY),
        .I3(addrR1_carry_n_0),
        .O(\addrR[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \addrR[7]_i_6 
       (.I0(stateR[1]),
        .I1(stateR[3]),
        .O(\addrR[7]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \addrR[7]_i_7 
       (.I0(stateR[0]),
        .I1(stateR[3]),
        .I2(stateR[1]),
        .O(\addrR[7]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hDDDD9CCC88889CCC)) 
    \addrR[7]_i_8 
       (.I0(\addrR[7]_i_12_n_0 ),
        .I1(S_ARADDR[7]),
        .I2(\addrR[7]_i_13_n_0 ),
        .I3(S_ARADDR[6]),
        .I4(get_next_addr_rd1_carry_n_1),
        .I5(get_next_addr_rd0[7]),
        .O(get_next_addr_rd_return[7]));
  LUT5 #(
    .INIT(32'hFF6A006A)) 
    \addrR[7]_i_9 
       (.I0(\addrR_reg_n_0_[7] ),
        .I1(\addrR[6]_i_2_n_0 ),
        .I2(\addrR_reg_n_0_[6] ),
        .I3(get_next_addr_rd01_carry_n_1),
        .I4(get_next_addr_rd00[7]),
        .O(get_next_addr_rd3[7]));
  FDCE \addrR_reg[0] 
       (.C(ACLK),
        .CE(addrR),
        .CLR(S_ARREADY_i_2_n_0),
        .D(\addrR[0]_i_1_n_0 ),
        .Q(\addrR_reg_n_0_[0] ));
  FDCE \addrR_reg[1] 
       (.C(ACLK),
        .CE(addrR),
        .CLR(S_ARREADY_i_2_n_0),
        .D(\addrR[1]_i_1_n_0 ),
        .Q(\addrR_reg_n_0_[1] ));
  FDCE \addrR_reg[2] 
       (.C(ACLK),
        .CE(addrR),
        .CLR(S_ARREADY_i_2_n_0),
        .D(\addrR[2]_i_1_n_0 ),
        .Q(\addrR_reg_n_0_[2] ));
  FDCE \addrR_reg[3] 
       (.C(ACLK),
        .CE(addrR),
        .CLR(S_ARREADY_i_2_n_0),
        .D(\addrR[3]_i_1_n_0 ),
        .Q(\addrR_reg_n_0_[3] ));
  FDCE \addrR_reg[4] 
       (.C(ACLK),
        .CE(addrR),
        .CLR(S_ARREADY_i_2_n_0),
        .D(\addrR_reg[4]_i_1_n_0 ),
        .Q(\addrR_reg_n_0_[4] ));
  MUXF7 \addrR_reg[4]_i_1 
       (.I0(get_next_addr_rd_return[4]),
        .I1(get_next_addr_rd3[4]),
        .O(\addrR_reg[4]_i_1_n_0 ),
        .S(\addrR[7]_i_7_n_0 ));
  FDCE \addrR_reg[5] 
       (.C(ACLK),
        .CE(addrR),
        .CLR(S_ARREADY_i_2_n_0),
        .D(\addrR_reg[5]_i_1_n_0 ),
        .Q(\addrR_reg_n_0_[5] ));
  MUXF7 \addrR_reg[5]_i_1 
       (.I0(get_next_addr_rd_return[5]),
        .I1(get_next_addr_rd3[5]),
        .O(\addrR_reg[5]_i_1_n_0 ),
        .S(\addrR[7]_i_7_n_0 ));
  FDCE \addrR_reg[6] 
       (.C(ACLK),
        .CE(addrR),
        .CLR(S_ARREADY_i_2_n_0),
        .D(\addrR[6]_i_1_n_0 ),
        .Q(\addrR_reg_n_0_[6] ));
  FDCE \addrR_reg[7] 
       (.C(ACLK),
        .CE(addrR),
        .CLR(S_ARREADY_i_2_n_0),
        .D(\addrR_reg[7]_i_2_n_0 ),
        .Q(\addrR_reg_n_0_[7] ));
  MUXF7 \addrR_reg[7]_i_2 
       (.I0(get_next_addr_rd_return[7]),
        .I1(get_next_addr_rd3[7]),
        .O(\addrR_reg[7]_i_2_n_0 ),
        .S(\addrR[7]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFE020202)) 
    \addrW[0]_i_1 
       (.I0(S_AWADDR[0]),
        .I1(stateW[1]),
        .I2(stateW[0]),
        .I3(get_next_addr_wr0[0]),
        .I4(get_next_addr_wr1_carry_n_1),
        .O(\addrW[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFE020202)) 
    \addrW[1]_i_1 
       (.I0(S_AWADDR[1]),
        .I1(stateW[1]),
        .I2(stateW[0]),
        .I3(get_next_addr_wr1_carry_n_1),
        .I4(get_next_addr_wr0[1]),
        .O(\addrW[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFE020202FE02FEFE)) 
    \addrW[2]_i_1 
       (.I0(S_AWADDR[2]),
        .I1(stateW[1]),
        .I2(stateW[0]),
        .I3(get_next_addr_wr0[2]),
        .I4(get_next_addr_wr1_carry_n_1),
        .I5(addr[2]),
        .O(\addrW[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hB888B8BBB8BBB888)) 
    \addrW[3]_i_1 
       (.I0(S_AWADDR[3]),
        .I1(\beatW[4]_i_2_n_0 ),
        .I2(get_next_addr_wr0[3]),
        .I3(get_next_addr_wr1_carry_n_1),
        .I4(addr[3]),
        .I5(addr[2]),
        .O(\addrW[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hB888B8BBB8BBB888)) 
    \addrW[4]_i_1 
       (.I0(S_AWADDR[4]),
        .I1(\beatW[4]_i_2_n_0 ),
        .I2(get_next_addr_wr0[4]),
        .I3(get_next_addr_wr1_carry_n_1),
        .I4(\addrW[4]_i_2_n_0 ),
        .I5(addr[4]),
        .O(\addrW[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \addrW[4]_i_2 
       (.I0(addr[2]),
        .I1(addr[3]),
        .O(\addrW[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB888B8BBB8BBB888)) 
    \addrW[5]_i_1 
       (.I0(S_AWADDR[5]),
        .I1(\beatW[4]_i_2_n_0 ),
        .I2(get_next_addr_wr0[5]),
        .I3(get_next_addr_wr1_carry_n_1),
        .I4(\addrW[5]_i_2_n_0 ),
        .I5(addr[5]),
        .O(\addrW[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \addrW[5]_i_2 
       (.I0(addr[2]),
        .I1(addr[3]),
        .I2(addr[4]),
        .O(\addrW[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB888B8BBB8BBB888)) 
    \addrW[6]_i_1 
       (.I0(S_AWADDR[6]),
        .I1(\beatW[4]_i_2_n_0 ),
        .I2(get_next_addr_wr0[6]),
        .I3(get_next_addr_wr1_carry_n_1),
        .I4(\addrW[6]_i_2_n_0 ),
        .I5(addr[6]),
        .O(\addrW[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \addrW[6]_i_2 
       (.I0(addr[5]),
        .I1(addr[2]),
        .I2(addr[3]),
        .I3(addr[4]),
        .O(\addrW[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAABAAABAAAAAAA)) 
    \addrW[7]_i_1 
       (.I0(\AWLEN_reg[7]_i_1_n_0 ),
        .I1(\AWBURST_reg_reg_n_0_[1] ),
        .I2(\AWBURST_reg_reg_n_0_[0] ),
        .I3(S_WVALID),
        .I4(stateW[0]),
        .I5(stateW[1]),
        .O(\addrW[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFE020202FE02FEFE)) 
    \addrW[7]_i_2 
       (.I0(S_AWADDR[7]),
        .I1(stateW[0]),
        .I2(stateW[1]),
        .I3(get_next_addr_wr0[7]),
        .I4(get_next_addr_wr1_carry_n_1),
        .I5(\addrW[7]_i_3_n_0 ),
        .O(\addrW[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9555555555555555)) 
    \addrW[7]_i_3 
       (.I0(addr[7]),
        .I1(addr[5]),
        .I2(addr[2]),
        .I3(addr[3]),
        .I4(addr[4]),
        .I5(addr[6]),
        .O(\addrW[7]_i_3_n_0 ));
  FDCE \addrW_reg[0] 
       (.C(ACLK),
        .CE(\addrW[7]_i_1_n_0 ),
        .CLR(S_AWREADY_i_2_n_0),
        .D(\addrW[0]_i_1_n_0 ),
        .Q(addr[0]));
  FDCE \addrW_reg[1] 
       (.C(ACLK),
        .CE(\addrW[7]_i_1_n_0 ),
        .CLR(S_AWREADY_i_2_n_0),
        .D(\addrW[1]_i_1_n_0 ),
        .Q(addr[1]));
  FDCE \addrW_reg[2] 
       (.C(ACLK),
        .CE(\addrW[7]_i_1_n_0 ),
        .CLR(S_AWREADY_i_2_n_0),
        .D(\addrW[2]_i_1_n_0 ),
        .Q(addr[2]));
  FDCE \addrW_reg[3] 
       (.C(ACLK),
        .CE(\addrW[7]_i_1_n_0 ),
        .CLR(S_AWREADY_i_2_n_0),
        .D(\addrW[3]_i_1_n_0 ),
        .Q(addr[3]));
  FDCE \addrW_reg[4] 
       (.C(ACLK),
        .CE(\addrW[7]_i_1_n_0 ),
        .CLR(S_AWREADY_i_2_n_0),
        .D(\addrW[4]_i_1_n_0 ),
        .Q(addr[4]));
  FDCE \addrW_reg[5] 
       (.C(ACLK),
        .CE(\addrW[7]_i_1_n_0 ),
        .CLR(S_AWREADY_i_2_n_0),
        .D(\addrW[5]_i_1_n_0 ),
        .Q(addr[5]));
  FDCE \addrW_reg[6] 
       (.C(ACLK),
        .CE(\addrW[7]_i_1_n_0 ),
        .CLR(S_AWREADY_i_2_n_0),
        .D(\addrW[6]_i_1_n_0 ),
        .Q(addr[6]));
  FDCE \addrW_reg[7] 
       (.C(ACLK),
        .CE(\addrW[7]_i_1_n_0 ),
        .CLR(S_AWREADY_i_2_n_0),
        .D(\addrW[7]_i_2_n_0 ),
        .Q(addr[7]));
  LUT4 #(
    .INIT(16'h5754)) 
    \beatR[0]_i_1 
       (.I0(\beatR_reg_n_0_[0] ),
        .I1(stateR[1]),
        .I2(stateR[3]),
        .I3(stateR[0]),
        .O(\beatR[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h54A8)) 
    \beatR[1]_i_1 
       (.I0(\beatR_reg_n_0_[1] ),
        .I1(stateR[3]),
        .I2(stateR[1]),
        .I3(\beatR_reg_n_0_[0] ),
        .O(\beatR[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0EEEE000)) 
    \beatR[2]_i_1 
       (.I0(stateR[1]),
        .I1(stateR[3]),
        .I2(\beatR_reg_n_0_[0] ),
        .I3(\beatR_reg_n_0_[1] ),
        .I4(\beatR_reg_n_0_[2] ),
        .O(\beatR[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7F7F7F0080808000)) 
    \beatR[3]_i_1 
       (.I0(\beatR_reg_n_0_[2] ),
        .I1(\beatR_reg_n_0_[0] ),
        .I2(\beatR_reg_n_0_[1] ),
        .I3(stateR[3]),
        .I4(stateR[1]),
        .I5(\beatR_reg_n_0_[3] ),
        .O(\beatR[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00007FFF00008000)) 
    \beatR[4]_i_1 
       (.I0(\beatR_reg_n_0_[3] ),
        .I1(\beatR_reg_n_0_[1] ),
        .I2(\beatR_reg_n_0_[0] ),
        .I3(\beatR_reg_n_0_[2] ),
        .I4(\beatR[4]_i_2_n_0 ),
        .I5(\beatR_reg_n_0_[4] ),
        .O(\beatR[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \beatR[4]_i_2 
       (.I0(stateR[1]),
        .I1(stateR[3]),
        .O(\beatR[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h54A8)) 
    \beatR[5]_i_1 
       (.I0(\beatR[5]_i_2_n_0 ),
        .I1(stateR[3]),
        .I2(stateR[1]),
        .I3(\beatR_reg_n_0_[5] ),
        .O(\beatR[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \beatR[5]_i_2 
       (.I0(\beatR_reg_n_0_[4] ),
        .I1(\beatR_reg_n_0_[2] ),
        .I2(\beatR_reg_n_0_[0] ),
        .I3(\beatR_reg_n_0_[1] ),
        .I4(\beatR_reg_n_0_[3] ),
        .O(\beatR[5]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h54A8)) 
    \beatR[6]_i_1 
       (.I0(\beatR[7]_i_6_n_0 ),
        .I1(stateR[3]),
        .I2(stateR[1]),
        .I3(\beatR_reg_n_0_[6] ),
        .O(\beatR[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAAAAAAAE)) 
    \beatR[7]_i_1 
       (.I0(\beatR[7]_i_3_n_0 ),
        .I1(\beatR[7]_i_4_n_0 ),
        .I2(\beatR[7]_i_5_n_0 ),
        .I3(stateR[2]),
        .I4(stateR[3]),
        .O(beatR));
  LUT5 #(
    .INIT(32'h77708880)) 
    \beatR[7]_i_2 
       (.I0(\beatR_reg_n_0_[6] ),
        .I1(\beatR[7]_i_6_n_0 ),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(\beatR_reg_n_0_[7] ),
        .O(\beatR[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h4000500D40005008)) 
    \beatR[7]_i_3 
       (.I0(stateR[3]),
        .I1(S_RREADY),
        .I2(stateR[2]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(ARLEN_reg0__0),
        .O(\beatR[7]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \beatR[7]_i_4 
       (.I0(ARLEN_reg[6]),
        .I1(ARLEN_reg[7]),
        .I2(ARLEN_reg[5]),
        .I3(ARLEN_reg[4]),
        .I4(\beatR[7]_i_8_n_0 ),
        .O(\beatR[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \beatR[7]_i_5 
       (.I0(stateR[1]),
        .I1(stateR[0]),
        .O(\beatR[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \beatR[7]_i_6 
       (.I0(\beatR_reg_n_0_[5] ),
        .I1(\beatR_reg_n_0_[3] ),
        .I2(\beatR_reg_n_0_[1] ),
        .I3(\beatR_reg_n_0_[0] ),
        .I4(\beatR_reg_n_0_[2] ),
        .I5(\beatR_reg_n_0_[4] ),
        .O(\beatR[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \beatR[7]_i_7 
       (.I0(S_ARVALID),
        .I1(S_ARREADY_reg_0),
        .O(ARLEN_reg0__0));
  LUT3 #(
    .INIT(8'hFE)) 
    \beatR[7]_i_8 
       (.I0(ARLEN_reg[1]),
        .I1(ARLEN_reg[3]),
        .I2(ARLEN_reg[2]),
        .O(\beatR[7]_i_8_n_0 ));
  FDCE \beatR_reg[0] 
       (.C(ACLK),
        .CE(beatR),
        .CLR(S_ARREADY_i_2_n_0),
        .D(\beatR[0]_i_1_n_0 ),
        .Q(\beatR_reg_n_0_[0] ));
  FDCE \beatR_reg[1] 
       (.C(ACLK),
        .CE(beatR),
        .CLR(S_ARREADY_i_2_n_0),
        .D(\beatR[1]_i_1_n_0 ),
        .Q(\beatR_reg_n_0_[1] ));
  FDCE \beatR_reg[2] 
       (.C(ACLK),
        .CE(beatR),
        .CLR(S_ARREADY_i_2_n_0),
        .D(\beatR[2]_i_1_n_0 ),
        .Q(\beatR_reg_n_0_[2] ));
  FDCE \beatR_reg[3] 
       (.C(ACLK),
        .CE(beatR),
        .CLR(S_ARREADY_i_2_n_0),
        .D(\beatR[3]_i_1_n_0 ),
        .Q(\beatR_reg_n_0_[3] ));
  FDCE \beatR_reg[4] 
       (.C(ACLK),
        .CE(beatR),
        .CLR(S_ARREADY_i_2_n_0),
        .D(\beatR[4]_i_1_n_0 ),
        .Q(\beatR_reg_n_0_[4] ));
  FDCE \beatR_reg[5] 
       (.C(ACLK),
        .CE(beatR),
        .CLR(S_ARREADY_i_2_n_0),
        .D(\beatR[5]_i_1_n_0 ),
        .Q(\beatR_reg_n_0_[5] ));
  FDCE \beatR_reg[6] 
       (.C(ACLK),
        .CE(beatR),
        .CLR(S_ARREADY_i_2_n_0),
        .D(\beatR[6]_i_1_n_0 ),
        .Q(\beatR_reg_n_0_[6] ));
  FDCE \beatR_reg[7] 
       (.C(ACLK),
        .CE(beatR),
        .CLR(S_ARREADY_i_2_n_0),
        .D(\beatR[7]_i_2_n_0 ),
        .Q(\beatR_reg_n_0_[7] ));
  LUT3 #(
    .INIT(8'h54)) 
    \beatW[0]_i_1 
       (.I0(beatW[0]),
        .I1(stateW[0]),
        .I2(stateW[1]),
        .O(\beatW[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6660)) 
    \beatW[1]_i_1 
       (.I0(beatW[1]),
        .I1(beatW[0]),
        .I2(stateW[0]),
        .I3(stateW[1]),
        .O(\beatW[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0EEEE000)) 
    \beatW[2]_i_1 
       (.I0(stateW[0]),
        .I1(stateW[1]),
        .I2(beatW[0]),
        .I3(beatW[1]),
        .I4(beatW[2]),
        .O(\beatW[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0EEEEEEEE0000000)) 
    \beatW[3]_i_1 
       (.I0(stateW[0]),
        .I1(stateW[1]),
        .I2(beatW[1]),
        .I3(beatW[0]),
        .I4(beatW[2]),
        .I5(beatW[3]),
        .O(\beatW[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1555555540000000)) 
    \beatW[4]_i_1 
       (.I0(\beatW[4]_i_2_n_0 ),
        .I1(beatW[2]),
        .I2(beatW[0]),
        .I3(beatW[1]),
        .I4(beatW[3]),
        .I5(beatW[4]),
        .O(\beatW[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \beatW[4]_i_2 
       (.I0(stateW[1]),
        .I1(stateW[0]),
        .O(\beatW[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hE00E)) 
    \beatW[5]_i_1 
       (.I0(stateW[0]),
        .I1(stateW[1]),
        .I2(\beatW[5]_i_2_n_0 ),
        .I3(beatW[5]),
        .O(\beatW[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \beatW[5]_i_2 
       (.I0(beatW[3]),
        .I1(beatW[1]),
        .I2(beatW[0]),
        .I3(beatW[2]),
        .I4(beatW[4]),
        .O(\beatW[5]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0EE0)) 
    \beatW[6]_i_1 
       (.I0(stateW[0]),
        .I1(stateW[1]),
        .I2(\beatW[7]_i_3_n_0 ),
        .I3(beatW[6]),
        .O(\beatW[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0FF80008)) 
    \beatW[7]_i_1 
       (.I0(S_AWREADY_reg_0),
        .I1(S_AWVALID),
        .I2(stateW[1]),
        .I3(stateW[0]),
        .I4(S_WVALID),
        .O(\beatW[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h78787800)) 
    \beatW[7]_i_2 
       (.I0(\beatW[7]_i_3_n_0 ),
        .I1(beatW[6]),
        .I2(beatW[7]),
        .I3(stateW[0]),
        .I4(stateW[1]),
        .O(\beatW[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \beatW[7]_i_3 
       (.I0(beatW[5]),
        .I1(beatW[4]),
        .I2(beatW[2]),
        .I3(beatW[0]),
        .I4(beatW[1]),
        .I5(beatW[3]),
        .O(\beatW[7]_i_3_n_0 ));
  FDCE \beatW_reg[0] 
       (.C(ACLK),
        .CE(\beatW[7]_i_1_n_0 ),
        .CLR(S_AWREADY_i_2_n_0),
        .D(\beatW[0]_i_1_n_0 ),
        .Q(beatW[0]));
  FDCE \beatW_reg[1] 
       (.C(ACLK),
        .CE(\beatW[7]_i_1_n_0 ),
        .CLR(S_AWREADY_i_2_n_0),
        .D(\beatW[1]_i_1_n_0 ),
        .Q(beatW[1]));
  FDCE \beatW_reg[2] 
       (.C(ACLK),
        .CE(\beatW[7]_i_1_n_0 ),
        .CLR(S_AWREADY_i_2_n_0),
        .D(\beatW[2]_i_1_n_0 ),
        .Q(beatW[2]));
  FDCE \beatW_reg[3] 
       (.C(ACLK),
        .CE(\beatW[7]_i_1_n_0 ),
        .CLR(S_AWREADY_i_2_n_0),
        .D(\beatW[3]_i_1_n_0 ),
        .Q(beatW[3]));
  FDCE \beatW_reg[4] 
       (.C(ACLK),
        .CE(\beatW[7]_i_1_n_0 ),
        .CLR(S_AWREADY_i_2_n_0),
        .D(\beatW[4]_i_1_n_0 ),
        .Q(beatW[4]));
  FDCE \beatW_reg[5] 
       (.C(ACLK),
        .CE(\beatW[7]_i_1_n_0 ),
        .CLR(S_AWREADY_i_2_n_0),
        .D(\beatW[5]_i_1_n_0 ),
        .Q(beatW[5]));
  FDCE \beatW_reg[6] 
       (.C(ACLK),
        .CE(\beatW[7]_i_1_n_0 ),
        .CLR(S_AWREADY_i_2_n_0),
        .D(\beatW[6]_i_1_n_0 ),
        .Q(beatW[6]));
  FDCE \beatW_reg[7] 
       (.C(ACLK),
        .CE(\beatW[7]_i_1_n_0 ),
        .CLR(S_AWREADY_i_2_n_0),
        .D(\beatW[7]_i_2_n_0 ),
        .Q(beatW[7]));
  LUT2 #(
    .INIT(4'h8)) 
    client_bnum_rdy_reg_LDC_i_1
       (.I0(conf_rx_reset),
        .I1(client_bnum_rdy_reg_C),
        .O(csr_rx_reset_reg_0));
  LUT2 #(
    .INIT(4'h2)) 
    client_bnum_rdy_reg_LDC_i_2
       (.I0(conf_rx_reset),
        .I1(client_bnum_rdy_reg_C),
        .O(csr_rx_reset_reg));
  LUT5 #(
    .INIT(32'h00042140)) 
    \dataR[31]_i_1 
       (.I0(stateR[1]),
        .I1(stateR[3]),
        .I2(stateR[0]),
        .I3(stateR[2]),
        .I4(S_RREADY),
        .O(\dataR[31]_i_1_n_0 ));
  FDCE \dataR_reg[0] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[0]),
        .Q(dataR[0]));
  FDCE \dataR_reg[10] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[10]),
        .Q(dataR[10]));
  FDCE \dataR_reg[11] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[11]),
        .Q(dataR[11]));
  FDCE \dataR_reg[12] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[12]),
        .Q(dataR[12]));
  FDCE \dataR_reg[13] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[13]),
        .Q(dataR[13]));
  FDCE \dataR_reg[14] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[14]),
        .Q(dataR[14]));
  FDCE \dataR_reg[15] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[15]),
        .Q(dataR[15]));
  FDCE \dataR_reg[16] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[16]),
        .Q(dataR[16]));
  FDCE \dataR_reg[17] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[17]),
        .Q(dataR[17]));
  FDCE \dataR_reg[18] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[18]),
        .Q(dataR[18]));
  FDCE \dataR_reg[19] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[19]),
        .Q(dataR[19]));
  FDCE \dataR_reg[1] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[1]),
        .Q(dataR[1]));
  FDCE \dataR_reg[20] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[20]),
        .Q(dataR[20]));
  FDCE \dataR_reg[21] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[21]),
        .Q(dataR[21]));
  FDCE \dataR_reg[22] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[22]),
        .Q(dataR[22]));
  FDCE \dataR_reg[23] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[23]),
        .Q(dataR[23]));
  FDCE \dataR_reg[24] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[24]),
        .Q(dataR[24]));
  FDCE \dataR_reg[25] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[25]),
        .Q(dataR[25]));
  FDCE \dataR_reg[26] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[26]),
        .Q(dataR[26]));
  FDCE \dataR_reg[27] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[27]),
        .Q(dataR[27]));
  FDCE \dataR_reg[28] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[28]),
        .Q(dataR[28]));
  FDCE \dataR_reg[29] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[29]),
        .Q(dataR[29]));
  FDCE \dataR_reg[2] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[2]),
        .Q(dataR[2]));
  FDCE \dataR_reg[30] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[30]),
        .Q(dataR[30]));
  FDCE \dataR_reg[31] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[31]),
        .Q(dataR[31]));
  FDCE \dataR_reg[3] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[3]),
        .Q(dataR[3]));
  FDCE \dataR_reg[4] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[4]),
        .Q(dataR[4]));
  FDCE \dataR_reg[5] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[5]),
        .Q(dataR[5]));
  FDCE \dataR_reg[6] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[6]),
        .Q(dataR[6]));
  FDCE \dataR_reg[7] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[7]),
        .Q(dataR[7]));
  FDCE \dataR_reg[8] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[8]),
        .Q(dataR[8]));
  FDCE \dataR_reg[9] 
       (.C(ACLK),
        .CE(\dataR[31]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(Trdata[9]),
        .Q(dataR[9]));
  LUT2 #(
    .INIT(4'h8)) 
    \desc_bnum[0]_i_1 
       (.I0(conf_rx_en),
        .I1(\desc_bnum_reg[15] [0]),
        .O(conf_rx_en_reg_3[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \desc_bnum[10]_i_1 
       (.I0(conf_rx_en),
        .I1(\desc_bnum_reg[15] [10]),
        .O(conf_rx_en_reg_3[10]));
  LUT2 #(
    .INIT(4'h8)) 
    \desc_bnum[11]_i_1 
       (.I0(conf_rx_en),
        .I1(\desc_bnum_reg[15] [11]),
        .O(conf_rx_en_reg_3[11]));
  LUT2 #(
    .INIT(4'h8)) 
    \desc_bnum[12]_i_1 
       (.I0(conf_rx_en),
        .I1(\desc_bnum_reg[15] [12]),
        .O(conf_rx_en_reg_3[12]));
  LUT2 #(
    .INIT(4'h8)) 
    \desc_bnum[13]_i_1 
       (.I0(conf_rx_en),
        .I1(\desc_bnum_reg[15] [13]),
        .O(conf_rx_en_reg_3[13]));
  LUT2 #(
    .INIT(4'h8)) 
    \desc_bnum[14]_i_1 
       (.I0(conf_rx_en),
        .I1(\desc_bnum_reg[15] [14]),
        .O(conf_rx_en_reg_3[14]));
  LUT2 #(
    .INIT(4'h8)) 
    \desc_bnum[15]_i_2 
       (.I0(conf_rx_en),
        .I1(\desc_bnum_reg[15] [15]),
        .O(conf_rx_en_reg_3[15]));
  LUT2 #(
    .INIT(4'h8)) 
    \desc_bnum[1]_i_1 
       (.I0(conf_rx_en),
        .I1(\desc_bnum_reg[15] [1]),
        .O(conf_rx_en_reg_3[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \desc_bnum[2]_i_1 
       (.I0(conf_rx_en),
        .I1(\desc_bnum_reg[15] [2]),
        .O(conf_rx_en_reg_3[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \desc_bnum[3]_i_1 
       (.I0(conf_rx_en),
        .I1(\desc_bnum_reg[15] [3]),
        .O(conf_rx_en_reg_3[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \desc_bnum[4]_i_1 
       (.I0(conf_rx_en),
        .I1(\desc_bnum_reg[15] [4]),
        .O(conf_rx_en_reg_3[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \desc_bnum[5]_i_1 
       (.I0(conf_rx_en),
        .I1(\desc_bnum_reg[15] [5]),
        .O(conf_rx_en_reg_3[5]));
  LUT2 #(
    .INIT(4'h8)) 
    \desc_bnum[6]_i_1 
       (.I0(conf_rx_en),
        .I1(\desc_bnum_reg[15] [6]),
        .O(conf_rx_en_reg_3[6]));
  LUT2 #(
    .INIT(4'h8)) 
    \desc_bnum[7]_i_1 
       (.I0(conf_rx_en),
        .I1(\desc_bnum_reg[15] [7]),
        .O(conf_rx_en_reg_3[7]));
  LUT2 #(
    .INIT(4'h8)) 
    \desc_bnum[8]_i_1 
       (.I0(conf_rx_en),
        .I1(\desc_bnum_reg[15] [8]),
        .O(conf_rx_en_reg_3[8]));
  LUT2 #(
    .INIT(4'h8)) 
    \desc_bnum[9]_i_1 
       (.I0(conf_rx_en),
        .I1(\desc_bnum_reg[15] [9]),
        .O(conf_rx_en_reg_3[9]));
  CARRY4 \get_next_addr_rd00_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\get_next_addr_rd00_inferred__0/i__carry_n_0 ,\get_next_addr_rd00_inferred__0/i__carry_n_1 ,\get_next_addr_rd00_inferred__0/i__carry_n_2 ,\get_next_addr_rd00_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b0),
        .DI({\addrR_reg_n_0_[3] ,\addrR_reg_n_0_[2] ,\addrR_reg_n_0_[1] ,\addrR_reg_n_0_[0] }),
        .O(get_next_addr_rd00[3:0]),
        .S({i__carry_i_1__0_n_0,i__carry_i_2__0_n_0,i__carry_i_3__0_n_0,i__carry_i_4__0_n_0}));
  CARRY4 \get_next_addr_rd00_inferred__0/i__carry__0 
       (.CI(\get_next_addr_rd00_inferred__0/i__carry_n_0 ),
        .CO({\NLW_get_next_addr_rd00_inferred__0/i__carry__0_CO_UNCONNECTED [3],\get_next_addr_rd00_inferred__0/i__carry__0_n_1 ,\get_next_addr_rd00_inferred__0/i__carry__0_n_2 ,\get_next_addr_rd00_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\addrR_reg_n_0_[6] ,\addrR_reg_n_0_[5] ,\addrR_reg_n_0_[4] }),
        .O(get_next_addr_rd00[7:4]),
        .S({i__carry__0_i_1__0_n_0,i__carry__0_i_2__0_n_0,i__carry__0_i_3__0_n_0,i__carry__0_i_4__0_n_0}));
  CARRY4 get_next_addr_rd01_carry
       (.CI(1'b0),
        .CO({NLW_get_next_addr_rd01_carry_CO_UNCONNECTED[3],get_next_addr_rd01_carry_n_1,get_next_addr_rd01_carry_n_2,get_next_addr_rd01_carry_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,get_next_addr_rd01_carry_i_1_n_0}),
        .O(NLW_get_next_addr_rd01_carry_O_UNCONNECTED[3:0]),
        .S({1'b0,get_next_addr_rd01_carry_i_2_n_0,get_next_addr_rd01_carry_i_3_n_0,get_next_addr_rd01_carry_i_4_n_0}));
  LUT2 #(
    .INIT(4'hB)) 
    get_next_addr_rd01_carry_i_1
       (.I0(ARSIZE_reg[2]),
        .I1(ARSIZE_reg[1]),
        .O(get_next_addr_rd01_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    get_next_addr_rd01_carry_i_2
       (.I0(ARSIZE_reg[1]),
        .I1(ARSIZE_reg[2]),
        .O(get_next_addr_rd01_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    get_next_addr_rd01_carry_i_3
       (.I0(ARSIZE_reg[1]),
        .I1(ARSIZE_reg[2]),
        .O(get_next_addr_rd01_carry_i_3_n_0));
  LUT3 #(
    .INIT(8'h10)) 
    get_next_addr_rd01_carry_i_4
       (.I0(ARSIZE_reg[0]),
        .I1(ARSIZE_reg[2]),
        .I2(ARSIZE_reg[1]),
        .O(get_next_addr_rd01_carry_i_4_n_0));
  CARRY4 \get_next_addr_rd0_inferred__1/i__carry 
       (.CI(1'b0),
        .CO({\get_next_addr_rd0_inferred__1/i__carry_n_0 ,\get_next_addr_rd0_inferred__1/i__carry_n_1 ,\get_next_addr_rd0_inferred__1/i__carry_n_2 ,\get_next_addr_rd0_inferred__1/i__carry_n_3 }),
        .CYINIT(1'b0),
        .DI(S_ARADDR[3:0]),
        .O(get_next_addr_rd0[3:0]),
        .S({i__carry_i_1__1_n_0,i__carry_i_2__1_n_0,i__carry_i_3__1_n_0,i__carry_i_4__1_n_0}));
  CARRY4 \get_next_addr_rd0_inferred__1/i__carry__0 
       (.CI(\get_next_addr_rd0_inferred__1/i__carry_n_0 ),
        .CO({\NLW_get_next_addr_rd0_inferred__1/i__carry__0_CO_UNCONNECTED [3],\get_next_addr_rd0_inferred__1/i__carry__0_n_1 ,\get_next_addr_rd0_inferred__1/i__carry__0_n_2 ,\get_next_addr_rd0_inferred__1/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,S_ARADDR[6:4]}),
        .O(get_next_addr_rd0[7:4]),
        .S({i__carry__0_i_1__1_n_0,i__carry__0_i_2__1_n_0,i__carry__0_i_3__1_n_0,i__carry__0_i_4__1_n_0}));
  CARRY4 get_next_addr_rd1_carry
       (.CI(1'b0),
        .CO({NLW_get_next_addr_rd1_carry_CO_UNCONNECTED[3],get_next_addr_rd1_carry_n_1,get_next_addr_rd1_carry_n_2,get_next_addr_rd1_carry_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,get_next_addr_rd1_carry_i_1_n_0}),
        .O(NLW_get_next_addr_rd1_carry_O_UNCONNECTED[3:0]),
        .S({1'b0,get_next_addr_rd1_carry_i_2_n_0,get_next_addr_rd1_carry_i_3_n_0,get_next_addr_rd1_carry_i_4_n_0}));
  LUT2 #(
    .INIT(4'hB)) 
    get_next_addr_rd1_carry_i_1
       (.I0(S_ARSIZE[2]),
        .I1(S_ARSIZE[1]),
        .O(get_next_addr_rd1_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    get_next_addr_rd1_carry_i_2
       (.I0(S_ARSIZE[1]),
        .I1(S_ARSIZE[2]),
        .O(get_next_addr_rd1_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    get_next_addr_rd1_carry_i_3
       (.I0(S_ARSIZE[1]),
        .I1(S_ARSIZE[2]),
        .O(get_next_addr_rd1_carry_i_3_n_0));
  LUT3 #(
    .INIT(8'h10)) 
    get_next_addr_rd1_carry_i_4
       (.I0(S_ARSIZE[0]),
        .I1(S_ARSIZE[2]),
        .I2(S_ARSIZE[1]),
        .O(get_next_addr_rd1_carry_i_4_n_0));
  CARRY4 \get_next_addr_wr0_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\get_next_addr_wr0_inferred__0/i__carry_n_0 ,\get_next_addr_wr0_inferred__0/i__carry_n_1 ,\get_next_addr_wr0_inferred__0/i__carry_n_2 ,\get_next_addr_wr0_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b0),
        .DI(addr[3:0]),
        .O(get_next_addr_wr0[3:0]),
        .S({i__carry_i_1_n_0,i__carry_i_2_n_0,i__carry_i_3_n_0,i__carry_i_4_n_0}));
  CARRY4 \get_next_addr_wr0_inferred__0/i__carry__0 
       (.CI(\get_next_addr_wr0_inferred__0/i__carry_n_0 ),
        .CO({\NLW_get_next_addr_wr0_inferred__0/i__carry__0_CO_UNCONNECTED [3],\get_next_addr_wr0_inferred__0/i__carry__0_n_1 ,\get_next_addr_wr0_inferred__0/i__carry__0_n_2 ,\get_next_addr_wr0_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,addr[6:4]}),
        .O(get_next_addr_wr0[7:4]),
        .S({i__carry__0_i_1_n_0,i__carry__0_i_2_n_0,i__carry__0_i_3_n_0,i__carry__0_i_4_n_0}));
  CARRY4 get_next_addr_wr1_carry
       (.CI(1'b0),
        .CO({NLW_get_next_addr_wr1_carry_CO_UNCONNECTED[3],get_next_addr_wr1_carry_n_1,get_next_addr_wr1_carry_n_2,get_next_addr_wr1_carry_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,get_next_addr_wr1_carry_i_1_n_0}),
        .O(NLW_get_next_addr_wr1_carry_O_UNCONNECTED[3:0]),
        .S({1'b0,get_next_addr_wr1_carry_i_2_n_0,get_next_addr_wr1_carry_i_3_n_0,get_next_addr_wr1_carry_i_4_n_0}));
  LUT2 #(
    .INIT(4'hD)) 
    get_next_addr_wr1_carry_i_1
       (.I0(AWSIZE_reg[1]),
        .I1(AWSIZE_reg[2]),
        .O(get_next_addr_wr1_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    get_next_addr_wr1_carry_i_2
       (.I0(AWSIZE_reg[1]),
        .I1(AWSIZE_reg[2]),
        .O(get_next_addr_wr1_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    get_next_addr_wr1_carry_i_3
       (.I0(AWSIZE_reg[1]),
        .I1(AWSIZE_reg[2]),
        .O(get_next_addr_wr1_carry_i_3_n_0));
  LUT3 #(
    .INIT(8'h04)) 
    get_next_addr_wr1_carry_i_4
       (.I0(AWSIZE_reg[2]),
        .I1(AWSIZE_reg[1]),
        .I2(AWSIZE_reg[0]),
        .O(get_next_addr_wr1_carry_i_4_n_0));
  LUT4 #(
    .INIT(16'h6AAA)) 
    i__carry__0_i_1
       (.I0(addr[7]),
        .I1(AWSIZE_reg[0]),
        .I2(AWSIZE_reg[1]),
        .I3(AWSIZE_reg[2]),
        .O(i__carry__0_i_1_n_0));
  LUT4 #(
    .INIT(16'h6AAA)) 
    i__carry__0_i_1__0
       (.I0(\addrR_reg_n_0_[7] ),
        .I1(ARSIZE_reg[0]),
        .I2(ARSIZE_reg[1]),
        .I3(ARSIZE_reg[2]),
        .O(i__carry__0_i_1__0_n_0));
  LUT4 #(
    .INIT(16'h6AAA)) 
    i__carry__0_i_1__1
       (.I0(S_ARADDR[7]),
        .I1(S_ARSIZE[0]),
        .I2(S_ARSIZE[1]),
        .I3(S_ARSIZE[2]),
        .O(i__carry__0_i_1__1_n_0));
  LUT4 #(
    .INIT(16'h9AAA)) 
    i__carry__0_i_2
       (.I0(addr[6]),
        .I1(AWSIZE_reg[0]),
        .I2(AWSIZE_reg[1]),
        .I3(AWSIZE_reg[2]),
        .O(i__carry__0_i_2_n_0));
  LUT4 #(
    .INIT(16'h9AAA)) 
    i__carry__0_i_2__0
       (.I0(\addrR_reg_n_0_[6] ),
        .I1(ARSIZE_reg[0]),
        .I2(ARSIZE_reg[1]),
        .I3(ARSIZE_reg[2]),
        .O(i__carry__0_i_2__0_n_0));
  LUT4 #(
    .INIT(16'h9AAA)) 
    i__carry__0_i_2__1
       (.I0(S_ARADDR[6]),
        .I1(S_ARSIZE[0]),
        .I2(S_ARSIZE[1]),
        .I3(S_ARSIZE[2]),
        .O(i__carry__0_i_2__1_n_0));
  LUT4 #(
    .INIT(16'h9AAA)) 
    i__carry__0_i_3
       (.I0(addr[5]),
        .I1(AWSIZE_reg[1]),
        .I2(AWSIZE_reg[0]),
        .I3(AWSIZE_reg[2]),
        .O(i__carry__0_i_3_n_0));
  LUT4 #(
    .INIT(16'hA6AA)) 
    i__carry__0_i_3__0
       (.I0(\addrR_reg_n_0_[5] ),
        .I1(ARSIZE_reg[0]),
        .I2(ARSIZE_reg[1]),
        .I3(ARSIZE_reg[2]),
        .O(i__carry__0_i_3__0_n_0));
  LUT4 #(
    .INIT(16'hA6AA)) 
    i__carry__0_i_3__1
       (.I0(S_ARADDR[5]),
        .I1(S_ARSIZE[0]),
        .I2(S_ARSIZE[1]),
        .I3(S_ARSIZE[2]),
        .O(i__carry__0_i_3__1_n_0));
  LUT4 #(
    .INIT(16'hA9AA)) 
    i__carry__0_i_4
       (.I0(addr[4]),
        .I1(AWSIZE_reg[0]),
        .I2(AWSIZE_reg[1]),
        .I3(AWSIZE_reg[2]),
        .O(i__carry__0_i_4_n_0));
  LUT4 #(
    .INIT(16'hA9AA)) 
    i__carry__0_i_4__0
       (.I0(\addrR_reg_n_0_[4] ),
        .I1(ARSIZE_reg[0]),
        .I2(ARSIZE_reg[1]),
        .I3(ARSIZE_reg[2]),
        .O(i__carry__0_i_4__0_n_0));
  LUT4 #(
    .INIT(16'hA9AA)) 
    i__carry__0_i_4__1
       (.I0(S_ARADDR[4]),
        .I1(S_ARSIZE[0]),
        .I2(S_ARSIZE[1]),
        .I3(S_ARSIZE[2]),
        .O(i__carry__0_i_4__1_n_0));
  LUT4 #(
    .INIT(16'hAA6A)) 
    i__carry_i_1
       (.I0(addr[3]),
        .I1(AWSIZE_reg[0]),
        .I2(AWSIZE_reg[1]),
        .I3(AWSIZE_reg[2]),
        .O(i__carry_i_1_n_0));
  LUT4 #(
    .INIT(16'hA6AA)) 
    i__carry_i_1__0
       (.I0(\addrR_reg_n_0_[3] ),
        .I1(ARSIZE_reg[0]),
        .I2(ARSIZE_reg[2]),
        .I3(ARSIZE_reg[1]),
        .O(i__carry_i_1__0_n_0));
  LUT4 #(
    .INIT(16'hA6AA)) 
    i__carry_i_1__1
       (.I0(S_ARADDR[3]),
        .I1(S_ARSIZE[0]),
        .I2(S_ARSIZE[2]),
        .I3(S_ARSIZE[1]),
        .O(i__carry_i_1__1_n_0));
  LUT4 #(
    .INIT(16'hAA9A)) 
    i__carry_i_2
       (.I0(addr[2]),
        .I1(AWSIZE_reg[0]),
        .I2(AWSIZE_reg[1]),
        .I3(AWSIZE_reg[2]),
        .O(i__carry_i_2_n_0));
  LUT4 #(
    .INIT(16'hA9AA)) 
    i__carry_i_2__0
       (.I0(\addrR_reg_n_0_[2] ),
        .I1(ARSIZE_reg[0]),
        .I2(ARSIZE_reg[2]),
        .I3(ARSIZE_reg[1]),
        .O(i__carry_i_2__0_n_0));
  LUT4 #(
    .INIT(16'hA9AA)) 
    i__carry_i_2__1
       (.I0(S_ARADDR[2]),
        .I1(S_ARSIZE[0]),
        .I2(S_ARSIZE[2]),
        .I3(S_ARSIZE[1]),
        .O(i__carry_i_2__1_n_0));
  LUT4 #(
    .INIT(16'hAA9A)) 
    i__carry_i_3
       (.I0(addr[1]),
        .I1(AWSIZE_reg[1]),
        .I2(AWSIZE_reg[0]),
        .I3(AWSIZE_reg[2]),
        .O(i__carry_i_3_n_0));
  LUT4 #(
    .INIT(16'hAAA6)) 
    i__carry_i_3__0
       (.I0(\addrR_reg_n_0_[1] ),
        .I1(ARSIZE_reg[0]),
        .I2(ARSIZE_reg[1]),
        .I3(ARSIZE_reg[2]),
        .O(i__carry_i_3__0_n_0));
  LUT4 #(
    .INIT(16'hAAA6)) 
    i__carry_i_3__1
       (.I0(S_ARADDR[1]),
        .I1(S_ARSIZE[0]),
        .I2(S_ARSIZE[1]),
        .I3(S_ARSIZE[2]),
        .O(i__carry_i_3__1_n_0));
  LUT4 #(
    .INIT(16'hAAA9)) 
    i__carry_i_4
       (.I0(addr[0]),
        .I1(AWSIZE_reg[0]),
        .I2(AWSIZE_reg[1]),
        .I3(AWSIZE_reg[2]),
        .O(i__carry_i_4_n_0));
  LUT4 #(
    .INIT(16'hAAA9)) 
    i__carry_i_4__0
       (.I0(\addrR_reg_n_0_[0] ),
        .I1(ARSIZE_reg[0]),
        .I2(ARSIZE_reg[1]),
        .I3(ARSIZE_reg[2]),
        .O(i__carry_i_4__0_n_0));
  LUT4 #(
    .INIT(16'hAAA9)) 
    i__carry_i_4__1
       (.I0(S_ARADDR[0]),
        .I1(S_ARSIZE[0]),
        .I2(S_ARSIZE[1]),
        .I3(S_ARSIZE[2]),
        .O(i__carry_i_4__1_n_0));
  LUT6 #(
    .INIT(64'h0EFEFEFEF40E0E0E)) 
    \stateR[0]_i_1 
       (.I0(stateR[2]),
        .I1(\stateR[0]_i_2_n_0 ),
        .I2(stateR[3]),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(S_RREADY),
        .O(p_0_in__1[0]));
  LUT6 #(
    .INIT(64'h00FA00FA03FA00FA)) 
    \stateR[0]_i_2 
       (.I0(ARLEN_reg0__0),
        .I1(\stateR[0]_i_3_n_0 ),
        .I2(stateR[1]),
        .I3(stateR[0]),
        .I4(ARLEN_reg[0]),
        .I5(\beatR[7]_i_8_n_0 ),
        .O(\stateR[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \stateR[0]_i_3 
       (.I0(ARLEN_reg[6]),
        .I1(ARLEN_reg[7]),
        .I2(ARLEN_reg[5]),
        .I3(ARLEN_reg[4]),
        .O(\stateR[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h04FFFF4EAABBFF00)) 
    \stateR[1]_i_1 
       (.I0(stateR[3]),
        .I1(stateR[2]),
        .I2(addrR1_carry_n_0),
        .I3(stateR[1]),
        .I4(stateR[0]),
        .I5(S_RREADY),
        .O(p_0_in__1[1]));
  LUT5 #(
    .INIT(32'hFFFFFF10)) 
    \stateR[2]_i_1 
       (.I0(stateR[2]),
        .I1(stateR[3]),
        .I2(\stateR[2]_i_2_n_0 ),
        .I3(\stateR[2]_i_3_n_0 ),
        .I4(\stateR[2]_i_4_n_0 ),
        .O(p_0_in__1[2]));
  LUT6 #(
    .INIT(64'hFFFF0444AAAA0444)) 
    \stateR[2]_i_2 
       (.I0(stateR[1]),
        .I1(stateR[2]),
        .I2(S_ARREADY_reg_0),
        .I3(S_ARVALID),
        .I4(stateR[0]),
        .I5(\beatR[7]_i_4_n_0 ),
        .O(\stateR[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0511451100000000)) 
    \stateR[2]_i_3 
       (.I0(stateR[3]),
        .I1(S_RREADY),
        .I2(stateR[0]),
        .I3(stateR[1]),
        .I4(addrR1_carry_n_0),
        .I5(stateR[2]),
        .O(\stateR[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h4404440E00000000)) 
    \stateR[2]_i_4 
       (.I0(S_RREADY),
        .I1(stateR[2]),
        .I2(stateR[0]),
        .I3(stateR[1]),
        .I4(addrR1_carry_n_0),
        .I5(stateR[3]),
        .O(\stateR[2]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \stateR[3]_i_1 
       (.I0(stateR[2]),
        .I1(stateR[3]),
        .O(\stateR[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h3EFFFFFF3EFF0000)) 
    \stateR[3]_i_2 
       (.I0(addrR1_carry_n_0),
        .I1(stateR[1]),
        .I2(stateR[0]),
        .I3(S_RREADY),
        .I4(stateR[3]),
        .I5(\stateR[3]_i_3_n_0 ),
        .O(p_0_in__1[3]));
  LUT6 #(
    .INIT(64'hFFFFFFFF04040504)) 
    \stateR[3]_i_3 
       (.I0(stateR[0]),
        .I1(stateR[1]),
        .I2(stateR[2]),
        .I3(stateR[3]),
        .I4(ARLEN_reg0__0),
        .I5(\stateR[3]_i_4_n_0 ),
        .O(\stateR[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBBB3A8A800000000)) 
    \stateR[3]_i_4 
       (.I0(stateR[0]),
        .I1(stateR[1]),
        .I2(stateR[3]),
        .I3(addrR1_carry_n_0),
        .I4(S_RREADY),
        .I5(stateR[2]),
        .O(\stateR[3]_i_4_n_0 ));
  (* FSM_ENCODED_STATES = "STR_IDLE:0000,STR_READ0:0001,STR_READ1:0010,STR_READ2:0011,STR_READ21:0100,STR_READ22:0101,STR_READ3:0110,STR_READ31:0111,STR_READ32:1000,STR_READ33:1001,STR_READ34:1010,STR_END:1011" *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \stateR_reg[0] 
       (.C(ACLK),
        .CE(\stateR[3]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(p_0_in__1[0]),
        .Q(stateR[0]));
  (* FSM_ENCODED_STATES = "STR_IDLE:0000,STR_READ0:0001,STR_READ1:0010,STR_READ2:0011,STR_READ21:0100,STR_READ22:0101,STR_READ3:0110,STR_READ31:0111,STR_READ32:1000,STR_READ33:1001,STR_READ34:1010,STR_END:1011" *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \stateR_reg[1] 
       (.C(ACLK),
        .CE(\stateR[3]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(p_0_in__1[1]),
        .Q(stateR[1]));
  (* FSM_ENCODED_STATES = "STR_IDLE:0000,STR_READ0:0001,STR_READ1:0010,STR_READ2:0011,STR_READ21:0100,STR_READ22:0101,STR_READ3:0110,STR_READ31:0111,STR_READ32:1000,STR_READ33:1001,STR_READ34:1010,STR_END:1011" *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \stateR_reg[2] 
       (.C(ACLK),
        .CE(\stateR[3]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(p_0_in__1[2]),
        .Q(stateR[2]));
  (* FSM_ENCODED_STATES = "STR_IDLE:0000,STR_READ0:0001,STR_READ1:0010,STR_READ2:0011,STR_READ21:0100,STR_READ22:0101,STR_READ3:0110,STR_READ31:0111,STR_READ32:1000,STR_READ33:1001,STR_READ34:1010,STR_END:1011" *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \stateR_reg[3] 
       (.C(ACLK),
        .CE(\stateR[3]_i_1_n_0 ),
        .CLR(S_ARREADY_i_2_n_0),
        .D(p_0_in__1[3]),
        .Q(stateR[3]));
  LUT6 #(
    .INIT(64'h7F4373737C407070)) 
    \stateW[0]_i_1 
       (.I0(S_BREADY),
        .I1(stateW[1]),
        .I2(stateW[0]),
        .I3(S_WREADY0),
        .I4(S_WVALID),
        .I5(\stateW[0]_i_2_n_0 ),
        .O(p_0_in__0[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \stateW[0]_i_2 
       (.I0(S_AWREADY_reg_0),
        .I1(S_AWVALID),
        .O(\stateW[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h3FA0)) 
    \stateW[1]_i_1 
       (.I0(S_WVALID),
        .I1(S_BREADY),
        .I2(stateW[0]),
        .I3(stateW[1]),
        .O(p_0_in__0[1]));
  (* FSM_ENCODED_STATES = "STW_IDLE:00,STW_WRITE0:01,STW_WRITE:10,STW_RSP:11" *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \stateW_reg[0] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(S_AWREADY_i_2_n_0),
        .D(p_0_in__0[0]),
        .Q(stateW[0]));
  (* FSM_ENCODED_STATES = "STW_IDLE:00,STW_WRITE0:01,STW_WRITE:10,STW_RSP:11" *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \stateW_reg[1] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(S_AWREADY_i_2_n_0),
        .D(p_0_in__0[1]),
        .Q(stateW[1]));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT2 #(
    .INIT(4'hD)) 
    \state[1]_i_2__0 
       (.I0(conf_tx_en),
        .I1(desc_ready_reg),
        .O(conf_tx_en_reg_4));
  LUT2 #(
    .INIT(4'h2)) 
    \state[2]_i_4 
       (.I0(conf_rx_en),
        .I1(W_full_i_5_0[1]),
        .O(conf_rx_en_reg_1));
  LUT2 #(
    .INIT(4'h2)) 
    \sync_reg[1]_srl2_i_1 
       (.I0(conf_tx_reset),
        .I1(gtx_clk_stable),
        .O(sig_in0));
  (* BITS_10MSEC = "20" *) 
  (* BITS_5MSEC = "19" *) 
  (* CLK_FREQ = "100000000" *) 
  (* CLK_PERIOD_NS = "10" *) 
  (* CSRA_CONF_RX0 = "48" *) 
  (* CSRA_CONF_RX1 = "52" *) 
  (* CSRA_CONF_TX0 = "32" *) 
  (* CSRA_CONF_TX1 = "36" *) 
  (* CSRA_CONTROL = "0" *) 
  (* CSRA_DEBUG_PORT = "196" *) 
  (* CSRA_DES_RX0 = "80" *) 
  (* CSRA_DES_RX1 = "84" *) 
  (* CSRA_DES_RX2 = "88" *) 
  (* CSRA_DES_RX3 = "92" *) 
  (* CSRA_DES_TX0 = "64" *) 
  (* CSRA_DES_TX1 = "68" *) 
  (* CSRA_DES_TX2 = "72" *) 
  (* CSRA_DES_TX3 = "76" *) 
  (* CSRA_DMA_RX0 = "144" *) 
  (* CSRA_DMA_RX1 = "148" *) 
  (* CSRA_DMA_RX2 = "152" *) 
  (* CSRA_DMA_RX3 = "156" *) 
  (* CSRA_DMA_RX4 = "160" *) 
  (* CSRA_DMA_RX5 = "164" *) 
  (* CSRA_DMA_RX6 = "168" *) 
  (* CSRA_DMA_RX7 = "172" *) 
  (* CSRA_DMA_RX8 = "176" *) 
  (* CSRA_DMA_RX9 = "180" *) 
  (* CSRA_DMA_TX0 = "96" *) 
  (* CSRA_DMA_TX1 = "100" *) 
  (* CSRA_DMA_TX2 = "104" *) 
  (* CSRA_DMA_TX3 = "108" *) 
  (* CSRA_DMA_TX4 = "112" *) 
  (* CSRA_DMA_TX5 = "116" *) 
  (* CSRA_DMA_TX6 = "120" *) 
  (* CSRA_DMA_TX7 = "124" *) 
  (* CSRA_DMA_TX8 = "128" *) 
  (* CSRA_DMA_TX9 = "132" *) 
  (* CSRA_MAC_ADDR0 = "16" *) 
  (* CSRA_MAC_ADDR1 = "20" *) 
  (* CSRA_STATUS = "4" *) 
  (* CSRA_TMP = "192" *) 
  (* CSRA_VERSION = "8" *) 
  (* CSR_BIT = "8" *) 
  (* GBE_CTL_ie = "31" *) 
  (* GBE_CTL_ie_MSK = "-2147483648" *) 
  (* GBE_CTL_phy_reset = "30" *) 
  (* GBE_CTL_phy_reset_MSK = "1073741824" *) 
  (* GBE_CTL_speed = "0" *) 
  (* GBE_CTL_speed_MSK = "3" *) 
  (* GBE_RX_CONF_enable = "1" *) 
  (* GBE_RX_CONF_enable_MSK = "2" *) 
  (* GBE_RX_CONF_jumbo = "2" *) 
  (* GBE_RX_CONF_jumbo_MSK = "4" *) 
  (* GBE_RX_CONF_no_chk_crc = "3" *) 
  (* GBE_RX_CONF_no_chk_crc_MSK = "8" *) 
  (* GBE_RX_CONF_promiscuous = "4" *) 
  (* GBE_RX_CONF_promiscuous_MSK = "16" *) 
  (* GBE_RX_CONF_reset = "0" *) 
  (* GBE_RX_CONF_reset_MSK = "1" *) 
  (* GBE_RX_DES_bnum = "0" *) 
  (* GBE_RX_DES_bnum_MSK = "65535" *) 
  (* GBE_RX_DES_items = "16" *) 
  (* GBE_RX_DES_items_MSK = "-65536" *) 
  (* GBE_RX_DMA_bchunk_MSK = "65535" *) 
  (* GBE_RX_DMA_empty = "0" *) 
  (* GBE_RX_DMA_empty_MSK = "1" *) 
  (* GBE_RX_DMA_full = "1" *) 
  (* GBE_RX_DMA_full_MSK = "2" *) 
  (* GBE_STS_ip = "31" *) 
  (* GBE_STS_ip_MSK = "-2147483648" *) 
  (* GBE_STS_phy_reset = "30" *) 
  (* GBE_STS_phy_reset_MSK = "1073741824" *) 
  (* GBE_STS_rgmii = "29" *) 
  (* GBE_STS_rgmii_MSK = "536870912" *) 
  (* GBE_TX_CONF_enable = "1" *) 
  (* GBE_TX_CONF_enable_MSK = "2" *) 
  (* GBE_TX_CONF_jumbo = "2" *) 
  (* GBE_TX_CONF_jumbo_MSK = "4" *) 
  (* GBE_TX_CONF_no_gen_crc = "3" *) 
  (* GBE_TX_CONF_no_gen_crc_MSK = "8" *) 
  (* GBE_TX_CONF_reset = "0" *) 
  (* GBE_TX_CONF_reset_MSK = "1" *) 
  (* GBE_TX_DES_items = "0" *) 
  (* GBE_TX_DES_items_MSK = "65535" *) 
  (* GBE_TX_DES_rooms = "16" *) 
  (* GBE_TX_DES_rooms_MSK = "-65536" *) 
  (* GBE_TX_DMA_bchunk_MSK = "65535" *) 
  (* GBE_TX_DMA_empty = "0" *) 
  (* GBE_TX_DMA_empty_MSK = "1" *) 
  (* GBE_TX_DMA_full = "1" *) 
  (* GBE_TX_DMA_full_MSK = "2" *) 
  (* MAC_ADDR = "48'b000000100001001000110100010101100111100000000000" *) 
  (* MAC_RTL_VERSION = "538510083" *) 
  (* NUM_10MSEC = "1000000" *) 
  (* RX_FAW = "4" *) 
  (* ST_IDLE = "0" *) 
  (* ST_POST = "2" *) 
  (* ST_RESET = "1" *) 
  (* TX_FAW = "4" *) 
  gig_eth_mac_csr u_csr
       (.CLK(ACLK),
        .IRQ(IRQ),
        .RESET_N(ARESETn),
        .T_RADDR({\Traddr_reg_n_0_[7] ,\Traddr_reg_n_0_[6] ,\Traddr_reg_n_0_[5] ,\Traddr_reg_n_0_[4] ,\Traddr_reg_n_0_[3] ,\Traddr_reg_n_0_[2] ,\Traddr_reg_n_0_[1] ,\Traddr_reg_n_0_[0] }),
        .T_RDATA(Trdata),
        .T_RDEN(Tren_reg_n_0),
        .T_WADDR(Twaddr),
        .T_WDATA(Twdata),
        .T_WREN({u_csr_i_1_n_0,u_csr_i_2_n_0,u_csr_i_3_n_0,u_csr_i_4_n_0}),
        .conf_mac_addr(conf_mac_addr),
        .conf_mac_speed({u_csr_n_34,u_csr_n_35}),
        .conf_rx_en(conf_rx_en),
        .conf_rx_jumbo_en(conf_rx_jumbo_en),
        .conf_rx_no_chk_crc(conf_rx_no_chk_crc),
        .conf_rx_promiscuous(conf_rx_promiscuous),
        .conf_rx_reset(conf_rx_reset),
        .conf_tx_en(conf_tx_en),
        .conf_tx_jumbo_en(conf_tx_jumbo_en),
        .conf_tx_no_gen_crc(conf_tx_no_gen_crc),
        .conf_tx_reset(conf_tx_reset),
        .crc_err(crc_err),
        .gbe_phy_reset_n(gbe_phy_reset_n),
        .rx_addr_empty(rx_addr_empty),
        .rx_addr_end({\rx_addr_end_reg[31] ,rx_addr_end}),
        .rx_addr_full(rx_addr_full),
        .rx_addr_head(rx_addr_head),
        .rx_addr_head_update(rx_addr_head_update),
        .rx_addr_start(rx_addr_start),
        .rx_addr_tail(rx_addr_tail),
        .rx_bchunk(DMA_RX_BCHUNK),
        .rx_descriptor_full(rx_descriptor_full),
        .rx_descriptor_wr_bnum(\T_RDATA[14]_i_2 ),
        .rx_descriptor_wr_dst(\T_RDATA[2]_i_8 ),
        .rx_descriptor_wr_rdy(rx_descriptor_wr_rdy),
        .rx_descriptor_wr_vld(rx_descriptor_wr_vld),
        .tx_addr_empty(tx_addr_empty),
        .tx_addr_end(tx_addr_end),
        .tx_addr_full(tx_addr_full),
        .tx_addr_head(tx_addr_head),
        .tx_addr_start(tx_addr_start),
        .tx_addr_tail(tx_addr_tail),
        .tx_addr_tail_update(tx_addr_tail_update),
        .tx_bchunk(DMA_TX_BCHUNK),
        .tx_descriptor_rd_bnum(desc_tx_bnum),
        .tx_descriptor_rd_rdy(tx_descriptor_rd_rdy),
        .tx_descriptor_rd_src(desc_tx_src),
        .tx_descriptor_rd_vld(tx_descriptor_rd_vld));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT2 #(
    .INIT(4'h8)) 
    u_csr_i_1
       (.I0(\Twstrb_reg_n_0_[3] ),
        .I1(Twen),
        .O(u_csr_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT2 #(
    .INIT(4'h8)) 
    u_csr_i_2
       (.I0(Twen),
        .I1(\Twstrb_reg_n_0_[2] ),
        .O(u_csr_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT2 #(
    .INIT(4'h8)) 
    u_csr_i_3
       (.I0(\Twstrb_reg_n_0_[1] ),
        .I1(Twen),
        .O(u_csr_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT2 #(
    .INIT(4'h8)) 
    u_csr_i_4
       (.I0(Twen),
        .I1(\Twstrb_reg_n_0_[0] ),
        .O(u_csr_i_4_n_0));
endmodule

(* FAW = "4" *) (* FDT = "16" *) (* FDW = "48" *) 
module gig_eth_mac_fifo_sync
   (rstn,
    clr,
    clk,
    wr_rdy,
    wr_vld,
    wr_din,
    rd_rdy,
    rd_vld,
    rd_dout,
    full,
    empty,
    item_cnt,
    room_cnt);
  input rstn;
  input clr;
  input clk;
  output wr_rdy;
  input wr_vld;
  input [47:0]wr_din;
  input rd_rdy;
  output rd_vld;
  output [47:0]rd_dout;
  output full;
  output empty;
  output [4:0]item_cnt;
  output [4:0]room_cnt;

  wire Mem_reg_0_15_42_47_i_1_n_0;
  wire clk;
  wire clr;
  wire empty;
  wire empty_INST_0_i_1_n_0;
  wire [4:0]fifo_head;
  wire \fifo_head[0]_i_1_n_0 ;
  wire \fifo_head[1]_i_1_n_0 ;
  wire \fifo_head[2]_i_1_n_0 ;
  wire \fifo_head[3]_i_1_n_0 ;
  wire \fifo_head[4]_i_2_n_0 ;
  wire [3:0]fifo_head_reg_rep__0;
  wire [4:0]fifo_tail;
  wire \fifo_tail[0]_i_1_n_0 ;
  wire \fifo_tail[1]_i_1_n_0 ;
  wire \fifo_tail[2]_i_1_n_0 ;
  wire \fifo_tail[3]_i_1_n_0 ;
  wire \fifo_tail[4]_i_2_n_0 ;
  wire full;
  wire [3:0]\^item_cnt ;
  wire item_cnt13_out;
  wire \item_cnt[0]_i_1_n_0 ;
  wire \item_cnt[1]_i_1_n_0 ;
  wire \item_cnt[2]_i_1_n_0 ;
  wire \item_cnt[3]_i_1_n_0 ;
  wire \item_cnt[4]_i_1_n_0 ;
  wire \item_cnt[4]_i_2_n_0 ;
  wire \item_cnt[4]_i_3_n_0 ;
  wire \item_cnt[4]_i_4_n_0 ;
  wire \item_cnt[4]_i_5_n_0 ;
  wire \item_cnt[4]_i_6_n_0 ;
  wire \item_cnt[4]_i_7_n_0 ;
  wire next_head;
  wire \next_head[0]_i_1_n_0 ;
  wire \next_head[1]_i_1_n_0 ;
  wire \next_head[2]_i_1_n_0 ;
  wire \next_head[3]_i_1_n_0 ;
  wire \next_head[4]_i_1_n_0 ;
  wire [4:0]next_head_reg__0;
  wire next_tail;
  wire \next_tail[0]_i_1_n_0 ;
  wire \next_tail[1]_i_1_n_0 ;
  wire \next_tail[2]_i_1_n_0 ;
  wire \next_tail[3]_i_1_n_0 ;
  wire \next_tail[4]_i_1_n_0 ;
  wire [4:0]next_tail_reg__0;
  wire [47:0]rd_dout;
  wire rd_rdy;
  wire rd_vld;
  wire [4:1]\^room_cnt ;
  wire rstn;
  wire [47:0]wr_din;
  wire wr_rdy;
  wire wr_vld;
  wire [1:0]NLW_Mem_reg_0_15_0_5_DOD_UNCONNECTED;
  wire [1:0]NLW_Mem_reg_0_15_12_17_DOD_UNCONNECTED;
  wire [1:0]NLW_Mem_reg_0_15_18_23_DOD_UNCONNECTED;
  wire [1:0]NLW_Mem_reg_0_15_24_29_DOD_UNCONNECTED;
  wire [1:0]NLW_Mem_reg_0_15_30_35_DOD_UNCONNECTED;
  wire [1:0]NLW_Mem_reg_0_15_36_41_DOD_UNCONNECTED;
  wire [1:0]NLW_Mem_reg_0_15_42_47_DOD_UNCONNECTED;
  wire [1:0]NLW_Mem_reg_0_15_6_11_DOD_UNCONNECTED;

  assign item_cnt[4] = full;
  assign item_cnt[3:0] = \^item_cnt [3:0];
  assign room_cnt[4:1] = \^room_cnt [4:1];
  assign room_cnt[0] = \^item_cnt [0];
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "5" *) 
  RAM32M Mem_reg_0_15_0_5
       (.ADDRA({1'b0,fifo_head_reg_rep__0}),
        .ADDRB({1'b0,fifo_head_reg_rep__0}),
        .ADDRC({1'b0,fifo_head_reg_rep__0}),
        .ADDRD({1'b0,fifo_tail[3:0]}),
        .DIA(wr_din[1:0]),
        .DIB(wr_din[3:2]),
        .DIC(wr_din[5:4]),
        .DID({1'b0,1'b0}),
        .DOA(rd_dout[1:0]),
        .DOB(rd_dout[3:2]),
        .DOC(rd_dout[5:4]),
        .DOD(NLW_Mem_reg_0_15_0_5_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(Mem_reg_0_15_42_47_i_1_n_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_slice_begin = "12" *) 
  (* ram_slice_end = "17" *) 
  RAM32M Mem_reg_0_15_12_17
       (.ADDRA({1'b0,fifo_head_reg_rep__0}),
        .ADDRB({1'b0,fifo_head_reg_rep__0}),
        .ADDRC({1'b0,fifo_head_reg_rep__0}),
        .ADDRD({1'b0,fifo_tail[3:0]}),
        .DIA(wr_din[13:12]),
        .DIB(wr_din[15:14]),
        .DIC(wr_din[17:16]),
        .DID({1'b0,1'b0}),
        .DOA(rd_dout[13:12]),
        .DOB(rd_dout[15:14]),
        .DOC(rd_dout[17:16]),
        .DOD(NLW_Mem_reg_0_15_12_17_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(Mem_reg_0_15_42_47_i_1_n_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_slice_begin = "18" *) 
  (* ram_slice_end = "23" *) 
  RAM32M Mem_reg_0_15_18_23
       (.ADDRA({1'b0,fifo_head_reg_rep__0}),
        .ADDRB({1'b0,fifo_head_reg_rep__0}),
        .ADDRC({1'b0,fifo_head_reg_rep__0}),
        .ADDRD({1'b0,fifo_tail[3:0]}),
        .DIA(wr_din[19:18]),
        .DIB(wr_din[21:20]),
        .DIC(wr_din[23:22]),
        .DID({1'b0,1'b0}),
        .DOA(rd_dout[19:18]),
        .DOB(rd_dout[21:20]),
        .DOC(rd_dout[23:22]),
        .DOD(NLW_Mem_reg_0_15_18_23_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(Mem_reg_0_15_42_47_i_1_n_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_slice_begin = "24" *) 
  (* ram_slice_end = "29" *) 
  RAM32M Mem_reg_0_15_24_29
       (.ADDRA({1'b0,fifo_head_reg_rep__0}),
        .ADDRB({1'b0,fifo_head_reg_rep__0}),
        .ADDRC({1'b0,fifo_head_reg_rep__0}),
        .ADDRD({1'b0,fifo_tail[3:0]}),
        .DIA(wr_din[25:24]),
        .DIB(wr_din[27:26]),
        .DIC(wr_din[29:28]),
        .DID({1'b0,1'b0}),
        .DOA(rd_dout[25:24]),
        .DOB(rd_dout[27:26]),
        .DOC(rd_dout[29:28]),
        .DOD(NLW_Mem_reg_0_15_24_29_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(Mem_reg_0_15_42_47_i_1_n_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_slice_begin = "30" *) 
  (* ram_slice_end = "35" *) 
  RAM32M Mem_reg_0_15_30_35
       (.ADDRA({1'b0,fifo_head_reg_rep__0}),
        .ADDRB({1'b0,fifo_head_reg_rep__0}),
        .ADDRC({1'b0,fifo_head_reg_rep__0}),
        .ADDRD({1'b0,fifo_tail[3:0]}),
        .DIA(wr_din[31:30]),
        .DIB(wr_din[33:32]),
        .DIC(wr_din[35:34]),
        .DID({1'b0,1'b0}),
        .DOA(rd_dout[31:30]),
        .DOB(rd_dout[33:32]),
        .DOC(rd_dout[35:34]),
        .DOD(NLW_Mem_reg_0_15_30_35_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(Mem_reg_0_15_42_47_i_1_n_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_slice_begin = "36" *) 
  (* ram_slice_end = "41" *) 
  RAM32M Mem_reg_0_15_36_41
       (.ADDRA({1'b0,fifo_head_reg_rep__0}),
        .ADDRB({1'b0,fifo_head_reg_rep__0}),
        .ADDRC({1'b0,fifo_head_reg_rep__0}),
        .ADDRD({1'b0,fifo_tail[3:0]}),
        .DIA(wr_din[37:36]),
        .DIB(wr_din[39:38]),
        .DIC(wr_din[41:40]),
        .DID({1'b0,1'b0}),
        .DOA(rd_dout[37:36]),
        .DOB(rd_dout[39:38]),
        .DOC(rd_dout[41:40]),
        .DOD(NLW_Mem_reg_0_15_36_41_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(Mem_reg_0_15_42_47_i_1_n_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_slice_begin = "42" *) 
  (* ram_slice_end = "47" *) 
  RAM32M Mem_reg_0_15_42_47
       (.ADDRA({1'b0,fifo_head_reg_rep__0}),
        .ADDRB({1'b0,fifo_head_reg_rep__0}),
        .ADDRC({1'b0,fifo_head_reg_rep__0}),
        .ADDRD({1'b0,fifo_tail[3:0]}),
        .DIA(wr_din[43:42]),
        .DIB(wr_din[45:44]),
        .DIC(wr_din[47:46]),
        .DID({1'b0,1'b0}),
        .DOA(rd_dout[43:42]),
        .DOB(rd_dout[45:44]),
        .DOC(rd_dout[47:46]),
        .DOD(NLW_Mem_reg_0_15_42_47_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(Mem_reg_0_15_42_47_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    Mem_reg_0_15_42_47_i_1
       (.I0(wr_vld),
        .I1(full),
        .O(Mem_reg_0_15_42_47_i_1_n_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_slice_begin = "6" *) 
  (* ram_slice_end = "11" *) 
  RAM32M Mem_reg_0_15_6_11
       (.ADDRA({1'b0,fifo_head_reg_rep__0}),
        .ADDRB({1'b0,fifo_head_reg_rep__0}),
        .ADDRC({1'b0,fifo_head_reg_rep__0}),
        .ADDRD({1'b0,fifo_tail[3:0]}),
        .DIA(wr_din[7:6]),
        .DIB(wr_din[9:8]),
        .DIC(wr_din[11:10]),
        .DID({1'b0,1'b0}),
        .DOA(rd_dout[7:6]),
        .DOB(rd_dout[9:8]),
        .DOC(rd_dout[11:10]),
        .DOD(NLW_Mem_reg_0_15_6_11_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(Mem_reg_0_15_42_47_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT5 #(
    .INIT(32'h82000082)) 
    empty_INST_0
       (.I0(empty_INST_0_i_1_n_0),
        .I1(fifo_tail[0]),
        .I2(fifo_head[0]),
        .I3(fifo_tail[4]),
        .I4(fifo_head[4]),
        .O(empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    empty_INST_0_i_1
       (.I0(fifo_tail[3]),
        .I1(fifo_head[3]),
        .I2(fifo_tail[1]),
        .I3(fifo_head[1]),
        .I4(fifo_head[2]),
        .I5(fifo_tail[2]),
        .O(empty_INST_0_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \fifo_head[0]_i_1 
       (.I0(next_head_reg__0[0]),
        .I1(clr),
        .O(\fifo_head[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \fifo_head[1]_i_1 
       (.I0(next_head_reg__0[1]),
        .I1(clr),
        .O(\fifo_head[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \fifo_head[2]_i_1 
       (.I0(next_head_reg__0[2]),
        .I1(clr),
        .O(\fifo_head[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \fifo_head[3]_i_1 
       (.I0(clr),
        .I1(next_head_reg__0[3]),
        .O(\fifo_head[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \fifo_head[4]_i_1 
       (.I0(clr),
        .I1(\item_cnt[4]_i_4_n_0 ),
        .O(next_head));
  LUT2 #(
    .INIT(4'h2)) 
    \fifo_head[4]_i_2 
       (.I0(next_head_reg__0[4]),
        .I1(clr),
        .O(\fifo_head[4]_i_2_n_0 ));
  FDCE \fifo_head_reg[0] 
       (.C(clk),
        .CE(next_head),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\fifo_head[0]_i_1_n_0 ),
        .Q(fifo_head[0]));
  FDCE \fifo_head_reg[1] 
       (.C(clk),
        .CE(next_head),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\fifo_head[1]_i_1_n_0 ),
        .Q(fifo_head[1]));
  FDCE \fifo_head_reg[2] 
       (.C(clk),
        .CE(next_head),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\fifo_head[2]_i_1_n_0 ),
        .Q(fifo_head[2]));
  FDCE \fifo_head_reg[3] 
       (.C(clk),
        .CE(next_head),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\fifo_head[3]_i_1_n_0 ),
        .Q(fifo_head[3]));
  FDCE \fifo_head_reg[4] 
       (.C(clk),
        .CE(next_head),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\fifo_head[4]_i_2_n_0 ),
        .Q(fifo_head[4]));
  FDCE \fifo_head_reg_rep[0] 
       (.C(clk),
        .CE(next_head),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\fifo_head[0]_i_1_n_0 ),
        .Q(fifo_head_reg_rep__0[0]));
  FDCE \fifo_head_reg_rep[1] 
       (.C(clk),
        .CE(next_head),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\fifo_head[1]_i_1_n_0 ),
        .Q(fifo_head_reg_rep__0[1]));
  FDCE \fifo_head_reg_rep[2] 
       (.C(clk),
        .CE(next_head),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\fifo_head[2]_i_1_n_0 ),
        .Q(fifo_head_reg_rep__0[2]));
  FDCE \fifo_head_reg_rep[3] 
       (.C(clk),
        .CE(next_head),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\fifo_head[3]_i_1_n_0 ),
        .Q(fifo_head_reg_rep__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \fifo_tail[0]_i_1 
       (.I0(clr),
        .I1(next_tail_reg__0[0]),
        .O(\fifo_tail[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \fifo_tail[1]_i_1 
       (.I0(next_tail_reg__0[1]),
        .I1(clr),
        .O(\fifo_tail[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \fifo_tail[2]_i_1 
       (.I0(next_tail_reg__0[2]),
        .I1(clr),
        .O(\fifo_tail[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \fifo_tail[3]_i_1 
       (.I0(next_tail_reg__0[3]),
        .I1(clr),
        .O(\fifo_tail[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAE)) 
    \fifo_tail[4]_i_1 
       (.I0(clr),
        .I1(wr_vld),
        .I2(full),
        .O(next_tail));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \fifo_tail[4]_i_2 
       (.I0(clr),
        .I1(next_tail_reg__0[4]),
        .O(\fifo_tail[4]_i_2_n_0 ));
  FDCE \fifo_tail_reg[0] 
       (.C(clk),
        .CE(next_tail),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\fifo_tail[0]_i_1_n_0 ),
        .Q(fifo_tail[0]));
  FDCE \fifo_tail_reg[1] 
       (.C(clk),
        .CE(next_tail),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\fifo_tail[1]_i_1_n_0 ),
        .Q(fifo_tail[1]));
  FDCE \fifo_tail_reg[2] 
       (.C(clk),
        .CE(next_tail),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\fifo_tail[2]_i_1_n_0 ),
        .Q(fifo_tail[2]));
  FDCE \fifo_tail_reg[3] 
       (.C(clk),
        .CE(next_tail),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\fifo_tail[3]_i_1_n_0 ),
        .Q(fifo_tail[3]));
  FDCE \fifo_tail_reg[4] 
       (.C(clk),
        .CE(next_tail),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\fifo_tail[4]_i_2_n_0 ),
        .Q(fifo_tail[4]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \item_cnt[0]_i_1 
       (.I0(clr),
        .I1(\^item_cnt [0]),
        .O(\item_cnt[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000F70808F7)) 
    \item_cnt[1]_i_1 
       (.I0(\item_cnt[4]_i_4_n_0 ),
        .I1(wr_vld),
        .I2(full),
        .I3(\^item_cnt [0]),
        .I4(\^item_cnt [1]),
        .I5(clr),
        .O(\item_cnt[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT5 #(
    .INIT(32'h00007E81)) 
    \item_cnt[2]_i_1 
       (.I0(\^item_cnt [0]),
        .I1(\^item_cnt [1]),
        .I2(item_cnt13_out),
        .I3(\^item_cnt [2]),
        .I4(clr),
        .O(\item_cnt[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1444444444444441)) 
    \item_cnt[3]_i_1 
       (.I0(clr),
        .I1(\^item_cnt [3]),
        .I2(\^item_cnt [2]),
        .I3(\^item_cnt [0]),
        .I4(\^item_cnt [1]),
        .I5(item_cnt13_out),
        .O(\item_cnt[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT5 #(
    .INIT(32'h0000D500)) 
    \item_cnt[3]_i_2 
       (.I0(rd_rdy),
        .I1(empty_INST_0_i_1_n_0),
        .I2(\item_cnt[4]_i_6_n_0 ),
        .I3(wr_vld),
        .I4(full),
        .O(item_cnt13_out));
  LUT4 #(
    .INIT(16'hBBEB)) 
    \item_cnt[4]_i_1 
       (.I0(clr),
        .I1(\item_cnt[4]_i_4_n_0 ),
        .I2(wr_vld),
        .I3(full),
        .O(\item_cnt[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1222222222222221)) 
    \item_cnt[4]_i_2 
       (.I0(full),
        .I1(clr),
        .I2(\^item_cnt [2]),
        .I3(\item_cnt[4]_i_5_n_0 ),
        .I4(\^item_cnt [1]),
        .I5(\^item_cnt [3]),
        .O(\item_cnt[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \item_cnt[4]_i_3 
       (.I0(rstn),
        .O(\item_cnt[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h90090000FFFFFFFF)) 
    \item_cnt[4]_i_4 
       (.I0(fifo_head[4]),
        .I1(fifo_tail[4]),
        .I2(fifo_head[0]),
        .I3(fifo_tail[0]),
        .I4(empty_INST_0_i_1_n_0),
        .I5(rd_rdy),
        .O(\item_cnt[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h22222222BB2B2B2B)) 
    \item_cnt[4]_i_5 
       (.I0(\^item_cnt [0]),
        .I1(\^item_cnt [1]),
        .I2(rd_rdy),
        .I3(empty_INST_0_i_1_n_0),
        .I4(\item_cnt[4]_i_6_n_0 ),
        .I5(\item_cnt[4]_i_7_n_0 ),
        .O(\item_cnt[4]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT4 #(
    .INIT(16'h9009)) 
    \item_cnt[4]_i_6 
       (.I0(fifo_tail[0]),
        .I1(fifo_head[0]),
        .I2(fifo_tail[4]),
        .I3(fifo_head[4]),
        .O(\item_cnt[4]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'hD)) 
    \item_cnt[4]_i_7 
       (.I0(wr_vld),
        .I1(full),
        .O(\item_cnt[4]_i_7_n_0 ));
  FDCE \item_cnt_reg[0] 
       (.C(clk),
        .CE(\item_cnt[4]_i_1_n_0 ),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\item_cnt[0]_i_1_n_0 ),
        .Q(\^item_cnt [0]));
  FDCE \item_cnt_reg[1] 
       (.C(clk),
        .CE(\item_cnt[4]_i_1_n_0 ),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\item_cnt[1]_i_1_n_0 ),
        .Q(\^item_cnt [1]));
  FDCE \item_cnt_reg[2] 
       (.C(clk),
        .CE(\item_cnt[4]_i_1_n_0 ),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\item_cnt[2]_i_1_n_0 ),
        .Q(\^item_cnt [2]));
  FDCE \item_cnt_reg[3] 
       (.C(clk),
        .CE(\item_cnt[4]_i_1_n_0 ),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\item_cnt[3]_i_1_n_0 ),
        .Q(\^item_cnt [3]));
  FDCE \item_cnt_reg[4] 
       (.C(clk),
        .CE(\item_cnt[4]_i_1_n_0 ),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\item_cnt[4]_i_2_n_0 ),
        .Q(full));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'hD)) 
    \next_head[0]_i_1 
       (.I0(next_head_reg__0[0]),
        .I1(clr),
        .O(\next_head[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'h12)) 
    \next_head[1]_i_1 
       (.I0(next_head_reg__0[1]),
        .I1(clr),
        .I2(next_head_reg__0[0]),
        .O(\next_head[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT4 #(
    .INIT(16'h0078)) 
    \next_head[2]_i_1 
       (.I0(next_head_reg__0[0]),
        .I1(next_head_reg__0[1]),
        .I2(next_head_reg__0[2]),
        .I3(clr),
        .O(\next_head[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT5 #(
    .INIT(32'h00007F80)) 
    \next_head[3]_i_1 
       (.I0(next_head_reg__0[0]),
        .I1(next_head_reg__0[1]),
        .I2(next_head_reg__0[2]),
        .I3(next_head_reg__0[3]),
        .I4(clr),
        .O(\next_head[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000007FFF8000)) 
    \next_head[4]_i_1 
       (.I0(next_head_reg__0[2]),
        .I1(next_head_reg__0[1]),
        .I2(next_head_reg__0[0]),
        .I3(next_head_reg__0[3]),
        .I4(next_head_reg__0[4]),
        .I5(clr),
        .O(\next_head[4]_i_1_n_0 ));
  FDPE \next_head_reg[0] 
       (.C(clk),
        .CE(next_head),
        .D(\next_head[0]_i_1_n_0 ),
        .PRE(\item_cnt[4]_i_3_n_0 ),
        .Q(next_head_reg__0[0]));
  FDCE \next_head_reg[1] 
       (.C(clk),
        .CE(next_head),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\next_head[1]_i_1_n_0 ),
        .Q(next_head_reg__0[1]));
  FDCE \next_head_reg[2] 
       (.C(clk),
        .CE(next_head),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\next_head[2]_i_1_n_0 ),
        .Q(next_head_reg__0[2]));
  FDCE \next_head_reg[3] 
       (.C(clk),
        .CE(next_head),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\next_head[3]_i_1_n_0 ),
        .Q(next_head_reg__0[3]));
  FDCE \next_head_reg[4] 
       (.C(clk),
        .CE(next_head),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\next_head[4]_i_1_n_0 ),
        .Q(next_head_reg__0[4]));
  LUT2 #(
    .INIT(4'hB)) 
    \next_tail[0]_i_1 
       (.I0(clr),
        .I1(next_tail_reg__0[0]),
        .O(\next_tail[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'h12)) 
    \next_tail[1]_i_1 
       (.I0(next_tail_reg__0[1]),
        .I1(clr),
        .I2(next_tail_reg__0[0]),
        .O(\next_tail[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT4 #(
    .INIT(16'h0078)) 
    \next_tail[2]_i_1 
       (.I0(next_tail_reg__0[0]),
        .I1(next_tail_reg__0[1]),
        .I2(next_tail_reg__0[2]),
        .I3(clr),
        .O(\next_tail[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT5 #(
    .INIT(32'h00007F80)) 
    \next_tail[3]_i_1 
       (.I0(next_tail_reg__0[0]),
        .I1(next_tail_reg__0[1]),
        .I2(next_tail_reg__0[2]),
        .I3(next_tail_reg__0[3]),
        .I4(clr),
        .O(\next_tail[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000007FFF8000)) 
    \next_tail[4]_i_1 
       (.I0(next_tail_reg__0[2]),
        .I1(next_tail_reg__0[1]),
        .I2(next_tail_reg__0[0]),
        .I3(next_tail_reg__0[3]),
        .I4(next_tail_reg__0[4]),
        .I5(clr),
        .O(\next_tail[4]_i_1_n_0 ));
  FDPE \next_tail_reg[0] 
       (.C(clk),
        .CE(next_tail),
        .D(\next_tail[0]_i_1_n_0 ),
        .PRE(\item_cnt[4]_i_3_n_0 ),
        .Q(next_tail_reg__0[0]));
  FDCE \next_tail_reg[1] 
       (.C(clk),
        .CE(next_tail),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\next_tail[1]_i_1_n_0 ),
        .Q(next_tail_reg__0[1]));
  FDCE \next_tail_reg[2] 
       (.C(clk),
        .CE(next_tail),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\next_tail[2]_i_1_n_0 ),
        .Q(next_tail_reg__0[2]));
  FDCE \next_tail_reg[3] 
       (.C(clk),
        .CE(next_tail),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\next_tail[3]_i_1_n_0 ),
        .Q(next_tail_reg__0[3]));
  FDCE \next_tail_reg[4] 
       (.C(clk),
        .CE(next_tail),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\next_tail[4]_i_1_n_0 ),
        .Q(next_tail_reg__0[4]));
  LUT1 #(
    .INIT(2'h1)) 
    rd_vld_INST_0
       (.I0(empty),
        .O(rd_vld));
  LUT2 #(
    .INIT(4'h6)) 
    \room_cnt[1]_INST_0 
       (.I0(\^item_cnt [1]),
        .I1(\^item_cnt [0]),
        .O(\^room_cnt [1]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'h1E)) 
    \room_cnt[2]_INST_0 
       (.I0(\^item_cnt [0]),
        .I1(\^item_cnt [1]),
        .I2(\^item_cnt [2]),
        .O(\^room_cnt [2]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT4 #(
    .INIT(16'h5556)) 
    \room_cnt[3]_INST_0 
       (.I0(\^item_cnt [3]),
        .I1(\^item_cnt [0]),
        .I2(\^item_cnt [1]),
        .I3(\^item_cnt [2]),
        .O(\^room_cnt [3]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \room_cnt[4]_INST_0 
       (.I0(\^item_cnt [3]),
        .I1(\^item_cnt [0]),
        .I2(\^item_cnt [1]),
        .I3(\^item_cnt [2]),
        .I4(full),
        .O(\^room_cnt [4]));
  LUT1 #(
    .INIT(2'h1)) 
    wr_rdy_INST_0
       (.I0(full),
        .O(wr_rdy));
endmodule

(* FAW = "4" *) (* FDT = "16" *) (* FDW = "48" *) 
(* ORIG_REF_NAME = "gig_eth_mac_fifo_sync" *) 
module gig_eth_mac_fifo_sync__1
   (rstn,
    clr,
    clk,
    wr_rdy,
    wr_vld,
    wr_din,
    rd_rdy,
    rd_vld,
    rd_dout,
    full,
    empty,
    item_cnt,
    room_cnt);
  input rstn;
  input clr;
  input clk;
  output wr_rdy;
  input wr_vld;
  input [47:0]wr_din;
  input rd_rdy;
  output rd_vld;
  output [47:0]rd_dout;
  output full;
  output empty;
  output [4:0]item_cnt;
  output [4:0]room_cnt;

  wire Mem_reg_0_15_42_47_i_1_n_0;
  wire clk;
  wire clr;
  wire empty;
  wire empty_INST_0_i_1_n_0;
  wire [4:0]fifo_head;
  wire \fifo_head[0]_i_1_n_0 ;
  wire \fifo_head[1]_i_1_n_0 ;
  wire \fifo_head[2]_i_1_n_0 ;
  wire \fifo_head[3]_i_1_n_0 ;
  wire \fifo_head[4]_i_2_n_0 ;
  wire [3:0]fifo_head_reg_rep__0;
  wire [4:0]fifo_tail;
  wire \fifo_tail[0]_i_1_n_0 ;
  wire \fifo_tail[1]_i_1_n_0 ;
  wire \fifo_tail[2]_i_1_n_0 ;
  wire \fifo_tail[3]_i_1_n_0 ;
  wire \fifo_tail[4]_i_2_n_0 ;
  wire full;
  wire [3:0]\^item_cnt ;
  wire item_cnt13_out;
  wire \item_cnt[0]_i_1_n_0 ;
  wire \item_cnt[1]_i_1_n_0 ;
  wire \item_cnt[2]_i_1_n_0 ;
  wire \item_cnt[3]_i_1_n_0 ;
  wire \item_cnt[4]_i_1_n_0 ;
  wire \item_cnt[4]_i_2_n_0 ;
  wire \item_cnt[4]_i_3_n_0 ;
  wire \item_cnt[4]_i_4_n_0 ;
  wire \item_cnt[4]_i_5_n_0 ;
  wire \item_cnt[4]_i_6_n_0 ;
  wire \item_cnt[4]_i_7_n_0 ;
  wire next_head;
  wire \next_head[0]_i_1_n_0 ;
  wire \next_head[1]_i_1_n_0 ;
  wire \next_head[2]_i_1_n_0 ;
  wire \next_head[3]_i_1_n_0 ;
  wire \next_head[4]_i_1_n_0 ;
  wire [4:0]next_head_reg__0;
  wire next_tail;
  wire \next_tail[0]_i_1_n_0 ;
  wire \next_tail[1]_i_1_n_0 ;
  wire \next_tail[2]_i_1_n_0 ;
  wire \next_tail[3]_i_1_n_0 ;
  wire \next_tail[4]_i_1_n_0 ;
  wire [4:0]next_tail_reg__0;
  wire [47:0]rd_dout;
  wire rd_rdy;
  wire rd_vld;
  wire [4:1]\^room_cnt ;
  wire rstn;
  wire [47:0]wr_din;
  wire wr_rdy;
  wire wr_vld;
  wire [1:0]NLW_Mem_reg_0_15_0_5_DOD_UNCONNECTED;
  wire [1:0]NLW_Mem_reg_0_15_12_17_DOD_UNCONNECTED;
  wire [1:0]NLW_Mem_reg_0_15_18_23_DOD_UNCONNECTED;
  wire [1:0]NLW_Mem_reg_0_15_24_29_DOD_UNCONNECTED;
  wire [1:0]NLW_Mem_reg_0_15_30_35_DOD_UNCONNECTED;
  wire [1:0]NLW_Mem_reg_0_15_36_41_DOD_UNCONNECTED;
  wire [1:0]NLW_Mem_reg_0_15_42_47_DOD_UNCONNECTED;
  wire [1:0]NLW_Mem_reg_0_15_6_11_DOD_UNCONNECTED;

  assign item_cnt[4] = full;
  assign item_cnt[3:0] = \^item_cnt [3:0];
  assign room_cnt[4:1] = \^room_cnt [4:1];
  assign room_cnt[0] = \^item_cnt [0];
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "5" *) 
  RAM32M Mem_reg_0_15_0_5
       (.ADDRA({1'b0,fifo_head_reg_rep__0}),
        .ADDRB({1'b0,fifo_head_reg_rep__0}),
        .ADDRC({1'b0,fifo_head_reg_rep__0}),
        .ADDRD({1'b0,fifo_tail[3:0]}),
        .DIA(wr_din[1:0]),
        .DIB(wr_din[3:2]),
        .DIC(wr_din[5:4]),
        .DID({1'b0,1'b0}),
        .DOA(rd_dout[1:0]),
        .DOB(rd_dout[3:2]),
        .DOC(rd_dout[5:4]),
        .DOD(NLW_Mem_reg_0_15_0_5_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(Mem_reg_0_15_42_47_i_1_n_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_slice_begin = "12" *) 
  (* ram_slice_end = "17" *) 
  RAM32M Mem_reg_0_15_12_17
       (.ADDRA({1'b0,fifo_head_reg_rep__0}),
        .ADDRB({1'b0,fifo_head_reg_rep__0}),
        .ADDRC({1'b0,fifo_head_reg_rep__0}),
        .ADDRD({1'b0,fifo_tail[3:0]}),
        .DIA(wr_din[13:12]),
        .DIB(wr_din[15:14]),
        .DIC(wr_din[17:16]),
        .DID({1'b0,1'b0}),
        .DOA(rd_dout[13:12]),
        .DOB(rd_dout[15:14]),
        .DOC(rd_dout[17:16]),
        .DOD(NLW_Mem_reg_0_15_12_17_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(Mem_reg_0_15_42_47_i_1_n_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_slice_begin = "18" *) 
  (* ram_slice_end = "23" *) 
  RAM32M Mem_reg_0_15_18_23
       (.ADDRA({1'b0,fifo_head_reg_rep__0}),
        .ADDRB({1'b0,fifo_head_reg_rep__0}),
        .ADDRC({1'b0,fifo_head_reg_rep__0}),
        .ADDRD({1'b0,fifo_tail[3:0]}),
        .DIA(wr_din[19:18]),
        .DIB(wr_din[21:20]),
        .DIC(wr_din[23:22]),
        .DID({1'b0,1'b0}),
        .DOA(rd_dout[19:18]),
        .DOB(rd_dout[21:20]),
        .DOC(rd_dout[23:22]),
        .DOD(NLW_Mem_reg_0_15_18_23_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(Mem_reg_0_15_42_47_i_1_n_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_slice_begin = "24" *) 
  (* ram_slice_end = "29" *) 
  RAM32M Mem_reg_0_15_24_29
       (.ADDRA({1'b0,fifo_head_reg_rep__0}),
        .ADDRB({1'b0,fifo_head_reg_rep__0}),
        .ADDRC({1'b0,fifo_head_reg_rep__0}),
        .ADDRD({1'b0,fifo_tail[3:0]}),
        .DIA(wr_din[25:24]),
        .DIB(wr_din[27:26]),
        .DIC(wr_din[29:28]),
        .DID({1'b0,1'b0}),
        .DOA(rd_dout[25:24]),
        .DOB(rd_dout[27:26]),
        .DOC(rd_dout[29:28]),
        .DOD(NLW_Mem_reg_0_15_24_29_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(Mem_reg_0_15_42_47_i_1_n_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_slice_begin = "30" *) 
  (* ram_slice_end = "35" *) 
  RAM32M Mem_reg_0_15_30_35
       (.ADDRA({1'b0,fifo_head_reg_rep__0}),
        .ADDRB({1'b0,fifo_head_reg_rep__0}),
        .ADDRC({1'b0,fifo_head_reg_rep__0}),
        .ADDRD({1'b0,fifo_tail[3:0]}),
        .DIA(wr_din[31:30]),
        .DIB(wr_din[33:32]),
        .DIC(wr_din[35:34]),
        .DID({1'b0,1'b0}),
        .DOA(rd_dout[31:30]),
        .DOB(rd_dout[33:32]),
        .DOC(rd_dout[35:34]),
        .DOD(NLW_Mem_reg_0_15_30_35_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(Mem_reg_0_15_42_47_i_1_n_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_slice_begin = "36" *) 
  (* ram_slice_end = "41" *) 
  RAM32M Mem_reg_0_15_36_41
       (.ADDRA({1'b0,fifo_head_reg_rep__0}),
        .ADDRB({1'b0,fifo_head_reg_rep__0}),
        .ADDRC({1'b0,fifo_head_reg_rep__0}),
        .ADDRD({1'b0,fifo_tail[3:0]}),
        .DIA(wr_din[37:36]),
        .DIB(wr_din[39:38]),
        .DIC(wr_din[41:40]),
        .DID({1'b0,1'b0}),
        .DOA(rd_dout[37:36]),
        .DOB(rd_dout[39:38]),
        .DOC(rd_dout[41:40]),
        .DOD(NLW_Mem_reg_0_15_36_41_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(Mem_reg_0_15_42_47_i_1_n_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_slice_begin = "42" *) 
  (* ram_slice_end = "47" *) 
  RAM32M Mem_reg_0_15_42_47
       (.ADDRA({1'b0,fifo_head_reg_rep__0}),
        .ADDRB({1'b0,fifo_head_reg_rep__0}),
        .ADDRC({1'b0,fifo_head_reg_rep__0}),
        .ADDRD({1'b0,fifo_tail[3:0]}),
        .DIA(wr_din[43:42]),
        .DIB(wr_din[45:44]),
        .DIC(wr_din[47:46]),
        .DID({1'b0,1'b0}),
        .DOA(rd_dout[43:42]),
        .DOB(rd_dout[45:44]),
        .DOC(rd_dout[47:46]),
        .DOD(NLW_Mem_reg_0_15_42_47_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(Mem_reg_0_15_42_47_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    Mem_reg_0_15_42_47_i_1
       (.I0(wr_vld),
        .I1(full),
        .O(Mem_reg_0_15_42_47_i_1_n_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_slice_begin = "6" *) 
  (* ram_slice_end = "11" *) 
  RAM32M Mem_reg_0_15_6_11
       (.ADDRA({1'b0,fifo_head_reg_rep__0}),
        .ADDRB({1'b0,fifo_head_reg_rep__0}),
        .ADDRC({1'b0,fifo_head_reg_rep__0}),
        .ADDRD({1'b0,fifo_tail[3:0]}),
        .DIA(wr_din[7:6]),
        .DIB(wr_din[9:8]),
        .DIC(wr_din[11:10]),
        .DID({1'b0,1'b0}),
        .DOA(rd_dout[7:6]),
        .DOB(rd_dout[9:8]),
        .DOC(rd_dout[11:10]),
        .DOD(NLW_Mem_reg_0_15_6_11_DOD_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(Mem_reg_0_15_42_47_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'h82000082)) 
    empty_INST_0
       (.I0(empty_INST_0_i_1_n_0),
        .I1(fifo_tail[0]),
        .I2(fifo_head[0]),
        .I3(fifo_tail[4]),
        .I4(fifo_head[4]),
        .O(empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    empty_INST_0_i_1
       (.I0(fifo_tail[3]),
        .I1(fifo_head[3]),
        .I2(fifo_tail[1]),
        .I3(fifo_head[1]),
        .I4(fifo_head[2]),
        .I5(fifo_tail[2]),
        .O(empty_INST_0_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \fifo_head[0]_i_1 
       (.I0(next_head_reg__0[0]),
        .I1(clr),
        .O(\fifo_head[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \fifo_head[1]_i_1 
       (.I0(next_head_reg__0[1]),
        .I1(clr),
        .O(\fifo_head[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \fifo_head[2]_i_1 
       (.I0(next_head_reg__0[2]),
        .I1(clr),
        .O(\fifo_head[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \fifo_head[3]_i_1 
       (.I0(clr),
        .I1(next_head_reg__0[3]),
        .O(\fifo_head[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \fifo_head[4]_i_1 
       (.I0(clr),
        .I1(\item_cnt[4]_i_4_n_0 ),
        .O(next_head));
  LUT2 #(
    .INIT(4'h2)) 
    \fifo_head[4]_i_2 
       (.I0(next_head_reg__0[4]),
        .I1(clr),
        .O(\fifo_head[4]_i_2_n_0 ));
  FDCE \fifo_head_reg[0] 
       (.C(clk),
        .CE(next_head),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\fifo_head[0]_i_1_n_0 ),
        .Q(fifo_head[0]));
  FDCE \fifo_head_reg[1] 
       (.C(clk),
        .CE(next_head),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\fifo_head[1]_i_1_n_0 ),
        .Q(fifo_head[1]));
  FDCE \fifo_head_reg[2] 
       (.C(clk),
        .CE(next_head),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\fifo_head[2]_i_1_n_0 ),
        .Q(fifo_head[2]));
  FDCE \fifo_head_reg[3] 
       (.C(clk),
        .CE(next_head),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\fifo_head[3]_i_1_n_0 ),
        .Q(fifo_head[3]));
  FDCE \fifo_head_reg[4] 
       (.C(clk),
        .CE(next_head),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\fifo_head[4]_i_2_n_0 ),
        .Q(fifo_head[4]));
  FDCE \fifo_head_reg_rep[0] 
       (.C(clk),
        .CE(next_head),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\fifo_head[0]_i_1_n_0 ),
        .Q(fifo_head_reg_rep__0[0]));
  FDCE \fifo_head_reg_rep[1] 
       (.C(clk),
        .CE(next_head),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\fifo_head[1]_i_1_n_0 ),
        .Q(fifo_head_reg_rep__0[1]));
  FDCE \fifo_head_reg_rep[2] 
       (.C(clk),
        .CE(next_head),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\fifo_head[2]_i_1_n_0 ),
        .Q(fifo_head_reg_rep__0[2]));
  FDCE \fifo_head_reg_rep[3] 
       (.C(clk),
        .CE(next_head),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\fifo_head[3]_i_1_n_0 ),
        .Q(fifo_head_reg_rep__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \fifo_tail[0]_i_1 
       (.I0(clr),
        .I1(next_tail_reg__0[0]),
        .O(\fifo_tail[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \fifo_tail[1]_i_1 
       (.I0(next_tail_reg__0[1]),
        .I1(clr),
        .O(\fifo_tail[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \fifo_tail[2]_i_1 
       (.I0(next_tail_reg__0[2]),
        .I1(clr),
        .O(\fifo_tail[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \fifo_tail[3]_i_1 
       (.I0(next_tail_reg__0[3]),
        .I1(clr),
        .O(\fifo_tail[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hAE)) 
    \fifo_tail[4]_i_1 
       (.I0(clr),
        .I1(wr_vld),
        .I2(full),
        .O(next_tail));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \fifo_tail[4]_i_2 
       (.I0(clr),
        .I1(next_tail_reg__0[4]),
        .O(\fifo_tail[4]_i_2_n_0 ));
  FDCE \fifo_tail_reg[0] 
       (.C(clk),
        .CE(next_tail),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\fifo_tail[0]_i_1_n_0 ),
        .Q(fifo_tail[0]));
  FDCE \fifo_tail_reg[1] 
       (.C(clk),
        .CE(next_tail),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\fifo_tail[1]_i_1_n_0 ),
        .Q(fifo_tail[1]));
  FDCE \fifo_tail_reg[2] 
       (.C(clk),
        .CE(next_tail),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\fifo_tail[2]_i_1_n_0 ),
        .Q(fifo_tail[2]));
  FDCE \fifo_tail_reg[3] 
       (.C(clk),
        .CE(next_tail),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\fifo_tail[3]_i_1_n_0 ),
        .Q(fifo_tail[3]));
  FDCE \fifo_tail_reg[4] 
       (.C(clk),
        .CE(next_tail),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\fifo_tail[4]_i_2_n_0 ),
        .Q(fifo_tail[4]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \item_cnt[0]_i_1 
       (.I0(clr),
        .I1(\^item_cnt [0]),
        .O(\item_cnt[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000F70808F7)) 
    \item_cnt[1]_i_1 
       (.I0(\item_cnt[4]_i_4_n_0 ),
        .I1(wr_vld),
        .I2(full),
        .I3(\^item_cnt [0]),
        .I4(\^item_cnt [1]),
        .I5(clr),
        .O(\item_cnt[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'h00007E81)) 
    \item_cnt[2]_i_1 
       (.I0(\^item_cnt [0]),
        .I1(\^item_cnt [1]),
        .I2(item_cnt13_out),
        .I3(\^item_cnt [2]),
        .I4(clr),
        .O(\item_cnt[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1444444444444441)) 
    \item_cnt[3]_i_1 
       (.I0(clr),
        .I1(\^item_cnt [3]),
        .I2(\^item_cnt [2]),
        .I3(\^item_cnt [0]),
        .I4(\^item_cnt [1]),
        .I5(item_cnt13_out),
        .O(\item_cnt[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h0000D500)) 
    \item_cnt[3]_i_2 
       (.I0(rd_rdy),
        .I1(empty_INST_0_i_1_n_0),
        .I2(\item_cnt[4]_i_6_n_0 ),
        .I3(wr_vld),
        .I4(full),
        .O(item_cnt13_out));
  LUT4 #(
    .INIT(16'hBBEB)) 
    \item_cnt[4]_i_1 
       (.I0(clr),
        .I1(\item_cnt[4]_i_4_n_0 ),
        .I2(wr_vld),
        .I3(full),
        .O(\item_cnt[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1222222222222221)) 
    \item_cnt[4]_i_2 
       (.I0(full),
        .I1(clr),
        .I2(\^item_cnt [2]),
        .I3(\item_cnt[4]_i_5_n_0 ),
        .I4(\^item_cnt [1]),
        .I5(\^item_cnt [3]),
        .O(\item_cnt[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \item_cnt[4]_i_3 
       (.I0(rstn),
        .O(\item_cnt[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h90090000FFFFFFFF)) 
    \item_cnt[4]_i_4 
       (.I0(fifo_head[4]),
        .I1(fifo_tail[4]),
        .I2(fifo_head[0]),
        .I3(fifo_tail[0]),
        .I4(empty_INST_0_i_1_n_0),
        .I5(rd_rdy),
        .O(\item_cnt[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h22222222BB2B2B2B)) 
    \item_cnt[4]_i_5 
       (.I0(\^item_cnt [0]),
        .I1(\^item_cnt [1]),
        .I2(rd_rdy),
        .I3(empty_INST_0_i_1_n_0),
        .I4(\item_cnt[4]_i_6_n_0 ),
        .I5(\item_cnt[4]_i_7_n_0 ),
        .O(\item_cnt[4]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT4 #(
    .INIT(16'h9009)) 
    \item_cnt[4]_i_6 
       (.I0(fifo_tail[0]),
        .I1(fifo_head[0]),
        .I2(fifo_tail[4]),
        .I3(fifo_head[4]),
        .O(\item_cnt[4]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT2 #(
    .INIT(4'hD)) 
    \item_cnt[4]_i_7 
       (.I0(wr_vld),
        .I1(full),
        .O(\item_cnt[4]_i_7_n_0 ));
  FDCE \item_cnt_reg[0] 
       (.C(clk),
        .CE(\item_cnt[4]_i_1_n_0 ),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\item_cnt[0]_i_1_n_0 ),
        .Q(\^item_cnt [0]));
  FDCE \item_cnt_reg[1] 
       (.C(clk),
        .CE(\item_cnt[4]_i_1_n_0 ),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\item_cnt[1]_i_1_n_0 ),
        .Q(\^item_cnt [1]));
  FDCE \item_cnt_reg[2] 
       (.C(clk),
        .CE(\item_cnt[4]_i_1_n_0 ),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\item_cnt[2]_i_1_n_0 ),
        .Q(\^item_cnt [2]));
  FDCE \item_cnt_reg[3] 
       (.C(clk),
        .CE(\item_cnt[4]_i_1_n_0 ),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\item_cnt[3]_i_1_n_0 ),
        .Q(\^item_cnt [3]));
  FDCE \item_cnt_reg[4] 
       (.C(clk),
        .CE(\item_cnt[4]_i_1_n_0 ),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\item_cnt[4]_i_2_n_0 ),
        .Q(full));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'hD)) 
    \next_head[0]_i_1 
       (.I0(next_head_reg__0[0]),
        .I1(clr),
        .O(\next_head[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'h12)) 
    \next_head[1]_i_1 
       (.I0(next_head_reg__0[1]),
        .I1(clr),
        .I2(next_head_reg__0[0]),
        .O(\next_head[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT4 #(
    .INIT(16'h0078)) 
    \next_head[2]_i_1 
       (.I0(next_head_reg__0[0]),
        .I1(next_head_reg__0[1]),
        .I2(next_head_reg__0[2]),
        .I3(clr),
        .O(\next_head[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'h00007F80)) 
    \next_head[3]_i_1 
       (.I0(next_head_reg__0[0]),
        .I1(next_head_reg__0[1]),
        .I2(next_head_reg__0[2]),
        .I3(next_head_reg__0[3]),
        .I4(clr),
        .O(\next_head[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000007FFF8000)) 
    \next_head[4]_i_1 
       (.I0(next_head_reg__0[2]),
        .I1(next_head_reg__0[1]),
        .I2(next_head_reg__0[0]),
        .I3(next_head_reg__0[3]),
        .I4(next_head_reg__0[4]),
        .I5(clr),
        .O(\next_head[4]_i_1_n_0 ));
  FDPE \next_head_reg[0] 
       (.C(clk),
        .CE(next_head),
        .D(\next_head[0]_i_1_n_0 ),
        .PRE(\item_cnt[4]_i_3_n_0 ),
        .Q(next_head_reg__0[0]));
  FDCE \next_head_reg[1] 
       (.C(clk),
        .CE(next_head),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\next_head[1]_i_1_n_0 ),
        .Q(next_head_reg__0[1]));
  FDCE \next_head_reg[2] 
       (.C(clk),
        .CE(next_head),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\next_head[2]_i_1_n_0 ),
        .Q(next_head_reg__0[2]));
  FDCE \next_head_reg[3] 
       (.C(clk),
        .CE(next_head),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\next_head[3]_i_1_n_0 ),
        .Q(next_head_reg__0[3]));
  FDCE \next_head_reg[4] 
       (.C(clk),
        .CE(next_head),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\next_head[4]_i_1_n_0 ),
        .Q(next_head_reg__0[4]));
  LUT2 #(
    .INIT(4'hB)) 
    \next_tail[0]_i_1 
       (.I0(clr),
        .I1(next_tail_reg__0[0]),
        .O(\next_tail[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT3 #(
    .INIT(8'h12)) 
    \next_tail[1]_i_1 
       (.I0(next_tail_reg__0[1]),
        .I1(clr),
        .I2(next_tail_reg__0[0]),
        .O(\next_tail[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT4 #(
    .INIT(16'h0078)) 
    \next_tail[2]_i_1 
       (.I0(next_tail_reg__0[0]),
        .I1(next_tail_reg__0[1]),
        .I2(next_tail_reg__0[2]),
        .I3(clr),
        .O(\next_tail[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT5 #(
    .INIT(32'h00007F80)) 
    \next_tail[3]_i_1 
       (.I0(next_tail_reg__0[0]),
        .I1(next_tail_reg__0[1]),
        .I2(next_tail_reg__0[2]),
        .I3(next_tail_reg__0[3]),
        .I4(clr),
        .O(\next_tail[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000007FFF8000)) 
    \next_tail[4]_i_1 
       (.I0(next_tail_reg__0[2]),
        .I1(next_tail_reg__0[1]),
        .I2(next_tail_reg__0[0]),
        .I3(next_tail_reg__0[3]),
        .I4(next_tail_reg__0[4]),
        .I5(clr),
        .O(\next_tail[4]_i_1_n_0 ));
  FDPE \next_tail_reg[0] 
       (.C(clk),
        .CE(next_tail),
        .D(\next_tail[0]_i_1_n_0 ),
        .PRE(\item_cnt[4]_i_3_n_0 ),
        .Q(next_tail_reg__0[0]));
  FDCE \next_tail_reg[1] 
       (.C(clk),
        .CE(next_tail),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\next_tail[1]_i_1_n_0 ),
        .Q(next_tail_reg__0[1]));
  FDCE \next_tail_reg[2] 
       (.C(clk),
        .CE(next_tail),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\next_tail[2]_i_1_n_0 ),
        .Q(next_tail_reg__0[2]));
  FDCE \next_tail_reg[3] 
       (.C(clk),
        .CE(next_tail),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\next_tail[3]_i_1_n_0 ),
        .Q(next_tail_reg__0[3]));
  FDCE \next_tail_reg[4] 
       (.C(clk),
        .CE(next_tail),
        .CLR(\item_cnt[4]_i_3_n_0 ),
        .D(\next_tail[4]_i_1_n_0 ),
        .Q(next_tail_reg__0[4]));
  LUT1 #(
    .INIT(2'h1)) 
    rd_vld_INST_0
       (.I0(empty),
        .O(rd_vld));
  LUT2 #(
    .INIT(4'h6)) 
    \room_cnt[1]_INST_0 
       (.I0(\^item_cnt [1]),
        .I1(\^item_cnt [0]),
        .O(\^room_cnt [1]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT3 #(
    .INIT(8'h1E)) 
    \room_cnt[2]_INST_0 
       (.I0(\^item_cnt [0]),
        .I1(\^item_cnt [1]),
        .I2(\^item_cnt [2]),
        .O(\^room_cnt [2]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT4 #(
    .INIT(16'h5556)) 
    \room_cnt[3]_INST_0 
       (.I0(\^item_cnt [3]),
        .I1(\^item_cnt [0]),
        .I2(\^item_cnt [1]),
        .I3(\^item_cnt [2]),
        .O(\^room_cnt [3]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \room_cnt[4]_INST_0 
       (.I0(\^item_cnt [3]),
        .I1(\^item_cnt [0]),
        .I2(\^item_cnt [1]),
        .I3(\^item_cnt [2]),
        .I4(full),
        .O(\^room_cnt [4]));
  LUT1 #(
    .INIT(2'h1)) 
    wr_rdy_INST_0
       (.I0(full),
        .O(wr_rdy));
endmodule

module gig_eth_mac_rx_dma_axi
   (bbstub_valid,
    W_full_reg_0,
    \state_reg[2]_0 ,
    \state_write_reg[0]_0 ,
    M_AWSIZE,
    client_rx_rd_bnum_rdy,
    W_goodframe_reg_0,
    \DMA_ADDR_HEAD_reg[1]_C_0 ,
    \DMA_ADDR_HEAD_reg[0]_C_0 ,
    W_addr2,
    Q,
    \DMA_WCHUNK_reg[13]_0 ,
    \DMA_WCHUNK_reg[5]_0 ,
    W_bxxx,
    \W_brem_reg[15]_0 ,
    \DMA_WCHUNK_reg[13]_1 ,
    \W_brem_reg[1]_0 ,
    \state_reg[0]_0 ,
    \state_reg[1]_0 ,
    W_full_reg_1,
    W_full_reg_2,
    \W_addr_reg[31]_0 ,
    \W_addr_reg[7]_0 ,
    \W_addr_reg[14]_0 ,
    \W_addr_reg[23]_0 ,
    \W_addr_reg[30]_0 ,
    \W_addr_reg[30]_1 ,
    rx_addr_head_update,
    M_WLAST,
    M_WVALID,
    \W_len_reg[0]_0 ,
    \state_reg[2]_1 ,
    \state_reg[1]_1 ,
    \DMA_WCHUNK_reg[5]_1 ,
    \DMA_WCHUNK_reg[13]_2 ,
    \CID_reg[3]_0 ,
    W_full_reg_3,
    W_empty,
    W_full_reg_4,
    \W_addr_reg[31]_1 ,
    rx_addr_head,
    rd_en,
    M_AWID,
    M_AWADDR,
    M_AWLEN,
    M_AWVALID,
    M_WID,
    M_WSTRB,
    M_BREADY,
    rx_descriptor_wr_vld,
    \desc_dst_reg[31]_0 ,
    \desc_bnum_reg[15]_0 ,
    out,
    W_full_reg_5,
    ACLK,
    conf_rx_reset,
    \DMA_ADDR_HEAD_reg[31]_P_0 ,
    \DMA_ADDR_HEAD_reg[31]_C_0 ,
    \DMA_ADDR_HEAD_reg[31]_P_1 ,
    \DMA_ADDR_HEAD_reg[30]_P_0 ,
    \DMA_ADDR_HEAD_reg[30]_C_0 ,
    \DMA_ADDR_HEAD_reg[30]_P_1 ,
    \DMA_ADDR_HEAD_reg[29]_P_0 ,
    \DMA_ADDR_HEAD_reg[29]_C_0 ,
    \DMA_ADDR_HEAD_reg[29]_P_1 ,
    \DMA_ADDR_HEAD_reg[28]_P_0 ,
    \DMA_ADDR_HEAD_reg[28]_C_0 ,
    \DMA_ADDR_HEAD_reg[28]_P_1 ,
    \DMA_ADDR_HEAD_reg[27]_P_0 ,
    \DMA_ADDR_HEAD_reg[27]_C_0 ,
    \DMA_ADDR_HEAD_reg[27]_P_1 ,
    \DMA_ADDR_HEAD_reg[26]_P_0 ,
    \DMA_ADDR_HEAD_reg[26]_C_0 ,
    \DMA_ADDR_HEAD_reg[26]_P_1 ,
    \DMA_ADDR_HEAD_reg[25]_P_0 ,
    \DMA_ADDR_HEAD_reg[25]_C_0 ,
    \DMA_ADDR_HEAD_reg[25]_P_1 ,
    \DMA_ADDR_HEAD_reg[24]_P_0 ,
    \DMA_ADDR_HEAD_reg[24]_C_0 ,
    \DMA_ADDR_HEAD_reg[24]_P_1 ,
    \DMA_ADDR_HEAD_reg[23]_P_0 ,
    \DMA_ADDR_HEAD_reg[23]_C_0 ,
    \DMA_ADDR_HEAD_reg[23]_P_1 ,
    \DMA_ADDR_HEAD_reg[22]_P_0 ,
    \DMA_ADDR_HEAD_reg[22]_C_0 ,
    \DMA_ADDR_HEAD_reg[22]_P_1 ,
    \DMA_ADDR_HEAD_reg[21]_P_0 ,
    \DMA_ADDR_HEAD_reg[21]_C_0 ,
    \DMA_ADDR_HEAD_reg[21]_P_1 ,
    \DMA_ADDR_HEAD_reg[20]_P_0 ,
    \DMA_ADDR_HEAD_reg[20]_C_0 ,
    \DMA_ADDR_HEAD_reg[20]_P_1 ,
    \DMA_ADDR_HEAD_reg[19]_P_0 ,
    \DMA_ADDR_HEAD_reg[19]_C_0 ,
    \DMA_ADDR_HEAD_reg[19]_P_1 ,
    \DMA_ADDR_HEAD_reg[18]_P_0 ,
    \DMA_ADDR_HEAD_reg[18]_C_0 ,
    \DMA_ADDR_HEAD_reg[18]_P_1 ,
    \DMA_ADDR_HEAD_reg[17]_P_0 ,
    \DMA_ADDR_HEAD_reg[17]_C_0 ,
    \DMA_ADDR_HEAD_reg[17]_P_1 ,
    \DMA_ADDR_HEAD_reg[16]_P_0 ,
    \DMA_ADDR_HEAD_reg[16]_C_0 ,
    \DMA_ADDR_HEAD_reg[16]_P_1 ,
    \DMA_ADDR_HEAD_reg[15]_P_0 ,
    \DMA_ADDR_HEAD_reg[15]_C_0 ,
    \DMA_ADDR_HEAD_reg[15]_P_1 ,
    \DMA_ADDR_HEAD_reg[14]_P_0 ,
    \DMA_ADDR_HEAD_reg[14]_C_0 ,
    \DMA_ADDR_HEAD_reg[14]_P_1 ,
    \DMA_ADDR_HEAD_reg[13]_P_0 ,
    \DMA_ADDR_HEAD_reg[13]_C_0 ,
    \DMA_ADDR_HEAD_reg[13]_P_1 ,
    \DMA_ADDR_HEAD_reg[12]_P_0 ,
    \DMA_ADDR_HEAD_reg[12]_C_0 ,
    \DMA_ADDR_HEAD_reg[12]_P_1 ,
    \DMA_ADDR_HEAD_reg[11]_P_0 ,
    \DMA_ADDR_HEAD_reg[11]_C_0 ,
    \DMA_ADDR_HEAD_reg[11]_P_1 ,
    \DMA_ADDR_HEAD_reg[10]_P_0 ,
    \DMA_ADDR_HEAD_reg[10]_C_0 ,
    \DMA_ADDR_HEAD_reg[10]_P_1 ,
    \DMA_ADDR_HEAD_reg[9]_P_0 ,
    \DMA_ADDR_HEAD_reg[9]_C_0 ,
    \DMA_ADDR_HEAD_reg[9]_P_1 ,
    \DMA_ADDR_HEAD_reg[8]_P_0 ,
    \DMA_ADDR_HEAD_reg[8]_C_0 ,
    \DMA_ADDR_HEAD_reg[8]_P_1 ,
    \DMA_ADDR_HEAD_reg[7]_P_0 ,
    \DMA_ADDR_HEAD_reg[7]_C_0 ,
    \DMA_ADDR_HEAD_reg[7]_P_1 ,
    \DMA_ADDR_HEAD_reg[6]_P_0 ,
    \DMA_ADDR_HEAD_reg[6]_C_0 ,
    \DMA_ADDR_HEAD_reg[6]_P_1 ,
    \DMA_ADDR_HEAD_reg[5]_P_0 ,
    \DMA_ADDR_HEAD_reg[5]_C_0 ,
    \DMA_ADDR_HEAD_reg[5]_P_1 ,
    \DMA_ADDR_HEAD_reg[4]_P_0 ,
    \DMA_ADDR_HEAD_reg[4]_C_0 ,
    \DMA_ADDR_HEAD_reg[4]_P_1 ,
    \DMA_ADDR_HEAD_reg[3]_P_0 ,
    \DMA_ADDR_HEAD_reg[3]_C_0 ,
    \DMA_ADDR_HEAD_reg[3]_P_1 ,
    \DMA_ADDR_HEAD_reg[2]_P_0 ,
    \DMA_ADDR_HEAD_reg[2]_C_0 ,
    \DMA_ADDR_HEAD_reg[2]_P_1 ,
    \DMA_ADDR_HEAD_reg[1]_P_0 ,
    \DMA_ADDR_HEAD_reg[1]_C_1 ,
    \DMA_ADDR_HEAD_reg[1]_P_1 ,
    \DMA_ADDR_HEAD_reg[0]_P_0 ,
    \DMA_ADDR_HEAD_reg[0]_C_1 ,
    \DMA_ADDR_HEAD_reg[0]_P_1 ,
    client_bnum_rdy_reg_P_0,
    client_bnum_rdy_reg_C_0,
    \DMA_ADDR_HEAD_reg[1]_C_2 ,
    \DMA_ADDR_HEAD_reg[0]_C_2 ,
    rx_addr_start,
    \state_reg[2]_2 ,
    conf_rx_en,
    rx_descriptor_wr_rdy,
    rd_data_count,
    \W_bmove_reg[10]_0 ,
    \W_bmove_reg[15]_0 ,
    M_AWREADY,
    M_BVALID,
    dout,
    W_go0,
    \state_reg[2]_3 ,
    W_goodframe_reg_1,
    \W_bmove_reg[14]_0 ,
    \W_brem_reg[15]_i_4_0 ,
    \W_bmove_reg[15]_i_28 ,
    rx_addr_tail,
    \W_len_reg[8]_0 ,
    \W_addr_reg[0]_0 ,
    valid,
    O,
    \W_len_reg[6]_0 ,
    \W_len_reg[8]_1 ,
    \W_bmove_reg[0]_0 ,
    M_WREADY,
    \W_bmove_reg[0]_1 ,
    \W_bmove_reg[0]_2 ,
    \W_bmove[1]_i_24 ,
    D,
    rx_addr_empty,
    W_go_reg_0,
    \CID_reg[0]_0 ,
    \M_AWADDR_reg[31]_0 ,
    \M_AWLEN_reg[0]_0 ,
    \M_WID_reg[3]_0 ,
    M_BREADY_reg_0,
    rx_descriptor_full,
    \desc_bnum_reg[15]_1 );
  output bbstub_valid;
  output W_full_reg_0;
  output [2:0]\state_reg[2]_0 ;
  output [0:0]\state_write_reg[0]_0 ;
  output [0:0]M_AWSIZE;
  output client_rx_rd_bnum_rdy;
  output W_goodframe_reg_0;
  output \DMA_ADDR_HEAD_reg[1]_C_0 ;
  output \DMA_ADDR_HEAD_reg[0]_C_0 ;
  output [31:0]W_addr2;
  output [31:0]Q;
  output [13:0]\DMA_WCHUNK_reg[13]_0 ;
  output [2:0]\DMA_WCHUNK_reg[5]_0 ;
  output [15:0]W_bxxx;
  output [15:0]\W_brem_reg[15]_0 ;
  output [3:0]\DMA_WCHUNK_reg[13]_1 ;
  output [0:0]\W_brem_reg[1]_0 ;
  output \state_reg[0]_0 ;
  output \state_reg[1]_0 ;
  output [3:0]W_full_reg_1;
  output [3:0]W_full_reg_2;
  output [0:0]\W_addr_reg[31]_0 ;
  output [3:0]\W_addr_reg[7]_0 ;
  output [3:0]\W_addr_reg[14]_0 ;
  output [3:0]\W_addr_reg[23]_0 ;
  output [3:0]\W_addr_reg[30]_0 ;
  output [0:0]\W_addr_reg[30]_1 ;
  output rx_addr_head_update;
  output M_WLAST;
  output M_WVALID;
  output [0:0]\W_len_reg[0]_0 ;
  output \state_reg[2]_1 ;
  output \state_reg[1]_1 ;
  output [2:0]\DMA_WCHUNK_reg[5]_1 ;
  output [3:0]\DMA_WCHUNK_reg[13]_2 ;
  output [3:0]\CID_reg[3]_0 ;
  output W_full_reg_3;
  output W_empty;
  output W_full_reg_4;
  output [0:0]\W_addr_reg[31]_1 ;
  output [31:0]rx_addr_head;
  output rd_en;
  output [3:0]M_AWID;
  output [31:0]M_AWADDR;
  output [7:0]M_AWLEN;
  output M_AWVALID;
  output [3:0]M_WID;
  output [3:0]M_WSTRB;
  output M_BREADY;
  output rx_descriptor_wr_vld;
  output [31:0]\desc_dst_reg[31]_0 ;
  output [15:0]\desc_bnum_reg[15]_0 ;
  input out;
  input W_full_reg_5;
  input ACLK;
  input conf_rx_reset;
  input \DMA_ADDR_HEAD_reg[31]_P_0 ;
  input \DMA_ADDR_HEAD_reg[31]_C_0 ;
  input \DMA_ADDR_HEAD_reg[31]_P_1 ;
  input \DMA_ADDR_HEAD_reg[30]_P_0 ;
  input \DMA_ADDR_HEAD_reg[30]_C_0 ;
  input \DMA_ADDR_HEAD_reg[30]_P_1 ;
  input \DMA_ADDR_HEAD_reg[29]_P_0 ;
  input \DMA_ADDR_HEAD_reg[29]_C_0 ;
  input \DMA_ADDR_HEAD_reg[29]_P_1 ;
  input \DMA_ADDR_HEAD_reg[28]_P_0 ;
  input \DMA_ADDR_HEAD_reg[28]_C_0 ;
  input \DMA_ADDR_HEAD_reg[28]_P_1 ;
  input \DMA_ADDR_HEAD_reg[27]_P_0 ;
  input \DMA_ADDR_HEAD_reg[27]_C_0 ;
  input \DMA_ADDR_HEAD_reg[27]_P_1 ;
  input \DMA_ADDR_HEAD_reg[26]_P_0 ;
  input \DMA_ADDR_HEAD_reg[26]_C_0 ;
  input \DMA_ADDR_HEAD_reg[26]_P_1 ;
  input \DMA_ADDR_HEAD_reg[25]_P_0 ;
  input \DMA_ADDR_HEAD_reg[25]_C_0 ;
  input \DMA_ADDR_HEAD_reg[25]_P_1 ;
  input \DMA_ADDR_HEAD_reg[24]_P_0 ;
  input \DMA_ADDR_HEAD_reg[24]_C_0 ;
  input \DMA_ADDR_HEAD_reg[24]_P_1 ;
  input \DMA_ADDR_HEAD_reg[23]_P_0 ;
  input \DMA_ADDR_HEAD_reg[23]_C_0 ;
  input \DMA_ADDR_HEAD_reg[23]_P_1 ;
  input \DMA_ADDR_HEAD_reg[22]_P_0 ;
  input \DMA_ADDR_HEAD_reg[22]_C_0 ;
  input \DMA_ADDR_HEAD_reg[22]_P_1 ;
  input \DMA_ADDR_HEAD_reg[21]_P_0 ;
  input \DMA_ADDR_HEAD_reg[21]_C_0 ;
  input \DMA_ADDR_HEAD_reg[21]_P_1 ;
  input \DMA_ADDR_HEAD_reg[20]_P_0 ;
  input \DMA_ADDR_HEAD_reg[20]_C_0 ;
  input \DMA_ADDR_HEAD_reg[20]_P_1 ;
  input \DMA_ADDR_HEAD_reg[19]_P_0 ;
  input \DMA_ADDR_HEAD_reg[19]_C_0 ;
  input \DMA_ADDR_HEAD_reg[19]_P_1 ;
  input \DMA_ADDR_HEAD_reg[18]_P_0 ;
  input \DMA_ADDR_HEAD_reg[18]_C_0 ;
  input \DMA_ADDR_HEAD_reg[18]_P_1 ;
  input \DMA_ADDR_HEAD_reg[17]_P_0 ;
  input \DMA_ADDR_HEAD_reg[17]_C_0 ;
  input \DMA_ADDR_HEAD_reg[17]_P_1 ;
  input \DMA_ADDR_HEAD_reg[16]_P_0 ;
  input \DMA_ADDR_HEAD_reg[16]_C_0 ;
  input \DMA_ADDR_HEAD_reg[16]_P_1 ;
  input \DMA_ADDR_HEAD_reg[15]_P_0 ;
  input \DMA_ADDR_HEAD_reg[15]_C_0 ;
  input \DMA_ADDR_HEAD_reg[15]_P_1 ;
  input \DMA_ADDR_HEAD_reg[14]_P_0 ;
  input \DMA_ADDR_HEAD_reg[14]_C_0 ;
  input \DMA_ADDR_HEAD_reg[14]_P_1 ;
  input \DMA_ADDR_HEAD_reg[13]_P_0 ;
  input \DMA_ADDR_HEAD_reg[13]_C_0 ;
  input \DMA_ADDR_HEAD_reg[13]_P_1 ;
  input \DMA_ADDR_HEAD_reg[12]_P_0 ;
  input \DMA_ADDR_HEAD_reg[12]_C_0 ;
  input \DMA_ADDR_HEAD_reg[12]_P_1 ;
  input \DMA_ADDR_HEAD_reg[11]_P_0 ;
  input \DMA_ADDR_HEAD_reg[11]_C_0 ;
  input \DMA_ADDR_HEAD_reg[11]_P_1 ;
  input \DMA_ADDR_HEAD_reg[10]_P_0 ;
  input \DMA_ADDR_HEAD_reg[10]_C_0 ;
  input \DMA_ADDR_HEAD_reg[10]_P_1 ;
  input \DMA_ADDR_HEAD_reg[9]_P_0 ;
  input \DMA_ADDR_HEAD_reg[9]_C_0 ;
  input \DMA_ADDR_HEAD_reg[9]_P_1 ;
  input \DMA_ADDR_HEAD_reg[8]_P_0 ;
  input \DMA_ADDR_HEAD_reg[8]_C_0 ;
  input \DMA_ADDR_HEAD_reg[8]_P_1 ;
  input \DMA_ADDR_HEAD_reg[7]_P_0 ;
  input \DMA_ADDR_HEAD_reg[7]_C_0 ;
  input \DMA_ADDR_HEAD_reg[7]_P_1 ;
  input \DMA_ADDR_HEAD_reg[6]_P_0 ;
  input \DMA_ADDR_HEAD_reg[6]_C_0 ;
  input \DMA_ADDR_HEAD_reg[6]_P_1 ;
  input \DMA_ADDR_HEAD_reg[5]_P_0 ;
  input \DMA_ADDR_HEAD_reg[5]_C_0 ;
  input \DMA_ADDR_HEAD_reg[5]_P_1 ;
  input \DMA_ADDR_HEAD_reg[4]_P_0 ;
  input \DMA_ADDR_HEAD_reg[4]_C_0 ;
  input \DMA_ADDR_HEAD_reg[4]_P_1 ;
  input \DMA_ADDR_HEAD_reg[3]_P_0 ;
  input \DMA_ADDR_HEAD_reg[3]_C_0 ;
  input \DMA_ADDR_HEAD_reg[3]_P_1 ;
  input \DMA_ADDR_HEAD_reg[2]_P_0 ;
  input \DMA_ADDR_HEAD_reg[2]_C_0 ;
  input \DMA_ADDR_HEAD_reg[2]_P_1 ;
  input \DMA_ADDR_HEAD_reg[1]_P_0 ;
  input \DMA_ADDR_HEAD_reg[1]_C_1 ;
  input \DMA_ADDR_HEAD_reg[1]_P_1 ;
  input \DMA_ADDR_HEAD_reg[0]_P_0 ;
  input \DMA_ADDR_HEAD_reg[0]_C_1 ;
  input \DMA_ADDR_HEAD_reg[0]_P_1 ;
  input client_bnum_rdy_reg_P_0;
  input client_bnum_rdy_reg_C_0;
  input \DMA_ADDR_HEAD_reg[1]_C_2 ;
  input \DMA_ADDR_HEAD_reg[0]_C_2 ;
  input [31:0]rx_addr_start;
  input \state_reg[2]_2 ;
  input conf_rx_en;
  input rx_descriptor_wr_rdy;
  input [8:0]rd_data_count;
  input [10:0]\W_bmove_reg[10]_0 ;
  input [4:0]\W_bmove_reg[15]_0 ;
  input M_AWREADY;
  input M_BVALID;
  input [3:0]dout;
  input W_go0;
  input \state_reg[2]_3 ;
  input W_goodframe_reg_1;
  input \W_bmove_reg[14]_0 ;
  input [15:0]\W_brem_reg[15]_i_4_0 ;
  input [29:0]\W_bmove_reg[15]_i_28 ;
  input [31:0]rx_addr_tail;
  input [0:0]\W_len_reg[8]_0 ;
  input [0:0]\W_addr_reg[0]_0 ;
  input valid;
  input [2:0]O;
  input [3:0]\W_len_reg[6]_0 ;
  input [1:0]\W_len_reg[8]_1 ;
  input [0:0]\W_bmove_reg[0]_0 ;
  input M_WREADY;
  input [0:0]\W_bmove_reg[0]_1 ;
  input [0:0]\W_bmove_reg[0]_2 ;
  input [0:0]\W_bmove[1]_i_24 ;
  input [13:0]D;
  input rx_addr_empty;
  input W_go_reg_0;
  input [0:0]\CID_reg[0]_0 ;
  input [31:0]\M_AWADDR_reg[31]_0 ;
  input [0:0]\M_AWLEN_reg[0]_0 ;
  input [2:0]\M_WID_reg[3]_0 ;
  input M_BREADY_reg_0;
  input rx_descriptor_full;
  input [15:0]\desc_bnum_reg[15]_1 ;

  wire ACLK;
  wire CID;
  wire [0:0]\CID_reg[0]_0 ;
  wire [3:0]\CID_reg[3]_0 ;
  wire [13:0]D;
  wire \DMA_ADDR_HEAD[10]_C_i_1_n_0 ;
  wire \DMA_ADDR_HEAD[11]_C_i_1_n_0 ;
  wire \DMA_ADDR_HEAD[12]_C_i_1_n_0 ;
  wire \DMA_ADDR_HEAD[13]_C_i_1_n_0 ;
  wire \DMA_ADDR_HEAD[14]_C_i_1_n_0 ;
  wire \DMA_ADDR_HEAD[15]_C_i_1_n_0 ;
  wire \DMA_ADDR_HEAD[16]_C_i_1_n_0 ;
  wire \DMA_ADDR_HEAD[17]_C_i_1_n_0 ;
  wire \DMA_ADDR_HEAD[18]_C_i_1_n_0 ;
  wire \DMA_ADDR_HEAD[19]_C_i_1_n_0 ;
  wire \DMA_ADDR_HEAD[20]_C_i_1_n_0 ;
  wire \DMA_ADDR_HEAD[21]_C_i_1_n_0 ;
  wire \DMA_ADDR_HEAD[22]_C_i_1_n_0 ;
  wire \DMA_ADDR_HEAD[23]_C_i_1_n_0 ;
  wire \DMA_ADDR_HEAD[24]_C_i_1_n_0 ;
  wire \DMA_ADDR_HEAD[25]_C_i_1_n_0 ;
  wire \DMA_ADDR_HEAD[26]_C_i_1_n_0 ;
  wire \DMA_ADDR_HEAD[27]_C_i_1_n_0 ;
  wire \DMA_ADDR_HEAD[28]_C_i_1_n_0 ;
  wire \DMA_ADDR_HEAD[29]_C_i_1_n_0 ;
  wire \DMA_ADDR_HEAD[2]_C_i_1_n_0 ;
  wire \DMA_ADDR_HEAD[30]_C_i_1_n_0 ;
  wire \DMA_ADDR_HEAD[31]_C_i_1_n_0 ;
  wire \DMA_ADDR_HEAD[31]_P_i_10_n_0 ;
  wire \DMA_ADDR_HEAD[31]_P_i_11_n_0 ;
  wire \DMA_ADDR_HEAD[31]_P_i_12_n_0 ;
  wire \DMA_ADDR_HEAD[31]_P_i_13_n_0 ;
  wire \DMA_ADDR_HEAD[31]_P_i_14_n_0 ;
  wire \DMA_ADDR_HEAD[31]_P_i_15_n_0 ;
  wire \DMA_ADDR_HEAD[31]_P_i_5_n_0 ;
  wire \DMA_ADDR_HEAD[31]_P_i_6_n_0 ;
  wire \DMA_ADDR_HEAD[31]_P_i_8_n_0 ;
  wire \DMA_ADDR_HEAD[31]_P_i_9_n_0 ;
  wire \DMA_ADDR_HEAD[3]_C_i_1_n_0 ;
  wire \DMA_ADDR_HEAD[4]_C_i_1_n_0 ;
  wire \DMA_ADDR_HEAD[5]_C_i_1_n_0 ;
  wire \DMA_ADDR_HEAD[6]_C_i_1_n_0 ;
  wire \DMA_ADDR_HEAD[7]_C_i_1_n_0 ;
  wire \DMA_ADDR_HEAD[8]_C_i_1_n_0 ;
  wire \DMA_ADDR_HEAD[9]_C_i_1_n_0 ;
  wire DMA_ADDR_HEAD_UPDATE23_out;
  wire DMA_ADDR_HEAD_UPDATE_i_1_n_0;
  wire \DMA_ADDR_HEAD_reg[0]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[0]_C_1 ;
  wire \DMA_ADDR_HEAD_reg[0]_C_2 ;
  wire \DMA_ADDR_HEAD_reg[0]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[0]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[0]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[0]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[10]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[10]_C_n_0 ;
  wire \DMA_ADDR_HEAD_reg[10]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[10]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[10]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[10]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[11]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[11]_C_n_0 ;
  wire \DMA_ADDR_HEAD_reg[11]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[11]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[11]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[11]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[12]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[12]_C_n_0 ;
  wire \DMA_ADDR_HEAD_reg[12]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[12]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[12]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[12]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[13]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[13]_C_n_0 ;
  wire \DMA_ADDR_HEAD_reg[13]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[13]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[13]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[13]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[14]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[14]_C_n_0 ;
  wire \DMA_ADDR_HEAD_reg[14]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[14]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[14]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[14]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[15]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[15]_C_n_0 ;
  wire \DMA_ADDR_HEAD_reg[15]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[15]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[15]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[15]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[16]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[16]_C_n_0 ;
  wire \DMA_ADDR_HEAD_reg[16]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[16]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[16]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[16]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[17]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[17]_C_n_0 ;
  wire \DMA_ADDR_HEAD_reg[17]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[17]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[17]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[17]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[18]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[18]_C_n_0 ;
  wire \DMA_ADDR_HEAD_reg[18]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[18]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[18]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[18]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[19]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[19]_C_n_0 ;
  wire \DMA_ADDR_HEAD_reg[19]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[19]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[19]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[19]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[1]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[1]_C_1 ;
  wire \DMA_ADDR_HEAD_reg[1]_C_2 ;
  wire \DMA_ADDR_HEAD_reg[1]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[1]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[1]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[1]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[20]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[20]_C_n_0 ;
  wire \DMA_ADDR_HEAD_reg[20]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[20]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[20]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[20]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[21]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[21]_C_n_0 ;
  wire \DMA_ADDR_HEAD_reg[21]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[21]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[21]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[21]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[22]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[22]_C_n_0 ;
  wire \DMA_ADDR_HEAD_reg[22]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[22]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[22]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[22]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[23]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[23]_C_n_0 ;
  wire \DMA_ADDR_HEAD_reg[23]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[23]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[23]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[23]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[24]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[24]_C_n_0 ;
  wire \DMA_ADDR_HEAD_reg[24]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[24]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[24]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[24]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[25]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[25]_C_n_0 ;
  wire \DMA_ADDR_HEAD_reg[25]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[25]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[25]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[25]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[26]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[26]_C_n_0 ;
  wire \DMA_ADDR_HEAD_reg[26]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[26]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[26]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[26]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[27]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[27]_C_n_0 ;
  wire \DMA_ADDR_HEAD_reg[27]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[27]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[27]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[27]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[28]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[28]_C_n_0 ;
  wire \DMA_ADDR_HEAD_reg[28]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[28]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[28]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[28]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[29]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[29]_C_n_0 ;
  wire \DMA_ADDR_HEAD_reg[29]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[29]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[29]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[29]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[2]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[2]_C_n_0 ;
  wire \DMA_ADDR_HEAD_reg[2]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[2]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[2]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[2]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[30]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[30]_C_n_0 ;
  wire \DMA_ADDR_HEAD_reg[30]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[30]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[30]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[30]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[31]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[31]_C_n_0 ;
  wire \DMA_ADDR_HEAD_reg[31]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[31]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[31]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[31]_P_i_3_n_3 ;
  wire \DMA_ADDR_HEAD_reg[31]_P_i_4_n_0 ;
  wire \DMA_ADDR_HEAD_reg[31]_P_i_4_n_1 ;
  wire \DMA_ADDR_HEAD_reg[31]_P_i_4_n_2 ;
  wire \DMA_ADDR_HEAD_reg[31]_P_i_4_n_3 ;
  wire \DMA_ADDR_HEAD_reg[31]_P_i_7_n_0 ;
  wire \DMA_ADDR_HEAD_reg[31]_P_i_7_n_1 ;
  wire \DMA_ADDR_HEAD_reg[31]_P_i_7_n_2 ;
  wire \DMA_ADDR_HEAD_reg[31]_P_i_7_n_3 ;
  wire \DMA_ADDR_HEAD_reg[31]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[3]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[3]_C_n_0 ;
  wire \DMA_ADDR_HEAD_reg[3]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[3]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[3]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[3]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[4]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[4]_C_n_0 ;
  wire \DMA_ADDR_HEAD_reg[4]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[4]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[4]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[4]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[5]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[5]_C_n_0 ;
  wire \DMA_ADDR_HEAD_reg[5]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[5]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[5]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[5]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[6]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[6]_C_n_0 ;
  wire \DMA_ADDR_HEAD_reg[6]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[6]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[6]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[6]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[7]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[7]_C_n_0 ;
  wire \DMA_ADDR_HEAD_reg[7]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[7]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[7]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[7]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[8]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[8]_C_n_0 ;
  wire \DMA_ADDR_HEAD_reg[8]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[8]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[8]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[8]_P_n_0 ;
  wire \DMA_ADDR_HEAD_reg[9]_C_0 ;
  wire \DMA_ADDR_HEAD_reg[9]_C_n_0 ;
  wire \DMA_ADDR_HEAD_reg[9]_LDC_n_0 ;
  wire \DMA_ADDR_HEAD_reg[9]_P_0 ;
  wire \DMA_ADDR_HEAD_reg[9]_P_1 ;
  wire \DMA_ADDR_HEAD_reg[9]_P_n_0 ;
  wire DMA_WCHUNK;
  wire \DMA_WCHUNK[13]_i_4_n_0 ;
  wire [13:0]\DMA_WCHUNK_reg[13]_0 ;
  wire [3:0]\DMA_WCHUNK_reg[13]_1 ;
  wire [3:0]\DMA_WCHUNK_reg[13]_2 ;
  wire [2:0]\DMA_WCHUNK_reg[5]_0 ;
  wire [2:0]\DMA_WCHUNK_reg[5]_1 ;
  wire [31:0]M_AWADDR;
  wire [31:0]\M_AWADDR_reg[31]_0 ;
  wire [3:0]M_AWID;
  wire \M_AWID[1]_i_1_n_0 ;
  wire \M_AWID[2]_i_1_n_0 ;
  wire \M_AWID[3]_i_2_n_0 ;
  wire [7:0]M_AWLEN;
  wire \M_AWLEN[1]_i_1_n_0 ;
  wire \M_AWLEN[2]_i_1_n_0 ;
  wire \M_AWLEN[3]_i_1_n_0 ;
  wire \M_AWLEN[4]_i_1_n_0 ;
  wire \M_AWLEN[5]_i_1_n_0 ;
  wire \M_AWLEN[6]_i_1_n_0 ;
  wire \M_AWLEN[7]_i_1_n_0 ;
  wire \M_AWLEN[7]_i_2_n_0 ;
  wire [0:0]\M_AWLEN_reg[0]_0 ;
  wire M_AWREADY;
  wire [0:0]M_AWSIZE;
  wire \M_AWSIZE[1]_i_1_n_0 ;
  wire M_AWVALID;
  wire M_AWVALID_i_1_n_0;
  wire M_AWVALID_i_2_n_0;
  wire M_BREADY;
  wire M_BREADY0;
  wire M_BREADY1;
  wire M_BREADY_i_10_n_0;
  wire M_BREADY_i_11_n_0;
  wire M_BREADY_i_12_n_0;
  wire M_BREADY_i_13_n_0;
  wire M_BREADY_i_14_n_0;
  wire M_BREADY_i_15_n_0;
  wire M_BREADY_i_16_n_0;
  wire M_BREADY_i_1_n_0;
  wire M_BREADY_i_5_n_0;
  wire M_BREADY_i_7_n_0;
  wire M_BREADY_i_8_n_0;
  wire M_BREADY_i_9_n_0;
  wire M_BREADY_reg_0;
  wire M_BREADY_reg_i_6_n_0;
  wire M_BREADY_reg_i_6_n_1;
  wire M_BREADY_reg_i_6_n_2;
  wire M_BREADY_reg_i_6_n_3;
  wire M_BVALID;
  wire [3:0]M_WID;
  wire \M_WID[0]_i_1_n_0 ;
  wire \M_WID[3]_i_1_n_0 ;
  wire [2:0]\M_WID_reg[3]_0 ;
  wire M_WLAST;
  wire M_WLAST1;
  wire M_WLAST_INST_0_i_1_n_2;
  wire M_WLAST_INST_0_i_1_n_3;
  wire M_WLAST_INST_0_i_2_n_0;
  wire M_WLAST_INST_0_i_3_n_0;
  wire M_WLAST_INST_0_i_4_n_0;
  wire M_WREADY;
  wire [3:0]M_WSTRB;
  wire \M_WSTRB[0]_i_1_n_0 ;
  wire \M_WSTRB[1]_i_1_n_0 ;
  wire \M_WSTRB[2]_i_1_n_0 ;
  wire M_WVALID;
  wire [2:0]O;
  wire [31:0]Q;
  wire \RX_BLK_256.u_fifo_rx_i_2_n_0 ;
  wire [31:0]W_addr2;
  wire \W_addr[0]_i_1_n_0 ;
  wire \W_addr[0]_i_2_n_0 ;
  wire \W_addr[10]_i_1_n_0 ;
  wire \W_addr[10]_i_2_n_0 ;
  wire \W_addr[11]_i_1_n_0 ;
  wire \W_addr[11]_i_3_n_0 ;
  wire \W_addr[11]_i_4_n_0 ;
  wire \W_addr[11]_i_5_n_0 ;
  wire \W_addr[11]_i_6_n_0 ;
  wire \W_addr[11]_i_7_n_0 ;
  wire \W_addr[12]_i_1_n_0 ;
  wire \W_addr[12]_i_2_n_0 ;
  wire \W_addr[13]_i_1_n_0 ;
  wire \W_addr[13]_i_2_n_0 ;
  wire \W_addr[14]_i_1_n_0 ;
  wire \W_addr[14]_i_2_n_0 ;
  wire \W_addr[15]_i_1_n_0 ;
  wire \W_addr[15]_i_3_n_0 ;
  wire \W_addr[15]_i_4_n_0 ;
  wire \W_addr[15]_i_5_n_0 ;
  wire \W_addr[15]_i_6_n_0 ;
  wire \W_addr[15]_i_7_n_0 ;
  wire \W_addr[16]_i_1_n_0 ;
  wire \W_addr[16]_i_2_n_0 ;
  wire \W_addr[17]_i_1_n_0 ;
  wire \W_addr[17]_i_2_n_0 ;
  wire \W_addr[18]_i_1_n_0 ;
  wire \W_addr[18]_i_2_n_0 ;
  wire \W_addr[19]_i_1_n_0 ;
  wire \W_addr[19]_i_3_n_0 ;
  wire \W_addr[1]_i_1_n_0 ;
  wire \W_addr[1]_i_2_n_0 ;
  wire \W_addr[20]_i_1_n_0 ;
  wire \W_addr[20]_i_2_n_0 ;
  wire \W_addr[21]_i_1_n_0 ;
  wire \W_addr[21]_i_2_n_0 ;
  wire \W_addr[22]_i_1_n_0 ;
  wire \W_addr[22]_i_2_n_0 ;
  wire \W_addr[23]_i_1_n_0 ;
  wire \W_addr[23]_i_3_n_0 ;
  wire \W_addr[24]_i_1_n_0 ;
  wire \W_addr[24]_i_2_n_0 ;
  wire \W_addr[25]_i_1_n_0 ;
  wire \W_addr[25]_i_2_n_0 ;
  wire \W_addr[26]_i_1_n_0 ;
  wire \W_addr[26]_i_2_n_0 ;
  wire \W_addr[27]_i_1_n_0 ;
  wire \W_addr[27]_i_3_n_0 ;
  wire \W_addr[28]_i_1_n_0 ;
  wire \W_addr[28]_i_2_n_0 ;
  wire \W_addr[29]_i_1_n_0 ;
  wire \W_addr[29]_i_2_n_0 ;
  wire \W_addr[2]_i_1_n_0 ;
  wire \W_addr[2]_i_2_n_0 ;
  wire \W_addr[30]_i_1_n_0 ;
  wire \W_addr[30]_i_2_n_0 ;
  wire \W_addr[31]_i_10_n_0 ;
  wire \W_addr[31]_i_1_n_0 ;
  wire \W_addr[31]_i_2_n_0 ;
  wire \W_addr[31]_i_4_n_0 ;
  wire \W_addr[31]_i_6_n_0 ;
  wire \W_addr[31]_i_7_n_0 ;
  wire \W_addr[3]_i_1_n_0 ;
  wire \W_addr[3]_i_3_n_0 ;
  wire \W_addr[3]_i_4_n_0 ;
  wire \W_addr[3]_i_5_n_0 ;
  wire \W_addr[3]_i_6_n_0 ;
  wire \W_addr[3]_i_7_n_0 ;
  wire \W_addr[4]_i_1_n_0 ;
  wire \W_addr[4]_i_2_n_0 ;
  wire \W_addr[4]_i_4_n_0 ;
  wire \W_addr[5]_i_1_n_0 ;
  wire \W_addr[5]_i_2_n_0 ;
  wire \W_addr[6]_i_1_n_0 ;
  wire \W_addr[6]_i_2_n_0 ;
  wire \W_addr[7]_i_1_n_0 ;
  wire \W_addr[7]_i_3_n_0 ;
  wire \W_addr[7]_i_4_n_0 ;
  wire \W_addr[7]_i_5_n_0 ;
  wire \W_addr[7]_i_6_n_0 ;
  wire \W_addr[7]_i_7_n_0 ;
  wire \W_addr[8]_i_1_n_0 ;
  wire \W_addr[8]_i_2_n_0 ;
  wire \W_addr[9]_i_1_n_0 ;
  wire \W_addr[9]_i_2_n_0 ;
  wire [0:0]\W_addr_reg[0]_0 ;
  wire \W_addr_reg[11]_i_2_n_0 ;
  wire \W_addr_reg[11]_i_2_n_1 ;
  wire \W_addr_reg[11]_i_2_n_2 ;
  wire \W_addr_reg[11]_i_2_n_3 ;
  wire \W_addr_reg[12]_i_3_n_0 ;
  wire \W_addr_reg[12]_i_3_n_1 ;
  wire \W_addr_reg[12]_i_3_n_2 ;
  wire \W_addr_reg[12]_i_3_n_3 ;
  wire \W_addr_reg[12]_i_3_n_4 ;
  wire \W_addr_reg[12]_i_3_n_5 ;
  wire \W_addr_reg[12]_i_3_n_6 ;
  wire \W_addr_reg[12]_i_3_n_7 ;
  wire [3:0]\W_addr_reg[14]_0 ;
  wire \W_addr_reg[15]_i_2_n_0 ;
  wire \W_addr_reg[15]_i_2_n_1 ;
  wire \W_addr_reg[15]_i_2_n_2 ;
  wire \W_addr_reg[15]_i_2_n_3 ;
  wire \W_addr_reg[16]_i_3_n_0 ;
  wire \W_addr_reg[16]_i_3_n_1 ;
  wire \W_addr_reg[16]_i_3_n_2 ;
  wire \W_addr_reg[16]_i_3_n_3 ;
  wire \W_addr_reg[16]_i_3_n_4 ;
  wire \W_addr_reg[16]_i_3_n_5 ;
  wire \W_addr_reg[16]_i_3_n_6 ;
  wire \W_addr_reg[16]_i_3_n_7 ;
  wire \W_addr_reg[19]_i_2_n_0 ;
  wire \W_addr_reg[19]_i_2_n_1 ;
  wire \W_addr_reg[19]_i_2_n_2 ;
  wire \W_addr_reg[19]_i_2_n_3 ;
  wire \W_addr_reg[20]_i_3_n_0 ;
  wire \W_addr_reg[20]_i_3_n_1 ;
  wire \W_addr_reg[20]_i_3_n_2 ;
  wire \W_addr_reg[20]_i_3_n_3 ;
  wire \W_addr_reg[20]_i_3_n_4 ;
  wire \W_addr_reg[20]_i_3_n_5 ;
  wire \W_addr_reg[20]_i_3_n_6 ;
  wire \W_addr_reg[20]_i_3_n_7 ;
  wire [3:0]\W_addr_reg[23]_0 ;
  wire \W_addr_reg[23]_i_2_n_0 ;
  wire \W_addr_reg[23]_i_2_n_1 ;
  wire \W_addr_reg[23]_i_2_n_2 ;
  wire \W_addr_reg[23]_i_2_n_3 ;
  wire \W_addr_reg[24]_i_3_n_0 ;
  wire \W_addr_reg[24]_i_3_n_1 ;
  wire \W_addr_reg[24]_i_3_n_2 ;
  wire \W_addr_reg[24]_i_3_n_3 ;
  wire \W_addr_reg[24]_i_3_n_4 ;
  wire \W_addr_reg[24]_i_3_n_5 ;
  wire \W_addr_reg[24]_i_3_n_6 ;
  wire \W_addr_reg[24]_i_3_n_7 ;
  wire \W_addr_reg[27]_i_2_n_0 ;
  wire \W_addr_reg[27]_i_2_n_1 ;
  wire \W_addr_reg[27]_i_2_n_2 ;
  wire \W_addr_reg[27]_i_2_n_3 ;
  wire \W_addr_reg[28]_i_3_n_0 ;
  wire \W_addr_reg[28]_i_3_n_1 ;
  wire \W_addr_reg[28]_i_3_n_2 ;
  wire \W_addr_reg[28]_i_3_n_3 ;
  wire \W_addr_reg[28]_i_3_n_4 ;
  wire \W_addr_reg[28]_i_3_n_5 ;
  wire \W_addr_reg[28]_i_3_n_6 ;
  wire \W_addr_reg[28]_i_3_n_7 ;
  wire [3:0]\W_addr_reg[30]_0 ;
  wire [0:0]\W_addr_reg[30]_1 ;
  wire [0:0]\W_addr_reg[31]_0 ;
  wire [0:0]\W_addr_reg[31]_1 ;
  wire \W_addr_reg[31]_i_5_n_1 ;
  wire \W_addr_reg[31]_i_5_n_2 ;
  wire \W_addr_reg[31]_i_5_n_3 ;
  wire \W_addr_reg[31]_i_9_n_2 ;
  wire \W_addr_reg[31]_i_9_n_3 ;
  wire \W_addr_reg[31]_i_9_n_5 ;
  wire \W_addr_reg[31]_i_9_n_6 ;
  wire \W_addr_reg[31]_i_9_n_7 ;
  wire \W_addr_reg[3]_i_2_n_0 ;
  wire \W_addr_reg[3]_i_2_n_1 ;
  wire \W_addr_reg[3]_i_2_n_2 ;
  wire \W_addr_reg[3]_i_2_n_3 ;
  wire \W_addr_reg[4]_i_3_n_0 ;
  wire \W_addr_reg[4]_i_3_n_1 ;
  wire \W_addr_reg[4]_i_3_n_2 ;
  wire \W_addr_reg[4]_i_3_n_3 ;
  wire \W_addr_reg[4]_i_3_n_4 ;
  wire \W_addr_reg[4]_i_3_n_5 ;
  wire \W_addr_reg[4]_i_3_n_6 ;
  wire \W_addr_reg[4]_i_3_n_7 ;
  wire [3:0]\W_addr_reg[7]_0 ;
  wire \W_addr_reg[7]_i_2_n_0 ;
  wire \W_addr_reg[7]_i_2_n_1 ;
  wire \W_addr_reg[7]_i_2_n_2 ;
  wire \W_addr_reg[7]_i_2_n_3 ;
  wire \W_addr_reg[8]_i_3_n_0 ;
  wire \W_addr_reg[8]_i_3_n_1 ;
  wire \W_addr_reg[8]_i_3_n_2 ;
  wire \W_addr_reg[8]_i_3_n_3 ;
  wire \W_addr_reg[8]_i_3_n_4 ;
  wire \W_addr_reg[8]_i_3_n_5 ;
  wire \W_addr_reg[8]_i_3_n_6 ;
  wire \W_addr_reg[8]_i_3_n_7 ;
  wire W_bmove;
  wire \W_bmove[0]_i_1_n_0 ;
  wire \W_bmove[10]_i_1_n_0 ;
  wire \W_bmove[10]_i_2_n_0 ;
  wire \W_bmove[11]_i_1_n_0 ;
  wire \W_bmove[11]_i_2_n_0 ;
  wire \W_bmove[12]_i_1_n_0 ;
  wire \W_bmove[12]_i_2_n_0 ;
  wire \W_bmove[13]_i_1_n_0 ;
  wire \W_bmove[13]_i_2_n_0 ;
  wire \W_bmove[14]_i_1_n_0 ;
  wire \W_bmove[14]_i_2_n_0 ;
  wire \W_bmove[15]_i_10_n_0 ;
  wire \W_bmove[15]_i_11_n_0 ;
  wire \W_bmove[15]_i_2_n_0 ;
  wire \W_bmove[15]_i_39_n_0 ;
  wire \W_bmove[15]_i_3_n_0 ;
  wire \W_bmove[15]_i_40_n_0 ;
  wire \W_bmove[15]_i_41_n_0 ;
  wire \W_bmove[15]_i_42_n_0 ;
  wire \W_bmove[15]_i_43_n_0 ;
  wire \W_bmove[15]_i_44_n_0 ;
  wire \W_bmove[15]_i_45_n_0 ;
  wire \W_bmove[15]_i_46_n_0 ;
  wire \W_bmove[15]_i_7_n_0 ;
  wire \W_bmove[15]_i_81_n_0 ;
  wire \W_bmove[15]_i_82_n_0 ;
  wire \W_bmove[15]_i_83_n_0 ;
  wire \W_bmove[15]_i_84_n_0 ;
  wire \W_bmove[15]_i_85_n_0 ;
  wire \W_bmove[15]_i_86_n_0 ;
  wire \W_bmove[15]_i_87_n_0 ;
  wire \W_bmove[15]_i_88_n_0 ;
  wire \W_bmove[15]_i_8_n_0 ;
  wire \W_bmove[15]_i_9_n_0 ;
  wire \W_bmove[1]_i_14_n_0 ;
  wire \W_bmove[1]_i_15_n_0 ;
  wire \W_bmove[1]_i_16_n_0 ;
  wire \W_bmove[1]_i_17_n_0 ;
  wire \W_bmove[1]_i_1_n_0 ;
  wire [0:0]\W_bmove[1]_i_24 ;
  wire \W_bmove[1]_i_2_n_0 ;
  wire \W_bmove[1]_i_46_n_0 ;
  wire \W_bmove[1]_i_47_n_0 ;
  wire \W_bmove[1]_i_48_n_0 ;
  wire \W_bmove[1]_i_49_n_0 ;
  wire \W_bmove[1]_i_4_n_0 ;
  wire \W_bmove[1]_i_50_n_0 ;
  wire \W_bmove[1]_i_51_n_0 ;
  wire \W_bmove[1]_i_52_n_0 ;
  wire \W_bmove[1]_i_53_n_0 ;
  wire \W_bmove[1]_i_6_n_0 ;
  wire \W_bmove[1]_i_78_n_0 ;
  wire \W_bmove[1]_i_79_n_0 ;
  wire \W_bmove[1]_i_80_n_0 ;
  wire \W_bmove[1]_i_81_n_0 ;
  wire \W_bmove[1]_i_82_n_0 ;
  wire \W_bmove[1]_i_83_n_0 ;
  wire \W_bmove[1]_i_84_n_0 ;
  wire \W_bmove[1]_i_85_n_0 ;
  wire \W_bmove[2]_i_1_n_0 ;
  wire \W_bmove[2]_i_2_n_0 ;
  wire \W_bmove[3]_i_1_n_0 ;
  wire \W_bmove[3]_i_2_n_0 ;
  wire \W_bmove[4]_i_1_n_0 ;
  wire \W_bmove[4]_i_2_n_0 ;
  wire \W_bmove[5]_i_1_n_0 ;
  wire \W_bmove[5]_i_2_n_0 ;
  wire \W_bmove[6]_i_1_n_0 ;
  wire \W_bmove[6]_i_2_n_0 ;
  wire \W_bmove[7]_i_1_n_0 ;
  wire \W_bmove[7]_i_2_n_0 ;
  wire \W_bmove[8]_i_1_n_0 ;
  wire \W_bmove[8]_i_2_n_0 ;
  wire \W_bmove[9]_i_1_n_0 ;
  wire \W_bmove[9]_i_2_n_0 ;
  wire [0:0]\W_bmove_reg[0]_0 ;
  wire [0:0]\W_bmove_reg[0]_1 ;
  wire [0:0]\W_bmove_reg[0]_2 ;
  wire [10:0]\W_bmove_reg[10]_0 ;
  wire \W_bmove_reg[14]_0 ;
  wire [4:0]\W_bmove_reg[15]_0 ;
  wire \W_bmove_reg[15]_i_20_n_0 ;
  wire \W_bmove_reg[15]_i_20_n_1 ;
  wire \W_bmove_reg[15]_i_20_n_2 ;
  wire \W_bmove_reg[15]_i_20_n_3 ;
  wire [29:0]\W_bmove_reg[15]_i_28 ;
  wire \W_bmove_reg[15]_i_38_n_0 ;
  wire \W_bmove_reg[15]_i_38_n_1 ;
  wire \W_bmove_reg[15]_i_38_n_2 ;
  wire \W_bmove_reg[15]_i_38_n_3 ;
  wire \W_bmove_reg[1]_i_12_n_0 ;
  wire \W_bmove_reg[1]_i_12_n_1 ;
  wire \W_bmove_reg[1]_i_12_n_2 ;
  wire \W_bmove_reg[1]_i_12_n_3 ;
  wire \W_bmove_reg[1]_i_45_n_0 ;
  wire \W_bmove_reg[1]_i_45_n_1 ;
  wire \W_bmove_reg[1]_i_45_n_2 ;
  wire \W_bmove_reg[1]_i_45_n_3 ;
  wire \W_bmove_reg[1]_i_5_n_0 ;
  wire \W_bmove_reg[1]_i_5_n_1 ;
  wire \W_bmove_reg[1]_i_5_n_2 ;
  wire \W_bmove_reg[1]_i_5_n_3 ;
  wire \W_bmove_reg_n_0_[0] ;
  wire \W_bmove_reg_n_0_[10] ;
  wire \W_bmove_reg_n_0_[11] ;
  wire \W_bmove_reg_n_0_[12] ;
  wire \W_bmove_reg_n_0_[13] ;
  wire \W_bmove_reg_n_0_[14] ;
  wire \W_bmove_reg_n_0_[15] ;
  wire \W_bmove_reg_n_0_[1] ;
  wire \W_bmove_reg_n_0_[2] ;
  wire \W_bmove_reg_n_0_[3] ;
  wire \W_bmove_reg_n_0_[4] ;
  wire \W_bmove_reg_n_0_[5] ;
  wire \W_bmove_reg_n_0_[6] ;
  wire \W_bmove_reg_n_0_[7] ;
  wire \W_bmove_reg_n_0_[8] ;
  wire \W_bmove_reg_n_0_[9] ;
  wire W_bnum;
  wire \W_bnum[11]_i_2_n_0 ;
  wire \W_bnum[11]_i_3_n_0 ;
  wire \W_bnum[11]_i_4_n_0 ;
  wire \W_bnum[11]_i_5_n_0 ;
  wire \W_bnum[15]_i_1_n_0 ;
  wire \W_bnum[15]_i_4_n_0 ;
  wire \W_bnum[15]_i_5_n_0 ;
  wire \W_bnum[15]_i_6_n_0 ;
  wire \W_bnum[15]_i_7_n_0 ;
  wire \W_bnum[15]_i_8_n_0 ;
  wire \W_bnum[3]_i_2_n_0 ;
  wire \W_bnum[3]_i_3_n_0 ;
  wire \W_bnum[3]_i_4_n_0 ;
  wire \W_bnum[3]_i_5_n_0 ;
  wire \W_bnum[7]_i_2_n_0 ;
  wire \W_bnum[7]_i_3_n_0 ;
  wire \W_bnum[7]_i_4_n_0 ;
  wire \W_bnum[7]_i_5_n_0 ;
  wire \W_bnum_reg[11]_i_1_n_0 ;
  wire \W_bnum_reg[11]_i_1_n_1 ;
  wire \W_bnum_reg[11]_i_1_n_2 ;
  wire \W_bnum_reg[11]_i_1_n_3 ;
  wire \W_bnum_reg[11]_i_1_n_4 ;
  wire \W_bnum_reg[11]_i_1_n_5 ;
  wire \W_bnum_reg[11]_i_1_n_6 ;
  wire \W_bnum_reg[11]_i_1_n_7 ;
  wire \W_bnum_reg[15]_i_3_n_1 ;
  wire \W_bnum_reg[15]_i_3_n_2 ;
  wire \W_bnum_reg[15]_i_3_n_3 ;
  wire \W_bnum_reg[15]_i_3_n_4 ;
  wire \W_bnum_reg[15]_i_3_n_5 ;
  wire \W_bnum_reg[15]_i_3_n_6 ;
  wire \W_bnum_reg[15]_i_3_n_7 ;
  wire \W_bnum_reg[3]_i_1_n_0 ;
  wire \W_bnum_reg[3]_i_1_n_1 ;
  wire \W_bnum_reg[3]_i_1_n_2 ;
  wire \W_bnum_reg[3]_i_1_n_3 ;
  wire \W_bnum_reg[3]_i_1_n_4 ;
  wire \W_bnum_reg[3]_i_1_n_5 ;
  wire \W_bnum_reg[3]_i_1_n_6 ;
  wire \W_bnum_reg[3]_i_1_n_7 ;
  wire \W_bnum_reg[7]_i_1_n_0 ;
  wire \W_bnum_reg[7]_i_1_n_1 ;
  wire \W_bnum_reg[7]_i_1_n_2 ;
  wire \W_bnum_reg[7]_i_1_n_3 ;
  wire \W_bnum_reg[7]_i_1_n_4 ;
  wire \W_bnum_reg[7]_i_1_n_5 ;
  wire \W_bnum_reg[7]_i_1_n_6 ;
  wire \W_bnum_reg[7]_i_1_n_7 ;
  wire \W_bnum_reg_n_0_[0] ;
  wire \W_bnum_reg_n_0_[10] ;
  wire \W_bnum_reg_n_0_[11] ;
  wire \W_bnum_reg_n_0_[12] ;
  wire \W_bnum_reg_n_0_[13] ;
  wire \W_bnum_reg_n_0_[14] ;
  wire \W_bnum_reg_n_0_[15] ;
  wire \W_bnum_reg_n_0_[1] ;
  wire \W_bnum_reg_n_0_[2] ;
  wire \W_bnum_reg_n_0_[3] ;
  wire \W_bnum_reg_n_0_[4] ;
  wire \W_bnum_reg_n_0_[5] ;
  wire \W_bnum_reg_n_0_[6] ;
  wire \W_bnum_reg_n_0_[7] ;
  wire \W_bnum_reg_n_0_[8] ;
  wire \W_bnum_reg_n_0_[9] ;
  wire W_brem;
  wire \W_brem[0]_i_1_n_0 ;
  wire \W_brem[10]_i_1_n_0 ;
  wire \W_brem[11]_i_10_n_0 ;
  wire \W_brem[11]_i_11_n_0 ;
  wire \W_brem[11]_i_1_n_0 ;
  wire \W_brem[11]_i_4_n_0 ;
  wire \W_brem[11]_i_5_n_0 ;
  wire \W_brem[11]_i_6_n_0 ;
  wire \W_brem[11]_i_7_n_0 ;
  wire \W_brem[11]_i_8_n_0 ;
  wire \W_brem[11]_i_9_n_0 ;
  wire \W_brem[12]_i_1_n_0 ;
  wire \W_brem[13]_i_1_n_0 ;
  wire \W_brem[14]_i_1_n_0 ;
  wire \W_brem[15]_i_10_n_0 ;
  wire \W_brem[15]_i_11_n_0 ;
  wire \W_brem[15]_i_12_n_0 ;
  wire \W_brem[15]_i_13_n_0 ;
  wire \W_brem[15]_i_14_n_0 ;
  wire \W_brem[15]_i_15_n_0 ;
  wire \W_brem[15]_i_16_n_0 ;
  wire \W_brem[15]_i_17_n_0 ;
  wire \W_brem[15]_i_19_n_0 ;
  wire \W_brem[15]_i_1_n_0 ;
  wire \W_brem[15]_i_20_n_0 ;
  wire \W_brem[15]_i_21_n_0 ;
  wire \W_brem[15]_i_22_n_0 ;
  wire \W_brem[15]_i_23_n_0 ;
  wire \W_brem[15]_i_24_n_0 ;
  wire \W_brem[15]_i_25_n_0 ;
  wire \W_brem[15]_i_26_n_0 ;
  wire \W_brem[15]_i_27_n_0 ;
  wire \W_brem[15]_i_28_n_0 ;
  wire \W_brem[15]_i_29_n_0 ;
  wire \W_brem[15]_i_2_n_0 ;
  wire \W_brem[15]_i_30_n_0 ;
  wire \W_brem[15]_i_31_n_0 ;
  wire \W_brem[15]_i_32_n_0 ;
  wire \W_brem[15]_i_33_n_0 ;
  wire \W_brem[15]_i_34_n_0 ;
  wire \W_brem[15]_i_35_n_0 ;
  wire \W_brem[15]_i_36_n_0 ;
  wire \W_brem[15]_i_37_n_0 ;
  wire \W_brem[15]_i_3_n_0 ;
  wire \W_brem[15]_i_5_n_0 ;
  wire \W_brem[15]_i_6_n_0 ;
  wire \W_brem[1]_i_1_n_0 ;
  wire \W_brem[2]_i_1_n_0 ;
  wire \W_brem[3]_i_1_n_0 ;
  wire \W_brem[3]_i_3_n_0 ;
  wire \W_brem[3]_i_4_n_0 ;
  wire \W_brem[3]_i_5_n_0 ;
  wire \W_brem[3]_i_6_n_0 ;
  wire \W_brem[4]_i_1_n_0 ;
  wire \W_brem[5]_i_1_n_0 ;
  wire \W_brem[6]_i_1_n_0 ;
  wire \W_brem[7]_i_10_n_0 ;
  wire \W_brem[7]_i_11_n_0 ;
  wire \W_brem[7]_i_1_n_0 ;
  wire \W_brem[7]_i_4_n_0 ;
  wire \W_brem[7]_i_5_n_0 ;
  wire \W_brem[7]_i_6_n_0 ;
  wire \W_brem[7]_i_7_n_0 ;
  wire \W_brem[7]_i_8_n_0 ;
  wire \W_brem[7]_i_9_n_0 ;
  wire \W_brem[8]_i_1_n_0 ;
  wire \W_brem[9]_i_1_n_0 ;
  wire \W_brem_reg[11]_i_2_n_0 ;
  wire \W_brem_reg[11]_i_2_n_1 ;
  wire \W_brem_reg[11]_i_2_n_2 ;
  wire \W_brem_reg[11]_i_2_n_3 ;
  wire \W_brem_reg[11]_i_3_n_0 ;
  wire \W_brem_reg[11]_i_3_n_1 ;
  wire \W_brem_reg[11]_i_3_n_2 ;
  wire \W_brem_reg[11]_i_3_n_3 ;
  wire \W_brem_reg[11]_i_3_n_4 ;
  wire \W_brem_reg[11]_i_3_n_5 ;
  wire \W_brem_reg[11]_i_3_n_6 ;
  wire \W_brem_reg[11]_i_3_n_7 ;
  wire [15:0]\W_brem_reg[15]_0 ;
  wire [15:0]\W_brem_reg[15]_i_4_0 ;
  wire \W_brem_reg[15]_i_4_n_0 ;
  wire \W_brem_reg[15]_i_4_n_1 ;
  wire \W_brem_reg[15]_i_4_n_2 ;
  wire \W_brem_reg[15]_i_4_n_3 ;
  wire \W_brem_reg[15]_i_7_n_1 ;
  wire \W_brem_reg[15]_i_7_n_2 ;
  wire \W_brem_reg[15]_i_7_n_3 ;
  wire \W_brem_reg[15]_i_8_n_1 ;
  wire \W_brem_reg[15]_i_8_n_2 ;
  wire \W_brem_reg[15]_i_8_n_3 ;
  wire \W_brem_reg[15]_i_8_n_4 ;
  wire \W_brem_reg[15]_i_8_n_5 ;
  wire \W_brem_reg[15]_i_8_n_6 ;
  wire \W_brem_reg[15]_i_8_n_7 ;
  wire \W_brem_reg[15]_i_9_n_0 ;
  wire \W_brem_reg[15]_i_9_n_1 ;
  wire \W_brem_reg[15]_i_9_n_2 ;
  wire \W_brem_reg[15]_i_9_n_3 ;
  wire [0:0]\W_brem_reg[1]_0 ;
  wire \W_brem_reg[3]_i_2_n_0 ;
  wire \W_brem_reg[3]_i_2_n_1 ;
  wire \W_brem_reg[3]_i_2_n_2 ;
  wire \W_brem_reg[3]_i_2_n_3 ;
  wire \W_brem_reg[3]_i_2_n_4 ;
  wire \W_brem_reg[3]_i_2_n_5 ;
  wire \W_brem_reg[3]_i_2_n_6 ;
  wire \W_brem_reg[3]_i_2_n_7 ;
  wire \W_brem_reg[7]_i_2_n_0 ;
  wire \W_brem_reg[7]_i_2_n_1 ;
  wire \W_brem_reg[7]_i_2_n_2 ;
  wire \W_brem_reg[7]_i_2_n_3 ;
  wire \W_brem_reg[7]_i_3_n_0 ;
  wire \W_brem_reg[7]_i_3_n_1 ;
  wire \W_brem_reg[7]_i_3_n_2 ;
  wire \W_brem_reg[7]_i_3_n_3 ;
  wire \W_brem_reg[7]_i_3_n_4 ;
  wire \W_brem_reg[7]_i_3_n_5 ;
  wire \W_brem_reg[7]_i_3_n_6 ;
  wire \W_brem_reg[7]_i_3_n_7 ;
  wire [15:0]W_bxxx;
  wire [8:0]W_cnt;
  wire \W_cnt[0]_i_1_n_0 ;
  wire \W_cnt[1]_i_1_n_0 ;
  wire \W_cnt[2]_i_1_n_0 ;
  wire \W_cnt[3]_i_1_n_0 ;
  wire \W_cnt[4]_i_1_n_0 ;
  wire \W_cnt[5]_i_1_n_0 ;
  wire \W_cnt[5]_i_2_n_0 ;
  wire \W_cnt[5]_i_3_n_0 ;
  wire \W_cnt[6]_i_1_n_0 ;
  wire \W_cnt[7]_i_1_n_0 ;
  wire \W_cnt[8]_i_1_n_0 ;
  wire \W_cnt[8]_i_2_n_0 ;
  wire \W_cnt[8]_i_3_n_0 ;
  wire W_done_i_1_n_0;
  wire W_done_i_2_n_0;
  wire W_done_reg_n_0;
  wire W_empty;
  wire W_empty_i_1_n_0;
  wire W_error19_out;
  wire W_error_i_1_n_0;
  wire W_error_i_3_n_0;
  wire W_error_reg_n_0;
  wire W_full_reg_0;
  wire [3:0]W_full_reg_1;
  wire [3:0]W_full_reg_2;
  wire W_full_reg_3;
  wire W_full_reg_4;
  wire W_full_reg_5;
  wire W_go0;
  wire W_go2;
  wire W_go_i_1_n_0;
  wire W_go_i_2_n_0;
  wire W_go_i_3_n_0;
  wire W_go_i_4_n_0;
  wire W_go_reg_0;
  wire W_go_reg_n_0;
  wire W_goodframe;
  wire W_goodframe_i_1_n_0;
  wire W_goodframe_i_2_n_0;
  wire W_goodframe_reg_0;
  wire W_goodframe_reg_1;
  wire \W_len[0]_i_1_n_0 ;
  wire \W_len[0]_i_2_n_0 ;
  wire \W_len[1]_i_1_n_0 ;
  wire \W_len[1]_i_2_n_0 ;
  wire \W_len[2]_i_1_n_0 ;
  wire \W_len[2]_i_3_n_0 ;
  wire \W_len[2]_i_4_n_0 ;
  wire \W_len[2]_i_7_n_0 ;
  wire \W_len[3]_i_1_n_0 ;
  wire \W_len[3]_i_2_n_0 ;
  wire \W_len[4]_i_1_n_0 ;
  wire \W_len[4]_i_2_n_0 ;
  wire \W_len[5]_i_1_n_0 ;
  wire \W_len[5]_i_2_n_0 ;
  wire \W_len[6]_i_1_n_0 ;
  wire \W_len[6]_i_3_n_0 ;
  wire \W_len[7]_i_1_n_0 ;
  wire \W_len[7]_i_2_n_0 ;
  wire \W_len[8]_i_1_n_0 ;
  wire \W_len[8]_i_3_n_0 ;
  wire [0:0]\W_len_reg[0]_0 ;
  wire \W_len_reg[2]_i_2_n_0 ;
  wire \W_len_reg[2]_i_2_n_1 ;
  wire \W_len_reg[2]_i_2_n_2 ;
  wire \W_len_reg[2]_i_2_n_3 ;
  wire \W_len_reg[2]_i_2_n_4 ;
  wire \W_len_reg[2]_i_2_n_5 ;
  wire \W_len_reg[2]_i_2_n_6 ;
  wire \W_len_reg[2]_i_5_n_0 ;
  wire \W_len_reg[2]_i_5_n_1 ;
  wire \W_len_reg[2]_i_5_n_2 ;
  wire \W_len_reg[2]_i_5_n_3 ;
  wire \W_len_reg[2]_i_5_n_4 ;
  wire \W_len_reg[2]_i_5_n_5 ;
  wire \W_len_reg[2]_i_5_n_6 ;
  wire [3:0]\W_len_reg[6]_0 ;
  wire \W_len_reg[6]_i_2_n_0 ;
  wire \W_len_reg[6]_i_2_n_1 ;
  wire \W_len_reg[6]_i_2_n_2 ;
  wire \W_len_reg[6]_i_2_n_3 ;
  wire \W_len_reg[6]_i_2_n_4 ;
  wire \W_len_reg[6]_i_2_n_5 ;
  wire \W_len_reg[6]_i_2_n_6 ;
  wire \W_len_reg[6]_i_2_n_7 ;
  wire \W_len_reg[6]_i_4_n_0 ;
  wire \W_len_reg[6]_i_4_n_1 ;
  wire \W_len_reg[6]_i_4_n_2 ;
  wire \W_len_reg[6]_i_4_n_3 ;
  wire \W_len_reg[6]_i_4_n_4 ;
  wire \W_len_reg[6]_i_4_n_5 ;
  wire \W_len_reg[6]_i_4_n_6 ;
  wire \W_len_reg[6]_i_4_n_7 ;
  wire [0:0]\W_len_reg[8]_0 ;
  wire [1:0]\W_len_reg[8]_1 ;
  wire \W_len_reg[8]_i_2_n_3 ;
  wire \W_len_reg[8]_i_2_n_6 ;
  wire \W_len_reg[8]_i_2_n_7 ;
  wire \W_len_reg[8]_i_4_n_3 ;
  wire \W_len_reg[8]_i_4_n_6 ;
  wire \W_len_reg[8]_i_4_n_7 ;
  wire \W_len_reg_n_0_[1] ;
  wire \W_len_reg_n_0_[2] ;
  wire \W_len_reg_n_0_[3] ;
  wire \W_len_reg_n_0_[4] ;
  wire \W_len_reg_n_0_[5] ;
  wire \W_len_reg_n_0_[6] ;
  wire \W_len_reg_n_0_[7] ;
  wire \W_len_reg_n_0_[8] ;
  wire \W_size[2]_i_10_n_0 ;
  wire \W_size[2]_i_11_n_0 ;
  wire \W_size[2]_i_12_n_0 ;
  wire \W_size[2]_i_13_n_0 ;
  wire \W_size[2]_i_14_n_0 ;
  wire \W_size[2]_i_15_n_0 ;
  wire \W_size[2]_i_16_n_0 ;
  wire \W_size[2]_i_1_n_0 ;
  wire \W_size[2]_i_2_n_0 ;
  wire \W_size[2]_i_5_n_0 ;
  wire \W_size[2]_i_6_n_0 ;
  wire \W_size[2]_i_7_n_0 ;
  wire \W_size[2]_i_8_n_0 ;
  wire \W_size[2]_i_9_n_0 ;
  wire \W_size_reg[2]_i_3_n_2 ;
  wire \W_size_reg[2]_i_3_n_3 ;
  wire \W_size_reg[2]_i_4_n_0 ;
  wire \W_size_reg[2]_i_4_n_1 ;
  wire \W_size_reg[2]_i_4_n_2 ;
  wire \W_size_reg[2]_i_4_n_3 ;
  wire client_bnum_rdy_C_i_1_n_0;
  wire client_bnum_rdy_C_i_2_n_0;
  wire client_bnum_rdy_C_i_3_n_0;
  wire client_bnum_rdy_reg_C_0;
  wire client_bnum_rdy_reg_C_n_0;
  wire client_bnum_rdy_reg_LDC_n_0;
  wire client_bnum_rdy_reg_P_0;
  wire client_bnum_rdy_reg_P_n_0;
  (* RTL_KEEP = "true" *) wire client_rx_rd_bnum_rdy;
  wire conf_rx_en;
  wire conf_rx_reset;
  wire \desc_bnum[15]_i_1_n_0 ;
  wire [15:0]\desc_bnum_reg[15]_0 ;
  wire [15:0]\desc_bnum_reg[15]_1 ;
  wire \desc_dst[0]_i_1_n_0 ;
  wire \desc_dst[10]_i_1_n_0 ;
  wire \desc_dst[11]_i_1_n_0 ;
  wire \desc_dst[12]_i_1_n_0 ;
  wire \desc_dst[13]_i_1_n_0 ;
  wire \desc_dst[14]_i_1_n_0 ;
  wire \desc_dst[15]_i_1_n_0 ;
  wire \desc_dst[16]_i_1_n_0 ;
  wire \desc_dst[17]_i_1_n_0 ;
  wire \desc_dst[18]_i_1_n_0 ;
  wire \desc_dst[19]_i_1_n_0 ;
  wire \desc_dst[1]_i_1_n_0 ;
  wire \desc_dst[20]_i_1_n_0 ;
  wire \desc_dst[21]_i_1_n_0 ;
  wire \desc_dst[22]_i_1_n_0 ;
  wire \desc_dst[23]_i_1_n_0 ;
  wire \desc_dst[24]_i_1_n_0 ;
  wire \desc_dst[25]_i_1_n_0 ;
  wire \desc_dst[26]_i_1_n_0 ;
  wire \desc_dst[27]_i_1_n_0 ;
  wire \desc_dst[28]_i_1_n_0 ;
  wire \desc_dst[29]_i_1_n_0 ;
  wire \desc_dst[2]_i_1_n_0 ;
  wire \desc_dst[30]_i_1_n_0 ;
  wire \desc_dst[31]_i_1_n_0 ;
  wire \desc_dst[3]_i_1_n_0 ;
  wire \desc_dst[4]_i_1_n_0 ;
  wire \desc_dst[5]_i_1_n_0 ;
  wire \desc_dst[6]_i_1_n_0 ;
  wire \desc_dst[7]_i_1_n_0 ;
  wire \desc_dst[8]_i_1_n_0 ;
  wire \desc_dst[9]_i_1_n_0 ;
  wire [31:0]\desc_dst_reg[31]_0 ;
  wire desc_valid1;
  wire desc_valid_i_1_n_0;
  wire desc_valid_i_2_n_0;
  wire [3:0]dout;
  (* RTL_KEEP = "true" *) wire out;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire rx_addr_empty;
  wire [31:0]rx_addr_head;
  wire rx_addr_head_update;
  wire [31:0]rx_addr_start;
  wire [31:0]rx_addr_tail;
  wire rx_descriptor_full;
  wire rx_descriptor_wr_rdy;
  wire rx_descriptor_wr_vld;
  wire [2:2]size;
  (* MARK_DEBUG *) (* RTL_KEEP = "true" *) wire [2:0]state;
  wire state1;
  wire \state[0]_i_1__0_n_0 ;
  wire \state[0]_i_2__0_n_0 ;
  wire \state[0]_i_3_n_0 ;
  wire \state[0]_i_4_n_0 ;
  wire \state[0]_i_5_n_0 ;
  wire \state[0]_i_7_n_0 ;
  wire \state[1]_i_1__0_n_0 ;
  wire \state[1]_i_2_n_0 ;
  wire \state[1]_i_3__0_n_0 ;
  wire \state[1]_i_4_n_0 ;
  wire \state[1]_i_5_n_0 ;
  wire \state[1]_i_6_n_0 ;
  wire \state[1]_i_7_n_0 ;
  wire \state[2]_i_1__0_n_0 ;
  wire \state[2]_i_2_n_0 ;
  wire \state[2]_i_3_n_0 ;
  wire \state[2]_i_5_n_0 ;
  wire \state[2]_i_6_n_0 ;
  wire \state_reg[0]_0 ;
  wire \state_reg[1]_0 ;
  wire \state_reg[1]_1 ;
  wire \state_reg[2]_1 ;
  wire \state_reg[2]_2 ;
  wire \state_reg[2]_3 ;
  (* RTL_KEEP = "true" *) wire [2:0]state_write;
  wire \state_write[0]_i_1_n_0 ;
  wire \state_write[0]_i_2_n_0 ;
  wire \state_write[0]_i_3_n_0 ;
  wire \state_write[0]_i_4_n_0 ;
  wire \state_write[1]_i_1_n_0 ;
  wire \state_write[2]_i_1_n_0 ;
  wire \state_write[2]_i_2_n_0 ;
  wire \state_write[2]_i_3_n_0 ;
  wire \state_write[2]_i_4_n_0 ;
  wire valid;
  wire [3:2]\NLW_DMA_ADDR_HEAD_reg[31]_P_i_3_CO_UNCONNECTED ;
  wire [3:0]\NLW_DMA_ADDR_HEAD_reg[31]_P_i_3_O_UNCONNECTED ;
  wire [3:0]\NLW_DMA_ADDR_HEAD_reg[31]_P_i_4_O_UNCONNECTED ;
  wire [3:0]\NLW_DMA_ADDR_HEAD_reg[31]_P_i_7_O_UNCONNECTED ;
  wire [3:1]NLW_M_BREADY_reg_i_4_CO_UNCONNECTED;
  wire [3:0]NLW_M_BREADY_reg_i_4_O_UNCONNECTED;
  wire [3:0]NLW_M_BREADY_reg_i_6_O_UNCONNECTED;
  wire [3:3]NLW_M_WLAST_INST_0_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_M_WLAST_INST_0_i_1_O_UNCONNECTED;
  wire [3:3]\NLW_W_addr_reg[31]_i_5_CO_UNCONNECTED ;
  wire [3:2]\NLW_W_addr_reg[31]_i_9_CO_UNCONNECTED ;
  wire [3:3]\NLW_W_addr_reg[31]_i_9_O_UNCONNECTED ;
  wire [3:0]\NLW_W_bmove_reg[15]_i_20_O_UNCONNECTED ;
  wire [3:0]\NLW_W_bmove_reg[15]_i_38_O_UNCONNECTED ;
  wire [3:0]\NLW_W_bmove_reg[1]_i_12_O_UNCONNECTED ;
  wire [3:0]\NLW_W_bmove_reg[1]_i_45_O_UNCONNECTED ;
  wire [3:3]\NLW_W_bnum_reg[15]_i_3_CO_UNCONNECTED ;
  wire [3:0]\NLW_W_brem_reg[15]_i_4_O_UNCONNECTED ;
  wire [3:3]\NLW_W_brem_reg[15]_i_7_CO_UNCONNECTED ;
  wire [3:3]\NLW_W_brem_reg[15]_i_8_CO_UNCONNECTED ;
  wire [3:0]\NLW_W_brem_reg[15]_i_9_O_UNCONNECTED ;
  wire [0:0]\NLW_W_len_reg[2]_i_2_O_UNCONNECTED ;
  wire [0:0]\NLW_W_len_reg[2]_i_5_O_UNCONNECTED ;
  wire [3:1]\NLW_W_len_reg[8]_i_2_CO_UNCONNECTED ;
  wire [3:2]\NLW_W_len_reg[8]_i_2_O_UNCONNECTED ;
  wire [3:1]\NLW_W_len_reg[8]_i_4_CO_UNCONNECTED ;
  wire [3:2]\NLW_W_len_reg[8]_i_4_O_UNCONNECTED ;
  wire [3:3]\NLW_W_size_reg[2]_i_3_CO_UNCONNECTED ;
  wire [3:0]\NLW_W_size_reg[2]_i_3_O_UNCONNECTED ;
  wire [3:0]\NLW_W_size_reg[2]_i_4_O_UNCONNECTED ;

  assign bbstub_valid = out;
  assign \state_reg[2]_0 [2:0] = state;
  assign \state_write_reg[0]_0 [0] = state_write[0];
  FDCE #(
    .INIT(1'b0)) 
    \CID_reg[0] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\CID_reg[0]_0 ),
        .Q(\CID_reg[3]_0 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \CID_reg[1] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWID[1]_i_1_n_0 ),
        .Q(\CID_reg[3]_0 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \CID_reg[2] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWID[2]_i_1_n_0 ),
        .Q(\CID_reg[3]_0 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \CID_reg[3] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWID[3]_i_2_n_0 ),
        .Q(\CID_reg[3]_0 [3]));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \DMA_ADDR_HEAD[10]_C_i_1 
       (.I0(rx_addr_start[10]),
        .I1(\W_addr_reg[31]_1 ),
        .I2(conf_rx_en),
        .I3(Q[10]),
        .I4(W_goodframe_reg_0),
        .I5(\DMA_ADDR_HEAD_reg[10]_C_n_0 ),
        .O(\DMA_ADDR_HEAD[10]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \DMA_ADDR_HEAD[11]_C_i_1 
       (.I0(rx_addr_start[11]),
        .I1(\W_addr_reg[31]_1 ),
        .I2(conf_rx_en),
        .I3(Q[11]),
        .I4(W_goodframe_reg_0),
        .I5(\DMA_ADDR_HEAD_reg[11]_C_n_0 ),
        .O(\DMA_ADDR_HEAD[11]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \DMA_ADDR_HEAD[12]_C_i_1 
       (.I0(rx_addr_start[12]),
        .I1(\W_addr_reg[31]_1 ),
        .I2(conf_rx_en),
        .I3(Q[12]),
        .I4(W_goodframe_reg_0),
        .I5(\DMA_ADDR_HEAD_reg[12]_C_n_0 ),
        .O(\DMA_ADDR_HEAD[12]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \DMA_ADDR_HEAD[13]_C_i_1 
       (.I0(rx_addr_start[13]),
        .I1(\W_addr_reg[31]_1 ),
        .I2(conf_rx_en),
        .I3(Q[13]),
        .I4(W_goodframe_reg_0),
        .I5(\DMA_ADDR_HEAD_reg[13]_C_n_0 ),
        .O(\DMA_ADDR_HEAD[13]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \DMA_ADDR_HEAD[14]_C_i_1 
       (.I0(rx_addr_start[14]),
        .I1(\W_addr_reg[31]_1 ),
        .I2(conf_rx_en),
        .I3(Q[14]),
        .I4(W_goodframe_reg_0),
        .I5(\DMA_ADDR_HEAD_reg[14]_C_n_0 ),
        .O(\DMA_ADDR_HEAD[14]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \DMA_ADDR_HEAD[15]_C_i_1 
       (.I0(rx_addr_start[15]),
        .I1(\W_addr_reg[31]_1 ),
        .I2(conf_rx_en),
        .I3(Q[15]),
        .I4(W_goodframe_reg_0),
        .I5(\DMA_ADDR_HEAD_reg[15]_C_n_0 ),
        .O(\DMA_ADDR_HEAD[15]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \DMA_ADDR_HEAD[16]_C_i_1 
       (.I0(rx_addr_start[16]),
        .I1(\W_addr_reg[31]_1 ),
        .I2(conf_rx_en),
        .I3(Q[16]),
        .I4(W_goodframe_reg_0),
        .I5(\DMA_ADDR_HEAD_reg[16]_C_n_0 ),
        .O(\DMA_ADDR_HEAD[16]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \DMA_ADDR_HEAD[17]_C_i_1 
       (.I0(rx_addr_start[17]),
        .I1(\W_addr_reg[31]_1 ),
        .I2(conf_rx_en),
        .I3(Q[17]),
        .I4(W_goodframe_reg_0),
        .I5(\DMA_ADDR_HEAD_reg[17]_C_n_0 ),
        .O(\DMA_ADDR_HEAD[17]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \DMA_ADDR_HEAD[18]_C_i_1 
       (.I0(rx_addr_start[18]),
        .I1(\W_addr_reg[31]_1 ),
        .I2(conf_rx_en),
        .I3(Q[18]),
        .I4(W_goodframe_reg_0),
        .I5(\DMA_ADDR_HEAD_reg[18]_C_n_0 ),
        .O(\DMA_ADDR_HEAD[18]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \DMA_ADDR_HEAD[19]_C_i_1 
       (.I0(rx_addr_start[19]),
        .I1(\W_addr_reg[31]_1 ),
        .I2(conf_rx_en),
        .I3(Q[19]),
        .I4(W_goodframe_reg_0),
        .I5(\DMA_ADDR_HEAD_reg[19]_C_n_0 ),
        .O(\DMA_ADDR_HEAD[19]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \DMA_ADDR_HEAD[20]_C_i_1 
       (.I0(rx_addr_start[20]),
        .I1(\W_addr_reg[31]_1 ),
        .I2(conf_rx_en),
        .I3(Q[20]),
        .I4(W_goodframe_reg_0),
        .I5(\DMA_ADDR_HEAD_reg[20]_C_n_0 ),
        .O(\DMA_ADDR_HEAD[20]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \DMA_ADDR_HEAD[21]_C_i_1 
       (.I0(rx_addr_start[21]),
        .I1(\W_addr_reg[31]_1 ),
        .I2(conf_rx_en),
        .I3(Q[21]),
        .I4(W_goodframe_reg_0),
        .I5(\DMA_ADDR_HEAD_reg[21]_C_n_0 ),
        .O(\DMA_ADDR_HEAD[21]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \DMA_ADDR_HEAD[22]_C_i_1 
       (.I0(rx_addr_start[22]),
        .I1(\W_addr_reg[31]_1 ),
        .I2(conf_rx_en),
        .I3(Q[22]),
        .I4(W_goodframe_reg_0),
        .I5(\DMA_ADDR_HEAD_reg[22]_C_n_0 ),
        .O(\DMA_ADDR_HEAD[22]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \DMA_ADDR_HEAD[23]_C_i_1 
       (.I0(rx_addr_start[23]),
        .I1(\W_addr_reg[31]_1 ),
        .I2(conf_rx_en),
        .I3(Q[23]),
        .I4(W_goodframe_reg_0),
        .I5(\DMA_ADDR_HEAD_reg[23]_C_n_0 ),
        .O(\DMA_ADDR_HEAD[23]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \DMA_ADDR_HEAD[24]_C_i_1 
       (.I0(rx_addr_start[24]),
        .I1(\W_addr_reg[31]_1 ),
        .I2(conf_rx_en),
        .I3(Q[24]),
        .I4(W_goodframe_reg_0),
        .I5(\DMA_ADDR_HEAD_reg[24]_C_n_0 ),
        .O(\DMA_ADDR_HEAD[24]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \DMA_ADDR_HEAD[25]_C_i_1 
       (.I0(rx_addr_start[25]),
        .I1(\W_addr_reg[31]_1 ),
        .I2(conf_rx_en),
        .I3(Q[25]),
        .I4(W_goodframe_reg_0),
        .I5(\DMA_ADDR_HEAD_reg[25]_C_n_0 ),
        .O(\DMA_ADDR_HEAD[25]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \DMA_ADDR_HEAD[26]_C_i_1 
       (.I0(rx_addr_start[26]),
        .I1(\W_addr_reg[31]_1 ),
        .I2(conf_rx_en),
        .I3(Q[26]),
        .I4(W_goodframe_reg_0),
        .I5(\DMA_ADDR_HEAD_reg[26]_C_n_0 ),
        .O(\DMA_ADDR_HEAD[26]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \DMA_ADDR_HEAD[27]_C_i_1 
       (.I0(rx_addr_start[27]),
        .I1(\W_addr_reg[31]_1 ),
        .I2(conf_rx_en),
        .I3(Q[27]),
        .I4(W_goodframe_reg_0),
        .I5(\DMA_ADDR_HEAD_reg[27]_C_n_0 ),
        .O(\DMA_ADDR_HEAD[27]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \DMA_ADDR_HEAD[28]_C_i_1 
       (.I0(rx_addr_start[28]),
        .I1(\W_addr_reg[31]_1 ),
        .I2(conf_rx_en),
        .I3(Q[28]),
        .I4(W_goodframe_reg_0),
        .I5(\DMA_ADDR_HEAD_reg[28]_C_n_0 ),
        .O(\DMA_ADDR_HEAD[28]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \DMA_ADDR_HEAD[29]_C_i_1 
       (.I0(rx_addr_start[29]),
        .I1(\W_addr_reg[31]_1 ),
        .I2(conf_rx_en),
        .I3(Q[29]),
        .I4(W_goodframe_reg_0),
        .I5(\DMA_ADDR_HEAD_reg[29]_C_n_0 ),
        .O(\DMA_ADDR_HEAD[29]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \DMA_ADDR_HEAD[2]_C_i_1 
       (.I0(rx_addr_start[2]),
        .I1(\W_addr_reg[31]_1 ),
        .I2(conf_rx_en),
        .I3(Q[2]),
        .I4(W_goodframe_reg_0),
        .I5(\DMA_ADDR_HEAD_reg[2]_C_n_0 ),
        .O(\DMA_ADDR_HEAD[2]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \DMA_ADDR_HEAD[30]_C_i_1 
       (.I0(rx_addr_start[30]),
        .I1(\W_addr_reg[31]_1 ),
        .I2(conf_rx_en),
        .I3(Q[30]),
        .I4(W_goodframe_reg_0),
        .I5(\DMA_ADDR_HEAD_reg[30]_C_n_0 ),
        .O(\DMA_ADDR_HEAD[30]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \DMA_ADDR_HEAD[31]_C_i_1 
       (.I0(rx_addr_start[31]),
        .I1(\W_addr_reg[31]_1 ),
        .I2(conf_rx_en),
        .I3(Q[31]),
        .I4(W_goodframe_reg_0),
        .I5(\DMA_ADDR_HEAD_reg[31]_C_n_0 ),
        .O(\DMA_ADDR_HEAD[31]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000800FFFFFFFF)) 
    \DMA_ADDR_HEAD[31]_P_i_1 
       (.I0(W_goodframe),
        .I1(rx_descriptor_wr_rdy),
        .I2(state[1]),
        .I3(state[2]),
        .I4(state[0]),
        .I5(conf_rx_en),
        .O(W_goodframe_reg_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \DMA_ADDR_HEAD[31]_P_i_10 
       (.I0(Q[17]),
        .I1(\W_bmove_reg[15]_i_28 [15]),
        .I2(Q[18]),
        .I3(\W_bmove_reg[15]_i_28 [16]),
        .I4(\W_bmove_reg[15]_i_28 [17]),
        .I5(Q[19]),
        .O(\DMA_ADDR_HEAD[31]_P_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \DMA_ADDR_HEAD[31]_P_i_11 
       (.I0(Q[14]),
        .I1(\W_bmove_reg[15]_i_28 [12]),
        .I2(Q[15]),
        .I3(\W_bmove_reg[15]_i_28 [13]),
        .I4(\W_bmove_reg[15]_i_28 [14]),
        .I5(Q[16]),
        .O(\DMA_ADDR_HEAD[31]_P_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \DMA_ADDR_HEAD[31]_P_i_12 
       (.I0(Q[11]),
        .I1(\W_bmove_reg[15]_i_28 [9]),
        .I2(Q[12]),
        .I3(\W_bmove_reg[15]_i_28 [10]),
        .I4(\W_bmove_reg[15]_i_28 [11]),
        .I5(Q[13]),
        .O(\DMA_ADDR_HEAD[31]_P_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \DMA_ADDR_HEAD[31]_P_i_13 
       (.I0(Q[8]),
        .I1(\W_bmove_reg[15]_i_28 [6]),
        .I2(Q[9]),
        .I3(\W_bmove_reg[15]_i_28 [7]),
        .I4(\W_bmove_reg[15]_i_28 [8]),
        .I5(Q[10]),
        .O(\DMA_ADDR_HEAD[31]_P_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \DMA_ADDR_HEAD[31]_P_i_14 
       (.I0(Q[5]),
        .I1(\W_bmove_reg[15]_i_28 [3]),
        .I2(Q[6]),
        .I3(\W_bmove_reg[15]_i_28 [4]),
        .I4(\W_bmove_reg[15]_i_28 [5]),
        .I5(Q[7]),
        .O(\DMA_ADDR_HEAD[31]_P_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \DMA_ADDR_HEAD[31]_P_i_15 
       (.I0(Q[2]),
        .I1(\W_bmove_reg[15]_i_28 [0]),
        .I2(Q[3]),
        .I3(\W_bmove_reg[15]_i_28 [1]),
        .I4(\W_bmove_reg[15]_i_28 [2]),
        .I5(Q[4]),
        .O(\DMA_ADDR_HEAD[31]_P_i_15_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \DMA_ADDR_HEAD[31]_P_i_5 
       (.I0(Q[31]),
        .I1(\W_bmove_reg[15]_i_28 [29]),
        .I2(Q[29]),
        .I3(\W_bmove_reg[15]_i_28 [27]),
        .I4(\W_bmove_reg[15]_i_28 [28]),
        .I5(Q[30]),
        .O(\DMA_ADDR_HEAD[31]_P_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \DMA_ADDR_HEAD[31]_P_i_6 
       (.I0(Q[26]),
        .I1(\W_bmove_reg[15]_i_28 [24]),
        .I2(Q[27]),
        .I3(\W_bmove_reg[15]_i_28 [25]),
        .I4(\W_bmove_reg[15]_i_28 [26]),
        .I5(Q[28]),
        .O(\DMA_ADDR_HEAD[31]_P_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \DMA_ADDR_HEAD[31]_P_i_8 
       (.I0(Q[23]),
        .I1(\W_bmove_reg[15]_i_28 [21]),
        .I2(Q[24]),
        .I3(\W_bmove_reg[15]_i_28 [22]),
        .I4(\W_bmove_reg[15]_i_28 [23]),
        .I5(Q[25]),
        .O(\DMA_ADDR_HEAD[31]_P_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \DMA_ADDR_HEAD[31]_P_i_9 
       (.I0(Q[20]),
        .I1(\W_bmove_reg[15]_i_28 [18]),
        .I2(Q[21]),
        .I3(\W_bmove_reg[15]_i_28 [19]),
        .I4(\W_bmove_reg[15]_i_28 [20]),
        .I5(Q[22]),
        .O(\DMA_ADDR_HEAD[31]_P_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \DMA_ADDR_HEAD[3]_C_i_1 
       (.I0(rx_addr_start[3]),
        .I1(\W_addr_reg[31]_1 ),
        .I2(conf_rx_en),
        .I3(Q[3]),
        .I4(W_goodframe_reg_0),
        .I5(\DMA_ADDR_HEAD_reg[3]_C_n_0 ),
        .O(\DMA_ADDR_HEAD[3]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \DMA_ADDR_HEAD[4]_C_i_1 
       (.I0(rx_addr_start[4]),
        .I1(\W_addr_reg[31]_1 ),
        .I2(conf_rx_en),
        .I3(Q[4]),
        .I4(W_goodframe_reg_0),
        .I5(\DMA_ADDR_HEAD_reg[4]_C_n_0 ),
        .O(\DMA_ADDR_HEAD[4]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \DMA_ADDR_HEAD[5]_C_i_1 
       (.I0(rx_addr_start[5]),
        .I1(\W_addr_reg[31]_1 ),
        .I2(conf_rx_en),
        .I3(Q[5]),
        .I4(W_goodframe_reg_0),
        .I5(\DMA_ADDR_HEAD_reg[5]_C_n_0 ),
        .O(\DMA_ADDR_HEAD[5]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \DMA_ADDR_HEAD[6]_C_i_1 
       (.I0(rx_addr_start[6]),
        .I1(\W_addr_reg[31]_1 ),
        .I2(conf_rx_en),
        .I3(Q[6]),
        .I4(W_goodframe_reg_0),
        .I5(\DMA_ADDR_HEAD_reg[6]_C_n_0 ),
        .O(\DMA_ADDR_HEAD[6]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \DMA_ADDR_HEAD[7]_C_i_1 
       (.I0(rx_addr_start[7]),
        .I1(\W_addr_reg[31]_1 ),
        .I2(conf_rx_en),
        .I3(Q[7]),
        .I4(W_goodframe_reg_0),
        .I5(\DMA_ADDR_HEAD_reg[7]_C_n_0 ),
        .O(\DMA_ADDR_HEAD[7]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \DMA_ADDR_HEAD[8]_C_i_1 
       (.I0(rx_addr_start[8]),
        .I1(\W_addr_reg[31]_1 ),
        .I2(conf_rx_en),
        .I3(Q[8]),
        .I4(W_goodframe_reg_0),
        .I5(\DMA_ADDR_HEAD_reg[8]_C_n_0 ),
        .O(\DMA_ADDR_HEAD[8]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \DMA_ADDR_HEAD[9]_C_i_1 
       (.I0(rx_addr_start[9]),
        .I1(\W_addr_reg[31]_1 ),
        .I2(conf_rx_en),
        .I3(Q[9]),
        .I4(W_goodframe_reg_0),
        .I5(\DMA_ADDR_HEAD_reg[9]_C_n_0 ),
        .O(\DMA_ADDR_HEAD[9]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAFF00FE00)) 
    DMA_ADDR_HEAD_UPDATE_i_1
       (.I0(DMA_ADDR_HEAD_UPDATE23_out),
        .I1(state[0]),
        .I2(state[2]),
        .I3(rx_addr_head_update),
        .I4(state[1]),
        .I5(W_goodframe_reg_0),
        .O(DMA_ADDR_HEAD_UPDATE_i_1_n_0));
  LUT4 #(
    .INIT(16'h8000)) 
    DMA_ADDR_HEAD_UPDATE_i_2
       (.I0(W_goodframe),
        .I1(state[2]),
        .I2(conf_rx_en),
        .I3(rx_descriptor_wr_rdy),
        .O(DMA_ADDR_HEAD_UPDATE23_out));
  FDCE #(
    .INIT(1'b0)) 
    DMA_ADDR_HEAD_UPDATE_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(conf_rx_reset),
        .D(DMA_ADDR_HEAD_UPDATE_i_1_n_0),
        .Q(rx_addr_head_update));
  FDCE \DMA_ADDR_HEAD_reg[0]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[0]_C_1 ),
        .D(\DMA_ADDR_HEAD_reg[0]_C_2 ),
        .Q(\DMA_ADDR_HEAD_reg[0]_C_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[0]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[0]_C_1 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[0]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[0]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[0]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[0]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[0]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[0]_P_n_0 ));
  FDCE \DMA_ADDR_HEAD_reg[10]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[10]_C_0 ),
        .D(\DMA_ADDR_HEAD[10]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_HEAD_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[10]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[10]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[10]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[10]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[10]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[10]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[10]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[10]_P_n_0 ));
  FDCE \DMA_ADDR_HEAD_reg[11]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[11]_C_0 ),
        .D(\DMA_ADDR_HEAD[11]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_HEAD_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[11]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[11]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[11]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[11]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[11]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[11]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[11]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[11]_P_n_0 ));
  FDCE \DMA_ADDR_HEAD_reg[12]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[12]_C_0 ),
        .D(\DMA_ADDR_HEAD[12]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_HEAD_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[12]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[12]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[12]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[12]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[12]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[12]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[12]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[12]_P_n_0 ));
  FDCE \DMA_ADDR_HEAD_reg[13]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[13]_C_0 ),
        .D(\DMA_ADDR_HEAD[13]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_HEAD_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[13]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[13]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[13]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[13]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[13]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[13]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[13]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[13]_P_n_0 ));
  FDCE \DMA_ADDR_HEAD_reg[14]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[14]_C_0 ),
        .D(\DMA_ADDR_HEAD[14]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_HEAD_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[14]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[14]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[14]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[14]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[14]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[14]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[14]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[14]_P_n_0 ));
  FDCE \DMA_ADDR_HEAD_reg[15]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[15]_C_0 ),
        .D(\DMA_ADDR_HEAD[15]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_HEAD_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[15]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[15]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[15]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[15]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[15]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[15]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[15]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[15]_P_n_0 ));
  FDCE \DMA_ADDR_HEAD_reg[16]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[16]_C_0 ),
        .D(\DMA_ADDR_HEAD[16]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_HEAD_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[16]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[16]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[16]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[16]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[16]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[16]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[16]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[16]_P_n_0 ));
  FDCE \DMA_ADDR_HEAD_reg[17]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[17]_C_0 ),
        .D(\DMA_ADDR_HEAD[17]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_HEAD_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[17]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[17]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[17]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[17]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[17]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[17]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[17]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[17]_P_n_0 ));
  FDCE \DMA_ADDR_HEAD_reg[18]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[18]_C_0 ),
        .D(\DMA_ADDR_HEAD[18]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_HEAD_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[18]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[18]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[18]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[18]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[18]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[18]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[18]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[18]_P_n_0 ));
  FDCE \DMA_ADDR_HEAD_reg[19]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[19]_C_0 ),
        .D(\DMA_ADDR_HEAD[19]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_HEAD_reg[19]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[19]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[19]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[19]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[19]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[19]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[19]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[19]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[19]_P_n_0 ));
  FDCE \DMA_ADDR_HEAD_reg[1]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[1]_C_1 ),
        .D(\DMA_ADDR_HEAD_reg[1]_C_2 ),
        .Q(\DMA_ADDR_HEAD_reg[1]_C_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[1]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[1]_C_1 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[1]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[1]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[1]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[1]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[1]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[1]_P_n_0 ));
  FDCE \DMA_ADDR_HEAD_reg[20]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[20]_C_0 ),
        .D(\DMA_ADDR_HEAD[20]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_HEAD_reg[20]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[20]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[20]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[20]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[20]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[20]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[20]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[20]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[20]_P_n_0 ));
  FDCE \DMA_ADDR_HEAD_reg[21]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[21]_C_0 ),
        .D(\DMA_ADDR_HEAD[21]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_HEAD_reg[21]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[21]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[21]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[21]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[21]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[21]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[21]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[21]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[21]_P_n_0 ));
  FDCE \DMA_ADDR_HEAD_reg[22]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[22]_C_0 ),
        .D(\DMA_ADDR_HEAD[22]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_HEAD_reg[22]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[22]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[22]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[22]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[22]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[22]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[22]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[22]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[22]_P_n_0 ));
  FDCE \DMA_ADDR_HEAD_reg[23]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[23]_C_0 ),
        .D(\DMA_ADDR_HEAD[23]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_HEAD_reg[23]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[23]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[23]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[23]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[23]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[23]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[23]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[23]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[23]_P_n_0 ));
  FDCE \DMA_ADDR_HEAD_reg[24]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[24]_C_0 ),
        .D(\DMA_ADDR_HEAD[24]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_HEAD_reg[24]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[24]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[24]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[24]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[24]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[24]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[24]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[24]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[24]_P_n_0 ));
  FDCE \DMA_ADDR_HEAD_reg[25]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[25]_C_0 ),
        .D(\DMA_ADDR_HEAD[25]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_HEAD_reg[25]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[25]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[25]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[25]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[25]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[25]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[25]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[25]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[25]_P_n_0 ));
  FDCE \DMA_ADDR_HEAD_reg[26]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[26]_C_0 ),
        .D(\DMA_ADDR_HEAD[26]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_HEAD_reg[26]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[26]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[26]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[26]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[26]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[26]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[26]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[26]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[26]_P_n_0 ));
  FDCE \DMA_ADDR_HEAD_reg[27]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[27]_C_0 ),
        .D(\DMA_ADDR_HEAD[27]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_HEAD_reg[27]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[27]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[27]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[27]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[27]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[27]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[27]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[27]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[27]_P_n_0 ));
  FDCE \DMA_ADDR_HEAD_reg[28]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[28]_C_0 ),
        .D(\DMA_ADDR_HEAD[28]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_HEAD_reg[28]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[28]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[28]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[28]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[28]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[28]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[28]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[28]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[28]_P_n_0 ));
  FDCE \DMA_ADDR_HEAD_reg[29]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[29]_C_0 ),
        .D(\DMA_ADDR_HEAD[29]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_HEAD_reg[29]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[29]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[29]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[29]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[29]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[29]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[29]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[29]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[29]_P_n_0 ));
  FDCE \DMA_ADDR_HEAD_reg[2]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[2]_C_0 ),
        .D(\DMA_ADDR_HEAD[2]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_HEAD_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[2]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[2]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[2]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[2]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[2]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[2]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[2]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[2]_P_n_0 ));
  FDCE \DMA_ADDR_HEAD_reg[30]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[30]_C_0 ),
        .D(\DMA_ADDR_HEAD[30]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_HEAD_reg[30]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[30]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[30]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[30]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[30]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[30]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[30]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[30]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[30]_P_n_0 ));
  FDCE \DMA_ADDR_HEAD_reg[31]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[31]_C_0 ),
        .D(\DMA_ADDR_HEAD[31]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_HEAD_reg[31]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[31]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[31]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[31]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[31]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[31]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[31]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[31]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[31]_P_n_0 ));
  CARRY4 \DMA_ADDR_HEAD_reg[31]_P_i_3 
       (.CI(\DMA_ADDR_HEAD_reg[31]_P_i_4_n_0 ),
        .CO({\NLW_DMA_ADDR_HEAD_reg[31]_P_i_3_CO_UNCONNECTED [3:2],\W_addr_reg[31]_1 ,\DMA_ADDR_HEAD_reg[31]_P_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_DMA_ADDR_HEAD_reg[31]_P_i_3_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,\DMA_ADDR_HEAD[31]_P_i_5_n_0 ,\DMA_ADDR_HEAD[31]_P_i_6_n_0 }));
  CARRY4 \DMA_ADDR_HEAD_reg[31]_P_i_4 
       (.CI(\DMA_ADDR_HEAD_reg[31]_P_i_7_n_0 ),
        .CO({\DMA_ADDR_HEAD_reg[31]_P_i_4_n_0 ,\DMA_ADDR_HEAD_reg[31]_P_i_4_n_1 ,\DMA_ADDR_HEAD_reg[31]_P_i_4_n_2 ,\DMA_ADDR_HEAD_reg[31]_P_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_DMA_ADDR_HEAD_reg[31]_P_i_4_O_UNCONNECTED [3:0]),
        .S({\DMA_ADDR_HEAD[31]_P_i_8_n_0 ,\DMA_ADDR_HEAD[31]_P_i_9_n_0 ,\DMA_ADDR_HEAD[31]_P_i_10_n_0 ,\DMA_ADDR_HEAD[31]_P_i_11_n_0 }));
  CARRY4 \DMA_ADDR_HEAD_reg[31]_P_i_7 
       (.CI(1'b0),
        .CO({\DMA_ADDR_HEAD_reg[31]_P_i_7_n_0 ,\DMA_ADDR_HEAD_reg[31]_P_i_7_n_1 ,\DMA_ADDR_HEAD_reg[31]_P_i_7_n_2 ,\DMA_ADDR_HEAD_reg[31]_P_i_7_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_DMA_ADDR_HEAD_reg[31]_P_i_7_O_UNCONNECTED [3:0]),
        .S({\DMA_ADDR_HEAD[31]_P_i_12_n_0 ,\DMA_ADDR_HEAD[31]_P_i_13_n_0 ,\DMA_ADDR_HEAD[31]_P_i_14_n_0 ,\DMA_ADDR_HEAD[31]_P_i_15_n_0 }));
  FDCE \DMA_ADDR_HEAD_reg[3]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[3]_C_0 ),
        .D(\DMA_ADDR_HEAD[3]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_HEAD_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[3]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[3]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[3]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[3]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[3]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[3]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[3]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[3]_P_n_0 ));
  FDCE \DMA_ADDR_HEAD_reg[4]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[4]_C_0 ),
        .D(\DMA_ADDR_HEAD[4]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_HEAD_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[4]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[4]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[4]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[4]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[4]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[4]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[4]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[4]_P_n_0 ));
  FDCE \DMA_ADDR_HEAD_reg[5]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[5]_C_0 ),
        .D(\DMA_ADDR_HEAD[5]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_HEAD_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[5]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[5]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[5]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[5]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[5]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[5]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[5]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[5]_P_n_0 ));
  FDCE \DMA_ADDR_HEAD_reg[6]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[6]_C_0 ),
        .D(\DMA_ADDR_HEAD[6]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_HEAD_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[6]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[6]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[6]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[6]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[6]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[6]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[6]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[6]_P_n_0 ));
  FDCE \DMA_ADDR_HEAD_reg[7]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[7]_C_0 ),
        .D(\DMA_ADDR_HEAD[7]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_HEAD_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[7]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[7]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[7]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[7]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[7]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[7]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[7]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[7]_P_n_0 ));
  FDCE \DMA_ADDR_HEAD_reg[8]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[8]_C_0 ),
        .D(\DMA_ADDR_HEAD[8]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_HEAD_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[8]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[8]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[8]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[8]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[8]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[8]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[8]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[8]_P_n_0 ));
  FDCE \DMA_ADDR_HEAD_reg[9]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_HEAD_reg[9]_C_0 ),
        .D(\DMA_ADDR_HEAD[9]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_HEAD_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_HEAD_reg[9]_LDC 
       (.CLR(\DMA_ADDR_HEAD_reg[9]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_HEAD_reg[9]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_HEAD_reg[9]_LDC_n_0 ));
  FDPE \DMA_ADDR_HEAD_reg[9]_P 
       (.C(ACLK),
        .CE(W_goodframe_reg_0),
        .D(\DMA_ADDR_HEAD_reg[9]_P_1 ),
        .PRE(\DMA_ADDR_HEAD_reg[9]_P_0 ),
        .Q(\DMA_ADDR_HEAD_reg[9]_P_n_0 ));
  LUT6 #(
    .INIT(64'h00100000FFFFFFFF)) 
    \DMA_WCHUNK[13]_i_1 
       (.I0(\state_reg[2]_3 ),
        .I1(state[1]),
        .I2(\DMA_WCHUNK[13]_i_4_n_0 ),
        .I3(rx_addr_head_update),
        .I4(valid),
        .I5(conf_rx_en),
        .O(DMA_WCHUNK));
  LUT2 #(
    .INIT(4'h1)) 
    \DMA_WCHUNK[13]_i_4 
       (.I0(state[0]),
        .I1(state[2]),
        .O(\DMA_WCHUNK[13]_i_4_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_WCHUNK_reg[0] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(D[0]),
        .Q(\DMA_WCHUNK_reg[13]_0 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_WCHUNK_reg[10] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(D[10]),
        .Q(\DMA_WCHUNK_reg[13]_0 [10]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_WCHUNK_reg[11] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(D[11]),
        .Q(\DMA_WCHUNK_reg[13]_0 [11]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_WCHUNK_reg[12] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(D[12]),
        .Q(\DMA_WCHUNK_reg[13]_0 [12]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_WCHUNK_reg[13] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(D[13]),
        .Q(\DMA_WCHUNK_reg[13]_0 [13]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_WCHUNK_reg[1] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(D[1]),
        .Q(\DMA_WCHUNK_reg[13]_0 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_WCHUNK_reg[2] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(D[2]),
        .Q(\DMA_WCHUNK_reg[13]_0 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_WCHUNK_reg[3] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(D[3]),
        .Q(\DMA_WCHUNK_reg[13]_0 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_WCHUNK_reg[4] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(D[4]),
        .Q(\DMA_WCHUNK_reg[13]_0 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_WCHUNK_reg[5] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(D[5]),
        .Q(\DMA_WCHUNK_reg[13]_0 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_WCHUNK_reg[6] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(D[6]),
        .Q(\DMA_WCHUNK_reg[13]_0 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_WCHUNK_reg[7] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(D[7]),
        .Q(\DMA_WCHUNK_reg[13]_0 [7]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_WCHUNK_reg[8] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(D[8]),
        .Q(\DMA_WCHUNK_reg[13]_0 [8]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_WCHUNK_reg[9] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(D[9]),
        .Q(\DMA_WCHUNK_reg[13]_0 [9]));
  FDCE \M_AWADDR_reg[0] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [0]),
        .Q(M_AWADDR[0]));
  FDCE \M_AWADDR_reg[10] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [10]),
        .Q(M_AWADDR[10]));
  FDCE \M_AWADDR_reg[11] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [11]),
        .Q(M_AWADDR[11]));
  FDCE \M_AWADDR_reg[12] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [12]),
        .Q(M_AWADDR[12]));
  FDCE \M_AWADDR_reg[13] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [13]),
        .Q(M_AWADDR[13]));
  FDCE \M_AWADDR_reg[14] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [14]),
        .Q(M_AWADDR[14]));
  FDCE \M_AWADDR_reg[15] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [15]),
        .Q(M_AWADDR[15]));
  FDCE \M_AWADDR_reg[16] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [16]),
        .Q(M_AWADDR[16]));
  FDCE \M_AWADDR_reg[17] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [17]),
        .Q(M_AWADDR[17]));
  FDCE \M_AWADDR_reg[18] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [18]),
        .Q(M_AWADDR[18]));
  FDCE \M_AWADDR_reg[19] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [19]),
        .Q(M_AWADDR[19]));
  FDCE \M_AWADDR_reg[1] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [1]),
        .Q(M_AWADDR[1]));
  FDCE \M_AWADDR_reg[20] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [20]),
        .Q(M_AWADDR[20]));
  FDCE \M_AWADDR_reg[21] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [21]),
        .Q(M_AWADDR[21]));
  FDCE \M_AWADDR_reg[22] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [22]),
        .Q(M_AWADDR[22]));
  FDCE \M_AWADDR_reg[23] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [23]),
        .Q(M_AWADDR[23]));
  FDCE \M_AWADDR_reg[24] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [24]),
        .Q(M_AWADDR[24]));
  FDCE \M_AWADDR_reg[25] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [25]),
        .Q(M_AWADDR[25]));
  FDCE \M_AWADDR_reg[26] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [26]),
        .Q(M_AWADDR[26]));
  FDCE \M_AWADDR_reg[27] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [27]),
        .Q(M_AWADDR[27]));
  FDCE \M_AWADDR_reg[28] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [28]),
        .Q(M_AWADDR[28]));
  FDCE \M_AWADDR_reg[29] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [29]),
        .Q(M_AWADDR[29]));
  FDCE \M_AWADDR_reg[2] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [2]),
        .Q(M_AWADDR[2]));
  FDCE \M_AWADDR_reg[30] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [30]),
        .Q(M_AWADDR[30]));
  FDCE \M_AWADDR_reg[31] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [31]),
        .Q(M_AWADDR[31]));
  FDCE \M_AWADDR_reg[3] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [3]),
        .Q(M_AWADDR[3]));
  FDCE \M_AWADDR_reg[4] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [4]),
        .Q(M_AWADDR[4]));
  FDCE \M_AWADDR_reg[5] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [5]),
        .Q(M_AWADDR[5]));
  FDCE \M_AWADDR_reg[6] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [6]),
        .Q(M_AWADDR[6]));
  FDCE \M_AWADDR_reg[7] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [7]),
        .Q(M_AWADDR[7]));
  FDCE \M_AWADDR_reg[8] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [8]),
        .Q(M_AWADDR[8]));
  FDCE \M_AWADDR_reg[9] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWADDR_reg[31]_0 [9]),
        .Q(M_AWADDR[9]));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT3 #(
    .INIT(8'h48)) 
    \M_AWID[1]_i_1 
       (.I0(\CID_reg[3]_0 [0]),
        .I1(conf_rx_en),
        .I2(\CID_reg[3]_0 [1]),
        .O(\M_AWID[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT4 #(
    .INIT(16'h7800)) 
    \M_AWID[2]_i_1 
       (.I0(\CID_reg[3]_0 [0]),
        .I1(\CID_reg[3]_0 [1]),
        .I2(\CID_reg[3]_0 [2]),
        .I3(conf_rx_en),
        .O(\M_AWID[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0002FFFF)) 
    \M_AWID[3]_i_1 
       (.I0(W_go_reg_n_0),
        .I1(state_write[2]),
        .I2(state_write[0]),
        .I3(state_write[1]),
        .I4(conf_rx_en),
        .O(CID));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT5 #(
    .INIT(32'h7F008000)) 
    \M_AWID[3]_i_2 
       (.I0(\CID_reg[3]_0 [0]),
        .I1(\CID_reg[3]_0 [1]),
        .I2(\CID_reg[3]_0 [2]),
        .I3(conf_rx_en),
        .I4(\CID_reg[3]_0 [3]),
        .O(\M_AWID[3]_i_2_n_0 ));
  FDCE \M_AWID_reg[0] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\CID_reg[0]_0 ),
        .Q(M_AWID[0]));
  FDCE \M_AWID_reg[1] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWID[1]_i_1_n_0 ),
        .Q(M_AWID[1]));
  FDCE \M_AWID_reg[2] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWID[2]_i_1_n_0 ),
        .Q(M_AWID[2]));
  FDCE \M_AWID_reg[3] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWID[3]_i_2_n_0 ),
        .Q(M_AWID[3]));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT3 #(
    .INIT(8'h90)) 
    \M_AWLEN[1]_i_1 
       (.I0(\W_len_reg_n_0_[1] ),
        .I1(\W_len_reg[0]_0 ),
        .I2(conf_rx_en),
        .O(\M_AWLEN[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT4 #(
    .INIT(16'hE100)) 
    \M_AWLEN[2]_i_1 
       (.I0(\W_len_reg_n_0_[1] ),
        .I1(\W_len_reg[0]_0 ),
        .I2(\W_len_reg_n_0_[2] ),
        .I3(conf_rx_en),
        .O(\M_AWLEN[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT5 #(
    .INIT(32'hFE010000)) 
    \M_AWLEN[3]_i_1 
       (.I0(\W_len_reg_n_0_[2] ),
        .I1(\W_len_reg[0]_0 ),
        .I2(\W_len_reg_n_0_[1] ),
        .I3(\W_len_reg_n_0_[3] ),
        .I4(conf_rx_en),
        .O(\M_AWLEN[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFE000000010000)) 
    \M_AWLEN[4]_i_1 
       (.I0(\W_len_reg_n_0_[2] ),
        .I1(\W_len_reg[0]_0 ),
        .I2(\W_len_reg_n_0_[1] ),
        .I3(\W_len_reg_n_0_[3] ),
        .I4(conf_rx_en),
        .I5(\W_len_reg_n_0_[4] ),
        .O(\M_AWLEN[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT4 #(
    .INIT(16'hA900)) 
    \M_AWLEN[5]_i_1 
       (.I0(\W_len_reg_n_0_[5] ),
        .I1(\M_AWLEN[7]_i_2_n_0 ),
        .I2(\W_len_reg_n_0_[4] ),
        .I3(conf_rx_en),
        .O(\M_AWLEN[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT5 #(
    .INIT(32'hFE010000)) 
    \M_AWLEN[6]_i_1 
       (.I0(\W_len_reg_n_0_[5] ),
        .I1(\M_AWLEN[7]_i_2_n_0 ),
        .I2(\W_len_reg_n_0_[4] ),
        .I3(\W_len_reg_n_0_[6] ),
        .I4(conf_rx_en),
        .O(\M_AWLEN[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFE000000010000)) 
    \M_AWLEN[7]_i_1 
       (.I0(\W_len_reg_n_0_[5] ),
        .I1(\M_AWLEN[7]_i_2_n_0 ),
        .I2(\W_len_reg_n_0_[4] ),
        .I3(\W_len_reg_n_0_[6] ),
        .I4(conf_rx_en),
        .I5(\W_len_reg_n_0_[7] ),
        .O(\M_AWLEN[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \M_AWLEN[7]_i_2 
       (.I0(\W_len_reg_n_0_[2] ),
        .I1(\W_len_reg[0]_0 ),
        .I2(\W_len_reg_n_0_[1] ),
        .I3(\W_len_reg_n_0_[3] ),
        .O(\M_AWLEN[7]_i_2_n_0 ));
  FDCE \M_AWLEN_reg[0] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWLEN_reg[0]_0 ),
        .Q(M_AWLEN[0]));
  FDCE \M_AWLEN_reg[1] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWLEN[1]_i_1_n_0 ),
        .Q(M_AWLEN[1]));
  FDCE \M_AWLEN_reg[2] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWLEN[2]_i_1_n_0 ),
        .Q(M_AWLEN[2]));
  FDCE \M_AWLEN_reg[3] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWLEN[3]_i_1_n_0 ),
        .Q(M_AWLEN[3]));
  FDCE \M_AWLEN_reg[4] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWLEN[4]_i_1_n_0 ),
        .Q(M_AWLEN[4]));
  FDCE \M_AWLEN_reg[5] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWLEN[5]_i_1_n_0 ),
        .Q(M_AWLEN[5]));
  FDCE \M_AWLEN_reg[6] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWLEN[6]_i_1_n_0 ),
        .Q(M_AWLEN[6]));
  FDCE \M_AWLEN_reg[7] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWLEN[7]_i_1_n_0 ),
        .Q(M_AWLEN[7]));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_AWSIZE[1]_i_1 
       (.I0(size),
        .I1(conf_rx_en),
        .O(\M_AWSIZE[1]_i_1_n_0 ));
  FDCE \M_AWSIZE_reg[1] 
       (.C(ACLK),
        .CE(CID),
        .CLR(conf_rx_reset),
        .D(\M_AWSIZE[1]_i_1_n_0 ),
        .Q(M_AWSIZE));
  LUT6 #(
    .INIT(64'h404040FF40404000)) 
    M_AWVALID_i_1
       (.I0(state_write[0]),
        .I1(conf_rx_en),
        .I2(W_go_reg_n_0),
        .I3(M_AWVALID_i_2_n_0),
        .I4(\M_WID[3]_i_1_n_0 ),
        .I5(M_AWVALID),
        .O(M_AWVALID_i_1_n_0));
  LUT4 #(
    .INIT(16'h0100)) 
    M_AWVALID_i_2
       (.I0(state_write[1]),
        .I1(state_write[0]),
        .I2(state_write[2]),
        .I3(W_go_reg_n_0),
        .O(M_AWVALID_i_2_n_0));
  FDCE M_AWVALID_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(conf_rx_reset),
        .D(M_AWVALID_i_1_n_0),
        .Q(M_AWVALID));
  LUT6 #(
    .INIT(64'hA0A0BFFFA0A08000)) 
    M_BREADY_i_1
       (.I0(M_BREADY_reg_0),
        .I1(M_BREADY1),
        .I2(M_BREADY0),
        .I3(\RX_BLK_256.u_fifo_rx_i_2_n_0 ),
        .I4(M_BREADY_i_5_n_0),
        .I5(M_BREADY),
        .O(M_BREADY_i_1_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    M_BREADY_i_10
       (.I0(W_cnt[5]),
        .I1(\W_len_reg_n_0_[5] ),
        .I2(W_cnt[4]),
        .I3(\W_len_reg_n_0_[4] ),
        .O(M_BREADY_i_10_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    M_BREADY_i_11
       (.I0(W_cnt[3]),
        .I1(\W_len_reg_n_0_[3] ),
        .I2(W_cnt[2]),
        .I3(\W_len_reg_n_0_[2] ),
        .O(M_BREADY_i_11_n_0));
  LUT4 #(
    .INIT(16'h7510)) 
    M_BREADY_i_12
       (.I0(\W_len_reg_n_0_[1] ),
        .I1(\W_len_reg[0]_0 ),
        .I2(W_cnt[0]),
        .I3(W_cnt[1]),
        .O(M_BREADY_i_12_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    M_BREADY_i_13
       (.I0(\W_len_reg_n_0_[6] ),
        .I1(W_cnt[6]),
        .I2(W_cnt[7]),
        .I3(\W_len_reg_n_0_[7] ),
        .O(M_BREADY_i_13_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    M_BREADY_i_14
       (.I0(\W_len_reg_n_0_[4] ),
        .I1(W_cnt[4]),
        .I2(W_cnt[5]),
        .I3(\W_len_reg_n_0_[5] ),
        .O(M_BREADY_i_14_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    M_BREADY_i_15
       (.I0(\W_len_reg_n_0_[2] ),
        .I1(W_cnt[2]),
        .I2(W_cnt[3]),
        .I3(\W_len_reg_n_0_[3] ),
        .O(M_BREADY_i_15_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    M_BREADY_i_16
       (.I0(\W_len_reg[0]_0 ),
        .I1(W_cnt[0]),
        .I2(W_cnt[1]),
        .I3(\W_len_reg_n_0_[1] ),
        .O(M_BREADY_i_16_n_0));
  LUT6 #(
    .INIT(64'h0000000000A80000)) 
    M_BREADY_i_3
       (.I0(M_WREADY),
        .I1(valid),
        .I2(W_error_reg_n_0),
        .I3(state_write[0]),
        .I4(state_write[1]),
        .I5(state_write[2]),
        .O(M_BREADY1));
  LUT5 #(
    .INIT(32'h0080FFFF)) 
    M_BREADY_i_5
       (.I0(M_BVALID),
        .I1(state_write[0]),
        .I2(state_write[1]),
        .I3(state_write[2]),
        .I4(conf_rx_en),
        .O(M_BREADY_i_5_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    M_BREADY_i_7
       (.I0(W_cnt[8]),
        .I1(\W_len_reg_n_0_[8] ),
        .O(M_BREADY_i_7_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    M_BREADY_i_8
       (.I0(\W_len_reg_n_0_[8] ),
        .I1(W_cnt[8]),
        .O(M_BREADY_i_8_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    M_BREADY_i_9
       (.I0(W_cnt[7]),
        .I1(\W_len_reg_n_0_[7] ),
        .I2(W_cnt[6]),
        .I3(\W_len_reg_n_0_[6] ),
        .O(M_BREADY_i_9_n_0));
  FDCE M_BREADY_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(conf_rx_reset),
        .D(M_BREADY_i_1_n_0),
        .Q(M_BREADY));
  CARRY4 M_BREADY_reg_i_4
       (.CI(M_BREADY_reg_i_6_n_0),
        .CO({NLW_M_BREADY_reg_i_4_CO_UNCONNECTED[3:1],M_BREADY0}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,M_BREADY_i_7_n_0}),
        .O(NLW_M_BREADY_reg_i_4_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,1'b0,M_BREADY_i_8_n_0}));
  CARRY4 M_BREADY_reg_i_6
       (.CI(1'b0),
        .CO({M_BREADY_reg_i_6_n_0,M_BREADY_reg_i_6_n_1,M_BREADY_reg_i_6_n_2,M_BREADY_reg_i_6_n_3}),
        .CYINIT(1'b1),
        .DI({M_BREADY_i_9_n_0,M_BREADY_i_10_n_0,M_BREADY_i_11_n_0,M_BREADY_i_12_n_0}),
        .O(NLW_M_BREADY_reg_i_6_O_UNCONNECTED[3:0]),
        .S({M_BREADY_i_13_n_0,M_BREADY_i_14_n_0,M_BREADY_i_15_n_0,M_BREADY_i_16_n_0}));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \M_WID[0]_i_1 
       (.I0(\CID_reg[3]_0 [0]),
        .I1(conf_rx_en),
        .O(\M_WID[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h1000FFFF)) 
    \M_WID[3]_i_1 
       (.I0(state_write[1]),
        .I1(state_write[2]),
        .I2(M_AWREADY),
        .I3(state_write[0]),
        .I4(conf_rx_en),
        .O(\M_WID[3]_i_1_n_0 ));
  FDCE \M_WID_reg[0] 
       (.C(ACLK),
        .CE(\M_WID[3]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\M_WID[0]_i_1_n_0 ),
        .Q(M_WID[0]));
  FDCE \M_WID_reg[1] 
       (.C(ACLK),
        .CE(\M_WID[3]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\M_WID_reg[3]_0 [0]),
        .Q(M_WID[1]));
  FDCE \M_WID_reg[2] 
       (.C(ACLK),
        .CE(\M_WID[3]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\M_WID_reg[3]_0 [1]),
        .Q(M_WID[2]));
  FDCE \M_WID_reg[3] 
       (.C(ACLK),
        .CE(\M_WID[3]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\M_WID_reg[3]_0 [2]),
        .Q(M_WID[3]));
  LUT4 #(
    .INIT(16'h0400)) 
    M_WLAST_INST_0
       (.I0(state_write[0]),
        .I1(state_write[1]),
        .I2(state_write[2]),
        .I3(M_WLAST1),
        .O(M_WLAST));
  CARRY4 M_WLAST_INST_0_i_1
       (.CI(1'b0),
        .CO({NLW_M_WLAST_INST_0_i_1_CO_UNCONNECTED[3],M_WLAST1,M_WLAST_INST_0_i_1_n_2,M_WLAST_INST_0_i_1_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_M_WLAST_INST_0_i_1_O_UNCONNECTED[3:0]),
        .S({1'b0,M_WLAST_INST_0_i_2_n_0,M_WLAST_INST_0_i_3_n_0,M_WLAST_INST_0_i_4_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    M_WLAST_INST_0_i_2
       (.I0(\W_len_reg_n_0_[7] ),
        .I1(W_cnt[7]),
        .I2(W_cnt[6]),
        .I3(\W_len_reg_n_0_[6] ),
        .I4(\W_len_reg_n_0_[8] ),
        .I5(W_cnt[8]),
        .O(M_WLAST_INST_0_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    M_WLAST_INST_0_i_3
       (.I0(\W_len_reg_n_0_[3] ),
        .I1(W_cnt[3]),
        .I2(\W_len_reg_n_0_[5] ),
        .I3(W_cnt[5]),
        .I4(\W_len_reg_n_0_[4] ),
        .I5(W_cnt[4]),
        .O(M_WLAST_INST_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    M_WLAST_INST_0_i_4
       (.I0(\W_len_reg_n_0_[1] ),
        .I1(W_cnt[1]),
        .I2(W_cnt[0]),
        .I3(\W_len_reg[0]_0 ),
        .I4(\W_len_reg_n_0_[2] ),
        .I5(W_cnt[2]),
        .O(M_WLAST_INST_0_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT4 #(
    .INIT(16'h5700)) 
    \M_WSTRB[0]_i_1 
       (.I0(size),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(conf_rx_en),
        .O(\M_WSTRB[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \M_WSTRB[1]_i_1 
       (.I0(Q[1]),
        .I1(size),
        .I2(conf_rx_en),
        .O(\M_WSTRB[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT4 #(
    .INIT(16'h7F00)) 
    \M_WSTRB[2]_i_1 
       (.I0(size),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(conf_rx_en),
        .O(\M_WSTRB[2]_i_1_n_0 ));
  FDCE \M_WSTRB_reg[0] 
       (.C(ACLK),
        .CE(\M_WID[3]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\M_WSTRB[0]_i_1_n_0 ),
        .Q(M_WSTRB[0]));
  FDCE \M_WSTRB_reg[1] 
       (.C(ACLK),
        .CE(\M_WID[3]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\M_WSTRB[1]_i_1_n_0 ),
        .Q(M_WSTRB[1]));
  FDCE \M_WSTRB_reg[2] 
       (.C(ACLK),
        .CE(\M_WID[3]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\M_WSTRB[2]_i_1_n_0 ),
        .Q(M_WSTRB[2]));
  FDCE \M_WSTRB_reg[3] 
       (.C(ACLK),
        .CE(\M_WID[3]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(conf_rx_en),
        .Q(M_WSTRB[3]));
  LUT5 #(
    .INIT(32'h00000E00)) 
    M_WVALID_INST_0
       (.I0(W_error_reg_n_0),
        .I1(valid),
        .I2(state_write[0]),
        .I3(state_write[1]),
        .I4(state_write[2]),
        .O(M_WVALID));
  LUT6 #(
    .INIT(64'h2322222200000000)) 
    \RX_BLK_256.u_fifo_rx_i_1 
       (.I0(\RX_BLK_256.u_fifo_rx_i_2_n_0 ),
        .I1(W_error_reg_n_0),
        .I2(state[1]),
        .I3(state[2]),
        .I4(state[0]),
        .I5(valid),
        .O(rd_en));
  LUT3 #(
    .INIT(8'h04)) 
    \RX_BLK_256.u_fifo_rx_i_2 
       (.I0(state_write[2]),
        .I1(state_write[1]),
        .I2(state_write[0]),
        .O(\RX_BLK_256.u_fifo_rx_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[0]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[0]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[0]),
        .I4(\W_addr[0]_i_2_n_0 ),
        .O(\W_addr[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF4FFF44444444444)) 
    \W_addr[0]_i_2 
       (.I0(Q[0]),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[0]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[0]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[0]_C_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[10]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[10]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[10]),
        .I4(\W_addr[10]_i_2_n_0 ),
        .O(\W_addr[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[10]_i_2 
       (.I0(\W_addr_reg[12]_i_3_n_6 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[10]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[10]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[10]_C_n_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[10]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[11]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[11]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[11]),
        .I4(\W_addr[11]_i_3_n_0 ),
        .O(\W_addr[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[11]_i_3 
       (.I0(\W_addr_reg[12]_i_3_n_5 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[11]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[11]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[11]_C_n_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[11]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_addr[11]_i_4 
       (.I0(Q[11]),
        .I1(\W_bmove_reg_n_0_[11] ),
        .O(\W_addr[11]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_addr[11]_i_5 
       (.I0(Q[10]),
        .I1(\W_bmove_reg_n_0_[10] ),
        .O(\W_addr[11]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_addr[11]_i_6 
       (.I0(Q[9]),
        .I1(\W_bmove_reg_n_0_[9] ),
        .O(\W_addr[11]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_addr[11]_i_7 
       (.I0(Q[8]),
        .I1(\W_bmove_reg_n_0_[8] ),
        .O(\W_addr[11]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[12]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[12]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[12]),
        .I4(\W_addr[12]_i_2_n_0 ),
        .O(\W_addr[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[12]_i_2 
       (.I0(\W_addr_reg[12]_i_3_n_4 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[12]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[12]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[12]_C_n_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[12]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[13]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[13]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[13]),
        .I4(\W_addr[13]_i_2_n_0 ),
        .O(\W_addr[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[13]_i_2 
       (.I0(\W_addr_reg[16]_i_3_n_7 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[13]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[13]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[13]_C_n_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[13]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[14]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[14]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[14]),
        .I4(\W_addr[14]_i_2_n_0 ),
        .O(\W_addr[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[14]_i_2 
       (.I0(\W_addr_reg[16]_i_3_n_6 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[14]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[14]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[14]_C_n_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[14]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[15]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[15]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[15]),
        .I4(\W_addr[15]_i_3_n_0 ),
        .O(\W_addr[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[15]_i_3 
       (.I0(\W_addr_reg[16]_i_3_n_5 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[15]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[15]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[15]_C_n_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[15]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_addr[15]_i_4 
       (.I0(Q[15]),
        .I1(\W_bmove_reg_n_0_[15] ),
        .O(\W_addr[15]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_addr[15]_i_5 
       (.I0(Q[14]),
        .I1(\W_bmove_reg_n_0_[14] ),
        .O(\W_addr[15]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_addr[15]_i_6 
       (.I0(Q[13]),
        .I1(\W_bmove_reg_n_0_[13] ),
        .O(\W_addr[15]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_addr[15]_i_7 
       (.I0(Q[12]),
        .I1(\W_bmove_reg_n_0_[12] ),
        .O(\W_addr[15]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[16]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[16]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[16]),
        .I4(\W_addr[16]_i_2_n_0 ),
        .O(\W_addr[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[16]_i_2 
       (.I0(\W_addr_reg[16]_i_3_n_4 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[16]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[16]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[16]_C_n_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[16]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[17]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[17]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[17]),
        .I4(\W_addr[17]_i_2_n_0 ),
        .O(\W_addr[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[17]_i_2 
       (.I0(\W_addr_reg[20]_i_3_n_7 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[17]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[17]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[17]_C_n_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[17]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[18]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[18]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[18]),
        .I4(\W_addr[18]_i_2_n_0 ),
        .O(\W_addr[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[18]_i_2 
       (.I0(\W_addr_reg[20]_i_3_n_6 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[18]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[18]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[18]_C_n_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[18]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[19]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[19]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[19]),
        .I4(\W_addr[19]_i_3_n_0 ),
        .O(\W_addr[19]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[19]_i_3 
       (.I0(\W_addr_reg[20]_i_3_n_5 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[19]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[19]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[19]_C_n_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[19]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[1]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[1]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[1]),
        .I4(\W_addr[1]_i_2_n_0 ),
        .O(\W_addr[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[1]_i_2 
       (.I0(\W_addr_reg[4]_i_3_n_7 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[1]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[1]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[1]_C_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[20]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[20]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[20]),
        .I4(\W_addr[20]_i_2_n_0 ),
        .O(\W_addr[20]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[20]_i_2 
       (.I0(\W_addr_reg[20]_i_3_n_4 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[20]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[20]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[20]_C_n_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[20]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[21]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[21]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[21]),
        .I4(\W_addr[21]_i_2_n_0 ),
        .O(\W_addr[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[21]_i_2 
       (.I0(\W_addr_reg[24]_i_3_n_7 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[21]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[21]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[21]_C_n_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[21]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[22]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[22]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[22]),
        .I4(\W_addr[22]_i_2_n_0 ),
        .O(\W_addr[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[22]_i_2 
       (.I0(\W_addr_reg[24]_i_3_n_6 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[22]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[22]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[22]_C_n_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[22]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[23]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[23]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[23]),
        .I4(\W_addr[23]_i_3_n_0 ),
        .O(\W_addr[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[23]_i_3 
       (.I0(\W_addr_reg[24]_i_3_n_5 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[23]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[23]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[23]_C_n_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[23]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[24]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[24]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[24]),
        .I4(\W_addr[24]_i_2_n_0 ),
        .O(\W_addr[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[24]_i_2 
       (.I0(\W_addr_reg[24]_i_3_n_4 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[24]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[24]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[24]_C_n_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[24]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[25]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[25]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[25]),
        .I4(\W_addr[25]_i_2_n_0 ),
        .O(\W_addr[25]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[25]_i_2 
       (.I0(\W_addr_reg[28]_i_3_n_7 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[25]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[25]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[25]_C_n_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[25]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[26]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[26]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[26]),
        .I4(\W_addr[26]_i_2_n_0 ),
        .O(\W_addr[26]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[26]_i_2 
       (.I0(\W_addr_reg[28]_i_3_n_6 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[26]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[26]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[26]_C_n_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[26]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[27]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[27]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[27]),
        .I4(\W_addr[27]_i_3_n_0 ),
        .O(\W_addr[27]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[27]_i_3 
       (.I0(\W_addr_reg[28]_i_3_n_5 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[27]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[27]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[27]_C_n_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[27]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[28]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[28]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[28]),
        .I4(\W_addr[28]_i_2_n_0 ),
        .O(\W_addr[28]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[28]_i_2 
       (.I0(\W_addr_reg[28]_i_3_n_4 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[28]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[28]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[28]_C_n_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[28]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[29]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[29]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[29]),
        .I4(\W_addr[29]_i_2_n_0 ),
        .O(\W_addr[29]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[29]_i_2 
       (.I0(\W_addr_reg[31]_i_9_n_7 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[29]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[29]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[29]_C_n_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[29]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[2]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[2]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[2]),
        .I4(\W_addr[2]_i_2_n_0 ),
        .O(\W_addr[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[2]_i_2 
       (.I0(\W_addr_reg[4]_i_3_n_6 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[2]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[2]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[2]_C_n_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[30]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[30]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[30]),
        .I4(\W_addr[30]_i_2_n_0 ),
        .O(\W_addr[30]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[30]_i_2 
       (.I0(\W_addr_reg[31]_i_9_n_6 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[30]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[30]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[30]_C_n_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[30]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF1000)) 
    \W_addr[31]_i_1 
       (.I0(desc_valid1),
        .I1(state[2]),
        .I2(state[0]),
        .I3(state[1]),
        .I4(\state_reg[0]_0 ),
        .O(\W_addr[31]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \W_addr[31]_i_10 
       (.I0(conf_rx_en),
        .I1(state[1]),
        .I2(state[0]),
        .O(\W_addr[31]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[31]_i_2 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[31]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[31]),
        .I4(\W_addr[31]_i_7_n_0 ),
        .O(\W_addr[31]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h02FF)) 
    \W_addr[31]_i_3 
       (.I0(\W_bnum[15]_i_4_n_0 ),
        .I1(state[0]),
        .I2(state[2]),
        .I3(conf_rx_en),
        .O(\state_reg[0]_0 ));
  LUT4 #(
    .INIT(16'h0040)) 
    \W_addr[31]_i_4 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(conf_rx_en),
        .I3(\W_addr_reg[0]_0 ),
        .O(\W_addr[31]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h4000)) 
    \W_addr[31]_i_6 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(conf_rx_en),
        .I3(\W_addr_reg[0]_0 ),
        .O(\W_addr[31]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[31]_i_7 
       (.I0(\W_addr_reg[31]_i_9_n_5 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[31]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[31]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[31]_C_n_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[31]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[3]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[3]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[3]),
        .I4(\W_addr[3]_i_3_n_0 ),
        .O(\W_addr[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[3]_i_3 
       (.I0(\W_addr_reg[4]_i_3_n_5 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[3]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[3]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[3]_C_n_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[3]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_addr[3]_i_4 
       (.I0(Q[3]),
        .I1(\W_bmove_reg_n_0_[3] ),
        .O(\W_addr[3]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_addr[3]_i_5 
       (.I0(Q[2]),
        .I1(\W_bmove_reg_n_0_[2] ),
        .O(\W_addr[3]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_addr[3]_i_6 
       (.I0(Q[1]),
        .I1(\W_bmove_reg_n_0_[1] ),
        .O(\W_addr[3]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_addr[3]_i_7 
       (.I0(Q[0]),
        .I1(\W_bmove_reg_n_0_[0] ),
        .O(\W_addr[3]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[4]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[4]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[4]),
        .I4(\W_addr[4]_i_2_n_0 ),
        .O(\W_addr[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[4]_i_2 
       (.I0(\W_addr_reg[4]_i_3_n_4 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[4]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[4]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[4]_C_n_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \W_addr[4]_i_4 
       (.I0(Q[1]),
        .O(\W_addr[4]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[5]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[5]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[5]),
        .I4(\W_addr[5]_i_2_n_0 ),
        .O(\W_addr[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[5]_i_2 
       (.I0(\W_addr_reg[8]_i_3_n_7 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[5]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[5]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[5]_C_n_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[5]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[6]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[6]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[6]),
        .I4(\W_addr[6]_i_2_n_0 ),
        .O(\W_addr[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[6]_i_2 
       (.I0(\W_addr_reg[8]_i_3_n_6 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[6]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[6]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[6]_C_n_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[6]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[7]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[7]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[7]),
        .I4(\W_addr[7]_i_3_n_0 ),
        .O(\W_addr[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[7]_i_3 
       (.I0(\W_addr_reg[8]_i_3_n_5 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[7]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[7]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[7]_C_n_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_addr[7]_i_4 
       (.I0(Q[7]),
        .I1(\W_bmove_reg_n_0_[7] ),
        .O(\W_addr[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_addr[7]_i_5 
       (.I0(Q[6]),
        .I1(\W_bmove_reg_n_0_[6] ),
        .O(\W_addr[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_addr[7]_i_6 
       (.I0(Q[5]),
        .I1(\W_bmove_reg_n_0_[5] ),
        .O(\W_addr[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_addr[7]_i_7 
       (.I0(Q[4]),
        .I1(\W_bmove_reg_n_0_[4] ),
        .O(\W_addr[7]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[8]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[8]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[8]),
        .I4(\W_addr[8]_i_2_n_0 ),
        .O(\W_addr[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[8]_i_2 
       (.I0(\W_addr_reg[8]_i_3_n_4 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[8]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[8]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[8]_C_n_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[8]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_addr[9]_i_1 
       (.I0(\W_addr[31]_i_4_n_0 ),
        .I1(W_addr2[9]),
        .I2(\W_addr[31]_i_6_n_0 ),
        .I3(rx_addr_start[9]),
        .I4(\W_addr[9]_i_2_n_0 ),
        .O(\W_addr[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFF88888888888)) 
    \W_addr[9]_i_2 
       (.I0(\W_addr_reg[12]_i_3_n_7 ),
        .I1(\W_addr[31]_i_10_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[9]_P_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[9]_LDC_n_0 ),
        .I4(\DMA_ADDR_HEAD_reg[9]_C_n_0 ),
        .I5(\state_reg[2]_2 ),
        .O(\W_addr[9]_i_2_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[0] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[0]_i_1_n_0 ),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[10] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[10]_i_1_n_0 ),
        .Q(Q[10]));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[11] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[11]_i_1_n_0 ),
        .Q(Q[11]));
  CARRY4 \W_addr_reg[11]_i_2 
       (.CI(\W_addr_reg[7]_i_2_n_0 ),
        .CO({\W_addr_reg[11]_i_2_n_0 ,\W_addr_reg[11]_i_2_n_1 ,\W_addr_reg[11]_i_2_n_2 ,\W_addr_reg[11]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[11:8]),
        .O(W_addr2[11:8]),
        .S({\W_addr[11]_i_4_n_0 ,\W_addr[11]_i_5_n_0 ,\W_addr[11]_i_6_n_0 ,\W_addr[11]_i_7_n_0 }));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[12] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[12]_i_1_n_0 ),
        .Q(Q[12]));
  CARRY4 \W_addr_reg[12]_i_3 
       (.CI(\W_addr_reg[8]_i_3_n_0 ),
        .CO({\W_addr_reg[12]_i_3_n_0 ,\W_addr_reg[12]_i_3_n_1 ,\W_addr_reg[12]_i_3_n_2 ,\W_addr_reg[12]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\W_addr_reg[12]_i_3_n_4 ,\W_addr_reg[12]_i_3_n_5 ,\W_addr_reg[12]_i_3_n_6 ,\W_addr_reg[12]_i_3_n_7 }),
        .S(Q[12:9]));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[13] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[13]_i_1_n_0 ),
        .Q(Q[13]));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[14] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[14]_i_1_n_0 ),
        .Q(Q[14]));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[15] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[15]_i_1_n_0 ),
        .Q(Q[15]));
  CARRY4 \W_addr_reg[15]_i_2 
       (.CI(\W_addr_reg[11]_i_2_n_0 ),
        .CO({\W_addr_reg[15]_i_2_n_0 ,\W_addr_reg[15]_i_2_n_1 ,\W_addr_reg[15]_i_2_n_2 ,\W_addr_reg[15]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[15:12]),
        .O(W_addr2[15:12]),
        .S({\W_addr[15]_i_4_n_0 ,\W_addr[15]_i_5_n_0 ,\W_addr[15]_i_6_n_0 ,\W_addr[15]_i_7_n_0 }));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[16] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[16]_i_1_n_0 ),
        .Q(Q[16]));
  CARRY4 \W_addr_reg[16]_i_3 
       (.CI(\W_addr_reg[12]_i_3_n_0 ),
        .CO({\W_addr_reg[16]_i_3_n_0 ,\W_addr_reg[16]_i_3_n_1 ,\W_addr_reg[16]_i_3_n_2 ,\W_addr_reg[16]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\W_addr_reg[16]_i_3_n_4 ,\W_addr_reg[16]_i_3_n_5 ,\W_addr_reg[16]_i_3_n_6 ,\W_addr_reg[16]_i_3_n_7 }),
        .S(Q[16:13]));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[17] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[17]_i_1_n_0 ),
        .Q(Q[17]));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[18] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[18]_i_1_n_0 ),
        .Q(Q[18]));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[19] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[19]_i_1_n_0 ),
        .Q(Q[19]));
  CARRY4 \W_addr_reg[19]_i_2 
       (.CI(\W_addr_reg[15]_i_2_n_0 ),
        .CO({\W_addr_reg[19]_i_2_n_0 ,\W_addr_reg[19]_i_2_n_1 ,\W_addr_reg[19]_i_2_n_2 ,\W_addr_reg[19]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(W_addr2[19:16]),
        .S(Q[19:16]));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[1] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[1]_i_1_n_0 ),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[20] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[20]_i_1_n_0 ),
        .Q(Q[20]));
  CARRY4 \W_addr_reg[20]_i_3 
       (.CI(\W_addr_reg[16]_i_3_n_0 ),
        .CO({\W_addr_reg[20]_i_3_n_0 ,\W_addr_reg[20]_i_3_n_1 ,\W_addr_reg[20]_i_3_n_2 ,\W_addr_reg[20]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\W_addr_reg[20]_i_3_n_4 ,\W_addr_reg[20]_i_3_n_5 ,\W_addr_reg[20]_i_3_n_6 ,\W_addr_reg[20]_i_3_n_7 }),
        .S(Q[20:17]));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[21] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[21]_i_1_n_0 ),
        .Q(Q[21]));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[22] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[22]_i_1_n_0 ),
        .Q(Q[22]));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[23] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[23]_i_1_n_0 ),
        .Q(Q[23]));
  CARRY4 \W_addr_reg[23]_i_2 
       (.CI(\W_addr_reg[19]_i_2_n_0 ),
        .CO({\W_addr_reg[23]_i_2_n_0 ,\W_addr_reg[23]_i_2_n_1 ,\W_addr_reg[23]_i_2_n_2 ,\W_addr_reg[23]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(W_addr2[23:20]),
        .S(Q[23:20]));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[24] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[24]_i_1_n_0 ),
        .Q(Q[24]));
  CARRY4 \W_addr_reg[24]_i_3 
       (.CI(\W_addr_reg[20]_i_3_n_0 ),
        .CO({\W_addr_reg[24]_i_3_n_0 ,\W_addr_reg[24]_i_3_n_1 ,\W_addr_reg[24]_i_3_n_2 ,\W_addr_reg[24]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\W_addr_reg[24]_i_3_n_4 ,\W_addr_reg[24]_i_3_n_5 ,\W_addr_reg[24]_i_3_n_6 ,\W_addr_reg[24]_i_3_n_7 }),
        .S(Q[24:21]));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[25] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[25]_i_1_n_0 ),
        .Q(Q[25]));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[26] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[26]_i_1_n_0 ),
        .Q(Q[26]));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[27] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[27]_i_1_n_0 ),
        .Q(Q[27]));
  CARRY4 \W_addr_reg[27]_i_2 
       (.CI(\W_addr_reg[23]_i_2_n_0 ),
        .CO({\W_addr_reg[27]_i_2_n_0 ,\W_addr_reg[27]_i_2_n_1 ,\W_addr_reg[27]_i_2_n_2 ,\W_addr_reg[27]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(W_addr2[27:24]),
        .S(Q[27:24]));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[28] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[28]_i_1_n_0 ),
        .Q(Q[28]));
  CARRY4 \W_addr_reg[28]_i_3 
       (.CI(\W_addr_reg[24]_i_3_n_0 ),
        .CO({\W_addr_reg[28]_i_3_n_0 ,\W_addr_reg[28]_i_3_n_1 ,\W_addr_reg[28]_i_3_n_2 ,\W_addr_reg[28]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\W_addr_reg[28]_i_3_n_4 ,\W_addr_reg[28]_i_3_n_5 ,\W_addr_reg[28]_i_3_n_6 ,\W_addr_reg[28]_i_3_n_7 }),
        .S(Q[28:25]));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[29] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[29]_i_1_n_0 ),
        .Q(Q[29]));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[2] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[2]_i_1_n_0 ),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[30] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[30]_i_1_n_0 ),
        .Q(Q[30]));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[31] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[31]_i_2_n_0 ),
        .Q(Q[31]));
  CARRY4 \W_addr_reg[31]_i_5 
       (.CI(\W_addr_reg[27]_i_2_n_0 ),
        .CO({\NLW_W_addr_reg[31]_i_5_CO_UNCONNECTED [3],\W_addr_reg[31]_i_5_n_1 ,\W_addr_reg[31]_i_5_n_2 ,\W_addr_reg[31]_i_5_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(W_addr2[31:28]),
        .S(Q[31:28]));
  CARRY4 \W_addr_reg[31]_i_9 
       (.CI(\W_addr_reg[28]_i_3_n_0 ),
        .CO({\NLW_W_addr_reg[31]_i_9_CO_UNCONNECTED [3:2],\W_addr_reg[31]_i_9_n_2 ,\W_addr_reg[31]_i_9_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_W_addr_reg[31]_i_9_O_UNCONNECTED [3],\W_addr_reg[31]_i_9_n_5 ,\W_addr_reg[31]_i_9_n_6 ,\W_addr_reg[31]_i_9_n_7 }),
        .S({1'b0,Q[31:29]}));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[3] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[3]_i_1_n_0 ),
        .Q(Q[3]));
  CARRY4 \W_addr_reg[3]_i_2 
       (.CI(1'b0),
        .CO({\W_addr_reg[3]_i_2_n_0 ,\W_addr_reg[3]_i_2_n_1 ,\W_addr_reg[3]_i_2_n_2 ,\W_addr_reg[3]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[3:0]),
        .O(W_addr2[3:0]),
        .S({\W_addr[3]_i_4_n_0 ,\W_addr[3]_i_5_n_0 ,\W_addr[3]_i_6_n_0 ,\W_addr[3]_i_7_n_0 }));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[4] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[4]_i_1_n_0 ),
        .Q(Q[4]));
  CARRY4 \W_addr_reg[4]_i_3 
       (.CI(1'b0),
        .CO({\W_addr_reg[4]_i_3_n_0 ,\W_addr_reg[4]_i_3_n_1 ,\W_addr_reg[4]_i_3_n_2 ,\W_addr_reg[4]_i_3_n_3 }),
        .CYINIT(Q[0]),
        .DI({1'b0,1'b0,1'b0,Q[1]}),
        .O({\W_addr_reg[4]_i_3_n_4 ,\W_addr_reg[4]_i_3_n_5 ,\W_addr_reg[4]_i_3_n_6 ,\W_addr_reg[4]_i_3_n_7 }),
        .S({Q[4:2],\W_addr[4]_i_4_n_0 }));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[5] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[5]_i_1_n_0 ),
        .Q(Q[5]));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[6] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[6]_i_1_n_0 ),
        .Q(Q[6]));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[7] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[7]_i_1_n_0 ),
        .Q(Q[7]));
  CARRY4 \W_addr_reg[7]_i_2 
       (.CI(\W_addr_reg[3]_i_2_n_0 ),
        .CO({\W_addr_reg[7]_i_2_n_0 ,\W_addr_reg[7]_i_2_n_1 ,\W_addr_reg[7]_i_2_n_2 ,\W_addr_reg[7]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[7:4]),
        .O(W_addr2[7:4]),
        .S({\W_addr[7]_i_4_n_0 ,\W_addr[7]_i_5_n_0 ,\W_addr[7]_i_6_n_0 ,\W_addr[7]_i_7_n_0 }));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[8] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[8]_i_1_n_0 ),
        .Q(Q[8]));
  CARRY4 \W_addr_reg[8]_i_3 
       (.CI(\W_addr_reg[4]_i_3_n_0 ),
        .CO({\W_addr_reg[8]_i_3_n_0 ,\W_addr_reg[8]_i_3_n_1 ,\W_addr_reg[8]_i_3_n_2 ,\W_addr_reg[8]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\W_addr_reg[8]_i_3_n_4 ,\W_addr_reg[8]_i_3_n_5 ,\W_addr_reg[8]_i_3_n_6 ,\W_addr_reg[8]_i_3_n_7 }),
        .S(Q[8:5]));
  FDCE #(
    .INIT(1'b0)) 
    \W_addr_reg[9] 
       (.C(ACLK),
        .CE(\W_addr[31]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_addr[9]_i_1_n_0 ),
        .Q(Q[9]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \W_bmove[0]_i_1 
       (.I0(\W_bmove[1]_i_2_n_0 ),
        .I1(\W_bmove_reg[10]_0 [0]),
        .I2(\W_bmove[1]_i_4_n_0 ),
        .I3(W_bxxx[0]),
        .I4(\W_brem_reg[15]_0 [0]),
        .I5(\W_bmove[15]_i_7_n_0 ),
        .O(\W_bmove[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_bmove[10]_i_1 
       (.I0(\W_bmove_reg[14]_0 ),
        .I1(\DMA_WCHUNK_reg[13]_0 [8]),
        .I2(\W_bmove[15]_i_7_n_0 ),
        .I3(\W_brem_reg[15]_0 [10]),
        .I4(\W_bmove[10]_i_2_n_0 ),
        .O(\W_bmove[10]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \W_bmove[10]_i_2 
       (.I0(W_bxxx[10]),
        .I1(\W_bmove[1]_i_4_n_0 ),
        .I2(\W_bmove_reg[10]_0 [10]),
        .I3(\W_bmove[1]_i_2_n_0 ),
        .O(\W_bmove[10]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_bmove[11]_i_1 
       (.I0(\W_bmove_reg[14]_0 ),
        .I1(\DMA_WCHUNK_reg[13]_0 [9]),
        .I2(\W_bmove[15]_i_7_n_0 ),
        .I3(\W_brem_reg[15]_0 [11]),
        .I4(\W_bmove[11]_i_2_n_0 ),
        .O(\W_bmove[11]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \W_bmove[11]_i_2 
       (.I0(W_bxxx[11]),
        .I1(\W_bmove[1]_i_4_n_0 ),
        .I2(\W_bmove_reg[15]_0 [0]),
        .I3(\W_bmove[1]_i_2_n_0 ),
        .O(\W_bmove[11]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_bmove[12]_i_1 
       (.I0(\W_bmove_reg[14]_0 ),
        .I1(\DMA_WCHUNK_reg[13]_0 [10]),
        .I2(\W_bmove[15]_i_7_n_0 ),
        .I3(\W_brem_reg[15]_0 [12]),
        .I4(\W_bmove[12]_i_2_n_0 ),
        .O(\W_bmove[12]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \W_bmove[12]_i_2 
       (.I0(W_bxxx[12]),
        .I1(\W_bmove[1]_i_4_n_0 ),
        .I2(\W_bmove_reg[15]_0 [1]),
        .I3(\W_bmove[1]_i_2_n_0 ),
        .O(\W_bmove[12]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_bmove[13]_i_1 
       (.I0(\W_bmove_reg[14]_0 ),
        .I1(\DMA_WCHUNK_reg[13]_0 [11]),
        .I2(\W_bmove[15]_i_7_n_0 ),
        .I3(\W_brem_reg[15]_0 [13]),
        .I4(\W_bmove[13]_i_2_n_0 ),
        .O(\W_bmove[13]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \W_bmove[13]_i_2 
       (.I0(W_bxxx[13]),
        .I1(\W_bmove[1]_i_4_n_0 ),
        .I2(\W_bmove_reg[15]_0 [2]),
        .I3(\W_bmove[1]_i_2_n_0 ),
        .O(\W_bmove[13]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_bmove[14]_i_1 
       (.I0(\W_bmove_reg[14]_0 ),
        .I1(\DMA_WCHUNK_reg[13]_0 [12]),
        .I2(\W_bmove[15]_i_7_n_0 ),
        .I3(\W_brem_reg[15]_0 [14]),
        .I4(\W_bmove[14]_i_2_n_0 ),
        .O(\W_bmove[14]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \W_bmove[14]_i_2 
       (.I0(W_bxxx[14]),
        .I1(\W_bmove[1]_i_4_n_0 ),
        .I2(\W_bmove_reg[15]_0 [3]),
        .I3(\W_bmove[1]_i_2_n_0 ),
        .O(\W_bmove[14]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF333BB3333333333)) 
    \W_bmove[15]_i_1 
       (.I0(\W_bmove[15]_i_3_n_0 ),
        .I1(conf_rx_en),
        .I2(desc_valid1),
        .I3(W_goodframe_i_2_n_0),
        .I4(state[1]),
        .I5(W_go0),
        .O(W_bmove));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \W_bmove[15]_i_10 
       (.I0(\W_brem_reg[15]_0 [14]),
        .I1(\W_brem_reg[15]_0 [13]),
        .I2(\W_brem_reg[15]_0 [12]),
        .I3(\W_brem_reg[15]_0 [11]),
        .O(\W_bmove[15]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \W_bmove[15]_i_11 
       (.I0(\W_brem_reg[15]_0 [7]),
        .I1(\W_brem_reg[15]_0 [8]),
        .I2(\W_brem_reg[15]_0 [9]),
        .I3(\W_brem_reg[15]_0 [10]),
        .O(\W_bmove[15]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h44D4)) 
    \W_bmove[15]_i_122 
       (.I0(\W_brem_reg[15]_0 [1]),
        .I1(\W_bmove_reg[10]_0 [1]),
        .I2(\W_bmove_reg[10]_0 [0]),
        .I3(\W_brem_reg[15]_0 [0]),
        .O(\W_brem_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hFF80008000800080)) 
    \W_bmove[15]_i_18 
       (.I0(\W_bmove_reg[1]_i_12_n_0 ),
        .I1(out),
        .I2(\W_bmove_reg[0]_0 ),
        .I3(state[1]),
        .I4(\W_len_reg[8]_0 ),
        .I5(\W_bmove_reg[15]_i_20_n_0 ),
        .O(\state_reg[1]_1 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_bmove[15]_i_2 
       (.I0(\W_bmove_reg[14]_0 ),
        .I1(\DMA_WCHUNK_reg[13]_0 [13]),
        .I2(\W_bmove[15]_i_7_n_0 ),
        .I3(\W_brem_reg[15]_0 [15]),
        .I4(\W_bmove[15]_i_8_n_0 ),
        .O(\W_bmove[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \W_bmove[15]_i_25 
       (.I0(\W_bmove[1]_i_24 ),
        .I1(W_full_reg_0),
        .I2(W_empty),
        .O(W_full_reg_4));
  LUT3 #(
    .INIT(8'hF1)) 
    \W_bmove[15]_i_27 
       (.I0(\W_bmove[1]_i_24 ),
        .I1(W_full_reg_0),
        .I2(W_empty),
        .O(W_full_reg_3));
  LUT5 #(
    .INIT(32'h0088F088)) 
    \W_bmove[15]_i_3 
       (.I0(valid),
        .I1(W_go2),
        .I2(W_goodframe_reg_1),
        .I3(out),
        .I4(\W_brem_reg[15]_i_4_n_0 ),
        .O(\W_bmove[15]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h50D4)) 
    \W_bmove[15]_i_39 
       (.I0(\DMA_WCHUNK_reg[13]_0 [13]),
        .I1(\W_brem_reg[15]_0 [14]),
        .I2(\W_brem_reg[15]_0 [15]),
        .I3(\DMA_WCHUNK_reg[13]_0 [12]),
        .O(\W_bmove[15]_i_39_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \W_bmove[15]_i_4 
       (.I0(\W_bmove[15]_i_9_n_0 ),
        .I1(\W_bmove[15]_i_10_n_0 ),
        .I2(\W_brem_reg[15]_0 [2]),
        .I3(\W_brem_reg[15]_0 [4]),
        .I4(\W_brem_reg[15]_0 [15]),
        .I5(\W_bmove[15]_i_11_n_0 ),
        .O(desc_valid1));
  LUT4 #(
    .INIT(16'h50D4)) 
    \W_bmove[15]_i_40 
       (.I0(\DMA_WCHUNK_reg[13]_0 [11]),
        .I1(\W_brem_reg[15]_0 [12]),
        .I2(\W_brem_reg[15]_0 [13]),
        .I3(\DMA_WCHUNK_reg[13]_0 [10]),
        .O(\W_bmove[15]_i_40_n_0 ));
  LUT4 #(
    .INIT(16'h50D4)) 
    \W_bmove[15]_i_41 
       (.I0(\DMA_WCHUNK_reg[13]_0 [9]),
        .I1(\W_brem_reg[15]_0 [10]),
        .I2(\W_brem_reg[15]_0 [11]),
        .I3(\DMA_WCHUNK_reg[13]_0 [8]),
        .O(\W_bmove[15]_i_41_n_0 ));
  LUT4 #(
    .INIT(16'h50D4)) 
    \W_bmove[15]_i_42 
       (.I0(\DMA_WCHUNK_reg[13]_0 [7]),
        .I1(\W_brem_reg[15]_0 [8]),
        .I2(\W_brem_reg[15]_0 [9]),
        .I3(\DMA_WCHUNK_reg[13]_0 [6]),
        .O(\W_bmove[15]_i_42_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[15]_i_43 
       (.I0(\W_brem_reg[15]_0 [14]),
        .I1(\DMA_WCHUNK_reg[13]_0 [12]),
        .I2(\W_brem_reg[15]_0 [15]),
        .I3(\DMA_WCHUNK_reg[13]_0 [13]),
        .O(\W_bmove[15]_i_43_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[15]_i_44 
       (.I0(\W_brem_reg[15]_0 [12]),
        .I1(\DMA_WCHUNK_reg[13]_0 [10]),
        .I2(\W_brem_reg[15]_0 [13]),
        .I3(\DMA_WCHUNK_reg[13]_0 [11]),
        .O(\W_bmove[15]_i_44_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[15]_i_45 
       (.I0(\W_brem_reg[15]_0 [10]),
        .I1(\DMA_WCHUNK_reg[13]_0 [8]),
        .I2(\W_brem_reg[15]_0 [11]),
        .I3(\DMA_WCHUNK_reg[13]_0 [9]),
        .O(\W_bmove[15]_i_45_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[15]_i_46 
       (.I0(\W_brem_reg[15]_0 [9]),
        .I1(\DMA_WCHUNK_reg[13]_0 [7]),
        .I2(\W_brem_reg[15]_0 [8]),
        .I3(\DMA_WCHUNK_reg[13]_0 [6]),
        .O(\W_bmove[15]_i_46_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[15]_i_62 
       (.I0(Q[31]),
        .I1(\W_bmove_reg[15]_i_28 [29]),
        .O(\W_addr_reg[31]_0 ));
  LUT4 #(
    .INIT(16'h4000)) 
    \W_bmove[15]_i_7 
       (.I0(\W_bmove_reg[15]_i_20_n_0 ),
        .I1(\W_len_reg[8]_0 ),
        .I2(conf_rx_en),
        .I3(state[1]),
        .O(\W_bmove[15]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \W_bmove[15]_i_8 
       (.I0(W_bxxx[15]),
        .I1(\W_bmove[1]_i_4_n_0 ),
        .I2(\W_bmove_reg[15]_0 [4]),
        .I3(\W_bmove[1]_i_2_n_0 ),
        .O(\W_bmove[15]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h50D4)) 
    \W_bmove[15]_i_81 
       (.I0(\DMA_WCHUNK_reg[13]_0 [5]),
        .I1(\W_brem_reg[15]_0 [6]),
        .I2(\W_brem_reg[15]_0 [7]),
        .I3(\DMA_WCHUNK_reg[13]_0 [4]),
        .O(\W_bmove[15]_i_81_n_0 ));
  LUT4 #(
    .INIT(16'h50D4)) 
    \W_bmove[15]_i_82 
       (.I0(\DMA_WCHUNK_reg[13]_0 [3]),
        .I1(\W_brem_reg[15]_0 [4]),
        .I2(\W_brem_reg[15]_0 [5]),
        .I3(\DMA_WCHUNK_reg[13]_0 [2]),
        .O(\W_bmove[15]_i_82_n_0 ));
  LUT4 #(
    .INIT(16'h50D4)) 
    \W_bmove[15]_i_83 
       (.I0(\DMA_WCHUNK_reg[13]_0 [1]),
        .I1(\W_brem_reg[15]_0 [2]),
        .I2(\W_brem_reg[15]_0 [3]),
        .I3(\DMA_WCHUNK_reg[13]_0 [0]),
        .O(\W_bmove[15]_i_83_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \W_bmove[15]_i_84 
       (.I0(\W_brem_reg[15]_0 [0]),
        .I1(\W_brem_reg[15]_0 [1]),
        .O(\W_bmove[15]_i_84_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[15]_i_85 
       (.I0(\W_brem_reg[15]_0 [7]),
        .I1(\DMA_WCHUNK_reg[13]_0 [5]),
        .I2(\W_brem_reg[15]_0 [6]),
        .I3(\DMA_WCHUNK_reg[13]_0 [4]),
        .O(\W_bmove[15]_i_85_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[15]_i_86 
       (.I0(\W_brem_reg[15]_0 [5]),
        .I1(\DMA_WCHUNK_reg[13]_0 [3]),
        .I2(\W_brem_reg[15]_0 [4]),
        .I3(\DMA_WCHUNK_reg[13]_0 [2]),
        .O(\W_bmove[15]_i_86_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[15]_i_87 
       (.I0(\W_brem_reg[15]_0 [3]),
        .I1(\DMA_WCHUNK_reg[13]_0 [1]),
        .I2(\W_brem_reg[15]_0 [2]),
        .I3(\DMA_WCHUNK_reg[13]_0 [0]),
        .O(\W_bmove[15]_i_87_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \W_bmove[15]_i_88 
       (.I0(\W_brem_reg[15]_0 [1]),
        .I1(\W_brem_reg[15]_0 [0]),
        .O(\W_bmove[15]_i_88_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \W_bmove[15]_i_9 
       (.I0(\W_brem_reg[15]_0 [6]),
        .I1(\W_brem_reg[15]_0 [5]),
        .I2(\W_brem_reg[15]_0 [0]),
        .I3(\W_brem_reg[15]_0 [1]),
        .I4(\W_brem_reg[15]_0 [3]),
        .O(\W_bmove[15]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \W_bmove[1]_i_1 
       (.I0(\W_bmove[1]_i_2_n_0 ),
        .I1(\W_bmove_reg[10]_0 [1]),
        .I2(\W_bmove[1]_i_4_n_0 ),
        .I3(W_bxxx[1]),
        .I4(\W_brem_reg[15]_0 [1]),
        .I5(\W_bmove[15]_i_7_n_0 ),
        .O(\W_bmove[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h50D4)) 
    \W_bmove[1]_i_101 
       (.I0(\DMA_WCHUNK_reg[13]_0 [13]),
        .I1(\W_bmove_reg[15]_0 [3]),
        .I2(\W_bmove_reg[15]_0 [4]),
        .I3(\DMA_WCHUNK_reg[13]_0 [12]),
        .O(\DMA_WCHUNK_reg[13]_1 [3]));
  LUT4 #(
    .INIT(16'h50D4)) 
    \W_bmove[1]_i_102 
       (.I0(\DMA_WCHUNK_reg[13]_0 [11]),
        .I1(\W_bmove_reg[15]_0 [1]),
        .I2(\W_bmove_reg[15]_0 [2]),
        .I3(\DMA_WCHUNK_reg[13]_0 [10]),
        .O(\DMA_WCHUNK_reg[13]_1 [2]));
  LUT4 #(
    .INIT(16'h44D4)) 
    \W_bmove[1]_i_103 
       (.I0(\DMA_WCHUNK_reg[13]_0 [9]),
        .I1(\W_bmove_reg[15]_0 [0]),
        .I2(\W_bmove_reg[10]_0 [10]),
        .I3(\DMA_WCHUNK_reg[13]_0 [8]),
        .O(\DMA_WCHUNK_reg[13]_1 [1]));
  LUT4 #(
    .INIT(16'h44D4)) 
    \W_bmove[1]_i_104 
       (.I0(\DMA_WCHUNK_reg[13]_0 [7]),
        .I1(\W_bmove_reg[10]_0 [9]),
        .I2(\W_bmove_reg[10]_0 [8]),
        .I3(\DMA_WCHUNK_reg[13]_0 [6]),
        .O(\DMA_WCHUNK_reg[13]_1 [0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_114 
       (.I0(Q[14]),
        .I1(rx_addr_tail[14]),
        .I2(Q[15]),
        .I3(rx_addr_tail[15]),
        .O(\W_addr_reg[14]_0 [3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_115 
       (.I0(Q[13]),
        .I1(rx_addr_tail[13]),
        .I2(Q[12]),
        .I3(rx_addr_tail[12]),
        .O(\W_addr_reg[14]_0 [2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_116 
       (.I0(Q[11]),
        .I1(rx_addr_tail[11]),
        .I2(Q[10]),
        .I3(rx_addr_tail[10]),
        .O(\W_addr_reg[14]_0 [1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_117 
       (.I0(Q[8]),
        .I1(rx_addr_tail[8]),
        .I2(Q[9]),
        .I3(rx_addr_tail[9]),
        .O(\W_addr_reg[14]_0 [0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_123 
       (.I0(W_bxxx[15]),
        .I1(\W_bmove_reg[15]_0 [4]),
        .I2(\W_bmove_reg[15]_0 [3]),
        .I3(W_bxxx[14]),
        .O(W_full_reg_1[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_124 
       (.I0(W_bxxx[13]),
        .I1(\W_bmove_reg[15]_0 [2]),
        .I2(\W_bmove_reg[15]_0 [1]),
        .I3(W_bxxx[12]),
        .O(W_full_reg_1[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_125 
       (.I0(W_bxxx[10]),
        .I1(\W_bmove_reg[10]_0 [10]),
        .I2(\W_bmove_reg[15]_0 [0]),
        .I3(W_bxxx[11]),
        .O(W_full_reg_1[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_126 
       (.I0(W_bxxx[8]),
        .I1(\W_bmove_reg[10]_0 [8]),
        .I2(\W_bmove_reg[10]_0 [9]),
        .I3(W_bxxx[9]),
        .O(W_full_reg_1[0]));
  LUT4 #(
    .INIT(16'h44D4)) 
    \W_bmove[1]_i_127 
       (.I0(\DMA_WCHUNK_reg[13]_0 [5]),
        .I1(\W_bmove_reg[10]_0 [7]),
        .I2(\W_bmove_reg[10]_0 [6]),
        .I3(\DMA_WCHUNK_reg[13]_0 [4]),
        .O(\DMA_WCHUNK_reg[5]_1 [2]));
  LUT4 #(
    .INIT(16'h44D4)) 
    \W_bmove[1]_i_128 
       (.I0(\DMA_WCHUNK_reg[13]_0 [3]),
        .I1(\W_bmove_reg[10]_0 [5]),
        .I2(\W_bmove_reg[10]_0 [4]),
        .I3(\DMA_WCHUNK_reg[13]_0 [2]),
        .O(\DMA_WCHUNK_reg[5]_1 [1]));
  LUT4 #(
    .INIT(16'h44D4)) 
    \W_bmove[1]_i_129 
       (.I0(\DMA_WCHUNK_reg[13]_0 [1]),
        .I1(\W_bmove_reg[10]_0 [3]),
        .I2(\W_bmove_reg[10]_0 [2]),
        .I3(\DMA_WCHUNK_reg[13]_0 [0]),
        .O(\DMA_WCHUNK_reg[5]_1 [0]));
  LUT4 #(
    .INIT(16'h44D4)) 
    \W_bmove[1]_i_134 
       (.I0(\DMA_WCHUNK_reg[13]_0 [5]),
        .I1(\W_bmove_reg[10]_0 [7]),
        .I2(\W_bmove_reg[10]_0 [6]),
        .I3(\DMA_WCHUNK_reg[13]_0 [4]),
        .O(\DMA_WCHUNK_reg[5]_0 [2]));
  LUT4 #(
    .INIT(16'h44D4)) 
    \W_bmove[1]_i_135 
       (.I0(\DMA_WCHUNK_reg[13]_0 [3]),
        .I1(\W_bmove_reg[10]_0 [5]),
        .I2(\W_bmove_reg[10]_0 [4]),
        .I3(\DMA_WCHUNK_reg[13]_0 [2]),
        .O(\DMA_WCHUNK_reg[5]_0 [1]));
  LUT4 #(
    .INIT(16'h44D4)) 
    \W_bmove[1]_i_136 
       (.I0(\DMA_WCHUNK_reg[13]_0 [1]),
        .I1(\W_bmove_reg[10]_0 [3]),
        .I2(\W_bmove_reg[10]_0 [2]),
        .I3(\DMA_WCHUNK_reg[13]_0 [0]),
        .O(\DMA_WCHUNK_reg[5]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[1]_i_14 
       (.I0(\W_brem_reg[15]_i_4_0 [3]),
        .I1(\W_bnum_reg_n_0_[3] ),
        .O(\W_bmove[1]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_145 
       (.I0(Q[7]),
        .I1(rx_addr_tail[7]),
        .I2(Q[6]),
        .I3(rx_addr_tail[6]),
        .O(\W_addr_reg[7]_0 [3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_146 
       (.I0(Q[5]),
        .I1(rx_addr_tail[5]),
        .I2(Q[4]),
        .I3(rx_addr_tail[4]),
        .O(\W_addr_reg[7]_0 [2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_147 
       (.I0(Q[3]),
        .I1(rx_addr_tail[3]),
        .I2(Q[2]),
        .I3(rx_addr_tail[2]),
        .O(\W_addr_reg[7]_0 [1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_148 
       (.I0(Q[1]),
        .I1(rx_addr_tail[1]),
        .I2(Q[0]),
        .I3(rx_addr_tail[0]),
        .O(\W_addr_reg[7]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[1]_i_15 
       (.I0(\W_brem_reg[15]_i_4_0 [2]),
        .I1(\W_bnum_reg_n_0_[2] ),
        .O(\W_bmove[1]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_153 
       (.I0(W_bxxx[6]),
        .I1(\W_bmove_reg[10]_0 [6]),
        .I2(\W_bmove_reg[10]_0 [7]),
        .I3(W_bxxx[7]),
        .O(W_full_reg_2[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_154 
       (.I0(W_bxxx[4]),
        .I1(\W_bmove_reg[10]_0 [4]),
        .I2(\W_bmove_reg[10]_0 [5]),
        .I3(W_bxxx[5]),
        .O(W_full_reg_2[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_155 
       (.I0(W_bxxx[2]),
        .I1(\W_bmove_reg[10]_0 [2]),
        .I2(\W_bmove_reg[10]_0 [3]),
        .I3(W_bxxx[3]),
        .O(W_full_reg_2[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_156 
       (.I0(W_bxxx[0]),
        .I1(\W_bmove_reg[10]_0 [0]),
        .I2(\W_bmove_reg[10]_0 [1]),
        .I3(W_bxxx[1]),
        .O(W_full_reg_2[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[1]_i_16 
       (.I0(\W_brem_reg[15]_i_4_0 [1]),
        .I1(\W_bnum_reg_n_0_[1] ),
        .O(\W_bmove[1]_i_16_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_bmove[1]_i_17 
       (.I0(\W_brem_reg[15]_i_4_0 [0]),
        .I1(\W_bnum_reg_n_0_[0] ),
        .O(\W_bmove[1]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'h2222222F00000000)) 
    \W_bmove[1]_i_2 
       (.I0(\W_bmove[1]_i_6_n_0 ),
        .I1(\W_bmove_reg[0]_1 ),
        .I2(state[1]),
        .I3(out),
        .I4(\W_bmove_reg[0]_2 ),
        .I5(conf_rx_en),
        .O(\W_bmove[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00004000)) 
    \W_bmove[1]_i_4 
       (.I0(\W_bmove_reg[1]_i_12_n_0 ),
        .I1(\W_bmove_reg[0]_0 ),
        .I2(out),
        .I3(conf_rx_en),
        .I4(state[1]),
        .O(\W_bmove[1]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_41 
       (.I0(Q[30]),
        .I1(rx_addr_tail[30]),
        .I2(Q[31]),
        .I3(rx_addr_tail[31]),
        .O(\W_addr_reg[30]_0 [3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_42 
       (.I0(Q[29]),
        .I1(rx_addr_tail[29]),
        .I2(Q[28]),
        .I3(rx_addr_tail[28]),
        .O(\W_addr_reg[30]_0 [2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_43 
       (.I0(Q[26]),
        .I1(rx_addr_tail[26]),
        .I2(Q[27]),
        .I3(rx_addr_tail[27]),
        .O(\W_addr_reg[30]_0 [1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_44 
       (.I0(Q[25]),
        .I1(rx_addr_tail[25]),
        .I2(Q[24]),
        .I3(rx_addr_tail[24]),
        .O(\W_addr_reg[30]_0 [0]));
  LUT4 #(
    .INIT(16'h50D4)) 
    \W_bmove[1]_i_46 
       (.I0(\DMA_WCHUNK_reg[13]_0 [13]),
        .I1(W_bxxx[14]),
        .I2(W_bxxx[15]),
        .I3(\DMA_WCHUNK_reg[13]_0 [12]),
        .O(\W_bmove[1]_i_46_n_0 ));
  LUT4 #(
    .INIT(16'h50D4)) 
    \W_bmove[1]_i_47 
       (.I0(\DMA_WCHUNK_reg[13]_0 [11]),
        .I1(W_bxxx[12]),
        .I2(W_bxxx[13]),
        .I3(\DMA_WCHUNK_reg[13]_0 [10]),
        .O(\W_bmove[1]_i_47_n_0 ));
  LUT4 #(
    .INIT(16'h50D4)) 
    \W_bmove[1]_i_48 
       (.I0(\DMA_WCHUNK_reg[13]_0 [9]),
        .I1(W_bxxx[10]),
        .I2(W_bxxx[11]),
        .I3(\DMA_WCHUNK_reg[13]_0 [8]),
        .O(\W_bmove[1]_i_48_n_0 ));
  LUT4 #(
    .INIT(16'h50D4)) 
    \W_bmove[1]_i_49 
       (.I0(\DMA_WCHUNK_reg[13]_0 [7]),
        .I1(W_bxxx[8]),
        .I2(W_bxxx[9]),
        .I3(\DMA_WCHUNK_reg[13]_0 [6]),
        .O(\W_bmove[1]_i_49_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_50 
       (.I0(W_bxxx[14]),
        .I1(\DMA_WCHUNK_reg[13]_0 [12]),
        .I2(W_bxxx[15]),
        .I3(\DMA_WCHUNK_reg[13]_0 [13]),
        .O(\W_bmove[1]_i_50_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_51 
       (.I0(W_bxxx[12]),
        .I1(\DMA_WCHUNK_reg[13]_0 [10]),
        .I2(W_bxxx[13]),
        .I3(\DMA_WCHUNK_reg[13]_0 [11]),
        .O(\W_bmove[1]_i_51_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_52 
       (.I0(W_bxxx[10]),
        .I1(\DMA_WCHUNK_reg[13]_0 [8]),
        .I2(W_bxxx[11]),
        .I3(\DMA_WCHUNK_reg[13]_0 [9]),
        .O(\W_bmove[1]_i_52_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_53 
       (.I0(W_bxxx[9]),
        .I1(\DMA_WCHUNK_reg[13]_0 [7]),
        .I2(W_bxxx[8]),
        .I3(\DMA_WCHUNK_reg[13]_0 [6]),
        .O(\W_bmove[1]_i_53_n_0 ));
  LUT4 #(
    .INIT(16'h0F22)) 
    \W_bmove[1]_i_6 
       (.I0(out),
        .I1(\W_bmove_reg[0]_0 ),
        .I2(\W_len_reg[8]_0 ),
        .I3(state[1]),
        .O(\W_bmove[1]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_74 
       (.I0(Q[23]),
        .I1(rx_addr_tail[23]),
        .I2(Q[22]),
        .I3(rx_addr_tail[22]),
        .O(\W_addr_reg[23]_0 [3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_75 
       (.I0(Q[20]),
        .I1(rx_addr_tail[20]),
        .I2(Q[21]),
        .I3(rx_addr_tail[21]),
        .O(\W_addr_reg[23]_0 [2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_76 
       (.I0(Q[19]),
        .I1(rx_addr_tail[19]),
        .I2(Q[18]),
        .I3(rx_addr_tail[18]),
        .O(\W_addr_reg[23]_0 [1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_77 
       (.I0(Q[17]),
        .I1(rx_addr_tail[17]),
        .I2(Q[16]),
        .I3(rx_addr_tail[16]),
        .O(\W_addr_reg[23]_0 [0]));
  LUT4 #(
    .INIT(16'h50D4)) 
    \W_bmove[1]_i_78 
       (.I0(\DMA_WCHUNK_reg[13]_0 [5]),
        .I1(W_bxxx[6]),
        .I2(W_bxxx[7]),
        .I3(\DMA_WCHUNK_reg[13]_0 [4]),
        .O(\W_bmove[1]_i_78_n_0 ));
  LUT4 #(
    .INIT(16'h50D4)) 
    \W_bmove[1]_i_79 
       (.I0(\DMA_WCHUNK_reg[13]_0 [3]),
        .I1(W_bxxx[4]),
        .I2(W_bxxx[5]),
        .I3(\DMA_WCHUNK_reg[13]_0 [2]),
        .O(\W_bmove[1]_i_79_n_0 ));
  LUT4 #(
    .INIT(16'h50D4)) 
    \W_bmove[1]_i_80 
       (.I0(\DMA_WCHUNK_reg[13]_0 [1]),
        .I1(W_bxxx[2]),
        .I2(W_bxxx[3]),
        .I3(\DMA_WCHUNK_reg[13]_0 [0]),
        .O(\W_bmove[1]_i_80_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \W_bmove[1]_i_81 
       (.I0(W_bxxx[0]),
        .I1(W_bxxx[1]),
        .O(\W_bmove[1]_i_81_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_82 
       (.I0(W_bxxx[7]),
        .I1(\DMA_WCHUNK_reg[13]_0 [5]),
        .I2(W_bxxx[6]),
        .I3(\DMA_WCHUNK_reg[13]_0 [4]),
        .O(\W_bmove[1]_i_82_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_83 
       (.I0(W_bxxx[5]),
        .I1(\DMA_WCHUNK_reg[13]_0 [3]),
        .I2(W_bxxx[4]),
        .I3(\DMA_WCHUNK_reg[13]_0 [2]),
        .O(\W_bmove[1]_i_83_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_bmove[1]_i_84 
       (.I0(W_bxxx[3]),
        .I1(\DMA_WCHUNK_reg[13]_0 [1]),
        .I2(W_bxxx[2]),
        .I3(\DMA_WCHUNK_reg[13]_0 [0]),
        .O(\W_bmove[1]_i_84_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \W_bmove[1]_i_85 
       (.I0(W_bxxx[1]),
        .I1(W_bxxx[0]),
        .O(\W_bmove[1]_i_85_n_0 ));
  LUT4 #(
    .INIT(16'h50D4)) 
    \W_bmove[1]_i_92 
       (.I0(\DMA_WCHUNK_reg[13]_0 [13]),
        .I1(\W_bmove_reg[15]_0 [3]),
        .I2(\W_bmove_reg[15]_0 [4]),
        .I3(\DMA_WCHUNK_reg[13]_0 [12]),
        .O(\DMA_WCHUNK_reg[13]_2 [3]));
  LUT4 #(
    .INIT(16'h50D4)) 
    \W_bmove[1]_i_93 
       (.I0(\DMA_WCHUNK_reg[13]_0 [11]),
        .I1(\W_bmove_reg[15]_0 [1]),
        .I2(\W_bmove_reg[15]_0 [2]),
        .I3(\DMA_WCHUNK_reg[13]_0 [10]),
        .O(\DMA_WCHUNK_reg[13]_2 [2]));
  LUT4 #(
    .INIT(16'h44D4)) 
    \W_bmove[1]_i_94 
       (.I0(\DMA_WCHUNK_reg[13]_0 [9]),
        .I1(\W_bmove_reg[15]_0 [0]),
        .I2(\W_bmove_reg[10]_0 [10]),
        .I3(\DMA_WCHUNK_reg[13]_0 [8]),
        .O(\DMA_WCHUNK_reg[13]_2 [1]));
  LUT4 #(
    .INIT(16'h44D4)) 
    \W_bmove[1]_i_95 
       (.I0(\DMA_WCHUNK_reg[13]_0 [7]),
        .I1(\W_bmove_reg[10]_0 [9]),
        .I2(\W_bmove_reg[10]_0 [8]),
        .I3(\DMA_WCHUNK_reg[13]_0 [6]),
        .O(\DMA_WCHUNK_reg[13]_2 [0]));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_bmove[2]_i_1 
       (.I0(\W_bmove_reg[14]_0 ),
        .I1(\DMA_WCHUNK_reg[13]_0 [0]),
        .I2(\W_bmove[15]_i_7_n_0 ),
        .I3(\W_brem_reg[15]_0 [2]),
        .I4(\W_bmove[2]_i_2_n_0 ),
        .O(\W_bmove[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \W_bmove[2]_i_2 
       (.I0(W_bxxx[2]),
        .I1(\W_bmove[1]_i_4_n_0 ),
        .I2(\W_bmove_reg[10]_0 [2]),
        .I3(\W_bmove[1]_i_2_n_0 ),
        .O(\W_bmove[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_bmove[3]_i_1 
       (.I0(\W_bmove_reg[14]_0 ),
        .I1(\DMA_WCHUNK_reg[13]_0 [1]),
        .I2(\W_bmove[15]_i_7_n_0 ),
        .I3(\W_brem_reg[15]_0 [3]),
        .I4(\W_bmove[3]_i_2_n_0 ),
        .O(\W_bmove[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \W_bmove[3]_i_2 
       (.I0(W_bxxx[3]),
        .I1(\W_bmove[1]_i_4_n_0 ),
        .I2(\W_bmove_reg[10]_0 [3]),
        .I3(\W_bmove[1]_i_2_n_0 ),
        .O(\W_bmove[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_bmove[4]_i_1 
       (.I0(\W_bmove_reg[14]_0 ),
        .I1(\DMA_WCHUNK_reg[13]_0 [2]),
        .I2(\W_bmove[15]_i_7_n_0 ),
        .I3(\W_brem_reg[15]_0 [4]),
        .I4(\W_bmove[4]_i_2_n_0 ),
        .O(\W_bmove[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \W_bmove[4]_i_2 
       (.I0(W_bxxx[4]),
        .I1(\W_bmove[1]_i_4_n_0 ),
        .I2(\W_bmove_reg[10]_0 [4]),
        .I3(\W_bmove[1]_i_2_n_0 ),
        .O(\W_bmove[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_bmove[5]_i_1 
       (.I0(\W_bmove_reg[14]_0 ),
        .I1(\DMA_WCHUNK_reg[13]_0 [3]),
        .I2(\W_bmove[15]_i_7_n_0 ),
        .I3(\W_brem_reg[15]_0 [5]),
        .I4(\W_bmove[5]_i_2_n_0 ),
        .O(\W_bmove[5]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \W_bmove[5]_i_2 
       (.I0(W_bxxx[5]),
        .I1(\W_bmove[1]_i_4_n_0 ),
        .I2(\W_bmove_reg[10]_0 [5]),
        .I3(\W_bmove[1]_i_2_n_0 ),
        .O(\W_bmove[5]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_bmove[6]_i_1 
       (.I0(\W_bmove_reg[14]_0 ),
        .I1(\DMA_WCHUNK_reg[13]_0 [4]),
        .I2(\W_bmove[15]_i_7_n_0 ),
        .I3(\W_brem_reg[15]_0 [6]),
        .I4(\W_bmove[6]_i_2_n_0 ),
        .O(\W_bmove[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \W_bmove[6]_i_2 
       (.I0(W_bxxx[6]),
        .I1(\W_bmove[1]_i_4_n_0 ),
        .I2(\W_bmove_reg[10]_0 [6]),
        .I3(\W_bmove[1]_i_2_n_0 ),
        .O(\W_bmove[6]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_bmove[7]_i_1 
       (.I0(\W_bmove_reg[14]_0 ),
        .I1(\DMA_WCHUNK_reg[13]_0 [5]),
        .I2(\W_bmove[15]_i_7_n_0 ),
        .I3(\W_brem_reg[15]_0 [7]),
        .I4(\W_bmove[7]_i_2_n_0 ),
        .O(\W_bmove[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \W_bmove[7]_i_2 
       (.I0(W_bxxx[7]),
        .I1(\W_bmove[1]_i_4_n_0 ),
        .I2(\W_bmove_reg[10]_0 [7]),
        .I3(\W_bmove[1]_i_2_n_0 ),
        .O(\W_bmove[7]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_bmove[8]_i_1 
       (.I0(\W_bmove_reg[14]_0 ),
        .I1(\DMA_WCHUNK_reg[13]_0 [6]),
        .I2(\W_bmove[15]_i_7_n_0 ),
        .I3(\W_brem_reg[15]_0 [8]),
        .I4(\W_bmove[8]_i_2_n_0 ),
        .O(\W_bmove[8]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \W_bmove[8]_i_2 
       (.I0(W_bxxx[8]),
        .I1(\W_bmove[1]_i_4_n_0 ),
        .I2(\W_bmove_reg[10]_0 [8]),
        .I3(\W_bmove[1]_i_2_n_0 ),
        .O(\W_bmove[8]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_bmove[9]_i_1 
       (.I0(\W_bmove_reg[14]_0 ),
        .I1(\DMA_WCHUNK_reg[13]_0 [7]),
        .I2(\W_bmove[15]_i_7_n_0 ),
        .I3(\W_brem_reg[15]_0 [9]),
        .I4(\W_bmove[9]_i_2_n_0 ),
        .O(\W_bmove[9]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \W_bmove[9]_i_2 
       (.I0(W_bxxx[9]),
        .I1(\W_bmove[1]_i_4_n_0 ),
        .I2(\W_bmove_reg[10]_0 [9]),
        .I3(\W_bmove[1]_i_2_n_0 ),
        .O(\W_bmove[9]_i_2_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \W_bmove_reg[0] 
       (.C(ACLK),
        .CE(W_bmove),
        .CLR(conf_rx_reset),
        .D(\W_bmove[0]_i_1_n_0 ),
        .Q(\W_bmove_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \W_bmove_reg[10] 
       (.C(ACLK),
        .CE(W_bmove),
        .CLR(conf_rx_reset),
        .D(\W_bmove[10]_i_1_n_0 ),
        .Q(\W_bmove_reg_n_0_[10] ));
  FDCE #(
    .INIT(1'b0)) 
    \W_bmove_reg[11] 
       (.C(ACLK),
        .CE(W_bmove),
        .CLR(conf_rx_reset),
        .D(\W_bmove[11]_i_1_n_0 ),
        .Q(\W_bmove_reg_n_0_[11] ));
  FDCE #(
    .INIT(1'b0)) 
    \W_bmove_reg[12] 
       (.C(ACLK),
        .CE(W_bmove),
        .CLR(conf_rx_reset),
        .D(\W_bmove[12]_i_1_n_0 ),
        .Q(\W_bmove_reg_n_0_[12] ));
  FDCE #(
    .INIT(1'b0)) 
    \W_bmove_reg[13] 
       (.C(ACLK),
        .CE(W_bmove),
        .CLR(conf_rx_reset),
        .D(\W_bmove[13]_i_1_n_0 ),
        .Q(\W_bmove_reg_n_0_[13] ));
  FDCE #(
    .INIT(1'b0)) 
    \W_bmove_reg[14] 
       (.C(ACLK),
        .CE(W_bmove),
        .CLR(conf_rx_reset),
        .D(\W_bmove[14]_i_1_n_0 ),
        .Q(\W_bmove_reg_n_0_[14] ));
  FDCE #(
    .INIT(1'b0)) 
    \W_bmove_reg[15] 
       (.C(ACLK),
        .CE(W_bmove),
        .CLR(conf_rx_reset),
        .D(\W_bmove[15]_i_2_n_0 ),
        .Q(\W_bmove_reg_n_0_[15] ));
  CARRY4 \W_bmove_reg[15]_i_20 
       (.CI(\W_bmove_reg[15]_i_38_n_0 ),
        .CO({\W_bmove_reg[15]_i_20_n_0 ,\W_bmove_reg[15]_i_20_n_1 ,\W_bmove_reg[15]_i_20_n_2 ,\W_bmove_reg[15]_i_20_n_3 }),
        .CYINIT(1'b0),
        .DI({\W_bmove[15]_i_39_n_0 ,\W_bmove[15]_i_40_n_0 ,\W_bmove[15]_i_41_n_0 ,\W_bmove[15]_i_42_n_0 }),
        .O(\NLW_W_bmove_reg[15]_i_20_O_UNCONNECTED [3:0]),
        .S({\W_bmove[15]_i_43_n_0 ,\W_bmove[15]_i_44_n_0 ,\W_bmove[15]_i_45_n_0 ,\W_bmove[15]_i_46_n_0 }));
  CARRY4 \W_bmove_reg[15]_i_38 
       (.CI(1'b0),
        .CO({\W_bmove_reg[15]_i_38_n_0 ,\W_bmove_reg[15]_i_38_n_1 ,\W_bmove_reg[15]_i_38_n_2 ,\W_bmove_reg[15]_i_38_n_3 }),
        .CYINIT(1'b1),
        .DI({\W_bmove[15]_i_81_n_0 ,\W_bmove[15]_i_82_n_0 ,\W_bmove[15]_i_83_n_0 ,\W_bmove[15]_i_84_n_0 }),
        .O(\NLW_W_bmove_reg[15]_i_38_O_UNCONNECTED [3:0]),
        .S({\W_bmove[15]_i_85_n_0 ,\W_bmove[15]_i_86_n_0 ,\W_bmove[15]_i_87_n_0 ,\W_bmove[15]_i_88_n_0 }));
  FDCE #(
    .INIT(1'b0)) 
    \W_bmove_reg[1] 
       (.C(ACLK),
        .CE(W_bmove),
        .CLR(conf_rx_reset),
        .D(\W_bmove[1]_i_1_n_0 ),
        .Q(\W_bmove_reg_n_0_[1] ));
  CARRY4 \W_bmove_reg[1]_i_12 
       (.CI(\W_bmove_reg[1]_i_45_n_0 ),
        .CO({\W_bmove_reg[1]_i_12_n_0 ,\W_bmove_reg[1]_i_12_n_1 ,\W_bmove_reg[1]_i_12_n_2 ,\W_bmove_reg[1]_i_12_n_3 }),
        .CYINIT(1'b0),
        .DI({\W_bmove[1]_i_46_n_0 ,\W_bmove[1]_i_47_n_0 ,\W_bmove[1]_i_48_n_0 ,\W_bmove[1]_i_49_n_0 }),
        .O(\NLW_W_bmove_reg[1]_i_12_O_UNCONNECTED [3:0]),
        .S({\W_bmove[1]_i_50_n_0 ,\W_bmove[1]_i_51_n_0 ,\W_bmove[1]_i_52_n_0 ,\W_bmove[1]_i_53_n_0 }));
  CARRY4 \W_bmove_reg[1]_i_45 
       (.CI(1'b0),
        .CO({\W_bmove_reg[1]_i_45_n_0 ,\W_bmove_reg[1]_i_45_n_1 ,\W_bmove_reg[1]_i_45_n_2 ,\W_bmove_reg[1]_i_45_n_3 }),
        .CYINIT(1'b1),
        .DI({\W_bmove[1]_i_78_n_0 ,\W_bmove[1]_i_79_n_0 ,\W_bmove[1]_i_80_n_0 ,\W_bmove[1]_i_81_n_0 }),
        .O(\NLW_W_bmove_reg[1]_i_45_O_UNCONNECTED [3:0]),
        .S({\W_bmove[1]_i_82_n_0 ,\W_bmove[1]_i_83_n_0 ,\W_bmove[1]_i_84_n_0 ,\W_bmove[1]_i_85_n_0 }));
  CARRY4 \W_bmove_reg[1]_i_5 
       (.CI(1'b0),
        .CO({\W_bmove_reg[1]_i_5_n_0 ,\W_bmove_reg[1]_i_5_n_1 ,\W_bmove_reg[1]_i_5_n_2 ,\W_bmove_reg[1]_i_5_n_3 }),
        .CYINIT(1'b1),
        .DI(\W_brem_reg[15]_i_4_0 [3:0]),
        .O(W_bxxx[3:0]),
        .S({\W_bmove[1]_i_14_n_0 ,\W_bmove[1]_i_15_n_0 ,\W_bmove[1]_i_16_n_0 ,\W_bmove[1]_i_17_n_0 }));
  FDCE #(
    .INIT(1'b0)) 
    \W_bmove_reg[2] 
       (.C(ACLK),
        .CE(W_bmove),
        .CLR(conf_rx_reset),
        .D(\W_bmove[2]_i_1_n_0 ),
        .Q(\W_bmove_reg_n_0_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \W_bmove_reg[3] 
       (.C(ACLK),
        .CE(W_bmove),
        .CLR(conf_rx_reset),
        .D(\W_bmove[3]_i_1_n_0 ),
        .Q(\W_bmove_reg_n_0_[3] ));
  FDCE #(
    .INIT(1'b0)) 
    \W_bmove_reg[4] 
       (.C(ACLK),
        .CE(W_bmove),
        .CLR(conf_rx_reset),
        .D(\W_bmove[4]_i_1_n_0 ),
        .Q(\W_bmove_reg_n_0_[4] ));
  FDCE #(
    .INIT(1'b0)) 
    \W_bmove_reg[5] 
       (.C(ACLK),
        .CE(W_bmove),
        .CLR(conf_rx_reset),
        .D(\W_bmove[5]_i_1_n_0 ),
        .Q(\W_bmove_reg_n_0_[5] ));
  FDCE #(
    .INIT(1'b0)) 
    \W_bmove_reg[6] 
       (.C(ACLK),
        .CE(W_bmove),
        .CLR(conf_rx_reset),
        .D(\W_bmove[6]_i_1_n_0 ),
        .Q(\W_bmove_reg_n_0_[6] ));
  FDCE #(
    .INIT(1'b0)) 
    \W_bmove_reg[7] 
       (.C(ACLK),
        .CE(W_bmove),
        .CLR(conf_rx_reset),
        .D(\W_bmove[7]_i_1_n_0 ),
        .Q(\W_bmove_reg_n_0_[7] ));
  FDCE #(
    .INIT(1'b0)) 
    \W_bmove_reg[8] 
       (.C(ACLK),
        .CE(W_bmove),
        .CLR(conf_rx_reset),
        .D(\W_bmove[8]_i_1_n_0 ),
        .Q(\W_bmove_reg_n_0_[8] ));
  FDCE #(
    .INIT(1'b0)) 
    \W_bmove_reg[9] 
       (.C(ACLK),
        .CE(W_bmove),
        .CLR(conf_rx_reset),
        .D(\W_bmove[9]_i_1_n_0 ),
        .Q(\W_bmove_reg_n_0_[9] ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_bnum[11]_i_2 
       (.I0(\W_bnum_reg_n_0_[11] ),
        .I1(\W_bmove_reg_n_0_[11] ),
        .O(\W_bnum[11]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_bnum[11]_i_3 
       (.I0(\W_bnum_reg_n_0_[10] ),
        .I1(\W_bmove_reg_n_0_[10] ),
        .O(\W_bnum[11]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_bnum[11]_i_4 
       (.I0(\W_bnum_reg_n_0_[9] ),
        .I1(\W_bmove_reg_n_0_[9] ),
        .O(\W_bnum[11]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_bnum[11]_i_5 
       (.I0(\W_bnum_reg_n_0_[8] ),
        .I1(\W_bmove_reg_n_0_[8] ),
        .O(\W_bnum[11]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000040000)) 
    \W_bnum[15]_i_1 
       (.I0(state[0]),
        .I1(conf_rx_en),
        .I2(conf_rx_reset),
        .I3(state[2]),
        .I4(\W_bnum[15]_i_4_n_0 ),
        .I5(state[1]),
        .O(\W_bnum[15]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00040000)) 
    \W_bnum[15]_i_2 
       (.I0(state[0]),
        .I1(conf_rx_en),
        .I2(conf_rx_reset),
        .I3(state[2]),
        .I4(\W_bnum[15]_i_4_n_0 ),
        .O(W_bnum));
  LUT5 #(
    .INIT(32'hAAAA0300)) 
    \W_bnum[15]_i_4 
       (.I0(W_done_reg_n_0),
        .I1(\state_reg[2]_3 ),
        .I2(rx_addr_head_update),
        .I3(valid),
        .I4(state[1]),
        .O(\W_bnum[15]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_bnum[15]_i_5 
       (.I0(\W_bnum_reg_n_0_[15] ),
        .I1(\W_bmove_reg_n_0_[15] ),
        .O(\W_bnum[15]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_bnum[15]_i_6 
       (.I0(\W_bnum_reg_n_0_[14] ),
        .I1(\W_bmove_reg_n_0_[14] ),
        .O(\W_bnum[15]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_bnum[15]_i_7 
       (.I0(\W_bnum_reg_n_0_[13] ),
        .I1(\W_bmove_reg_n_0_[13] ),
        .O(\W_bnum[15]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_bnum[15]_i_8 
       (.I0(\W_bnum_reg_n_0_[12] ),
        .I1(\W_bmove_reg_n_0_[12] ),
        .O(\W_bnum[15]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_bnum[3]_i_2 
       (.I0(\W_bnum_reg_n_0_[3] ),
        .I1(\W_bmove_reg_n_0_[3] ),
        .O(\W_bnum[3]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_bnum[3]_i_3 
       (.I0(\W_bnum_reg_n_0_[2] ),
        .I1(\W_bmove_reg_n_0_[2] ),
        .O(\W_bnum[3]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_bnum[3]_i_4 
       (.I0(\W_bnum_reg_n_0_[1] ),
        .I1(\W_bmove_reg_n_0_[1] ),
        .O(\W_bnum[3]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_bnum[3]_i_5 
       (.I0(\W_bnum_reg_n_0_[0] ),
        .I1(\W_bmove_reg_n_0_[0] ),
        .O(\W_bnum[3]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_bnum[7]_i_2 
       (.I0(\W_bnum_reg_n_0_[7] ),
        .I1(\W_bmove_reg_n_0_[7] ),
        .O(\W_bnum[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_bnum[7]_i_3 
       (.I0(\W_bnum_reg_n_0_[6] ),
        .I1(\W_bmove_reg_n_0_[6] ),
        .O(\W_bnum[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_bnum[7]_i_4 
       (.I0(\W_bnum_reg_n_0_[5] ),
        .I1(\W_bmove_reg_n_0_[5] ),
        .O(\W_bnum[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \W_bnum[7]_i_5 
       (.I0(\W_bnum_reg_n_0_[4] ),
        .I1(\W_bmove_reg_n_0_[4] ),
        .O(\W_bnum[7]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \W_bnum_reg[0] 
       (.C(ACLK),
        .CE(W_bnum),
        .D(\W_bnum_reg[3]_i_1_n_7 ),
        .Q(\W_bnum_reg_n_0_[0] ),
        .R(\W_bnum[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \W_bnum_reg[10] 
       (.C(ACLK),
        .CE(W_bnum),
        .D(\W_bnum_reg[11]_i_1_n_5 ),
        .Q(\W_bnum_reg_n_0_[10] ),
        .R(\W_bnum[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \W_bnum_reg[11] 
       (.C(ACLK),
        .CE(W_bnum),
        .D(\W_bnum_reg[11]_i_1_n_4 ),
        .Q(\W_bnum_reg_n_0_[11] ),
        .R(\W_bnum[15]_i_1_n_0 ));
  CARRY4 \W_bnum_reg[11]_i_1 
       (.CI(\W_bnum_reg[7]_i_1_n_0 ),
        .CO({\W_bnum_reg[11]_i_1_n_0 ,\W_bnum_reg[11]_i_1_n_1 ,\W_bnum_reg[11]_i_1_n_2 ,\W_bnum_reg[11]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\W_bnum_reg_n_0_[11] ,\W_bnum_reg_n_0_[10] ,\W_bnum_reg_n_0_[9] ,\W_bnum_reg_n_0_[8] }),
        .O({\W_bnum_reg[11]_i_1_n_4 ,\W_bnum_reg[11]_i_1_n_5 ,\W_bnum_reg[11]_i_1_n_6 ,\W_bnum_reg[11]_i_1_n_7 }),
        .S({\W_bnum[11]_i_2_n_0 ,\W_bnum[11]_i_3_n_0 ,\W_bnum[11]_i_4_n_0 ,\W_bnum[11]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \W_bnum_reg[12] 
       (.C(ACLK),
        .CE(W_bnum),
        .D(\W_bnum_reg[15]_i_3_n_7 ),
        .Q(\W_bnum_reg_n_0_[12] ),
        .R(\W_bnum[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \W_bnum_reg[13] 
       (.C(ACLK),
        .CE(W_bnum),
        .D(\W_bnum_reg[15]_i_3_n_6 ),
        .Q(\W_bnum_reg_n_0_[13] ),
        .R(\W_bnum[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \W_bnum_reg[14] 
       (.C(ACLK),
        .CE(W_bnum),
        .D(\W_bnum_reg[15]_i_3_n_5 ),
        .Q(\W_bnum_reg_n_0_[14] ),
        .R(\W_bnum[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \W_bnum_reg[15] 
       (.C(ACLK),
        .CE(W_bnum),
        .D(\W_bnum_reg[15]_i_3_n_4 ),
        .Q(\W_bnum_reg_n_0_[15] ),
        .R(\W_bnum[15]_i_1_n_0 ));
  CARRY4 \W_bnum_reg[15]_i_3 
       (.CI(\W_bnum_reg[11]_i_1_n_0 ),
        .CO({\NLW_W_bnum_reg[15]_i_3_CO_UNCONNECTED [3],\W_bnum_reg[15]_i_3_n_1 ,\W_bnum_reg[15]_i_3_n_2 ,\W_bnum_reg[15]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\W_bnum_reg_n_0_[14] ,\W_bnum_reg_n_0_[13] ,\W_bnum_reg_n_0_[12] }),
        .O({\W_bnum_reg[15]_i_3_n_4 ,\W_bnum_reg[15]_i_3_n_5 ,\W_bnum_reg[15]_i_3_n_6 ,\W_bnum_reg[15]_i_3_n_7 }),
        .S({\W_bnum[15]_i_5_n_0 ,\W_bnum[15]_i_6_n_0 ,\W_bnum[15]_i_7_n_0 ,\W_bnum[15]_i_8_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \W_bnum_reg[1] 
       (.C(ACLK),
        .CE(W_bnum),
        .D(\W_bnum_reg[3]_i_1_n_6 ),
        .Q(\W_bnum_reg_n_0_[1] ),
        .R(\W_bnum[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \W_bnum_reg[2] 
       (.C(ACLK),
        .CE(W_bnum),
        .D(\W_bnum_reg[3]_i_1_n_5 ),
        .Q(\W_bnum_reg_n_0_[2] ),
        .R(\W_bnum[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \W_bnum_reg[3] 
       (.C(ACLK),
        .CE(W_bnum),
        .D(\W_bnum_reg[3]_i_1_n_4 ),
        .Q(\W_bnum_reg_n_0_[3] ),
        .R(\W_bnum[15]_i_1_n_0 ));
  CARRY4 \W_bnum_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\W_bnum_reg[3]_i_1_n_0 ,\W_bnum_reg[3]_i_1_n_1 ,\W_bnum_reg[3]_i_1_n_2 ,\W_bnum_reg[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\W_bnum_reg_n_0_[3] ,\W_bnum_reg_n_0_[2] ,\W_bnum_reg_n_0_[1] ,\W_bnum_reg_n_0_[0] }),
        .O({\W_bnum_reg[3]_i_1_n_4 ,\W_bnum_reg[3]_i_1_n_5 ,\W_bnum_reg[3]_i_1_n_6 ,\W_bnum_reg[3]_i_1_n_7 }),
        .S({\W_bnum[3]_i_2_n_0 ,\W_bnum[3]_i_3_n_0 ,\W_bnum[3]_i_4_n_0 ,\W_bnum[3]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \W_bnum_reg[4] 
       (.C(ACLK),
        .CE(W_bnum),
        .D(\W_bnum_reg[7]_i_1_n_7 ),
        .Q(\W_bnum_reg_n_0_[4] ),
        .R(\W_bnum[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \W_bnum_reg[5] 
       (.C(ACLK),
        .CE(W_bnum),
        .D(\W_bnum_reg[7]_i_1_n_6 ),
        .Q(\W_bnum_reg_n_0_[5] ),
        .R(\W_bnum[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \W_bnum_reg[6] 
       (.C(ACLK),
        .CE(W_bnum),
        .D(\W_bnum_reg[7]_i_1_n_5 ),
        .Q(\W_bnum_reg_n_0_[6] ),
        .R(\W_bnum[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \W_bnum_reg[7] 
       (.C(ACLK),
        .CE(W_bnum),
        .D(\W_bnum_reg[7]_i_1_n_4 ),
        .Q(\W_bnum_reg_n_0_[7] ),
        .R(\W_bnum[15]_i_1_n_0 ));
  CARRY4 \W_bnum_reg[7]_i_1 
       (.CI(\W_bnum_reg[3]_i_1_n_0 ),
        .CO({\W_bnum_reg[7]_i_1_n_0 ,\W_bnum_reg[7]_i_1_n_1 ,\W_bnum_reg[7]_i_1_n_2 ,\W_bnum_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\W_bnum_reg_n_0_[7] ,\W_bnum_reg_n_0_[6] ,\W_bnum_reg_n_0_[5] ,\W_bnum_reg_n_0_[4] }),
        .O({\W_bnum_reg[7]_i_1_n_4 ,\W_bnum_reg[7]_i_1_n_5 ,\W_bnum_reg[7]_i_1_n_6 ,\W_bnum_reg[7]_i_1_n_7 }),
        .S({\W_bnum[7]_i_2_n_0 ,\W_bnum[7]_i_3_n_0 ,\W_bnum[7]_i_4_n_0 ,\W_bnum[7]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \W_bnum_reg[8] 
       (.C(ACLK),
        .CE(W_bnum),
        .D(\W_bnum_reg[11]_i_1_n_7 ),
        .Q(\W_bnum_reg_n_0_[8] ),
        .R(\W_bnum[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \W_bnum_reg[9] 
       (.C(ACLK),
        .CE(W_bnum),
        .D(\W_bnum_reg[11]_i_1_n_6 ),
        .Q(\W_bnum_reg_n_0_[9] ),
        .R(\W_bnum[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h20FF000020000000)) 
    \W_brem[0]_i_1 
       (.I0(W_bxxx[0]),
        .I1(\W_brem_reg[15]_i_4_n_0 ),
        .I2(out),
        .I3(state[0]),
        .I4(conf_rx_en),
        .I5(\W_brem_reg[3]_i_2_n_7 ),
        .O(\W_brem[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h20FF000020000000)) 
    \W_brem[10]_i_1 
       (.I0(W_bxxx[10]),
        .I1(\W_brem_reg[15]_i_4_n_0 ),
        .I2(out),
        .I3(state[0]),
        .I4(conf_rx_en),
        .I5(\W_brem_reg[11]_i_3_n_5 ),
        .O(\W_brem[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h20FF000020000000)) 
    \W_brem[11]_i_1 
       (.I0(W_bxxx[11]),
        .I1(\W_brem_reg[15]_i_4_n_0 ),
        .I2(out),
        .I3(state[0]),
        .I4(conf_rx_en),
        .I5(\W_brem_reg[11]_i_3_n_4 ),
        .O(\W_brem[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_brem[11]_i_10 
       (.I0(\W_brem_reg[15]_0 [9]),
        .I1(\W_bmove_reg_n_0_[9] ),
        .O(\W_brem[11]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_brem[11]_i_11 
       (.I0(\W_brem_reg[15]_0 [8]),
        .I1(\W_bmove_reg_n_0_[8] ),
        .O(\W_brem[11]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_brem[11]_i_4 
       (.I0(\W_brem_reg[15]_i_4_0 [11]),
        .I1(\W_bnum_reg_n_0_[11] ),
        .O(\W_brem[11]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_brem[11]_i_5 
       (.I0(\W_brem_reg[15]_i_4_0 [10]),
        .I1(\W_bnum_reg_n_0_[10] ),
        .O(\W_brem[11]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_brem[11]_i_6 
       (.I0(\W_brem_reg[15]_i_4_0 [9]),
        .I1(\W_bnum_reg_n_0_[9] ),
        .O(\W_brem[11]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_brem[11]_i_7 
       (.I0(\W_brem_reg[15]_i_4_0 [8]),
        .I1(\W_bnum_reg_n_0_[8] ),
        .O(\W_brem[11]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_brem[11]_i_8 
       (.I0(\W_brem_reg[15]_0 [11]),
        .I1(\W_bmove_reg_n_0_[11] ),
        .O(\W_brem[11]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_brem[11]_i_9 
       (.I0(\W_brem_reg[15]_0 [10]),
        .I1(\W_bmove_reg_n_0_[10] ),
        .O(\W_brem[11]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h20FF000020000000)) 
    \W_brem[12]_i_1 
       (.I0(W_bxxx[12]),
        .I1(\W_brem_reg[15]_i_4_n_0 ),
        .I2(out),
        .I3(state[0]),
        .I4(conf_rx_en),
        .I5(\W_brem_reg[15]_i_8_n_7 ),
        .O(\W_brem[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h20FF000020000000)) 
    \W_brem[13]_i_1 
       (.I0(W_bxxx[13]),
        .I1(\W_brem_reg[15]_i_4_n_0 ),
        .I2(out),
        .I3(state[0]),
        .I4(conf_rx_en),
        .I5(\W_brem_reg[15]_i_8_n_6 ),
        .O(\W_brem[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h20FF000020000000)) 
    \W_brem[14]_i_1 
       (.I0(W_bxxx[14]),
        .I1(\W_brem_reg[15]_i_4_n_0 ),
        .I2(out),
        .I3(state[0]),
        .I4(conf_rx_en),
        .I5(\W_brem_reg[15]_i_8_n_5 ),
        .O(\W_brem[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFA8FFFF)) 
    \W_brem[15]_i_1 
       (.I0(\W_brem[15]_i_3_n_0 ),
        .I1(W_go0),
        .I2(\W_brem_reg[15]_i_4_n_0 ),
        .I3(\W_brem[15]_i_5_n_0 ),
        .I4(conf_rx_en),
        .I5(\W_brem[15]_i_6_n_0 ),
        .O(\W_brem[15]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_brem[15]_i_10 
       (.I0(\W_bnum_reg_n_0_[15] ),
        .I1(\W_brem_reg[15]_i_4_0 [15]),
        .I2(\W_bnum_reg_n_0_[14] ),
        .I3(\W_brem_reg[15]_i_4_0 [14]),
        .O(\W_brem[15]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_brem[15]_i_11 
       (.I0(\W_bnum_reg_n_0_[13] ),
        .I1(\W_brem_reg[15]_i_4_0 [13]),
        .I2(\W_bnum_reg_n_0_[12] ),
        .I3(\W_brem_reg[15]_i_4_0 [12]),
        .O(\W_brem[15]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_brem[15]_i_12 
       (.I0(\W_bnum_reg_n_0_[11] ),
        .I1(\W_brem_reg[15]_i_4_0 [11]),
        .I2(\W_bnum_reg_n_0_[10] ),
        .I3(\W_brem_reg[15]_i_4_0 [10]),
        .O(\W_brem[15]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_brem[15]_i_13 
       (.I0(\W_bnum_reg_n_0_[9] ),
        .I1(\W_brem_reg[15]_i_4_0 [9]),
        .I2(\W_bnum_reg_n_0_[8] ),
        .I3(\W_brem_reg[15]_i_4_0 [8]),
        .O(\W_brem[15]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_brem[15]_i_14 
       (.I0(\W_brem_reg[15]_i_4_0 [15]),
        .I1(\W_bnum_reg_n_0_[15] ),
        .I2(\W_bnum_reg_n_0_[14] ),
        .I3(\W_brem_reg[15]_i_4_0 [14]),
        .O(\W_brem[15]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_brem[15]_i_15 
       (.I0(\W_brem_reg[15]_i_4_0 [13]),
        .I1(\W_bnum_reg_n_0_[13] ),
        .I2(\W_bnum_reg_n_0_[12] ),
        .I3(\W_brem_reg[15]_i_4_0 [12]),
        .O(\W_brem[15]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_brem[15]_i_16 
       (.I0(\W_brem_reg[15]_i_4_0 [11]),
        .I1(\W_bnum_reg_n_0_[11] ),
        .I2(\W_bnum_reg_n_0_[10] ),
        .I3(\W_brem_reg[15]_i_4_0 [10]),
        .O(\W_brem[15]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_brem[15]_i_17 
       (.I0(\W_brem_reg[15]_i_4_0 [9]),
        .I1(\W_bnum_reg_n_0_[9] ),
        .I2(\W_bnum_reg_n_0_[8] ),
        .I3(\W_brem_reg[15]_i_4_0 [8]),
        .O(\W_brem[15]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \W_brem[15]_i_18 
       (.I0(\W_brem[15]_i_35_n_0 ),
        .I1(\W_brem_reg[15]_0 [2]),
        .I2(\W_brem_reg[15]_0 [3]),
        .I3(\W_brem_reg[15]_0 [4]),
        .I4(\W_brem_reg[15]_0 [5]),
        .I5(\W_brem[15]_i_36_n_0 ),
        .O(W_brem));
  LUT2 #(
    .INIT(4'h9)) 
    \W_brem[15]_i_19 
       (.I0(\W_brem_reg[15]_i_4_0 [15]),
        .I1(\W_bnum_reg_n_0_[15] ),
        .O(\W_brem[15]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h20FF000020000000)) 
    \W_brem[15]_i_2 
       (.I0(W_bxxx[15]),
        .I1(\W_brem_reg[15]_i_4_n_0 ),
        .I2(out),
        .I3(state[0]),
        .I4(conf_rx_en),
        .I5(\W_brem_reg[15]_i_8_n_4 ),
        .O(\W_brem[15]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_brem[15]_i_20 
       (.I0(\W_brem_reg[15]_i_4_0 [14]),
        .I1(\W_bnum_reg_n_0_[14] ),
        .O(\W_brem[15]_i_20_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_brem[15]_i_21 
       (.I0(\W_brem_reg[15]_i_4_0 [13]),
        .I1(\W_bnum_reg_n_0_[13] ),
        .O(\W_brem[15]_i_21_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_brem[15]_i_22 
       (.I0(\W_brem_reg[15]_i_4_0 [12]),
        .I1(\W_bnum_reg_n_0_[12] ),
        .O(\W_brem[15]_i_22_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_brem[15]_i_23 
       (.I0(\W_brem_reg[15]_0 [15]),
        .I1(\W_bmove_reg_n_0_[15] ),
        .O(\W_brem[15]_i_23_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_brem[15]_i_24 
       (.I0(\W_brem_reg[15]_0 [14]),
        .I1(\W_bmove_reg_n_0_[14] ),
        .O(\W_brem[15]_i_24_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_brem[15]_i_25 
       (.I0(\W_brem_reg[15]_0 [13]),
        .I1(\W_bmove_reg_n_0_[13] ),
        .O(\W_brem[15]_i_25_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_brem[15]_i_26 
       (.I0(\W_brem_reg[15]_0 [12]),
        .I1(\W_bmove_reg_n_0_[12] ),
        .O(\W_brem[15]_i_26_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_brem[15]_i_27 
       (.I0(\W_bnum_reg_n_0_[7] ),
        .I1(\W_brem_reg[15]_i_4_0 [7]),
        .I2(\W_bnum_reg_n_0_[6] ),
        .I3(\W_brem_reg[15]_i_4_0 [6]),
        .O(\W_brem[15]_i_27_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_brem[15]_i_28 
       (.I0(\W_bnum_reg_n_0_[5] ),
        .I1(\W_brem_reg[15]_i_4_0 [5]),
        .I2(\W_bnum_reg_n_0_[4] ),
        .I3(\W_brem_reg[15]_i_4_0 [4]),
        .O(\W_brem[15]_i_28_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_brem[15]_i_29 
       (.I0(\W_bnum_reg_n_0_[3] ),
        .I1(\W_brem_reg[15]_i_4_0 [3]),
        .I2(\W_bnum_reg_n_0_[2] ),
        .I3(\W_brem_reg[15]_i_4_0 [2]),
        .O(\W_brem[15]_i_29_n_0 ));
  LUT5 #(
    .INIT(32'h00000800)) 
    \W_brem[15]_i_3 
       (.I0(W_goodframe_reg_1),
        .I1(out),
        .I2(state[1]),
        .I3(state[0]),
        .I4(state[2]),
        .O(\W_brem[15]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \W_brem[15]_i_30 
       (.I0(\W_bnum_reg_n_0_[1] ),
        .I1(\W_brem_reg[15]_i_4_0 [1]),
        .I2(\W_bnum_reg_n_0_[0] ),
        .I3(\W_brem_reg[15]_i_4_0 [0]),
        .O(\W_brem[15]_i_30_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_brem[15]_i_31 
       (.I0(\W_brem_reg[15]_i_4_0 [7]),
        .I1(\W_bnum_reg_n_0_[7] ),
        .I2(\W_bnum_reg_n_0_[6] ),
        .I3(\W_brem_reg[15]_i_4_0 [6]),
        .O(\W_brem[15]_i_31_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_brem[15]_i_32 
       (.I0(\W_brem_reg[15]_i_4_0 [5]),
        .I1(\W_bnum_reg_n_0_[5] ),
        .I2(\W_bnum_reg_n_0_[4] ),
        .I3(\W_brem_reg[15]_i_4_0 [4]),
        .O(\W_brem[15]_i_32_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_brem[15]_i_33 
       (.I0(\W_brem_reg[15]_i_4_0 [3]),
        .I1(\W_bnum_reg_n_0_[3] ),
        .I2(\W_bnum_reg_n_0_[2] ),
        .I3(\W_brem_reg[15]_i_4_0 [2]),
        .O(\W_brem[15]_i_33_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_brem[15]_i_34 
       (.I0(\W_brem_reg[15]_i_4_0 [1]),
        .I1(\W_bnum_reg_n_0_[1] ),
        .I2(\W_bnum_reg_n_0_[0] ),
        .I3(\W_brem_reg[15]_i_4_0 [0]),
        .O(\W_brem[15]_i_34_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \W_brem[15]_i_35 
       (.I0(\W_brem_reg[15]_0 [6]),
        .I1(\W_brem_reg[15]_0 [7]),
        .I2(\W_brem_reg[15]_0 [8]),
        .I3(\W_brem_reg[15]_0 [9]),
        .O(\W_brem[15]_i_35_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \W_brem[15]_i_36 
       (.I0(\W_brem_reg[15]_0 [13]),
        .I1(\W_brem_reg[15]_0 [12]),
        .I2(\W_brem_reg[15]_0 [11]),
        .I3(\W_brem_reg[15]_0 [10]),
        .I4(\W_brem[15]_i_37_n_0 ),
        .O(\W_brem[15]_i_36_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \W_brem[15]_i_37 
       (.I0(\W_brem_reg[15]_0 [15]),
        .I1(\W_brem_reg[15]_0 [14]),
        .I2(\W_brem_reg[15]_0 [1]),
        .I3(\W_brem_reg[15]_0 [0]),
        .O(\W_brem[15]_i_37_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \W_brem[15]_i_5 
       (.I0(state[0]),
        .I1(state[2]),
        .I2(state[1]),
        .I3(W_done_reg_n_0),
        .I4(W_brem),
        .O(\W_brem[15]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    \W_brem[15]_i_6 
       (.I0(out),
        .I1(valid),
        .I2(W_go2),
        .I3(state[1]),
        .I4(state[0]),
        .I5(state[2]),
        .O(\W_brem[15]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h20FF000020000000)) 
    \W_brem[1]_i_1 
       (.I0(W_bxxx[1]),
        .I1(\W_brem_reg[15]_i_4_n_0 ),
        .I2(out),
        .I3(state[0]),
        .I4(conf_rx_en),
        .I5(\W_brem_reg[3]_i_2_n_6 ),
        .O(\W_brem[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h20FF000020000000)) 
    \W_brem[2]_i_1 
       (.I0(W_bxxx[2]),
        .I1(\W_brem_reg[15]_i_4_n_0 ),
        .I2(out),
        .I3(state[0]),
        .I4(conf_rx_en),
        .I5(\W_brem_reg[3]_i_2_n_5 ),
        .O(\W_brem[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h20FF000020000000)) 
    \W_brem[3]_i_1 
       (.I0(W_bxxx[3]),
        .I1(\W_brem_reg[15]_i_4_n_0 ),
        .I2(out),
        .I3(state[0]),
        .I4(conf_rx_en),
        .I5(\W_brem_reg[3]_i_2_n_4 ),
        .O(\W_brem[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_brem[3]_i_3 
       (.I0(\W_brem_reg[15]_0 [3]),
        .I1(\W_bmove_reg_n_0_[3] ),
        .O(\W_brem[3]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_brem[3]_i_4 
       (.I0(\W_brem_reg[15]_0 [2]),
        .I1(\W_bmove_reg_n_0_[2] ),
        .O(\W_brem[3]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_brem[3]_i_5 
       (.I0(\W_brem_reg[15]_0 [1]),
        .I1(\W_bmove_reg_n_0_[1] ),
        .O(\W_brem[3]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_brem[3]_i_6 
       (.I0(\W_brem_reg[15]_0 [0]),
        .I1(\W_bmove_reg_n_0_[0] ),
        .O(\W_brem[3]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h20FF000020000000)) 
    \W_brem[4]_i_1 
       (.I0(W_bxxx[4]),
        .I1(\W_brem_reg[15]_i_4_n_0 ),
        .I2(out),
        .I3(state[0]),
        .I4(conf_rx_en),
        .I5(\W_brem_reg[7]_i_3_n_7 ),
        .O(\W_brem[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h20FF000020000000)) 
    \W_brem[5]_i_1 
       (.I0(W_bxxx[5]),
        .I1(\W_brem_reg[15]_i_4_n_0 ),
        .I2(out),
        .I3(state[0]),
        .I4(conf_rx_en),
        .I5(\W_brem_reg[7]_i_3_n_6 ),
        .O(\W_brem[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h20FF000020000000)) 
    \W_brem[6]_i_1 
       (.I0(W_bxxx[6]),
        .I1(\W_brem_reg[15]_i_4_n_0 ),
        .I2(out),
        .I3(state[0]),
        .I4(conf_rx_en),
        .I5(\W_brem_reg[7]_i_3_n_5 ),
        .O(\W_brem[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h20FF000020000000)) 
    \W_brem[7]_i_1 
       (.I0(W_bxxx[7]),
        .I1(\W_brem_reg[15]_i_4_n_0 ),
        .I2(out),
        .I3(state[0]),
        .I4(conf_rx_en),
        .I5(\W_brem_reg[7]_i_3_n_4 ),
        .O(\W_brem[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_brem[7]_i_10 
       (.I0(\W_brem_reg[15]_0 [5]),
        .I1(\W_bmove_reg_n_0_[5] ),
        .O(\W_brem[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_brem[7]_i_11 
       (.I0(\W_brem_reg[15]_0 [4]),
        .I1(\W_bmove_reg_n_0_[4] ),
        .O(\W_brem[7]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_brem[7]_i_4 
       (.I0(\W_brem_reg[15]_i_4_0 [7]),
        .I1(\W_bnum_reg_n_0_[7] ),
        .O(\W_brem[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_brem[7]_i_5 
       (.I0(\W_brem_reg[15]_i_4_0 [6]),
        .I1(\W_bnum_reg_n_0_[6] ),
        .O(\W_brem[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_brem[7]_i_6 
       (.I0(\W_brem_reg[15]_i_4_0 [5]),
        .I1(\W_bnum_reg_n_0_[5] ),
        .O(\W_brem[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_brem[7]_i_7 
       (.I0(\W_brem_reg[15]_i_4_0 [4]),
        .I1(\W_bnum_reg_n_0_[4] ),
        .O(\W_brem[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_brem[7]_i_8 
       (.I0(\W_brem_reg[15]_0 [7]),
        .I1(\W_bmove_reg_n_0_[7] ),
        .O(\W_brem[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \W_brem[7]_i_9 
       (.I0(\W_brem_reg[15]_0 [6]),
        .I1(\W_bmove_reg_n_0_[6] ),
        .O(\W_brem[7]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h20FF000020000000)) 
    \W_brem[8]_i_1 
       (.I0(W_bxxx[8]),
        .I1(\W_brem_reg[15]_i_4_n_0 ),
        .I2(out),
        .I3(state[0]),
        .I4(conf_rx_en),
        .I5(\W_brem_reg[11]_i_3_n_7 ),
        .O(\W_brem[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h20FF000020000000)) 
    \W_brem[9]_i_1 
       (.I0(W_bxxx[9]),
        .I1(\W_brem_reg[15]_i_4_n_0 ),
        .I2(out),
        .I3(state[0]),
        .I4(conf_rx_en),
        .I5(\W_brem_reg[11]_i_3_n_6 ),
        .O(\W_brem[9]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \W_brem_reg[0] 
       (.C(ACLK),
        .CE(\W_brem[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_brem[0]_i_1_n_0 ),
        .Q(\W_brem_reg[15]_0 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \W_brem_reg[10] 
       (.C(ACLK),
        .CE(\W_brem[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_brem[10]_i_1_n_0 ),
        .Q(\W_brem_reg[15]_0 [10]));
  FDCE #(
    .INIT(1'b0)) 
    \W_brem_reg[11] 
       (.C(ACLK),
        .CE(\W_brem[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_brem[11]_i_1_n_0 ),
        .Q(\W_brem_reg[15]_0 [11]));
  CARRY4 \W_brem_reg[11]_i_2 
       (.CI(\W_brem_reg[7]_i_2_n_0 ),
        .CO({\W_brem_reg[11]_i_2_n_0 ,\W_brem_reg[11]_i_2_n_1 ,\W_brem_reg[11]_i_2_n_2 ,\W_brem_reg[11]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI(\W_brem_reg[15]_i_4_0 [11:8]),
        .O(W_bxxx[11:8]),
        .S({\W_brem[11]_i_4_n_0 ,\W_brem[11]_i_5_n_0 ,\W_brem[11]_i_6_n_0 ,\W_brem[11]_i_7_n_0 }));
  CARRY4 \W_brem_reg[11]_i_3 
       (.CI(\W_brem_reg[7]_i_3_n_0 ),
        .CO({\W_brem_reg[11]_i_3_n_0 ,\W_brem_reg[11]_i_3_n_1 ,\W_brem_reg[11]_i_3_n_2 ,\W_brem_reg[11]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI(\W_brem_reg[15]_0 [11:8]),
        .O({\W_brem_reg[11]_i_3_n_4 ,\W_brem_reg[11]_i_3_n_5 ,\W_brem_reg[11]_i_3_n_6 ,\W_brem_reg[11]_i_3_n_7 }),
        .S({\W_brem[11]_i_8_n_0 ,\W_brem[11]_i_9_n_0 ,\W_brem[11]_i_10_n_0 ,\W_brem[11]_i_11_n_0 }));
  FDCE #(
    .INIT(1'b0)) 
    \W_brem_reg[12] 
       (.C(ACLK),
        .CE(\W_brem[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_brem[12]_i_1_n_0 ),
        .Q(\W_brem_reg[15]_0 [12]));
  FDCE #(
    .INIT(1'b0)) 
    \W_brem_reg[13] 
       (.C(ACLK),
        .CE(\W_brem[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_brem[13]_i_1_n_0 ),
        .Q(\W_brem_reg[15]_0 [13]));
  FDCE #(
    .INIT(1'b0)) 
    \W_brem_reg[14] 
       (.C(ACLK),
        .CE(\W_brem[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_brem[14]_i_1_n_0 ),
        .Q(\W_brem_reg[15]_0 [14]));
  FDCE #(
    .INIT(1'b0)) 
    \W_brem_reg[15] 
       (.C(ACLK),
        .CE(\W_brem[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_brem[15]_i_2_n_0 ),
        .Q(\W_brem_reg[15]_0 [15]));
  CARRY4 \W_brem_reg[15]_i_4 
       (.CI(\W_brem_reg[15]_i_9_n_0 ),
        .CO({\W_brem_reg[15]_i_4_n_0 ,\W_brem_reg[15]_i_4_n_1 ,\W_brem_reg[15]_i_4_n_2 ,\W_brem_reg[15]_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI({\W_brem[15]_i_10_n_0 ,\W_brem[15]_i_11_n_0 ,\W_brem[15]_i_12_n_0 ,\W_brem[15]_i_13_n_0 }),
        .O(\NLW_W_brem_reg[15]_i_4_O_UNCONNECTED [3:0]),
        .S({\W_brem[15]_i_14_n_0 ,\W_brem[15]_i_15_n_0 ,\W_brem[15]_i_16_n_0 ,\W_brem[15]_i_17_n_0 }));
  CARRY4 \W_brem_reg[15]_i_7 
       (.CI(\W_brem_reg[11]_i_2_n_0 ),
        .CO({\NLW_W_brem_reg[15]_i_7_CO_UNCONNECTED [3],\W_brem_reg[15]_i_7_n_1 ,\W_brem_reg[15]_i_7_n_2 ,\W_brem_reg[15]_i_7_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\W_brem_reg[15]_i_4_0 [14:12]}),
        .O(W_bxxx[15:12]),
        .S({\W_brem[15]_i_19_n_0 ,\W_brem[15]_i_20_n_0 ,\W_brem[15]_i_21_n_0 ,\W_brem[15]_i_22_n_0 }));
  CARRY4 \W_brem_reg[15]_i_8 
       (.CI(\W_brem_reg[11]_i_3_n_0 ),
        .CO({\NLW_W_brem_reg[15]_i_8_CO_UNCONNECTED [3],\W_brem_reg[15]_i_8_n_1 ,\W_brem_reg[15]_i_8_n_2 ,\W_brem_reg[15]_i_8_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\W_brem_reg[15]_0 [14:12]}),
        .O({\W_brem_reg[15]_i_8_n_4 ,\W_brem_reg[15]_i_8_n_5 ,\W_brem_reg[15]_i_8_n_6 ,\W_brem_reg[15]_i_8_n_7 }),
        .S({\W_brem[15]_i_23_n_0 ,\W_brem[15]_i_24_n_0 ,\W_brem[15]_i_25_n_0 ,\W_brem[15]_i_26_n_0 }));
  CARRY4 \W_brem_reg[15]_i_9 
       (.CI(1'b0),
        .CO({\W_brem_reg[15]_i_9_n_0 ,\W_brem_reg[15]_i_9_n_1 ,\W_brem_reg[15]_i_9_n_2 ,\W_brem_reg[15]_i_9_n_3 }),
        .CYINIT(1'b1),
        .DI({\W_brem[15]_i_27_n_0 ,\W_brem[15]_i_28_n_0 ,\W_brem[15]_i_29_n_0 ,\W_brem[15]_i_30_n_0 }),
        .O(\NLW_W_brem_reg[15]_i_9_O_UNCONNECTED [3:0]),
        .S({\W_brem[15]_i_31_n_0 ,\W_brem[15]_i_32_n_0 ,\W_brem[15]_i_33_n_0 ,\W_brem[15]_i_34_n_0 }));
  FDCE #(
    .INIT(1'b0)) 
    \W_brem_reg[1] 
       (.C(ACLK),
        .CE(\W_brem[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_brem[1]_i_1_n_0 ),
        .Q(\W_brem_reg[15]_0 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \W_brem_reg[2] 
       (.C(ACLK),
        .CE(\W_brem[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_brem[2]_i_1_n_0 ),
        .Q(\W_brem_reg[15]_0 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \W_brem_reg[3] 
       (.C(ACLK),
        .CE(\W_brem[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_brem[3]_i_1_n_0 ),
        .Q(\W_brem_reg[15]_0 [3]));
  CARRY4 \W_brem_reg[3]_i_2 
       (.CI(1'b0),
        .CO({\W_brem_reg[3]_i_2_n_0 ,\W_brem_reg[3]_i_2_n_1 ,\W_brem_reg[3]_i_2_n_2 ,\W_brem_reg[3]_i_2_n_3 }),
        .CYINIT(1'b1),
        .DI(\W_brem_reg[15]_0 [3:0]),
        .O({\W_brem_reg[3]_i_2_n_4 ,\W_brem_reg[3]_i_2_n_5 ,\W_brem_reg[3]_i_2_n_6 ,\W_brem_reg[3]_i_2_n_7 }),
        .S({\W_brem[3]_i_3_n_0 ,\W_brem[3]_i_4_n_0 ,\W_brem[3]_i_5_n_0 ,\W_brem[3]_i_6_n_0 }));
  FDCE #(
    .INIT(1'b0)) 
    \W_brem_reg[4] 
       (.C(ACLK),
        .CE(\W_brem[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_brem[4]_i_1_n_0 ),
        .Q(\W_brem_reg[15]_0 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \W_brem_reg[5] 
       (.C(ACLK),
        .CE(\W_brem[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_brem[5]_i_1_n_0 ),
        .Q(\W_brem_reg[15]_0 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \W_brem_reg[6] 
       (.C(ACLK),
        .CE(\W_brem[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_brem[6]_i_1_n_0 ),
        .Q(\W_brem_reg[15]_0 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \W_brem_reg[7] 
       (.C(ACLK),
        .CE(\W_brem[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_brem[7]_i_1_n_0 ),
        .Q(\W_brem_reg[15]_0 [7]));
  CARRY4 \W_brem_reg[7]_i_2 
       (.CI(\W_bmove_reg[1]_i_5_n_0 ),
        .CO({\W_brem_reg[7]_i_2_n_0 ,\W_brem_reg[7]_i_2_n_1 ,\W_brem_reg[7]_i_2_n_2 ,\W_brem_reg[7]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI(\W_brem_reg[15]_i_4_0 [7:4]),
        .O(W_bxxx[7:4]),
        .S({\W_brem[7]_i_4_n_0 ,\W_brem[7]_i_5_n_0 ,\W_brem[7]_i_6_n_0 ,\W_brem[7]_i_7_n_0 }));
  CARRY4 \W_brem_reg[7]_i_3 
       (.CI(\W_brem_reg[3]_i_2_n_0 ),
        .CO({\W_brem_reg[7]_i_3_n_0 ,\W_brem_reg[7]_i_3_n_1 ,\W_brem_reg[7]_i_3_n_2 ,\W_brem_reg[7]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI(\W_brem_reg[15]_0 [7:4]),
        .O({\W_brem_reg[7]_i_3_n_4 ,\W_brem_reg[7]_i_3_n_5 ,\W_brem_reg[7]_i_3_n_6 ,\W_brem_reg[7]_i_3_n_7 }),
        .S({\W_brem[7]_i_8_n_0 ,\W_brem[7]_i_9_n_0 ,\W_brem[7]_i_10_n_0 ,\W_brem[7]_i_11_n_0 }));
  FDCE #(
    .INIT(1'b0)) 
    \W_brem_reg[8] 
       (.C(ACLK),
        .CE(\W_brem[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_brem[8]_i_1_n_0 ),
        .Q(\W_brem_reg[15]_0 [8]));
  FDCE #(
    .INIT(1'b0)) 
    \W_brem_reg[9] 
       (.C(ACLK),
        .CE(\W_brem[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_brem[9]_i_1_n_0 ),
        .Q(\W_brem_reg[15]_0 [9]));
  LUT3 #(
    .INIT(8'hC4)) 
    \W_cnt[0]_i_1 
       (.I0(W_cnt[0]),
        .I1(conf_rx_en),
        .I2(state_write[0]),
        .O(\W_cnt[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0880)) 
    \W_cnt[1]_i_1 
       (.I0(state_write[1]),
        .I1(conf_rx_en),
        .I2(W_cnt[0]),
        .I3(W_cnt[1]),
        .O(\W_cnt[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h08888000)) 
    \W_cnt[2]_i_1 
       (.I0(state_write[1]),
        .I1(conf_rx_en),
        .I2(W_cnt[1]),
        .I3(W_cnt[0]),
        .I4(W_cnt[2]),
        .O(\W_cnt[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7F00000080000000)) 
    \W_cnt[3]_i_1 
       (.I0(W_cnt[1]),
        .I1(W_cnt[0]),
        .I2(W_cnt[2]),
        .I3(conf_rx_en),
        .I4(state_write[1]),
        .I5(W_cnt[3]),
        .O(\W_cnt[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFF000080000000)) 
    \W_cnt[4]_i_1 
       (.I0(W_cnt[2]),
        .I1(W_cnt[0]),
        .I2(W_cnt[1]),
        .I3(W_cnt[3]),
        .I4(\W_cnt[5]_i_3_n_0 ),
        .I5(W_cnt[4]),
        .O(\W_cnt[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF7FF000008000000)) 
    \W_cnt[5]_i_1 
       (.I0(W_cnt[4]),
        .I1(W_cnt[3]),
        .I2(\W_cnt[5]_i_2_n_0 ),
        .I3(W_cnt[2]),
        .I4(\W_cnt[5]_i_3_n_0 ),
        .I5(W_cnt[5]),
        .O(\W_cnt[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \W_cnt[5]_i_2 
       (.I0(W_cnt[0]),
        .I1(W_cnt[1]),
        .O(\W_cnt[5]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \W_cnt[5]_i_3 
       (.I0(state_write[1]),
        .I1(conf_rx_en),
        .O(\W_cnt[5]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h8040)) 
    \W_cnt[6]_i_1 
       (.I0(\W_cnt[8]_i_3_n_0 ),
        .I1(conf_rx_en),
        .I2(state_write[1]),
        .I3(W_cnt[6]),
        .O(\W_cnt[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB0004000)) 
    \W_cnt[7]_i_1 
       (.I0(\W_cnt[8]_i_3_n_0 ),
        .I1(W_cnt[6]),
        .I2(conf_rx_en),
        .I3(state_write[1]),
        .I4(W_cnt[7]),
        .O(\W_cnt[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFA800)) 
    \W_cnt[8]_i_1 
       (.I0(M_WREADY),
        .I1(valid),
        .I2(W_error_reg_n_0),
        .I3(\RX_BLK_256.u_fifo_rx_i_2_n_0 ),
        .I4(\M_WID[3]_i_1_n_0 ),
        .O(\W_cnt[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hDF00000020000000)) 
    \W_cnt[8]_i_2 
       (.I0(W_cnt[6]),
        .I1(\W_cnt[8]_i_3_n_0 ),
        .I2(W_cnt[7]),
        .I3(conf_rx_en),
        .I4(state_write[1]),
        .I5(W_cnt[8]),
        .O(\W_cnt[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \W_cnt[8]_i_3 
       (.I0(W_cnt[2]),
        .I1(W_cnt[0]),
        .I2(W_cnt[1]),
        .I3(W_cnt[3]),
        .I4(W_cnt[4]),
        .I5(W_cnt[5]),
        .O(\W_cnt[8]_i_3_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \W_cnt_reg[0] 
       (.C(ACLK),
        .CE(\W_cnt[8]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_cnt[0]_i_1_n_0 ),
        .Q(W_cnt[0]));
  FDCE #(
    .INIT(1'b0)) 
    \W_cnt_reg[1] 
       (.C(ACLK),
        .CE(\W_cnt[8]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_cnt[1]_i_1_n_0 ),
        .Q(W_cnt[1]));
  FDCE #(
    .INIT(1'b0)) 
    \W_cnt_reg[2] 
       (.C(ACLK),
        .CE(\W_cnt[8]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_cnt[2]_i_1_n_0 ),
        .Q(W_cnt[2]));
  FDCE #(
    .INIT(1'b0)) 
    \W_cnt_reg[3] 
       (.C(ACLK),
        .CE(\W_cnt[8]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_cnt[3]_i_1_n_0 ),
        .Q(W_cnt[3]));
  FDCE #(
    .INIT(1'b0)) 
    \W_cnt_reg[4] 
       (.C(ACLK),
        .CE(\W_cnt[8]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_cnt[4]_i_1_n_0 ),
        .Q(W_cnt[4]));
  FDCE #(
    .INIT(1'b0)) 
    \W_cnt_reg[5] 
       (.C(ACLK),
        .CE(\W_cnt[8]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_cnt[5]_i_1_n_0 ),
        .Q(W_cnt[5]));
  FDCE #(
    .INIT(1'b0)) 
    \W_cnt_reg[6] 
       (.C(ACLK),
        .CE(\W_cnt[8]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_cnt[6]_i_1_n_0 ),
        .Q(W_cnt[6]));
  FDCE #(
    .INIT(1'b0)) 
    \W_cnt_reg[7] 
       (.C(ACLK),
        .CE(\W_cnt[8]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_cnt[7]_i_1_n_0 ),
        .Q(W_cnt[7]));
  FDCE #(
    .INIT(1'b0)) 
    \W_cnt_reg[8] 
       (.C(ACLK),
        .CE(\W_cnt[8]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\W_cnt[8]_i_2_n_0 ),
        .Q(W_cnt[8]));
  LUT6 #(
    .INIT(64'hA0C0FFFFA0C00000)) 
    W_done_i_1
       (.I0(M_BVALID),
        .I1(W_go_reg_n_0),
        .I2(conf_rx_en),
        .I3(state_write[0]),
        .I4(W_done_i_2_n_0),
        .I5(W_done_reg_n_0),
        .O(W_done_i_1_n_0));
  LUT6 #(
    .INIT(64'h3F33337333333373)) 
    W_done_i_2
       (.I0(W_go_reg_n_0),
        .I1(conf_rx_en),
        .I2(state_write[2]),
        .I3(state_write[1]),
        .I4(state_write[0]),
        .I5(M_BVALID),
        .O(W_done_i_2_n_0));
  FDCE #(
    .INIT(1'b0)) 
    W_done_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(conf_rx_reset),
        .D(W_done_i_1_n_0),
        .Q(W_done_reg_n_0));
  LUT5 #(
    .INIT(32'h4FFF4F00)) 
    W_empty_i_1
       (.I0(state[1]),
        .I1(rx_addr_empty),
        .I2(conf_rx_en),
        .I3(\state_reg[0]_0 ),
        .I4(W_empty),
        .O(W_empty_i_1_n_0));
  FDPE #(
    .INIT(1'b1)) 
    W_empty_reg
       (.C(ACLK),
        .CE(1'b1),
        .D(W_empty_i_1_n_0),
        .PRE(conf_rx_reset),
        .Q(W_empty));
  LUT6 #(
    .INIT(64'hAEAEEEEEAAA22222)) 
    W_error_i_1
       (.I0(W_error19_out),
        .I1(conf_rx_en),
        .I2(state_write[0]),
        .I3(M_BREADY1),
        .I4(W_error_i_3_n_0),
        .I5(W_error_reg_n_0),
        .O(W_error_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000200000000000)) 
    W_error_i_2
       (.I0(dout[2]),
        .I1(dout[3]),
        .I2(dout[0]),
        .I3(dout[1]),
        .I4(state_write[0]),
        .I5(conf_rx_en),
        .O(W_error19_out));
  LUT2 #(
    .INIT(4'h2)) 
    W_error_i_3
       (.I0(state_write[1]),
        .I1(state_write[2]),
        .O(W_error_i_3_n_0));
  FDCE #(
    .INIT(1'b0)) 
    W_error_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(conf_rx_reset),
        .D(W_error_i_1_n_0),
        .Q(W_error_reg_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    W_full_i_25
       (.I0(Q[30]),
        .I1(rx_addr_tail[30]),
        .I2(Q[31]),
        .I3(rx_addr_tail[31]),
        .O(\W_addr_reg[30]_1 ));
  FDCE #(
    .INIT(1'b0)) 
    W_full_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(conf_rx_reset),
        .D(W_full_reg_5),
        .Q(W_full_reg_0));
  LUT6 #(
    .INIT(64'hA0A0A0BFA0A0A080)) 
    W_go_i_1
       (.I0(W_go_i_2_n_0),
        .I1(W_go_i_3_n_0),
        .I2(W_go0),
        .I3(W_go_i_4_n_0),
        .I4(W_go_reg_0),
        .I5(W_go_reg_n_0),
        .O(W_go_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    W_go_i_2
       (.I0(state[0]),
        .I1(conf_rx_en),
        .O(W_go_i_2_n_0));
  LUT6 #(
    .INIT(64'h0111001101000000)) 
    W_go_i_3
       (.I0(state[2]),
        .I1(state[1]),
        .I2(\W_brem_reg[15]_i_4_n_0 ),
        .I3(out),
        .I4(W_goodframe_reg_1),
        .I5(\state[0]_i_7_n_0 ),
        .O(W_go_i_3_n_0));
  LUT3 #(
    .INIT(8'h10)) 
    W_go_i_4
       (.I0(state[2]),
        .I1(state[0]),
        .I2(W_done_reg_n_0),
        .O(W_go_i_4_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    W_go_i_6
       (.I0(state[2]),
        .I1(state[0]),
        .I2(state[1]),
        .O(\state_reg[2]_1 ));
  LUT4 #(
    .INIT(16'h0800)) 
    W_go_i_7
       (.I0(state[1]),
        .I1(state[0]),
        .I2(state[2]),
        .I3(desc_valid1),
        .O(\state_reg[1]_0 ));
  FDCE #(
    .INIT(1'b0)) 
    W_go_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(conf_rx_reset),
        .D(W_go_i_1_n_0),
        .Q(W_go_reg_n_0));
  LUT6 #(
    .INIT(64'hFFBF000000800000)) 
    W_goodframe_i_1
       (.I0(W_goodframe_reg_1),
        .I1(out),
        .I2(W_goodframe_i_2_n_0),
        .I3(state[1]),
        .I4(conf_rx_en),
        .I5(W_goodframe),
        .O(W_goodframe_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    W_goodframe_i_2
       (.I0(state[0]),
        .I1(state[2]),
        .O(W_goodframe_i_2_n_0));
  FDCE #(
    .INIT(1'b0)) 
    W_goodframe_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(conf_rx_reset),
        .D(W_goodframe_i_1_n_0),
        .Q(W_goodframe));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_len[0]_i_1 
       (.I0(\W_bmove_reg[14]_0 ),
        .I1(\DMA_WCHUNK_reg[13]_0 [0]),
        .I2(\W_bmove[15]_i_7_n_0 ),
        .I3(\W_len_reg[2]_i_2_n_6 ),
        .I4(\W_len[0]_i_2_n_0 ),
        .O(\W_len[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \W_len[0]_i_2 
       (.I0(\W_len_reg[2]_i_5_n_6 ),
        .I1(\W_bmove[1]_i_4_n_0 ),
        .I2(O[0]),
        .I3(\W_bmove[1]_i_2_n_0 ),
        .O(\W_len[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_len[1]_i_1 
       (.I0(\W_bmove_reg[14]_0 ),
        .I1(\DMA_WCHUNK_reg[13]_0 [1]),
        .I2(\W_bmove[15]_i_7_n_0 ),
        .I3(\W_len_reg[2]_i_2_n_5 ),
        .I4(\W_len[1]_i_2_n_0 ),
        .O(\W_len[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \W_len[1]_i_2 
       (.I0(\W_len_reg[2]_i_5_n_5 ),
        .I1(\W_bmove[1]_i_4_n_0 ),
        .I2(O[1]),
        .I3(\W_bmove[1]_i_2_n_0 ),
        .O(\W_len[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_len[2]_i_1 
       (.I0(\W_bmove_reg[14]_0 ),
        .I1(\DMA_WCHUNK_reg[13]_0 [2]),
        .I2(\W_bmove[15]_i_7_n_0 ),
        .I3(\W_len_reg[2]_i_2_n_4 ),
        .I4(\W_len[2]_i_3_n_0 ),
        .O(\W_len[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \W_len[2]_i_3 
       (.I0(\W_len_reg[2]_i_5_n_4 ),
        .I1(\W_bmove[1]_i_4_n_0 ),
        .I2(O[2]),
        .I3(\W_bmove[1]_i_2_n_0 ),
        .O(\W_len[2]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \W_len[2]_i_4 
       (.I0(\W_brem_reg[15]_0 [1]),
        .O(\W_len[2]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \W_len[2]_i_7 
       (.I0(W_bxxx[1]),
        .O(\W_len[2]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_len[3]_i_1 
       (.I0(\W_bmove_reg[14]_0 ),
        .I1(\DMA_WCHUNK_reg[13]_0 [3]),
        .I2(\W_bmove[15]_i_7_n_0 ),
        .I3(\W_len_reg[6]_i_2_n_7 ),
        .I4(\W_len[3]_i_2_n_0 ),
        .O(\W_len[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \W_len[3]_i_2 
       (.I0(\W_len_reg[6]_i_4_n_7 ),
        .I1(\W_bmove[1]_i_4_n_0 ),
        .I2(\W_len_reg[6]_0 [0]),
        .I3(\W_bmove[1]_i_2_n_0 ),
        .O(\W_len[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_len[4]_i_1 
       (.I0(\W_bmove_reg[14]_0 ),
        .I1(\DMA_WCHUNK_reg[13]_0 [4]),
        .I2(\W_bmove[15]_i_7_n_0 ),
        .I3(\W_len_reg[6]_i_2_n_6 ),
        .I4(\W_len[4]_i_2_n_0 ),
        .O(\W_len[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \W_len[4]_i_2 
       (.I0(\W_len_reg[6]_i_4_n_6 ),
        .I1(\W_bmove[1]_i_4_n_0 ),
        .I2(\W_len_reg[6]_0 [1]),
        .I3(\W_bmove[1]_i_2_n_0 ),
        .O(\W_len[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_len[5]_i_1 
       (.I0(\W_bmove_reg[14]_0 ),
        .I1(\DMA_WCHUNK_reg[13]_0 [5]),
        .I2(\W_bmove[15]_i_7_n_0 ),
        .I3(\W_len_reg[6]_i_2_n_5 ),
        .I4(\W_len[5]_i_2_n_0 ),
        .O(\W_len[5]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \W_len[5]_i_2 
       (.I0(\W_len_reg[6]_i_4_n_5 ),
        .I1(\W_bmove[1]_i_4_n_0 ),
        .I2(\W_len_reg[6]_0 [2]),
        .I3(\W_bmove[1]_i_2_n_0 ),
        .O(\W_len[5]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_len[6]_i_1 
       (.I0(\W_bmove_reg[14]_0 ),
        .I1(\DMA_WCHUNK_reg[13]_0 [6]),
        .I2(\W_bmove[15]_i_7_n_0 ),
        .I3(\W_len_reg[6]_i_2_n_4 ),
        .I4(\W_len[6]_i_3_n_0 ),
        .O(\W_len[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \W_len[6]_i_3 
       (.I0(\W_len_reg[6]_i_4_n_4 ),
        .I1(\W_bmove[1]_i_4_n_0 ),
        .I2(\W_len_reg[6]_0 [3]),
        .I3(\W_bmove[1]_i_2_n_0 ),
        .O(\W_len[6]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_len[7]_i_1 
       (.I0(\W_bmove_reg[14]_0 ),
        .I1(\DMA_WCHUNK_reg[13]_0 [7]),
        .I2(\W_bmove[15]_i_7_n_0 ),
        .I3(\W_len_reg[8]_i_2_n_7 ),
        .I4(\W_len[7]_i_2_n_0 ),
        .O(\W_len[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \W_len[7]_i_2 
       (.I0(\W_len_reg[8]_i_4_n_7 ),
        .I1(\W_bmove[1]_i_4_n_0 ),
        .I2(\W_len_reg[8]_1 [0]),
        .I3(\W_bmove[1]_i_2_n_0 ),
        .O(\W_len[7]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \W_len[8]_i_1 
       (.I0(\W_bmove_reg[14]_0 ),
        .I1(\DMA_WCHUNK_reg[13]_0 [8]),
        .I2(\W_bmove[15]_i_7_n_0 ),
        .I3(\W_len_reg[8]_i_2_n_6 ),
        .I4(\W_len[8]_i_3_n_0 ),
        .O(\W_len[8]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \W_len[8]_i_3 
       (.I0(\W_len_reg[8]_i_4_n_6 ),
        .I1(\W_bmove[1]_i_4_n_0 ),
        .I2(\W_len_reg[8]_1 [1]),
        .I3(\W_bmove[1]_i_2_n_0 ),
        .O(\W_len[8]_i_3_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \W_len_reg[0] 
       (.C(ACLK),
        .CE(W_bmove),
        .CLR(conf_rx_reset),
        .D(\W_len[0]_i_1_n_0 ),
        .Q(\W_len_reg[0]_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \W_len_reg[1] 
       (.C(ACLK),
        .CE(W_bmove),
        .CLR(conf_rx_reset),
        .D(\W_len[1]_i_1_n_0 ),
        .Q(\W_len_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \W_len_reg[2] 
       (.C(ACLK),
        .CE(W_bmove),
        .CLR(conf_rx_reset),
        .D(\W_len[2]_i_1_n_0 ),
        .Q(\W_len_reg_n_0_[2] ));
  CARRY4 \W_len_reg[2]_i_2 
       (.CI(1'b0),
        .CO({\W_len_reg[2]_i_2_n_0 ,\W_len_reg[2]_i_2_n_1 ,\W_len_reg[2]_i_2_n_2 ,\W_len_reg[2]_i_2_n_3 }),
        .CYINIT(\W_brem_reg[15]_0 [0]),
        .DI({1'b0,1'b0,1'b0,\W_brem_reg[15]_0 [1]}),
        .O({\W_len_reg[2]_i_2_n_4 ,\W_len_reg[2]_i_2_n_5 ,\W_len_reg[2]_i_2_n_6 ,\NLW_W_len_reg[2]_i_2_O_UNCONNECTED [0]}),
        .S({\W_brem_reg[15]_0 [4:2],\W_len[2]_i_4_n_0 }));
  CARRY4 \W_len_reg[2]_i_5 
       (.CI(1'b0),
        .CO({\W_len_reg[2]_i_5_n_0 ,\W_len_reg[2]_i_5_n_1 ,\W_len_reg[2]_i_5_n_2 ,\W_len_reg[2]_i_5_n_3 }),
        .CYINIT(W_bxxx[0]),
        .DI({1'b0,1'b0,1'b0,W_bxxx[1]}),
        .O({\W_len_reg[2]_i_5_n_4 ,\W_len_reg[2]_i_5_n_5 ,\W_len_reg[2]_i_5_n_6 ,\NLW_W_len_reg[2]_i_5_O_UNCONNECTED [0]}),
        .S({W_bxxx[4:2],\W_len[2]_i_7_n_0 }));
  FDCE #(
    .INIT(1'b0)) 
    \W_len_reg[3] 
       (.C(ACLK),
        .CE(W_bmove),
        .CLR(conf_rx_reset),
        .D(\W_len[3]_i_1_n_0 ),
        .Q(\W_len_reg_n_0_[3] ));
  FDCE #(
    .INIT(1'b0)) 
    \W_len_reg[4] 
       (.C(ACLK),
        .CE(W_bmove),
        .CLR(conf_rx_reset),
        .D(\W_len[4]_i_1_n_0 ),
        .Q(\W_len_reg_n_0_[4] ));
  FDCE #(
    .INIT(1'b0)) 
    \W_len_reg[5] 
       (.C(ACLK),
        .CE(W_bmove),
        .CLR(conf_rx_reset),
        .D(\W_len[5]_i_1_n_0 ),
        .Q(\W_len_reg_n_0_[5] ));
  FDCE #(
    .INIT(1'b0)) 
    \W_len_reg[6] 
       (.C(ACLK),
        .CE(W_bmove),
        .CLR(conf_rx_reset),
        .D(\W_len[6]_i_1_n_0 ),
        .Q(\W_len_reg_n_0_[6] ));
  CARRY4 \W_len_reg[6]_i_2 
       (.CI(\W_len_reg[2]_i_2_n_0 ),
        .CO({\W_len_reg[6]_i_2_n_0 ,\W_len_reg[6]_i_2_n_1 ,\W_len_reg[6]_i_2_n_2 ,\W_len_reg[6]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\W_len_reg[6]_i_2_n_4 ,\W_len_reg[6]_i_2_n_5 ,\W_len_reg[6]_i_2_n_6 ,\W_len_reg[6]_i_2_n_7 }),
        .S(\W_brem_reg[15]_0 [8:5]));
  CARRY4 \W_len_reg[6]_i_4 
       (.CI(\W_len_reg[2]_i_5_n_0 ),
        .CO({\W_len_reg[6]_i_4_n_0 ,\W_len_reg[6]_i_4_n_1 ,\W_len_reg[6]_i_4_n_2 ,\W_len_reg[6]_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\W_len_reg[6]_i_4_n_4 ,\W_len_reg[6]_i_4_n_5 ,\W_len_reg[6]_i_4_n_6 ,\W_len_reg[6]_i_4_n_7 }),
        .S(W_bxxx[8:5]));
  FDCE #(
    .INIT(1'b0)) 
    \W_len_reg[7] 
       (.C(ACLK),
        .CE(W_bmove),
        .CLR(conf_rx_reset),
        .D(\W_len[7]_i_1_n_0 ),
        .Q(\W_len_reg_n_0_[7] ));
  FDCE #(
    .INIT(1'b0)) 
    \W_len_reg[8] 
       (.C(ACLK),
        .CE(W_bmove),
        .CLR(conf_rx_reset),
        .D(\W_len[8]_i_1_n_0 ),
        .Q(\W_len_reg_n_0_[8] ));
  CARRY4 \W_len_reg[8]_i_2 
       (.CI(\W_len_reg[6]_i_2_n_0 ),
        .CO({\NLW_W_len_reg[8]_i_2_CO_UNCONNECTED [3:1],\W_len_reg[8]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_W_len_reg[8]_i_2_O_UNCONNECTED [3:2],\W_len_reg[8]_i_2_n_6 ,\W_len_reg[8]_i_2_n_7 }),
        .S({1'b0,1'b0,\W_brem_reg[15]_0 [10:9]}));
  CARRY4 \W_len_reg[8]_i_4 
       (.CI(\W_len_reg[6]_i_4_n_0 ),
        .CO({\NLW_W_len_reg[8]_i_4_CO_UNCONNECTED [3:1],\W_len_reg[8]_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_W_len_reg[8]_i_4_O_UNCONNECTED [3:2],\W_len_reg[8]_i_4_n_6 ,\W_len_reg[8]_i_4_n_7 }),
        .S({1'b0,1'b0,W_bxxx[10:9]}));
  LUT6 #(
    .INIT(64'hFFFF0000AA800000)) 
    \W_size[2]_i_1 
       (.I0(\W_size[2]_i_2_n_0 ),
        .I1(W_go2),
        .I2(valid),
        .I3(out),
        .I4(conf_rx_en),
        .I5(size),
        .O(\W_size[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h50D4)) 
    \W_size[2]_i_10 
       (.I0(\DMA_WCHUNK_reg[13]_0 [5]),
        .I1(rd_data_count[4]),
        .I2(rd_data_count[5]),
        .I3(\DMA_WCHUNK_reg[13]_0 [4]),
        .O(\W_size[2]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h50D4)) 
    \W_size[2]_i_11 
       (.I0(\DMA_WCHUNK_reg[13]_0 [3]),
        .I1(rd_data_count[2]),
        .I2(rd_data_count[3]),
        .I3(\DMA_WCHUNK_reg[13]_0 [2]),
        .O(\W_size[2]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h50D4)) 
    \W_size[2]_i_12 
       (.I0(\DMA_WCHUNK_reg[13]_0 [1]),
        .I1(rd_data_count[0]),
        .I2(rd_data_count[1]),
        .I3(\DMA_WCHUNK_reg[13]_0 [0]),
        .O(\W_size[2]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_size[2]_i_13 
       (.I0(\DMA_WCHUNK_reg[13]_0 [7]),
        .I1(rd_data_count[7]),
        .I2(\DMA_WCHUNK_reg[13]_0 [6]),
        .I3(rd_data_count[6]),
        .O(\W_size[2]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_size[2]_i_14 
       (.I0(\DMA_WCHUNK_reg[13]_0 [5]),
        .I1(rd_data_count[5]),
        .I2(\DMA_WCHUNK_reg[13]_0 [4]),
        .I3(rd_data_count[4]),
        .O(\W_size[2]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_size[2]_i_15 
       (.I0(\DMA_WCHUNK_reg[13]_0 [3]),
        .I1(rd_data_count[3]),
        .I2(\DMA_WCHUNK_reg[13]_0 [2]),
        .I3(rd_data_count[2]),
        .O(\W_size[2]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \W_size[2]_i_16 
       (.I0(\DMA_WCHUNK_reg[13]_0 [1]),
        .I1(rd_data_count[1]),
        .I2(\DMA_WCHUNK_reg[13]_0 [0]),
        .I3(rd_data_count[0]),
        .O(\W_size[2]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \W_size[2]_i_2 
       (.I0(state[2]),
        .I1(state[0]),
        .I2(state[1]),
        .O(\W_size[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h10)) 
    \W_size[2]_i_5 
       (.I0(\DMA_WCHUNK_reg[13]_0 [8]),
        .I1(\DMA_WCHUNK_reg[13]_0 [9]),
        .I2(rd_data_count[8]),
        .O(\W_size[2]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \W_size[2]_i_6 
       (.I0(\DMA_WCHUNK_reg[13]_0 [13]),
        .I1(\DMA_WCHUNK_reg[13]_0 [12]),
        .O(\W_size[2]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \W_size[2]_i_7 
       (.I0(\DMA_WCHUNK_reg[13]_0 [11]),
        .I1(\DMA_WCHUNK_reg[13]_0 [10]),
        .O(\W_size[2]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'h21)) 
    \W_size[2]_i_8 
       (.I0(rd_data_count[8]),
        .I1(\DMA_WCHUNK_reg[13]_0 [9]),
        .I2(\DMA_WCHUNK_reg[13]_0 [8]),
        .O(\W_size[2]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h50D4)) 
    \W_size[2]_i_9 
       (.I0(\DMA_WCHUNK_reg[13]_0 [7]),
        .I1(rd_data_count[6]),
        .I2(rd_data_count[7]),
        .I3(\DMA_WCHUNK_reg[13]_0 [6]),
        .O(\W_size[2]_i_9_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \W_size_reg[2] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(conf_rx_reset),
        .D(\W_size[2]_i_1_n_0 ),
        .Q(size));
  CARRY4 \W_size_reg[2]_i_3 
       (.CI(\W_size_reg[2]_i_4_n_0 ),
        .CO({\NLW_W_size_reg[2]_i_3_CO_UNCONNECTED [3],W_go2,\W_size_reg[2]_i_3_n_2 ,\W_size_reg[2]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\W_size[2]_i_5_n_0 }),
        .O(\NLW_W_size_reg[2]_i_3_O_UNCONNECTED [3:0]),
        .S({1'b0,\W_size[2]_i_6_n_0 ,\W_size[2]_i_7_n_0 ,\W_size[2]_i_8_n_0 }));
  CARRY4 \W_size_reg[2]_i_4 
       (.CI(1'b0),
        .CO({\W_size_reg[2]_i_4_n_0 ,\W_size_reg[2]_i_4_n_1 ,\W_size_reg[2]_i_4_n_2 ,\W_size_reg[2]_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI({\W_size[2]_i_9_n_0 ,\W_size[2]_i_10_n_0 ,\W_size[2]_i_11_n_0 ,\W_size[2]_i_12_n_0 }),
        .O(\NLW_W_size_reg[2]_i_4_O_UNCONNECTED [3:0]),
        .S({\W_size[2]_i_13_n_0 ,\W_size[2]_i_14_n_0 ,\W_size[2]_i_15_n_0 ,\W_size[2]_i_16_n_0 }));
  LUT6 #(
    .INIT(64'hFFFFFFFFF040F0F0)) 
    client_bnum_rdy_C_i_1
       (.I0(out),
        .I1(state[1]),
        .I2(client_rx_rd_bnum_rdy),
        .I3(client_bnum_rdy_C_i_2_n_0),
        .I4(state[2]),
        .I5(client_bnum_rdy_C_i_3_n_0),
        .O(client_bnum_rdy_C_i_1_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    client_bnum_rdy_C_i_2
       (.I0(state[0]),
        .I1(conf_rx_en),
        .O(client_bnum_rdy_C_i_2_n_0));
  LUT6 #(
    .INIT(64'h00A0000030000000)) 
    client_bnum_rdy_C_i_3
       (.I0(state1),
        .I1(desc_valid1),
        .I2(state[0]),
        .I3(state[1]),
        .I4(conf_rx_en),
        .I5(state[2]),
        .O(client_bnum_rdy_C_i_3_n_0));
  LUT3 #(
    .INIT(8'hB8)) 
    client_bnum_rdy_inferred__3_i_1
       (.I0(client_bnum_rdy_reg_P_n_0),
        .I1(client_bnum_rdy_reg_LDC_n_0),
        .I2(client_bnum_rdy_reg_C_n_0),
        .O(client_rx_rd_bnum_rdy));
  FDCE client_bnum_rdy_reg_C
       (.C(ACLK),
        .CE(1'b1),
        .CLR(client_bnum_rdy_reg_C_0),
        .D(client_bnum_rdy_C_i_1_n_0),
        .Q(client_bnum_rdy_reg_C_n_0));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    client_bnum_rdy_reg_LDC
       (.CLR(client_bnum_rdy_reg_C_0),
        .D(1'b1),
        .G(client_bnum_rdy_reg_P_0),
        .GE(1'b1),
        .Q(client_bnum_rdy_reg_LDC_n_0));
  FDPE client_bnum_rdy_reg_P
       (.C(ACLK),
        .CE(1'b1),
        .D(client_bnum_rdy_C_i_1_n_0),
        .PRE(client_bnum_rdy_reg_P_0),
        .Q(client_bnum_rdy_reg_P_n_0));
  LUT6 #(
    .INIT(64'h00400000FFFFFFFF)) 
    \desc_bnum[15]_i_1 
       (.I0(desc_valid1),
        .I1(W_goodframe),
        .I2(state[1]),
        .I3(state[2]),
        .I4(state[0]),
        .I5(conf_rx_en),
        .O(\desc_bnum[15]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \desc_bnum_reg[0] 
       (.C(ACLK),
        .CE(\desc_bnum[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\desc_bnum_reg[15]_1 [0]),
        .Q(\desc_bnum_reg[15]_0 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_bnum_reg[10] 
       (.C(ACLK),
        .CE(\desc_bnum[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\desc_bnum_reg[15]_1 [10]),
        .Q(\desc_bnum_reg[15]_0 [10]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_bnum_reg[11] 
       (.C(ACLK),
        .CE(\desc_bnum[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\desc_bnum_reg[15]_1 [11]),
        .Q(\desc_bnum_reg[15]_0 [11]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_bnum_reg[12] 
       (.C(ACLK),
        .CE(\desc_bnum[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\desc_bnum_reg[15]_1 [12]),
        .Q(\desc_bnum_reg[15]_0 [12]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_bnum_reg[13] 
       (.C(ACLK),
        .CE(\desc_bnum[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\desc_bnum_reg[15]_1 [13]),
        .Q(\desc_bnum_reg[15]_0 [13]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_bnum_reg[14] 
       (.C(ACLK),
        .CE(\desc_bnum[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\desc_bnum_reg[15]_1 [14]),
        .Q(\desc_bnum_reg[15]_0 [14]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_bnum_reg[15] 
       (.C(ACLK),
        .CE(\desc_bnum[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\desc_bnum_reg[15]_1 [15]),
        .Q(\desc_bnum_reg[15]_0 [15]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_bnum_reg[1] 
       (.C(ACLK),
        .CE(\desc_bnum[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\desc_bnum_reg[15]_1 [1]),
        .Q(\desc_bnum_reg[15]_0 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_bnum_reg[2] 
       (.C(ACLK),
        .CE(\desc_bnum[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\desc_bnum_reg[15]_1 [2]),
        .Q(\desc_bnum_reg[15]_0 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_bnum_reg[3] 
       (.C(ACLK),
        .CE(\desc_bnum[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\desc_bnum_reg[15]_1 [3]),
        .Q(\desc_bnum_reg[15]_0 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_bnum_reg[4] 
       (.C(ACLK),
        .CE(\desc_bnum[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\desc_bnum_reg[15]_1 [4]),
        .Q(\desc_bnum_reg[15]_0 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_bnum_reg[5] 
       (.C(ACLK),
        .CE(\desc_bnum[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\desc_bnum_reg[15]_1 [5]),
        .Q(\desc_bnum_reg[15]_0 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_bnum_reg[6] 
       (.C(ACLK),
        .CE(\desc_bnum[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\desc_bnum_reg[15]_1 [6]),
        .Q(\desc_bnum_reg[15]_0 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_bnum_reg[7] 
       (.C(ACLK),
        .CE(\desc_bnum[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\desc_bnum_reg[15]_1 [7]),
        .Q(\desc_bnum_reg[15]_0 [7]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_bnum_reg[8] 
       (.C(ACLK),
        .CE(\desc_bnum[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\desc_bnum_reg[15]_1 [8]),
        .Q(\desc_bnum_reg[15]_0 [8]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_bnum_reg[9] 
       (.C(ACLK),
        .CE(\desc_bnum[15]_i_1_n_0 ),
        .CLR(conf_rx_reset),
        .D(\desc_bnum_reg[15]_1 [9]),
        .Q(\desc_bnum_reg[15]_0 [9]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[0]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[0]_C_0 ),
        .I2(\DMA_ADDR_HEAD_reg[0]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[0]_P_n_0 ),
        .O(\desc_dst[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[10]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[10]_C_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[10]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[10]_P_n_0 ),
        .O(\desc_dst[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[11]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[11]_C_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[11]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[11]_P_n_0 ),
        .O(\desc_dst[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[12]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[12]_C_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[12]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[12]_P_n_0 ),
        .O(\desc_dst[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[13]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[13]_C_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[13]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[13]_P_n_0 ),
        .O(\desc_dst[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[14]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[14]_C_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[14]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[14]_P_n_0 ),
        .O(\desc_dst[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[15]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[15]_C_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[15]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[15]_P_n_0 ),
        .O(\desc_dst[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[16]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[16]_C_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[16]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[16]_P_n_0 ),
        .O(\desc_dst[16]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[17]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[17]_C_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[17]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[17]_P_n_0 ),
        .O(\desc_dst[17]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[18]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[18]_C_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[18]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[18]_P_n_0 ),
        .O(\desc_dst[18]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[19]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[19]_C_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[19]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[19]_P_n_0 ),
        .O(\desc_dst[19]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[1]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[1]_C_0 ),
        .I2(\DMA_ADDR_HEAD_reg[1]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[1]_P_n_0 ),
        .O(\desc_dst[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[20]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[20]_C_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[20]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[20]_P_n_0 ),
        .O(\desc_dst[20]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[21]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[21]_C_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[21]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[21]_P_n_0 ),
        .O(\desc_dst[21]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[22]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[22]_C_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[22]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[22]_P_n_0 ),
        .O(\desc_dst[22]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[23]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[23]_C_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[23]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[23]_P_n_0 ),
        .O(\desc_dst[23]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[24]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[24]_C_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[24]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[24]_P_n_0 ),
        .O(\desc_dst[24]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[25]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[25]_C_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[25]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[25]_P_n_0 ),
        .O(\desc_dst[25]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[26]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[26]_C_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[26]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[26]_P_n_0 ),
        .O(\desc_dst[26]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[27]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[27]_C_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[27]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[27]_P_n_0 ),
        .O(\desc_dst[27]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[28]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[28]_C_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[28]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[28]_P_n_0 ),
        .O(\desc_dst[28]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[29]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[29]_C_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[29]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[29]_P_n_0 ),
        .O(\desc_dst[29]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[2]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[2]_C_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[2]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[2]_P_n_0 ),
        .O(\desc_dst[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[30]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[30]_C_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[30]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[30]_P_n_0 ),
        .O(\desc_dst[30]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[31]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[31]_C_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[31]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[31]_P_n_0 ),
        .O(\desc_dst[31]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[3]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[3]_C_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[3]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[3]_P_n_0 ),
        .O(\desc_dst[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[4]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[4]_C_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[4]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[4]_P_n_0 ),
        .O(\desc_dst[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[5]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[5]_C_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[5]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[5]_P_n_0 ),
        .O(\desc_dst[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[6]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[6]_C_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[6]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[6]_P_n_0 ),
        .O(\desc_dst[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[7]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[7]_C_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[7]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[7]_P_n_0 ),
        .O(\desc_dst[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[8]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[8]_C_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[8]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[8]_P_n_0 ),
        .O(\desc_dst[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    \desc_dst[9]_i_1 
       (.I0(conf_rx_en),
        .I1(\DMA_ADDR_HEAD_reg[9]_C_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[9]_LDC_n_0 ),
        .I3(\DMA_ADDR_HEAD_reg[9]_P_n_0 ),
        .O(\desc_dst[9]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[0] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[0]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[10] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[10]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [10]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[11] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[11]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [11]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[12] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[12]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [12]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[13] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[13]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [13]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[14] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[14]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [14]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[15] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[15]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [15]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[16] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[16]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [16]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[17] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[17]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [17]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[18] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[18]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [18]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[19] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[19]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [19]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[1] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[1]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[20] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[20]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [20]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[21] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[21]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [21]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[22] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[22]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [22]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[23] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[23]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [23]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[24] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[24]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [24]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[25] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[25]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [25]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[26] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[26]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [26]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[27] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[27]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [27]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[28] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[28]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [28]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[29] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[29]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [29]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[2] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[2]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[30] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[30]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [30]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[31] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[31]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [31]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[3] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[3]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[4] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[4]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[5] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[5]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[6] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[6]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[7] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[7]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [7]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[8] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[8]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [8]));
  FDCE #(
    .INIT(1'b0)) 
    \desc_dst_reg[9] 
       (.C(ACLK),
        .CE(DMA_WCHUNK),
        .CLR(conf_rx_reset),
        .D(\desc_dst[9]_i_1_n_0 ),
        .Q(\desc_dst_reg[31]_0 [9]));
  LUT6 #(
    .INIT(64'h040404FF04040400)) 
    desc_valid_i_1
       (.I0(state[2]),
        .I1(conf_rx_en),
        .I2(rx_descriptor_full),
        .I3(desc_valid_i_2_n_0),
        .I4(W_goodframe_reg_0),
        .I5(rx_descriptor_wr_vld),
        .O(desc_valid_i_1_n_0));
  LUT5 #(
    .INIT(32'h00002000)) 
    desc_valid_i_2
       (.I0(state[0]),
        .I1(state[2]),
        .I2(state[1]),
        .I3(W_goodframe),
        .I4(desc_valid1),
        .O(desc_valid_i_2_n_0));
  FDCE #(
    .INIT(1'b0)) 
    desc_valid_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(conf_rx_reset),
        .D(desc_valid_i_1_n_0),
        .Q(rx_descriptor_wr_vld));
  LUT6 #(
    .INIT(64'hEEFEEEFEFFFFEEFE)) 
    \state[0]_i_1__0 
       (.I0(\state[0]_i_2__0_n_0 ),
        .I1(\state[0]_i_3_n_0 ),
        .I2(\state[0]_i_4_n_0 ),
        .I3(W_go0),
        .I4(\state[0]_i_5_n_0 ),
        .I5(state1),
        .O(\state[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000008C80)) 
    \state[0]_i_2__0 
       (.I0(W_done_reg_n_0),
        .I1(conf_rx_en),
        .I2(state[1]),
        .I3(\state[2]_i_3_n_0 ),
        .I4(state[2]),
        .I5(state[0]),
        .O(\state[0]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hDD0F000000000000)) 
    \state[0]_i_3 
       (.I0(W_goodframe_reg_1),
        .I1(\W_brem_reg[15]_i_4_n_0 ),
        .I2(\state[0]_i_7_n_0 ),
        .I3(out),
        .I4(W_goodframe_i_2_n_0),
        .I5(\state_reg[2]_2 ),
        .O(\state[0]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h00A20000)) 
    \state[0]_i_4 
       (.I0(conf_rx_en),
        .I1(state[1]),
        .I2(desc_valid1),
        .I3(state[2]),
        .I4(state[0]),
        .O(\state[0]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h0800)) 
    \state[0]_i_5 
       (.I0(state[2]),
        .I1(state[0]),
        .I2(state[1]),
        .I3(conf_rx_en),
        .O(\state[0]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h09001600)) 
    \state[0]_i_6 
       (.I0(dout[2]),
        .I1(dout[1]),
        .I2(dout[3]),
        .I3(valid),
        .I4(dout[0]),
        .O(state1));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \state[0]_i_7 
       (.I0(valid),
        .I1(W_go2),
        .O(\state[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF8C8)) 
    \state[1]_i_1__0 
       (.I0(\W_brem_reg[15]_i_4_n_0 ),
        .I1(\state[1]_i_2_n_0 ),
        .I2(W_go0),
        .I3(\state[1]_i_3__0_n_0 ),
        .I4(\state[1]_i_4_n_0 ),
        .I5(\state[1]_i_5_n_0 ),
        .O(\state[1]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000008000000)) 
    \state[1]_i_2 
       (.I0(W_goodframe_reg_1),
        .I1(state[0]),
        .I2(state[2]),
        .I3(out),
        .I4(conf_rx_en),
        .I5(state[1]),
        .O(\state[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    \state[1]_i_3__0 
       (.I0(valid),
        .I1(W_go2),
        .I2(state[0]),
        .I3(state[2]),
        .I4(out),
        .I5(\state_reg[2]_2 ),
        .O(\state[1]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF00B0)) 
    \state[1]_i_4 
       (.I0(W_brem),
        .I1(W_done_reg_n_0),
        .I2(\state[1]_i_6_n_0 ),
        .I3(state[2]),
        .I4(\state[1]_i_7_n_0 ),
        .O(\state[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000800000C08000)) 
    \state[1]_i_5 
       (.I0(desc_valid1),
        .I1(conf_rx_en),
        .I2(state[1]),
        .I3(state[0]),
        .I4(state[2]),
        .I5(out),
        .O(\state[1]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \state[1]_i_6 
       (.I0(conf_rx_en),
        .I1(state[1]),
        .I2(state[0]),
        .O(\state[1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0080002000202080)) 
    \state[1]_i_7 
       (.I0(\state[0]_i_5_n_0 ),
        .I1(dout[0]),
        .I2(valid),
        .I3(dout[3]),
        .I4(dout[1]),
        .I5(dout[2]),
        .O(\state[1]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFEAAAAAAA)) 
    \state[2]_i_1__0 
       (.I0(\state[2]_i_2_n_0 ),
        .I1(\state[2]_i_3_n_0 ),
        .I2(\DMA_WCHUNK[13]_i_4_n_0 ),
        .I3(\state_reg[2]_2 ),
        .I4(\state_reg[2]_3 ),
        .I5(\state[2]_i_5_n_0 ),
        .O(\state[2]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF80C08080)) 
    \state[2]_i_2 
       (.I0(state[2]),
        .I1(state[0]),
        .I2(\state_reg[2]_2 ),
        .I3(W_goodframe_reg_1),
        .I4(out),
        .I5(\state[2]_i_6_n_0 ),
        .O(\state[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \state[2]_i_3 
       (.I0(valid),
        .I1(rx_addr_head_update),
        .O(\state[2]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h04000000)) 
    \state[2]_i_5 
       (.I0(out),
        .I1(state[2]),
        .I2(state[0]),
        .I3(state[1]),
        .I4(conf_rx_en),
        .O(\state[2]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h00004000)) 
    \state[2]_i_6 
       (.I0(state[2]),
        .I1(conf_rx_en),
        .I2(state[1]),
        .I3(state[0]),
        .I4(desc_valid1),
        .O(\state[2]_i_6_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_reg[0] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(conf_rx_reset),
        .D(\state[0]_i_1__0_n_0 ),
        .Q(state[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_reg[1] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(conf_rx_reset),
        .D(\state[1]_i_1__0_n_0 ),
        .Q(state[1]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_reg[2] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(conf_rx_reset),
        .D(\state[2]_i_1__0_n_0 ),
        .Q(state[2]));
  LUT6 #(
    .INIT(64'hEEEEEEEEEEEEEFEE)) 
    \state_write[0]_i_1 
       (.I0(\state_write[0]_i_2_n_0 ),
        .I1(\state_write[0]_i_3_n_0 ),
        .I2(M_AWREADY),
        .I3(\state_write[0]_i_4_n_0 ),
        .I4(state_write[1]),
        .I5(state_write[2]),
        .O(\state_write[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hC0C00008CCC00008)) 
    \state_write[0]_i_2 
       (.I0(W_go_reg_n_0),
        .I1(conf_rx_en),
        .I2(state_write[2]),
        .I3(state_write[1]),
        .I4(state_write[0]),
        .I5(M_BVALID),
        .O(\state_write[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0020000000000000)) 
    \state_write[0]_i_3 
       (.I0(state_write[1]),
        .I1(state_write[2]),
        .I2(conf_rx_en),
        .I3(state_write[0]),
        .I4(M_BREADY1),
        .I5(M_BREADY0),
        .O(\state_write[0]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \state_write[0]_i_4 
       (.I0(state_write[0]),
        .I1(conf_rx_en),
        .O(\state_write[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hC0C020C0C0C0E0C0)) 
    \state_write[1]_i_1 
       (.I0(M_AWREADY),
        .I1(state_write[1]),
        .I2(conf_rx_en),
        .I3(state_write[0]),
        .I4(state_write[2]),
        .I5(M_BVALID),
        .O(\state_write[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF8000)) 
    \state_write[2]_i_1 
       (.I0(state_write[2]),
        .I1(conf_rx_en),
        .I2(state_write[1]),
        .I3(\state_write[2]_i_2_n_0 ),
        .I4(\state_write[2]_i_3_n_0 ),
        .I5(\state_write[2]_i_4_n_0 ),
        .O(\state_write[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF777FFFFF)) 
    \state_write[2]_i_2 
       (.I0(M_BREADY0),
        .I1(M_WREADY),
        .I2(valid),
        .I3(W_error_reg_n_0),
        .I4(\RX_BLK_256.u_fifo_rx_i_2_n_0 ),
        .I5(state_write[0]),
        .O(\state_write[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFE000000)) 
    \state_write[2]_i_3 
       (.I0(W_go_reg_n_0),
        .I1(state_write[1]),
        .I2(state_write[0]),
        .I3(state_write[2]),
        .I4(conf_rx_en),
        .O(\state_write[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08C8000000000000)) 
    \state_write[2]_i_4 
       (.I0(M_BVALID),
        .I1(state_write[1]),
        .I2(state_write[2]),
        .I3(M_AWREADY),
        .I4(conf_rx_en),
        .I5(state_write[0]),
        .O(\state_write[2]_i_4_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_write_reg[0] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(conf_rx_reset),
        .D(\state_write[0]_i_1_n_0 ),
        .Q(state_write[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_write_reg[1] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(conf_rx_reset),
        .D(\state_write[1]_i_1_n_0 ),
        .Q(state_write[1]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_write_reg[2] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(conf_rx_reset),
        .D(\state_write[2]_i_1_n_0 ),
        .Q(state_write[2]));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_37
       (.I0(\DMA_ADDR_HEAD_reg[31]_C_n_0 ),
        .I1(\DMA_ADDR_HEAD_reg[31]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[31]_P_n_0 ),
        .O(rx_addr_head[31]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_38
       (.I0(\DMA_ADDR_HEAD_reg[30]_C_n_0 ),
        .I1(\DMA_ADDR_HEAD_reg[30]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[30]_P_n_0 ),
        .O(rx_addr_head[30]));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_39
       (.I0(\DMA_ADDR_HEAD_reg[29]_C_n_0 ),
        .I1(\DMA_ADDR_HEAD_reg[29]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[29]_P_n_0 ),
        .O(rx_addr_head[29]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_40
       (.I0(\DMA_ADDR_HEAD_reg[28]_C_n_0 ),
        .I1(\DMA_ADDR_HEAD_reg[28]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[28]_P_n_0 ),
        .O(rx_addr_head[28]));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_41
       (.I0(\DMA_ADDR_HEAD_reg[27]_C_n_0 ),
        .I1(\DMA_ADDR_HEAD_reg[27]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[27]_P_n_0 ),
        .O(rx_addr_head[27]));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_42
       (.I0(\DMA_ADDR_HEAD_reg[26]_C_n_0 ),
        .I1(\DMA_ADDR_HEAD_reg[26]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[26]_P_n_0 ),
        .O(rx_addr_head[26]));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_43
       (.I0(\DMA_ADDR_HEAD_reg[25]_C_n_0 ),
        .I1(\DMA_ADDR_HEAD_reg[25]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[25]_P_n_0 ),
        .O(rx_addr_head[25]));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_44
       (.I0(\DMA_ADDR_HEAD_reg[24]_C_n_0 ),
        .I1(\DMA_ADDR_HEAD_reg[24]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[24]_P_n_0 ),
        .O(rx_addr_head[24]));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_45
       (.I0(\DMA_ADDR_HEAD_reg[23]_C_n_0 ),
        .I1(\DMA_ADDR_HEAD_reg[23]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[23]_P_n_0 ),
        .O(rx_addr_head[23]));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_46
       (.I0(\DMA_ADDR_HEAD_reg[22]_C_n_0 ),
        .I1(\DMA_ADDR_HEAD_reg[22]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[22]_P_n_0 ),
        .O(rx_addr_head[22]));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_47
       (.I0(\DMA_ADDR_HEAD_reg[21]_C_n_0 ),
        .I1(\DMA_ADDR_HEAD_reg[21]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[21]_P_n_0 ),
        .O(rx_addr_head[21]));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_48
       (.I0(\DMA_ADDR_HEAD_reg[20]_C_n_0 ),
        .I1(\DMA_ADDR_HEAD_reg[20]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[20]_P_n_0 ),
        .O(rx_addr_head[20]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_49
       (.I0(\DMA_ADDR_HEAD_reg[19]_C_n_0 ),
        .I1(\DMA_ADDR_HEAD_reg[19]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[19]_P_n_0 ),
        .O(rx_addr_head[19]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_50
       (.I0(\DMA_ADDR_HEAD_reg[18]_C_n_0 ),
        .I1(\DMA_ADDR_HEAD_reg[18]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[18]_P_n_0 ),
        .O(rx_addr_head[18]));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_51
       (.I0(\DMA_ADDR_HEAD_reg[17]_C_n_0 ),
        .I1(\DMA_ADDR_HEAD_reg[17]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[17]_P_n_0 ),
        .O(rx_addr_head[17]));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_52
       (.I0(\DMA_ADDR_HEAD_reg[16]_C_n_0 ),
        .I1(\DMA_ADDR_HEAD_reg[16]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[16]_P_n_0 ),
        .O(rx_addr_head[16]));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_53
       (.I0(\DMA_ADDR_HEAD_reg[15]_C_n_0 ),
        .I1(\DMA_ADDR_HEAD_reg[15]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[15]_P_n_0 ),
        .O(rx_addr_head[15]));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_54
       (.I0(\DMA_ADDR_HEAD_reg[14]_C_n_0 ),
        .I1(\DMA_ADDR_HEAD_reg[14]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[14]_P_n_0 ),
        .O(rx_addr_head[14]));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_55
       (.I0(\DMA_ADDR_HEAD_reg[13]_C_n_0 ),
        .I1(\DMA_ADDR_HEAD_reg[13]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[13]_P_n_0 ),
        .O(rx_addr_head[13]));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_56
       (.I0(\DMA_ADDR_HEAD_reg[12]_C_n_0 ),
        .I1(\DMA_ADDR_HEAD_reg[12]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[12]_P_n_0 ),
        .O(rx_addr_head[12]));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_57
       (.I0(\DMA_ADDR_HEAD_reg[11]_C_n_0 ),
        .I1(\DMA_ADDR_HEAD_reg[11]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[11]_P_n_0 ),
        .O(rx_addr_head[11]));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_58
       (.I0(\DMA_ADDR_HEAD_reg[10]_C_n_0 ),
        .I1(\DMA_ADDR_HEAD_reg[10]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[10]_P_n_0 ),
        .O(rx_addr_head[10]));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_59
       (.I0(\DMA_ADDR_HEAD_reg[9]_C_n_0 ),
        .I1(\DMA_ADDR_HEAD_reg[9]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[9]_P_n_0 ),
        .O(rx_addr_head[9]));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_60
       (.I0(\DMA_ADDR_HEAD_reg[8]_C_n_0 ),
        .I1(\DMA_ADDR_HEAD_reg[8]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[8]_P_n_0 ),
        .O(rx_addr_head[8]));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_61
       (.I0(\DMA_ADDR_HEAD_reg[7]_C_n_0 ),
        .I1(\DMA_ADDR_HEAD_reg[7]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[7]_P_n_0 ),
        .O(rx_addr_head[7]));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_62
       (.I0(\DMA_ADDR_HEAD_reg[6]_C_n_0 ),
        .I1(\DMA_ADDR_HEAD_reg[6]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[6]_P_n_0 ),
        .O(rx_addr_head[6]));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_63
       (.I0(\DMA_ADDR_HEAD_reg[5]_C_n_0 ),
        .I1(\DMA_ADDR_HEAD_reg[5]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[5]_P_n_0 ),
        .O(rx_addr_head[5]));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_64
       (.I0(\DMA_ADDR_HEAD_reg[4]_C_n_0 ),
        .I1(\DMA_ADDR_HEAD_reg[4]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[4]_P_n_0 ),
        .O(rx_addr_head[4]));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_65
       (.I0(\DMA_ADDR_HEAD_reg[3]_C_n_0 ),
        .I1(\DMA_ADDR_HEAD_reg[3]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[3]_P_n_0 ),
        .O(rx_addr_head[3]));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_66
       (.I0(\DMA_ADDR_HEAD_reg[2]_C_n_0 ),
        .I1(\DMA_ADDR_HEAD_reg[2]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[2]_P_n_0 ),
        .O(rx_addr_head[2]));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_67
       (.I0(\DMA_ADDR_HEAD_reg[1]_C_0 ),
        .I1(\DMA_ADDR_HEAD_reg[1]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[1]_P_n_0 ),
        .O(rx_addr_head[1]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    u_csr_i_68
       (.I0(\DMA_ADDR_HEAD_reg[0]_C_0 ),
        .I1(\DMA_ADDR_HEAD_reg[0]_LDC_n_0 ),
        .I2(\DMA_ADDR_HEAD_reg[0]_P_n_0 ),
        .O(rx_addr_head[0]));
endmodule

module gig_eth_mac_sync
   (rst,
    rx_reset_n,
    conf_rx_reset,
    gmii_rxc);
  output rst;
  output rx_reset_n;
  input conf_rx_reset;
  input gmii_rxc;

  wire conf_rx_reset;
  wire gmii_rxc;
  wire rst;
  wire rx_reset_n;
  wire \sync_reg[1]_srl2_n_0 ;

  (* srl_bus_name = "\u_conf_rx_reset/sync_reg " *) 
  (* srl_name = "\u_conf_rx_reset/sync_reg[1]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0003)) 
    \sync_reg[1]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gmii_rxc),
        .D(conf_rx_reset),
        .Q(\sync_reg[1]_srl2_n_0 ));
  FDRE #(
    .INIT(1'b1)) 
    \sync_reg[2] 
       (.C(gmii_rxc),
        .CE(1'b1),
        .D(\sync_reg[1]_srl2_n_0 ),
        .Q(rst),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    u_rx_i_1
       (.I0(rst),
        .O(rx_reset_n));
endmodule

(* ORIG_REF_NAME = "gig_eth_mac_sync" *) 
module gig_eth_mac_sync_6
   (rst,
    tx_reset_n,
    sig_in0,
    gtx_clk);
  output rst;
  output tx_reset_n;
  input sig_in0;
  input gtx_clk;

  wire gtx_clk;
  wire rst;
  wire sig_in0;
  wire \sync_reg[1]_srl2_n_0 ;
  wire tx_reset_n;

  (* srl_bus_name = "\u_conf_tx_reset/sync_reg " *) 
  (* srl_name = "\u_conf_tx_reset/sync_reg[1]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0003)) 
    \sync_reg[1]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtx_clk),
        .D(sig_in0),
        .Q(\sync_reg[1]_srl2_n_0 ));
  FDRE #(
    .INIT(1'b1)) 
    \sync_reg[2] 
       (.C(gtx_clk),
        .CE(1'b1),
        .D(\sync_reg[1]_srl2_n_0 ),
        .Q(rst),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    u_tx_i_1
       (.I0(rst),
        .O(tx_reset_n));
endmodule

(* ORIG_REF_NAME = "gig_eth_mac_sync" *) 
module gig_eth_mac_sync__parameterized0
   (\sync_reg[2]_0 ,
    conf_rx_en,
    gmii_rxc);
  output \sync_reg[2]_0 ;
  input conf_rx_en;
  input gmii_rxc;

  wire conf_rx_en;
  wire gmii_rxc;
  wire \sync_reg[1]_srl2_n_0 ;
  wire \sync_reg[2]_0 ;

  (* srl_bus_name = "\u_conf_rx_en/sync_reg " *) 
  (* srl_name = "\u_conf_rx_en/sync_reg[1]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \sync_reg[1]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gmii_rxc),
        .D(conf_rx_en),
        .Q(\sync_reg[1]_srl2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sync_reg[2] 
       (.C(gmii_rxc),
        .CE(1'b1),
        .D(\sync_reg[1]_srl2_n_0 ),
        .Q(\sync_reg[2]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gig_eth_mac_sync" *) 
module gig_eth_mac_sync__parameterized0_0
   (\sync_reg[2]_0 ,
    conf_rx_jumbo_en,
    gmii_rxc);
  output \sync_reg[2]_0 ;
  input conf_rx_jumbo_en;
  input gmii_rxc;

  wire conf_rx_jumbo_en;
  wire gmii_rxc;
  wire \sync_reg[1]_srl2_n_0 ;
  wire \sync_reg[2]_0 ;

  (* srl_bus_name = "\u_conf_rx_jumbo_en/sync_reg " *) 
  (* srl_name = "\u_conf_rx_jumbo_en/sync_reg[1]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \sync_reg[1]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gmii_rxc),
        .D(conf_rx_jumbo_en),
        .Q(\sync_reg[1]_srl2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sync_reg[2] 
       (.C(gmii_rxc),
        .CE(1'b1),
        .D(\sync_reg[1]_srl2_n_0 ),
        .Q(\sync_reg[2]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gig_eth_mac_sync" *) 
module gig_eth_mac_sync__parameterized0_1
   (\sync_reg[2]_0 ,
    conf_rx_no_chk_crc,
    gmii_rxc);
  output \sync_reg[2]_0 ;
  input conf_rx_no_chk_crc;
  input gmii_rxc;

  wire conf_rx_no_chk_crc;
  wire gmii_rxc;
  wire \sync_reg[1]_srl2_n_0 ;
  wire \sync_reg[2]_0 ;

  (* srl_bus_name = "\u_conf_rx_no_chk_crc/sync_reg " *) 
  (* srl_name = "\u_conf_rx_no_chk_crc/sync_reg[1]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \sync_reg[1]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gmii_rxc),
        .D(conf_rx_no_chk_crc),
        .Q(\sync_reg[1]_srl2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sync_reg[2] 
       (.C(gmii_rxc),
        .CE(1'b1),
        .D(\sync_reg[1]_srl2_n_0 ),
        .Q(\sync_reg[2]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gig_eth_mac_sync" *) 
module gig_eth_mac_sync__parameterized0_2
   (\sync_reg[2]_0 ,
    conf_rx_promiscuous,
    gmii_rxc);
  output \sync_reg[2]_0 ;
  input conf_rx_promiscuous;
  input gmii_rxc;

  wire conf_rx_promiscuous;
  wire gmii_rxc;
  wire \sync_reg[1]_srl2_n_0 ;
  wire \sync_reg[2]_0 ;

  (* srl_bus_name = "\u_conf_rx_promiscuous/sync_reg " *) 
  (* srl_name = "\u_conf_rx_promiscuous/sync_reg[1]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \sync_reg[1]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gmii_rxc),
        .D(conf_rx_promiscuous),
        .Q(\sync_reg[1]_srl2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sync_reg[2] 
       (.C(gmii_rxc),
        .CE(1'b1),
        .D(\sync_reg[1]_srl2_n_0 ),
        .Q(\sync_reg[2]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gig_eth_mac_sync" *) 
module gig_eth_mac_sync__parameterized0_3
   (\sync_reg[2]_0 ,
    conf_tx_en,
    gtx_clk);
  output \sync_reg[2]_0 ;
  input conf_tx_en;
  input gtx_clk;

  wire conf_tx_en;
  wire gtx_clk;
  wire \sync_reg[1]_srl2_n_0 ;
  wire \sync_reg[2]_0 ;

  (* srl_bus_name = "\u_conf_tx_en/sync_reg " *) 
  (* srl_name = "\u_conf_tx_en/sync_reg[1]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \sync_reg[1]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtx_clk),
        .D(conf_tx_en),
        .Q(\sync_reg[1]_srl2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sync_reg[2] 
       (.C(gtx_clk),
        .CE(1'b1),
        .D(\sync_reg[1]_srl2_n_0 ),
        .Q(\sync_reg[2]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gig_eth_mac_sync" *) 
module gig_eth_mac_sync__parameterized0_4
   (\sync_reg[2]_0 ,
    conf_tx_jumbo_en,
    gtx_clk);
  output \sync_reg[2]_0 ;
  input conf_tx_jumbo_en;
  input gtx_clk;

  wire conf_tx_jumbo_en;
  wire gtx_clk;
  wire \sync_reg[1]_srl2_n_0 ;
  wire \sync_reg[2]_0 ;

  (* srl_bus_name = "\u_conf_tx_jumbo_en/sync_reg " *) 
  (* srl_name = "\u_conf_tx_jumbo_en/sync_reg[1]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \sync_reg[1]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtx_clk),
        .D(conf_tx_jumbo_en),
        .Q(\sync_reg[1]_srl2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sync_reg[2] 
       (.C(gtx_clk),
        .CE(1'b1),
        .D(\sync_reg[1]_srl2_n_0 ),
        .Q(\sync_reg[2]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gig_eth_mac_sync" *) 
module gig_eth_mac_sync__parameterized0_5
   (\sync_reg[2]_0 ,
    conf_tx_no_gen_crc,
    gtx_clk);
  output \sync_reg[2]_0 ;
  input conf_tx_no_gen_crc;
  input gtx_clk;

  wire conf_tx_no_gen_crc;
  wire gtx_clk;
  wire \sync_reg[1]_srl2_n_0 ;
  wire \sync_reg[2]_0 ;

  (* srl_bus_name = "\u_conf_tx_no_gen_crc/sync_reg " *) 
  (* srl_name = "\u_conf_tx_no_gen_crc/sync_reg[1]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \sync_reg[1]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtx_clk),
        .D(conf_tx_no_gen_crc),
        .Q(\sync_reg[1]_srl2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sync_reg[2] 
       (.C(gtx_clk),
        .CE(1'b1),
        .D(\sync_reg[1]_srl2_n_0 ),
        .Q(\sync_reg[2]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gig_eth_mac_sync" *) 
module gig_eth_mac_sync__parameterized0_7
   (\sync_reg[2]_0 ,
    crc_err,
    ACLK);
  output \sync_reg[2]_0 ;
  input crc_err;
  input ACLK;

  wire ACLK;
  wire crc_err;
  wire \sync_reg[1]_srl2_n_0 ;
  wire \sync_reg[2]_0 ;

  (* srl_bus_name = "\u_crc_err/sync_reg " *) 
  (* srl_name = "\u_crc_err/sync_reg[1]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \sync_reg[1]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(ACLK),
        .D(crc_err),
        .Q(\sync_reg[1]_srl2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sync_reg[2] 
       (.C(ACLK),
        .CE(1'b1),
        .D(\sync_reg[1]_srl2_n_0 ),
        .Q(\sync_reg[2]_0 ),
        .R(1'b0));
endmodule

module gig_eth_mac_tx_dma_axi
   (R_full_reg_0,
    out,
    \R_size_reg[2]_0 ,
    M_ARSIZE,
    \DMA_ADDR_TAIL_reg[31]_P_0 ,
    tx_addr_tail,
    \state_reg[2]_0 ,
    \R_addr_reg[0]_0 ,
    Q,
    R_addr2,
    DI,
    \R_brem_reg[15]_0 ,
    \DMA_BREM_reg[14]_0 ,
    \DMA_BREM_reg[15]_0 ,
    \DMA_BREM_reg[15]_1 ,
    \DMA_BREM_reg[12]_0 ,
    \DMA_BREM_reg[13]_0 ,
    \DMA_BREM_reg[10]_0 ,
    \DMA_BREM_reg[11]_0 ,
    \DMA_BREM_reg[8]_0 ,
    \DMA_BREM_reg[9]_0 ,
    \DMA_BREM_reg[6]_0 ,
    \DMA_BREM_reg[7]_0 ,
    \DMA_BREM_reg[4]_0 ,
    \DMA_BREM_reg[5]_0 ,
    \DMA_BREM_reg[2]_0 ,
    \DMA_BREM_reg[3]_0 ,
    \DMA_BREM_reg[0]_0 ,
    \DMA_BREM_reg[1]_0 ,
    \R_len_reg[0]_0 ,
    tx_addr_tail_update,
    din,
    R_done_reg_0,
    \state_reg[0]_0 ,
    \state_reg[0]_1 ,
    \state_reg[0]_2 ,
    \state_reg[0]_3 ,
    \state_reg[0]_4 ,
    \state_reg[0]_5 ,
    \state_reg[0]_6 ,
    \state_reg[0]_7 ,
    \state_reg[0]_8 ,
    \state_reg[0]_9 ,
    \state_reg[0]_10 ,
    \state_reg[0]_11 ,
    \state_reg[0]_12 ,
    \state_reg[0]_13 ,
    \state_reg[0]_14 ,
    \state_reg[0]_15 ,
    \state_reg[0]_16 ,
    \state_reg[0]_17 ,
    \state_reg[0]_18 ,
    \state_reg[0]_19 ,
    \state_reg[0]_20 ,
    \state_reg[0]_21 ,
    \state_reg[0]_22 ,
    \state_reg[0]_23 ,
    \state_reg[0]_24 ,
    \state_reg[0]_25 ,
    \state_reg[0]_26 ,
    \state_reg[0]_27 ,
    \state_reg[0]_28 ,
    \state_reg[0]_29 ,
    \state_reg[0]_30 ,
    R_full_reg_1,
    \R_brem_reg[15]_1 ,
    \CID_reg[0]_0 ,
    \DMA_BREM_reg[3]_1 ,
    \DMA_BREM_reg[7]_1 ,
    \DMA_BREM_reg[11]_1 ,
    \DMA_BREM_reg[14]_1 ,
    \R_addr_reg[23]_0 ,
    \R_brem_reg[15]_2 ,
    \DMA_BREM_reg[15]_2 ,
    \tx_addr_head_reg[31] ,
    \tx_addr_end_reg[31] ,
    \tx_addr_end_reg[27] ,
    \DMA_ADDR_TAIL_reg[27]_P_0 ,
    \tx_addr_end_reg[23] ,
    \DMA_ADDR_TAIL_reg[23]_P_0 ,
    \tx_addr_end_reg[19] ,
    \DMA_ADDR_TAIL_reg[19]_P_0 ,
    \tx_addr_head_reg[15] ,
    \tx_addr_end_reg[15] ,
    \tx_addr_head_reg[11] ,
    \tx_addr_end_reg[11] ,
    \tx_addr_head_reg[7] ,
    \tx_addr_end_reg[7] ,
    \tx_addr_head_reg[3] ,
    \tx_addr_end_reg[3] ,
    M_RREADY,
    wr_en,
    \R_addr_reg[31]_0 ,
    \R_addr_reg[31]_1 ,
    R_empty_reg_0,
    M_ARID,
    M_ARADDR,
    M_ARLEN,
    M_ARVALID,
    tx_descriptor_rd_rdy,
    R_first_reg_0,
    ACLK,
    conf_tx_reset,
    R_full14_out,
    conf_tx_en,
    \M_ARSIZE_reg[1]_0 ,
    \DMA_ADDR_TAIL_reg[31]_P_1 ,
    \DMA_ADDR_TAIL_reg[31]_C_0 ,
    \DMA_ADDR_TAIL_reg[31]_P_2 ,
    \DMA_ADDR_TAIL_reg[30]_P_0 ,
    \DMA_ADDR_TAIL_reg[30]_C_0 ,
    \DMA_ADDR_TAIL_reg[30]_P_1 ,
    \DMA_ADDR_TAIL_reg[29]_P_0 ,
    \DMA_ADDR_TAIL_reg[29]_C_0 ,
    \DMA_ADDR_TAIL_reg[29]_P_1 ,
    \DMA_ADDR_TAIL_reg[28]_P_0 ,
    \DMA_ADDR_TAIL_reg[28]_C_0 ,
    \DMA_ADDR_TAIL_reg[28]_P_1 ,
    \DMA_ADDR_TAIL_reg[27]_P_1 ,
    \DMA_ADDR_TAIL_reg[27]_C_0 ,
    \DMA_ADDR_TAIL_reg[27]_P_2 ,
    \DMA_ADDR_TAIL_reg[26]_P_0 ,
    \DMA_ADDR_TAIL_reg[26]_C_0 ,
    \DMA_ADDR_TAIL_reg[26]_P_1 ,
    \DMA_ADDR_TAIL_reg[25]_P_0 ,
    \DMA_ADDR_TAIL_reg[25]_C_0 ,
    \DMA_ADDR_TAIL_reg[25]_P_1 ,
    \DMA_ADDR_TAIL_reg[24]_P_0 ,
    \DMA_ADDR_TAIL_reg[24]_C_0 ,
    \DMA_ADDR_TAIL_reg[24]_P_1 ,
    \DMA_ADDR_TAIL_reg[23]_P_1 ,
    \DMA_ADDR_TAIL_reg[23]_C_0 ,
    \DMA_ADDR_TAIL_reg[23]_P_2 ,
    \DMA_ADDR_TAIL_reg[22]_P_0 ,
    \DMA_ADDR_TAIL_reg[22]_C_0 ,
    \DMA_ADDR_TAIL_reg[22]_P_1 ,
    \DMA_ADDR_TAIL_reg[21]_P_0 ,
    \DMA_ADDR_TAIL_reg[21]_C_0 ,
    \DMA_ADDR_TAIL_reg[21]_P_1 ,
    \DMA_ADDR_TAIL_reg[20]_P_0 ,
    \DMA_ADDR_TAIL_reg[20]_C_0 ,
    \DMA_ADDR_TAIL_reg[20]_P_1 ,
    \DMA_ADDR_TAIL_reg[19]_P_1 ,
    \DMA_ADDR_TAIL_reg[19]_C_0 ,
    \DMA_ADDR_TAIL_reg[19]_P_2 ,
    \DMA_ADDR_TAIL_reg[18]_P_0 ,
    \DMA_ADDR_TAIL_reg[18]_C_0 ,
    \DMA_ADDR_TAIL_reg[18]_P_1 ,
    \DMA_ADDR_TAIL_reg[17]_P_0 ,
    \DMA_ADDR_TAIL_reg[17]_C_0 ,
    \DMA_ADDR_TAIL_reg[17]_P_1 ,
    \DMA_ADDR_TAIL_reg[16]_P_0 ,
    \DMA_ADDR_TAIL_reg[16]_C_0 ,
    \DMA_ADDR_TAIL_reg[16]_P_1 ,
    \DMA_ADDR_TAIL_reg[15]_P_0 ,
    \DMA_ADDR_TAIL_reg[15]_C_0 ,
    \DMA_ADDR_TAIL_reg[15]_P_1 ,
    \DMA_ADDR_TAIL_reg[14]_P_0 ,
    \DMA_ADDR_TAIL_reg[14]_C_0 ,
    \DMA_ADDR_TAIL_reg[14]_P_1 ,
    \DMA_ADDR_TAIL_reg[13]_P_0 ,
    \DMA_ADDR_TAIL_reg[13]_C_0 ,
    \DMA_ADDR_TAIL_reg[13]_P_1 ,
    \DMA_ADDR_TAIL_reg[12]_P_0 ,
    \DMA_ADDR_TAIL_reg[12]_C_0 ,
    \DMA_ADDR_TAIL_reg[12]_P_1 ,
    \DMA_ADDR_TAIL_reg[11]_P_0 ,
    \DMA_ADDR_TAIL_reg[11]_C_0 ,
    \DMA_ADDR_TAIL_reg[11]_P_1 ,
    \DMA_ADDR_TAIL_reg[10]_P_0 ,
    \DMA_ADDR_TAIL_reg[10]_C_0 ,
    \DMA_ADDR_TAIL_reg[10]_P_1 ,
    \DMA_ADDR_TAIL_reg[9]_P_0 ,
    \DMA_ADDR_TAIL_reg[9]_C_0 ,
    \DMA_ADDR_TAIL_reg[9]_P_1 ,
    \DMA_ADDR_TAIL_reg[8]_P_0 ,
    \DMA_ADDR_TAIL_reg[8]_C_0 ,
    \DMA_ADDR_TAIL_reg[8]_P_1 ,
    \DMA_ADDR_TAIL_reg[7]_P_0 ,
    \DMA_ADDR_TAIL_reg[7]_C_0 ,
    \DMA_ADDR_TAIL_reg[7]_P_1 ,
    \DMA_ADDR_TAIL_reg[6]_P_0 ,
    \DMA_ADDR_TAIL_reg[6]_C_0 ,
    \DMA_ADDR_TAIL_reg[6]_P_1 ,
    \DMA_ADDR_TAIL_reg[5]_P_0 ,
    \DMA_ADDR_TAIL_reg[5]_C_0 ,
    \DMA_ADDR_TAIL_reg[5]_P_1 ,
    \DMA_ADDR_TAIL_reg[4]_P_0 ,
    \DMA_ADDR_TAIL_reg[4]_C_0 ,
    \DMA_ADDR_TAIL_reg[4]_P_1 ,
    \DMA_ADDR_TAIL_reg[3]_P_0 ,
    \DMA_ADDR_TAIL_reg[3]_C_0 ,
    \DMA_ADDR_TAIL_reg[3]_P_1 ,
    \DMA_ADDR_TAIL_reg[2]_P_0 ,
    \DMA_ADDR_TAIL_reg[2]_C_0 ,
    \DMA_ADDR_TAIL_reg[2]_P_1 ,
    \DMA_ADDR_TAIL_reg[1]_P_0 ,
    \DMA_ADDR_TAIL_reg[1]_C_0 ,
    \DMA_ADDR_TAIL_reg[1]_P_1 ,
    \DMA_ADDR_TAIL_reg[0]_P_0 ,
    \DMA_ADDR_TAIL_reg[0]_C_0 ,
    \DMA_ADDR_TAIL_reg[0]_P_1 ,
    tx_addr_head,
    \R_brem_reg[0]_0 ,
    \R_brem_reg[0]_1 ,
    \R_brem_reg[5]_0 ,
    full,
    M_RVALID,
    tx_addr_start,
    \R_addr_reg[0]_1 ,
    desc_ready_reg_0,
    \R_brem_reg[14]_0 ,
    \R_brem_reg[14]_1 ,
    \R_brem_reg[15]_3 ,
    \R_brem_reg[12]_0 ,
    \R_brem_reg[13]_0 ,
    \R_brem_reg[10]_0 ,
    \R_brem_reg[11]_0 ,
    \R_brem_reg[8]_0 ,
    \R_brem_reg[9]_0 ,
    \R_brem_reg[6]_0 ,
    \R_brem_reg[7]_0 ,
    \R_brem_reg[4]_0 ,
    \R_brem_reg[2]_0 ,
    \R_brem_reg[3]_0 ,
    \R_brem_reg[0]_2 ,
    \R_brem_reg[1]_0 ,
    \DMA_BREM_reg[15]_3 ,
    tx_descriptor_rd_vld,
    M_RDATA,
    tx_addr_empty,
    R_empty_reg_1,
    R_empty_reg_2,
    CO,
    S,
    R_empty_reg_i_44_0,
    R_empty_i_17_0,
    R_empty_reg_i_128_0,
    R_empty_reg_i_63_0,
    R_empty_reg_i_32,
    \R_brem_reg[15]_i_41_0 ,
    \R_brem_reg[15]_i_13 ,
    \R_brem_reg[15]_i_144_0 ,
    \R_brem_reg[15]_i_80 ,
    \DMA_ADDR_TAIL_reg[2]_C_1 ,
    tx_addr_end,
    D,
    \R_bmove_reg[1]_0 ,
    \DMA_BREM_reg[15]_4 ,
    \R_addr_reg[31]_2 ,
    R_empty_reg_3,
    R_empty_reg_4,
    \R_brem_reg[15]_4 ,
    \CID_reg[0]_1 ,
    \M_ARADDR_reg[31]_0 ,
    \M_ARLEN_reg[0]_0 ,
    M_ARREADY);
  output R_full_reg_0;
  output [0:0]out;
  output \R_size_reg[2]_0 ;
  output [0:0]M_ARSIZE;
  output [3:0]\DMA_ADDR_TAIL_reg[31]_P_0 ;
  output [31:0]tx_addr_tail;
  output \state_reg[2]_0 ;
  output \R_addr_reg[0]_0 ;
  output [31:0]Q;
  output [31:0]R_addr2;
  output [2:0]DI;
  output [15:0]\R_brem_reg[15]_0 ;
  output \DMA_BREM_reg[14]_0 ;
  output [15:0]\DMA_BREM_reg[15]_0 ;
  output \DMA_BREM_reg[15]_1 ;
  output \DMA_BREM_reg[12]_0 ;
  output \DMA_BREM_reg[13]_0 ;
  output \DMA_BREM_reg[10]_0 ;
  output \DMA_BREM_reg[11]_0 ;
  output \DMA_BREM_reg[8]_0 ;
  output \DMA_BREM_reg[9]_0 ;
  output \DMA_BREM_reg[6]_0 ;
  output \DMA_BREM_reg[7]_0 ;
  output \DMA_BREM_reg[4]_0 ;
  output \DMA_BREM_reg[5]_0 ;
  output \DMA_BREM_reg[2]_0 ;
  output \DMA_BREM_reg[3]_0 ;
  output \DMA_BREM_reg[0]_0 ;
  output \DMA_BREM_reg[1]_0 ;
  output [0:0]\R_len_reg[0]_0 ;
  output tx_addr_tail_update;
  output [35:0]din;
  output R_done_reg_0;
  output \state_reg[0]_0 ;
  output \state_reg[0]_1 ;
  output \state_reg[0]_2 ;
  output \state_reg[0]_3 ;
  output \state_reg[0]_4 ;
  output \state_reg[0]_5 ;
  output \state_reg[0]_6 ;
  output \state_reg[0]_7 ;
  output \state_reg[0]_8 ;
  output \state_reg[0]_9 ;
  output \state_reg[0]_10 ;
  output \state_reg[0]_11 ;
  output \state_reg[0]_12 ;
  output \state_reg[0]_13 ;
  output \state_reg[0]_14 ;
  output \state_reg[0]_15 ;
  output \state_reg[0]_16 ;
  output \state_reg[0]_17 ;
  output \state_reg[0]_18 ;
  output \state_reg[0]_19 ;
  output \state_reg[0]_20 ;
  output \state_reg[0]_21 ;
  output \state_reg[0]_22 ;
  output \state_reg[0]_23 ;
  output \state_reg[0]_24 ;
  output \state_reg[0]_25 ;
  output \state_reg[0]_26 ;
  output \state_reg[0]_27 ;
  output \state_reg[0]_28 ;
  output \state_reg[0]_29 ;
  output \state_reg[0]_30 ;
  output R_full_reg_1;
  output [0:0]\R_brem_reg[15]_1 ;
  output [0:0]\CID_reg[0]_0 ;
  output [3:0]\DMA_BREM_reg[3]_1 ;
  output [3:0]\DMA_BREM_reg[7]_1 ;
  output [3:0]\DMA_BREM_reg[11]_1 ;
  output [3:0]\DMA_BREM_reg[14]_1 ;
  output [0:0]\R_addr_reg[23]_0 ;
  output [0:0]\R_brem_reg[15]_2 ;
  output [0:0]\DMA_BREM_reg[15]_2 ;
  output [0:0]\tx_addr_head_reg[31] ;
  output [3:0]\tx_addr_end_reg[31] ;
  output [3:0]\tx_addr_end_reg[27] ;
  output [3:0]\DMA_ADDR_TAIL_reg[27]_P_0 ;
  output [3:0]\tx_addr_end_reg[23] ;
  output [3:0]\DMA_ADDR_TAIL_reg[23]_P_0 ;
  output [3:0]\tx_addr_end_reg[19] ;
  output [3:0]\DMA_ADDR_TAIL_reg[19]_P_0 ;
  output [3:0]\tx_addr_head_reg[15] ;
  output [3:0]\tx_addr_end_reg[15] ;
  output [3:0]\tx_addr_head_reg[11] ;
  output [3:0]\tx_addr_end_reg[11] ;
  output [3:0]\tx_addr_head_reg[7] ;
  output [3:0]\tx_addr_end_reg[7] ;
  output [3:0]\tx_addr_head_reg[3] ;
  output [3:0]\tx_addr_end_reg[3] ;
  output M_RREADY;
  output wr_en;
  output [0:0]\R_addr_reg[31]_0 ;
  output [0:0]\R_addr_reg[31]_1 ;
  output R_empty_reg_0;
  output [3:0]M_ARID;
  output [31:0]M_ARADDR;
  output [7:0]M_ARLEN;
  output M_ARVALID;
  output tx_descriptor_rd_rdy;
  input R_first_reg_0;
  input ACLK;
  input conf_tx_reset;
  input R_full14_out;
  input conf_tx_en;
  input \M_ARSIZE_reg[1]_0 ;
  input \DMA_ADDR_TAIL_reg[31]_P_1 ;
  input \DMA_ADDR_TAIL_reg[31]_C_0 ;
  input \DMA_ADDR_TAIL_reg[31]_P_2 ;
  input \DMA_ADDR_TAIL_reg[30]_P_0 ;
  input \DMA_ADDR_TAIL_reg[30]_C_0 ;
  input \DMA_ADDR_TAIL_reg[30]_P_1 ;
  input \DMA_ADDR_TAIL_reg[29]_P_0 ;
  input \DMA_ADDR_TAIL_reg[29]_C_0 ;
  input \DMA_ADDR_TAIL_reg[29]_P_1 ;
  input \DMA_ADDR_TAIL_reg[28]_P_0 ;
  input \DMA_ADDR_TAIL_reg[28]_C_0 ;
  input \DMA_ADDR_TAIL_reg[28]_P_1 ;
  input \DMA_ADDR_TAIL_reg[27]_P_1 ;
  input \DMA_ADDR_TAIL_reg[27]_C_0 ;
  input \DMA_ADDR_TAIL_reg[27]_P_2 ;
  input \DMA_ADDR_TAIL_reg[26]_P_0 ;
  input \DMA_ADDR_TAIL_reg[26]_C_0 ;
  input \DMA_ADDR_TAIL_reg[26]_P_1 ;
  input \DMA_ADDR_TAIL_reg[25]_P_0 ;
  input \DMA_ADDR_TAIL_reg[25]_C_0 ;
  input \DMA_ADDR_TAIL_reg[25]_P_1 ;
  input \DMA_ADDR_TAIL_reg[24]_P_0 ;
  input \DMA_ADDR_TAIL_reg[24]_C_0 ;
  input \DMA_ADDR_TAIL_reg[24]_P_1 ;
  input \DMA_ADDR_TAIL_reg[23]_P_1 ;
  input \DMA_ADDR_TAIL_reg[23]_C_0 ;
  input \DMA_ADDR_TAIL_reg[23]_P_2 ;
  input \DMA_ADDR_TAIL_reg[22]_P_0 ;
  input \DMA_ADDR_TAIL_reg[22]_C_0 ;
  input \DMA_ADDR_TAIL_reg[22]_P_1 ;
  input \DMA_ADDR_TAIL_reg[21]_P_0 ;
  input \DMA_ADDR_TAIL_reg[21]_C_0 ;
  input \DMA_ADDR_TAIL_reg[21]_P_1 ;
  input \DMA_ADDR_TAIL_reg[20]_P_0 ;
  input \DMA_ADDR_TAIL_reg[20]_C_0 ;
  input \DMA_ADDR_TAIL_reg[20]_P_1 ;
  input \DMA_ADDR_TAIL_reg[19]_P_1 ;
  input \DMA_ADDR_TAIL_reg[19]_C_0 ;
  input \DMA_ADDR_TAIL_reg[19]_P_2 ;
  input \DMA_ADDR_TAIL_reg[18]_P_0 ;
  input \DMA_ADDR_TAIL_reg[18]_C_0 ;
  input \DMA_ADDR_TAIL_reg[18]_P_1 ;
  input \DMA_ADDR_TAIL_reg[17]_P_0 ;
  input \DMA_ADDR_TAIL_reg[17]_C_0 ;
  input \DMA_ADDR_TAIL_reg[17]_P_1 ;
  input \DMA_ADDR_TAIL_reg[16]_P_0 ;
  input \DMA_ADDR_TAIL_reg[16]_C_0 ;
  input \DMA_ADDR_TAIL_reg[16]_P_1 ;
  input \DMA_ADDR_TAIL_reg[15]_P_0 ;
  input \DMA_ADDR_TAIL_reg[15]_C_0 ;
  input \DMA_ADDR_TAIL_reg[15]_P_1 ;
  input \DMA_ADDR_TAIL_reg[14]_P_0 ;
  input \DMA_ADDR_TAIL_reg[14]_C_0 ;
  input \DMA_ADDR_TAIL_reg[14]_P_1 ;
  input \DMA_ADDR_TAIL_reg[13]_P_0 ;
  input \DMA_ADDR_TAIL_reg[13]_C_0 ;
  input \DMA_ADDR_TAIL_reg[13]_P_1 ;
  input \DMA_ADDR_TAIL_reg[12]_P_0 ;
  input \DMA_ADDR_TAIL_reg[12]_C_0 ;
  input \DMA_ADDR_TAIL_reg[12]_P_1 ;
  input \DMA_ADDR_TAIL_reg[11]_P_0 ;
  input \DMA_ADDR_TAIL_reg[11]_C_0 ;
  input \DMA_ADDR_TAIL_reg[11]_P_1 ;
  input \DMA_ADDR_TAIL_reg[10]_P_0 ;
  input \DMA_ADDR_TAIL_reg[10]_C_0 ;
  input \DMA_ADDR_TAIL_reg[10]_P_1 ;
  input \DMA_ADDR_TAIL_reg[9]_P_0 ;
  input \DMA_ADDR_TAIL_reg[9]_C_0 ;
  input \DMA_ADDR_TAIL_reg[9]_P_1 ;
  input \DMA_ADDR_TAIL_reg[8]_P_0 ;
  input \DMA_ADDR_TAIL_reg[8]_C_0 ;
  input \DMA_ADDR_TAIL_reg[8]_P_1 ;
  input \DMA_ADDR_TAIL_reg[7]_P_0 ;
  input \DMA_ADDR_TAIL_reg[7]_C_0 ;
  input \DMA_ADDR_TAIL_reg[7]_P_1 ;
  input \DMA_ADDR_TAIL_reg[6]_P_0 ;
  input \DMA_ADDR_TAIL_reg[6]_C_0 ;
  input \DMA_ADDR_TAIL_reg[6]_P_1 ;
  input \DMA_ADDR_TAIL_reg[5]_P_0 ;
  input \DMA_ADDR_TAIL_reg[5]_C_0 ;
  input \DMA_ADDR_TAIL_reg[5]_P_1 ;
  input \DMA_ADDR_TAIL_reg[4]_P_0 ;
  input \DMA_ADDR_TAIL_reg[4]_C_0 ;
  input \DMA_ADDR_TAIL_reg[4]_P_1 ;
  input \DMA_ADDR_TAIL_reg[3]_P_0 ;
  input \DMA_ADDR_TAIL_reg[3]_C_0 ;
  input \DMA_ADDR_TAIL_reg[3]_P_1 ;
  input \DMA_ADDR_TAIL_reg[2]_P_0 ;
  input \DMA_ADDR_TAIL_reg[2]_C_0 ;
  input \DMA_ADDR_TAIL_reg[2]_P_1 ;
  input \DMA_ADDR_TAIL_reg[1]_P_0 ;
  input \DMA_ADDR_TAIL_reg[1]_C_0 ;
  input \DMA_ADDR_TAIL_reg[1]_P_1 ;
  input \DMA_ADDR_TAIL_reg[0]_P_0 ;
  input \DMA_ADDR_TAIL_reg[0]_C_0 ;
  input \DMA_ADDR_TAIL_reg[0]_P_1 ;
  input [31:0]tx_addr_head;
  input \R_brem_reg[0]_0 ;
  input [0:0]\R_brem_reg[0]_1 ;
  input \R_brem_reg[5]_0 ;
  input full;
  input M_RVALID;
  input [31:0]tx_addr_start;
  input [0:0]\R_addr_reg[0]_1 ;
  input desc_ready_reg_0;
  input [0:0]\R_brem_reg[14]_0 ;
  input \R_brem_reg[14]_1 ;
  input \R_brem_reg[15]_3 ;
  input \R_brem_reg[12]_0 ;
  input \R_brem_reg[13]_0 ;
  input \R_brem_reg[10]_0 ;
  input \R_brem_reg[11]_0 ;
  input \R_brem_reg[8]_0 ;
  input \R_brem_reg[9]_0 ;
  input \R_brem_reg[6]_0 ;
  input \R_brem_reg[7]_0 ;
  input \R_brem_reg[4]_0 ;
  input \R_brem_reg[2]_0 ;
  input \R_brem_reg[3]_0 ;
  input \R_brem_reg[0]_2 ;
  input \R_brem_reg[1]_0 ;
  input \DMA_BREM_reg[15]_3 ;
  input tx_descriptor_rd_vld;
  input [31:0]M_RDATA;
  input tx_addr_empty;
  input [0:0]R_empty_reg_1;
  input [0:0]R_empty_reg_2;
  input [0:0]CO;
  input [1:0]S;
  input [1:0]R_empty_reg_i_44_0;
  input [1:0]R_empty_i_17_0;
  input [3:0]R_empty_reg_i_128_0;
  input [3:0]R_empty_reg_i_63_0;
  input [3:0]R_empty_reg_i_32;
  input [3:0]\R_brem_reg[15]_i_41_0 ;
  input [3:0]\R_brem_reg[15]_i_13 ;
  input [3:0]\R_brem_reg[15]_i_144_0 ;
  input [3:0]\R_brem_reg[15]_i_80 ;
  input [0:0]\DMA_ADDR_TAIL_reg[2]_C_1 ;
  input [31:0]tx_addr_end;
  input [13:0]D;
  input [1:0]\R_bmove_reg[1]_0 ;
  input [15:0]\DMA_BREM_reg[15]_4 ;
  input [31:0]\R_addr_reg[31]_2 ;
  input R_empty_reg_3;
  input R_empty_reg_4;
  input [15:0]\R_brem_reg[15]_4 ;
  input [0:0]\CID_reg[0]_1 ;
  input [31:0]\M_ARADDR_reg[31]_0 ;
  input [0:0]\M_ARLEN_reg[0]_0 ;
  input M_ARREADY;

  wire ACLK;
  wire [0:0]\CID_reg[0]_0 ;
  wire [0:0]\CID_reg[0]_1 ;
  wire \CID_reg_n_0_[1] ;
  wire \CID_reg_n_0_[2] ;
  wire \CID_reg_n_0_[3] ;
  wire [0:0]CO;
  wire [13:0]D;
  wire [2:0]DI;
  wire \DMA_ADDR_TAIL[0]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[10]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[11]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[12]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[13]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[14]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[15]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[16]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[17]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[18]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[19]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[1]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[20]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[21]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[22]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[23]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[24]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[25]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[26]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[27]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[28]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[29]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[2]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[30]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[31]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[31]_P_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[3]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[4]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[5]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[6]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[7]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[8]_C_i_1_n_0 ;
  wire \DMA_ADDR_TAIL[9]_C_i_1_n_0 ;
  wire DMA_ADDR_TAIL_UPDATE_i_1_n_0;
  wire \DMA_ADDR_TAIL_reg[0]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[0]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[0]_LDC_n_0 ;
  wire \DMA_ADDR_TAIL_reg[0]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[0]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[0]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[10]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[10]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[10]_LDC_n_0 ;
  wire \DMA_ADDR_TAIL_reg[10]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[10]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[10]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[11]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[11]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[11]_LDC_n_0 ;
  wire \DMA_ADDR_TAIL_reg[11]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[11]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[11]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[12]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[12]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[12]_LDC_n_0 ;
  wire \DMA_ADDR_TAIL_reg[12]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[12]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[12]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[13]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[13]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[13]_LDC_n_0 ;
  wire \DMA_ADDR_TAIL_reg[13]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[13]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[13]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[14]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[14]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[14]_LDC_n_0 ;
  wire \DMA_ADDR_TAIL_reg[14]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[14]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[14]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[15]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[15]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[15]_LDC_n_0 ;
  wire \DMA_ADDR_TAIL_reg[15]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[15]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[15]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[16]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[16]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[16]_LDC_n_0 ;
  wire \DMA_ADDR_TAIL_reg[16]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[16]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[16]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[17]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[17]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[17]_LDC_n_0 ;
  wire \DMA_ADDR_TAIL_reg[17]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[17]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[17]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[18]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[18]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[18]_LDC_n_0 ;
  wire \DMA_ADDR_TAIL_reg[18]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[18]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[18]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[19]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[19]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[19]_LDC_n_0 ;
  wire [3:0]\DMA_ADDR_TAIL_reg[19]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[19]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[19]_P_2 ;
  wire \DMA_ADDR_TAIL_reg[19]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[1]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[1]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[1]_LDC_n_0 ;
  wire \DMA_ADDR_TAIL_reg[1]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[1]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[1]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[20]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[20]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[20]_LDC_n_0 ;
  wire \DMA_ADDR_TAIL_reg[20]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[20]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[20]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[21]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[21]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[21]_LDC_n_0 ;
  wire \DMA_ADDR_TAIL_reg[21]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[21]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[21]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[22]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[22]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[22]_LDC_n_0 ;
  wire \DMA_ADDR_TAIL_reg[22]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[22]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[22]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[23]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[23]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[23]_LDC_n_0 ;
  wire [3:0]\DMA_ADDR_TAIL_reg[23]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[23]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[23]_P_2 ;
  wire \DMA_ADDR_TAIL_reg[23]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[24]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[24]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[24]_LDC_n_0 ;
  wire \DMA_ADDR_TAIL_reg[24]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[24]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[24]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[25]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[25]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[25]_LDC_n_0 ;
  wire \DMA_ADDR_TAIL_reg[25]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[25]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[25]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[26]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[26]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[26]_LDC_n_0 ;
  wire \DMA_ADDR_TAIL_reg[26]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[26]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[26]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[27]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[27]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[27]_LDC_n_0 ;
  wire [3:0]\DMA_ADDR_TAIL_reg[27]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[27]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[27]_P_2 ;
  wire \DMA_ADDR_TAIL_reg[27]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[28]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[28]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[28]_LDC_n_0 ;
  wire \DMA_ADDR_TAIL_reg[28]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[28]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[28]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[29]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[29]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[29]_LDC_n_0 ;
  wire \DMA_ADDR_TAIL_reg[29]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[29]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[29]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[2]_C_0 ;
  wire [0:0]\DMA_ADDR_TAIL_reg[2]_C_1 ;
  wire \DMA_ADDR_TAIL_reg[2]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[2]_LDC_n_0 ;
  wire \DMA_ADDR_TAIL_reg[2]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[2]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[2]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[30]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[30]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[30]_LDC_n_0 ;
  wire \DMA_ADDR_TAIL_reg[30]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[30]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[30]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[31]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[31]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[31]_LDC_n_0 ;
  wire [3:0]\DMA_ADDR_TAIL_reg[31]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[31]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[31]_P_2 ;
  wire \DMA_ADDR_TAIL_reg[31]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[3]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[3]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[3]_LDC_n_0 ;
  wire \DMA_ADDR_TAIL_reg[3]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[3]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[3]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[4]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[4]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[4]_LDC_n_0 ;
  wire \DMA_ADDR_TAIL_reg[4]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[4]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[4]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[5]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[5]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[5]_LDC_n_0 ;
  wire \DMA_ADDR_TAIL_reg[5]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[5]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[5]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[6]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[6]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[6]_LDC_n_0 ;
  wire \DMA_ADDR_TAIL_reg[6]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[6]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[6]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[7]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[7]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[7]_LDC_n_0 ;
  wire \DMA_ADDR_TAIL_reg[7]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[7]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[7]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[8]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[8]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[8]_LDC_n_0 ;
  wire \DMA_ADDR_TAIL_reg[8]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[8]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[8]_P_n_0 ;
  wire \DMA_ADDR_TAIL_reg[9]_C_0 ;
  wire \DMA_ADDR_TAIL_reg[9]_C_n_0 ;
  wire \DMA_ADDR_TAIL_reg[9]_LDC_n_0 ;
  wire \DMA_ADDR_TAIL_reg[9]_P_0 ;
  wire \DMA_ADDR_TAIL_reg[9]_P_1 ;
  wire \DMA_ADDR_TAIL_reg[9]_P_n_0 ;
  wire \DMA_BREM[11]_i_3_n_0 ;
  wire \DMA_BREM[11]_i_4_n_0 ;
  wire \DMA_BREM[11]_i_5_n_0 ;
  wire \DMA_BREM[11]_i_6_n_0 ;
  wire \DMA_BREM[15]_i_3_n_0 ;
  wire \DMA_BREM[15]_i_4_n_0 ;
  wire \DMA_BREM[15]_i_5_n_0 ;
  wire \DMA_BREM[15]_i_6_n_0 ;
  wire \DMA_BREM[3]_i_3_n_0 ;
  wire \DMA_BREM[3]_i_4_n_0 ;
  wire \DMA_BREM[3]_i_5_n_0 ;
  wire \DMA_BREM[3]_i_6_n_0 ;
  wire \DMA_BREM[7]_i_3_n_0 ;
  wire \DMA_BREM[7]_i_4_n_0 ;
  wire \DMA_BREM[7]_i_5_n_0 ;
  wire \DMA_BREM[7]_i_6_n_0 ;
  wire \DMA_BREM_reg[0]_0 ;
  wire \DMA_BREM_reg[10]_0 ;
  wire \DMA_BREM_reg[11]_0 ;
  wire [3:0]\DMA_BREM_reg[11]_1 ;
  wire \DMA_BREM_reg[11]_i_2_n_0 ;
  wire \DMA_BREM_reg[11]_i_2_n_1 ;
  wire \DMA_BREM_reg[11]_i_2_n_2 ;
  wire \DMA_BREM_reg[11]_i_2_n_3 ;
  wire \DMA_BREM_reg[12]_0 ;
  wire \DMA_BREM_reg[13]_0 ;
  wire \DMA_BREM_reg[14]_0 ;
  wire [3:0]\DMA_BREM_reg[14]_1 ;
  wire [15:0]\DMA_BREM_reg[15]_0 ;
  wire \DMA_BREM_reg[15]_1 ;
  wire [0:0]\DMA_BREM_reg[15]_2 ;
  wire \DMA_BREM_reg[15]_3 ;
  wire [15:0]\DMA_BREM_reg[15]_4 ;
  wire \DMA_BREM_reg[15]_i_2_n_1 ;
  wire \DMA_BREM_reg[15]_i_2_n_2 ;
  wire \DMA_BREM_reg[15]_i_2_n_3 ;
  wire \DMA_BREM_reg[1]_0 ;
  wire \DMA_BREM_reg[2]_0 ;
  wire \DMA_BREM_reg[3]_0 ;
  wire [3:0]\DMA_BREM_reg[3]_1 ;
  wire \DMA_BREM_reg[3]_i_2_n_0 ;
  wire \DMA_BREM_reg[3]_i_2_n_1 ;
  wire \DMA_BREM_reg[3]_i_2_n_2 ;
  wire \DMA_BREM_reg[3]_i_2_n_3 ;
  wire \DMA_BREM_reg[4]_0 ;
  wire \DMA_BREM_reg[5]_0 ;
  wire \DMA_BREM_reg[6]_0 ;
  wire \DMA_BREM_reg[7]_0 ;
  wire [3:0]\DMA_BREM_reg[7]_1 ;
  wire \DMA_BREM_reg[7]_i_2_n_0 ;
  wire \DMA_BREM_reg[7]_i_2_n_1 ;
  wire \DMA_BREM_reg[7]_i_2_n_2 ;
  wire \DMA_BREM_reg[7]_i_2_n_3 ;
  wire \DMA_BREM_reg[8]_0 ;
  wire \DMA_BREM_reg[9]_0 ;
  wire [13:0]DMA_WCHUNK;
  wire \DMA_WCHUNK[13]_i_1__0_n_0 ;
  wire [31:0]M_ARADDR;
  wire [31:0]\M_ARADDR_reg[31]_0 ;
  wire [3:0]M_ARID;
  wire \M_ARID[1]_i_1_n_0 ;
  wire \M_ARID[2]_i_1_n_0 ;
  wire \M_ARID[3]_i_1_n_0 ;
  wire \M_ARID[3]_i_2_n_0 ;
  wire [7:0]M_ARLEN;
  wire \M_ARLEN[1]_i_1_n_0 ;
  wire \M_ARLEN[2]_i_1_n_0 ;
  wire \M_ARLEN[3]_i_1_n_0 ;
  wire \M_ARLEN[4]_i_1_n_0 ;
  wire \M_ARLEN[5]_i_1_n_0 ;
  wire \M_ARLEN[6]_i_1_n_0 ;
  wire \M_ARLEN[7]_i_1_n_0 ;
  wire \M_ARLEN[7]_i_2_n_0 ;
  wire [0:0]\M_ARLEN_reg[0]_0 ;
  wire M_ARREADY;
  wire [0:0]M_ARSIZE;
  wire \M_ARSIZE_reg[1]_0 ;
  wire M_ARVALID;
  wire M_ARVALID_i_1_n_0;
  wire [31:0]M_RDATA;
  wire M_RREADY;
  wire M_RVALID;
  wire [31:0]Q;
  wire [31:0]R_addr2;
  wire \R_addr[11]_i_4_n_0 ;
  wire \R_addr[11]_i_5_n_0 ;
  wire \R_addr[11]_i_6_n_0 ;
  wire \R_addr[11]_i_7_n_0 ;
  wire \R_addr[15]_i_4_n_0 ;
  wire \R_addr[15]_i_5_n_0 ;
  wire \R_addr[15]_i_6_n_0 ;
  wire \R_addr[15]_i_7_n_0 ;
  wire \R_addr[31]_i_10_n_0 ;
  wire \R_addr[31]_i_15_n_0 ;
  wire \R_addr[31]_i_1_n_0 ;
  wire \R_addr[31]_i_3_n_0 ;
  wire \R_addr[31]_i_5_n_0 ;
  wire \R_addr[31]_i_9_n_0 ;
  wire \R_addr[3]_i_4_n_0 ;
  wire \R_addr[3]_i_5_n_0 ;
  wire \R_addr[3]_i_6_n_0 ;
  wire \R_addr[3]_i_7_n_0 ;
  wire \R_addr[4]_i_4_n_0 ;
  wire \R_addr[7]_i_4_n_0 ;
  wire \R_addr[7]_i_5_n_0 ;
  wire \R_addr[7]_i_6_n_0 ;
  wire \R_addr[7]_i_7_n_0 ;
  wire \R_addr_reg[0]_0 ;
  wire [0:0]\R_addr_reg[0]_1 ;
  wire \R_addr_reg[11]_i_3_n_0 ;
  wire \R_addr_reg[11]_i_3_n_1 ;
  wire \R_addr_reg[11]_i_3_n_2 ;
  wire \R_addr_reg[11]_i_3_n_3 ;
  wire \R_addr_reg[12]_i_3_n_0 ;
  wire \R_addr_reg[12]_i_3_n_1 ;
  wire \R_addr_reg[12]_i_3_n_2 ;
  wire \R_addr_reg[12]_i_3_n_3 ;
  wire \R_addr_reg[12]_i_3_n_4 ;
  wire \R_addr_reg[12]_i_3_n_5 ;
  wire \R_addr_reg[12]_i_3_n_6 ;
  wire \R_addr_reg[12]_i_3_n_7 ;
  wire \R_addr_reg[15]_i_3_n_0 ;
  wire \R_addr_reg[15]_i_3_n_1 ;
  wire \R_addr_reg[15]_i_3_n_2 ;
  wire \R_addr_reg[15]_i_3_n_3 ;
  wire \R_addr_reg[16]_i_3_n_0 ;
  wire \R_addr_reg[16]_i_3_n_1 ;
  wire \R_addr_reg[16]_i_3_n_2 ;
  wire \R_addr_reg[16]_i_3_n_3 ;
  wire \R_addr_reg[16]_i_3_n_4 ;
  wire \R_addr_reg[16]_i_3_n_5 ;
  wire \R_addr_reg[16]_i_3_n_6 ;
  wire \R_addr_reg[16]_i_3_n_7 ;
  wire \R_addr_reg[19]_i_3_n_0 ;
  wire \R_addr_reg[19]_i_3_n_1 ;
  wire \R_addr_reg[19]_i_3_n_2 ;
  wire \R_addr_reg[19]_i_3_n_3 ;
  wire \R_addr_reg[20]_i_3_n_0 ;
  wire \R_addr_reg[20]_i_3_n_1 ;
  wire \R_addr_reg[20]_i_3_n_2 ;
  wire \R_addr_reg[20]_i_3_n_3 ;
  wire \R_addr_reg[20]_i_3_n_4 ;
  wire \R_addr_reg[20]_i_3_n_5 ;
  wire \R_addr_reg[20]_i_3_n_6 ;
  wire \R_addr_reg[20]_i_3_n_7 ;
  wire [0:0]\R_addr_reg[23]_0 ;
  wire \R_addr_reg[23]_i_3_n_0 ;
  wire \R_addr_reg[23]_i_3_n_1 ;
  wire \R_addr_reg[23]_i_3_n_2 ;
  wire \R_addr_reg[23]_i_3_n_3 ;
  wire \R_addr_reg[24]_i_3_n_0 ;
  wire \R_addr_reg[24]_i_3_n_1 ;
  wire \R_addr_reg[24]_i_3_n_2 ;
  wire \R_addr_reg[24]_i_3_n_3 ;
  wire \R_addr_reg[24]_i_3_n_4 ;
  wire \R_addr_reg[24]_i_3_n_5 ;
  wire \R_addr_reg[24]_i_3_n_6 ;
  wire \R_addr_reg[24]_i_3_n_7 ;
  wire \R_addr_reg[27]_i_3_n_0 ;
  wire \R_addr_reg[27]_i_3_n_1 ;
  wire \R_addr_reg[27]_i_3_n_2 ;
  wire \R_addr_reg[27]_i_3_n_3 ;
  wire \R_addr_reg[28]_i_3_n_0 ;
  wire \R_addr_reg[28]_i_3_n_1 ;
  wire \R_addr_reg[28]_i_3_n_2 ;
  wire \R_addr_reg[28]_i_3_n_3 ;
  wire \R_addr_reg[28]_i_3_n_4 ;
  wire \R_addr_reg[28]_i_3_n_5 ;
  wire \R_addr_reg[28]_i_3_n_6 ;
  wire \R_addr_reg[28]_i_3_n_7 ;
  wire [0:0]\R_addr_reg[31]_0 ;
  wire [0:0]\R_addr_reg[31]_1 ;
  wire [31:0]\R_addr_reg[31]_2 ;
  wire \R_addr_reg[31]_i_6_n_2 ;
  wire \R_addr_reg[31]_i_6_n_3 ;
  wire \R_addr_reg[31]_i_6_n_5 ;
  wire \R_addr_reg[31]_i_6_n_6 ;
  wire \R_addr_reg[31]_i_6_n_7 ;
  wire \R_addr_reg[31]_i_8_n_1 ;
  wire \R_addr_reg[31]_i_8_n_2 ;
  wire \R_addr_reg[31]_i_8_n_3 ;
  wire \R_addr_reg[3]_i_3_n_0 ;
  wire \R_addr_reg[3]_i_3_n_1 ;
  wire \R_addr_reg[3]_i_3_n_2 ;
  wire \R_addr_reg[3]_i_3_n_3 ;
  wire \R_addr_reg[4]_i_3_n_0 ;
  wire \R_addr_reg[4]_i_3_n_1 ;
  wire \R_addr_reg[4]_i_3_n_2 ;
  wire \R_addr_reg[4]_i_3_n_3 ;
  wire \R_addr_reg[4]_i_3_n_4 ;
  wire \R_addr_reg[4]_i_3_n_5 ;
  wire \R_addr_reg[4]_i_3_n_6 ;
  wire \R_addr_reg[4]_i_3_n_7 ;
  wire \R_addr_reg[7]_i_3_n_0 ;
  wire \R_addr_reg[7]_i_3_n_1 ;
  wire \R_addr_reg[7]_i_3_n_2 ;
  wire \R_addr_reg[7]_i_3_n_3 ;
  wire \R_addr_reg[8]_i_3_n_0 ;
  wire \R_addr_reg[8]_i_3_n_1 ;
  wire \R_addr_reg[8]_i_3_n_2 ;
  wire \R_addr_reg[8]_i_3_n_3 ;
  wire \R_addr_reg[8]_i_3_n_4 ;
  wire \R_addr_reg[8]_i_3_n_5 ;
  wire \R_addr_reg[8]_i_3_n_6 ;
  wire \R_addr_reg[8]_i_3_n_7 ;
  wire [15:0]R_bmove;
  wire \R_bmove[10]_i_1_n_0 ;
  wire \R_bmove[11]_i_1_n_0 ;
  wire \R_bmove[12]_i_1_n_0 ;
  wire \R_bmove[13]_i_1_n_0 ;
  wire \R_bmove[14]_i_1_n_0 ;
  wire \R_bmove[15]_i_10_n_0 ;
  wire \R_bmove[15]_i_11_n_0 ;
  wire \R_bmove[15]_i_12_n_0 ;
  wire \R_bmove[15]_i_13_n_0 ;
  wire \R_bmove[15]_i_14_n_0 ;
  wire \R_bmove[15]_i_15_n_0 ;
  wire \R_bmove[15]_i_16_n_0 ;
  wire \R_bmove[15]_i_17_n_0 ;
  wire \R_bmove[15]_i_18_n_0 ;
  wire \R_bmove[15]_i_1_n_0 ;
  wire \R_bmove[15]_i_2_n_0 ;
  wire \R_bmove[15]_i_5_n_0 ;
  wire \R_bmove[15]_i_6_n_0 ;
  wire \R_bmove[15]_i_7_n_0 ;
  wire \R_bmove[15]_i_8_n_0 ;
  wire \R_bmove[15]_i_9_n_0 ;
  wire \R_bmove[2]_i_1_n_0 ;
  wire \R_bmove[3]_i_1_n_0 ;
  wire \R_bmove[4]_i_1_n_0 ;
  wire \R_bmove[5]_i_1_n_0 ;
  wire \R_bmove[6]_i_1_n_0 ;
  wire \R_bmove[7]_i_1_n_0 ;
  wire \R_bmove[8]_i_1_n_0 ;
  wire \R_bmove[9]_i_1_n_0 ;
  wire \R_bmove_reg[15]_i_3_n_2 ;
  wire \R_bmove_reg[15]_i_3_n_3 ;
  wire \R_bmove_reg[15]_i_4_n_0 ;
  wire \R_bmove_reg[15]_i_4_n_1 ;
  wire \R_bmove_reg[15]_i_4_n_2 ;
  wire \R_bmove_reg[15]_i_4_n_3 ;
  wire [1:0]\R_bmove_reg[1]_0 ;
  wire \R_brem[11]_i_16_n_0 ;
  wire \R_brem[11]_i_17_n_0 ;
  wire \R_brem[11]_i_18_n_0 ;
  wire \R_brem[11]_i_19_n_0 ;
  wire \R_brem[15]_i_100_n_0 ;
  wire \R_brem[15]_i_101_n_0 ;
  wire \R_brem[15]_i_107_n_0 ;
  wire \R_brem[15]_i_108_n_0 ;
  wire \R_brem[15]_i_109_n_0 ;
  wire \R_brem[15]_i_110_n_0 ;
  wire \R_brem[15]_i_111_n_0 ;
  wire \R_brem[15]_i_112_n_0 ;
  wire \R_brem[15]_i_113_n_0 ;
  wire \R_brem[15]_i_114_n_0 ;
  wire \R_brem[15]_i_149_n_0 ;
  wire \R_brem[15]_i_150_n_0 ;
  wire \R_brem[15]_i_151_n_0 ;
  wire \R_brem[15]_i_152_n_0 ;
  wire \R_brem[15]_i_158_n_0 ;
  wire \R_brem[15]_i_159_n_0 ;
  wire \R_brem[15]_i_160_n_0 ;
  wire \R_brem[15]_i_161_n_0 ;
  wire \R_brem[15]_i_162_n_0 ;
  wire \R_brem[15]_i_163_n_0 ;
  wire \R_brem[15]_i_164_n_0 ;
  wire \R_brem[15]_i_165_n_0 ;
  wire \R_brem[15]_i_195_n_0 ;
  wire \R_brem[15]_i_196_n_0 ;
  wire \R_brem[15]_i_197_n_0 ;
  wire \R_brem[15]_i_198_n_0 ;
  wire \R_brem[15]_i_1_n_0 ;
  wire \R_brem[15]_i_203_n_0 ;
  wire \R_brem[15]_i_204_n_0 ;
  wire \R_brem[15]_i_205_n_0 ;
  wire \R_brem[15]_i_206_n_0 ;
  wire \R_brem[15]_i_207_n_0 ;
  wire \R_brem[15]_i_208_n_0 ;
  wire \R_brem[15]_i_209_n_0 ;
  wire \R_brem[15]_i_210_n_0 ;
  wire \R_brem[15]_i_215_n_0 ;
  wire \R_brem[15]_i_216_n_0 ;
  wire \R_brem[15]_i_217_n_0 ;
  wire \R_brem[15]_i_218_n_0 ;
  wire \R_brem[15]_i_21_n_0 ;
  wire \R_brem[15]_i_22_n_0 ;
  wire \R_brem[15]_i_48_n_0 ;
  wire \R_brem[15]_i_54_n_0 ;
  wire \R_brem[15]_i_55_n_0 ;
  wire \R_brem[15]_i_56_n_0 ;
  wire \R_brem[15]_i_57_n_0 ;
  wire \R_brem[15]_i_58_n_0 ;
  wire \R_brem[15]_i_59_n_0 ;
  wire \R_brem[15]_i_5_n_0 ;
  wire \R_brem[15]_i_60_n_0 ;
  wire \R_brem[15]_i_61_n_0 ;
  wire \R_brem[15]_i_6_n_0 ;
  wire \R_brem[15]_i_85_n_0 ;
  wire \R_brem[15]_i_86_n_0 ;
  wire \R_brem[15]_i_87_n_0 ;
  wire \R_brem[15]_i_88_n_0 ;
  wire \R_brem[15]_i_98_n_0 ;
  wire \R_brem[15]_i_99_n_0 ;
  wire \R_brem[3]_i_16_n_0 ;
  wire \R_brem[3]_i_17_n_0 ;
  wire \R_brem[3]_i_18_n_0 ;
  wire \R_brem[3]_i_19_n_0 ;
  wire \R_brem[7]_i_18_n_0 ;
  wire \R_brem[7]_i_19_n_0 ;
  wire \R_brem[7]_i_20_n_0 ;
  wire \R_brem[7]_i_21_n_0 ;
  wire \R_brem_reg[0]_0 ;
  wire [0:0]\R_brem_reg[0]_1 ;
  wire \R_brem_reg[0]_2 ;
  wire \R_brem_reg[10]_0 ;
  wire \R_brem_reg[11]_0 ;
  wire \R_brem_reg[11]_i_7_n_0 ;
  wire \R_brem_reg[11]_i_7_n_1 ;
  wire \R_brem_reg[11]_i_7_n_2 ;
  wire \R_brem_reg[11]_i_7_n_3 ;
  wire \R_brem_reg[11]_i_7_n_4 ;
  wire \R_brem_reg[11]_i_7_n_5 ;
  wire \R_brem_reg[11]_i_7_n_6 ;
  wire \R_brem_reg[11]_i_7_n_7 ;
  wire \R_brem_reg[12]_0 ;
  wire \R_brem_reg[13]_0 ;
  wire [0:0]\R_brem_reg[14]_0 ;
  wire \R_brem_reg[14]_1 ;
  wire [15:0]\R_brem_reg[15]_0 ;
  wire [0:0]\R_brem_reg[15]_1 ;
  wire [0:0]\R_brem_reg[15]_2 ;
  wire \R_brem_reg[15]_3 ;
  wire [15:0]\R_brem_reg[15]_4 ;
  wire \R_brem_reg[15]_i_106_n_0 ;
  wire \R_brem_reg[15]_i_106_n_1 ;
  wire \R_brem_reg[15]_i_106_n_2 ;
  wire \R_brem_reg[15]_i_106_n_3 ;
  wire [3:0]\R_brem_reg[15]_i_13 ;
  wire [3:0]\R_brem_reg[15]_i_144_0 ;
  wire \R_brem_reg[15]_i_144_n_1 ;
  wire \R_brem_reg[15]_i_144_n_2 ;
  wire \R_brem_reg[15]_i_144_n_3 ;
  wire \R_brem_reg[15]_i_157_n_0 ;
  wire \R_brem_reg[15]_i_157_n_1 ;
  wire \R_brem_reg[15]_i_157_n_2 ;
  wire \R_brem_reg[15]_i_157_n_3 ;
  wire \R_brem_reg[15]_i_194_n_0 ;
  wire \R_brem_reg[15]_i_194_n_1 ;
  wire \R_brem_reg[15]_i_194_n_2 ;
  wire \R_brem_reg[15]_i_194_n_3 ;
  wire \R_brem_reg[15]_i_24_n_1 ;
  wire \R_brem_reg[15]_i_24_n_2 ;
  wire \R_brem_reg[15]_i_24_n_3 ;
  wire \R_brem_reg[15]_i_36_n_1 ;
  wire \R_brem_reg[15]_i_36_n_2 ;
  wire \R_brem_reg[15]_i_36_n_3 ;
  wire \R_brem_reg[15]_i_36_n_4 ;
  wire \R_brem_reg[15]_i_36_n_5 ;
  wire \R_brem_reg[15]_i_36_n_6 ;
  wire \R_brem_reg[15]_i_36_n_7 ;
  wire [3:0]\R_brem_reg[15]_i_41_0 ;
  wire \R_brem_reg[15]_i_41_n_1 ;
  wire \R_brem_reg[15]_i_41_n_2 ;
  wire \R_brem_reg[15]_i_41_n_3 ;
  wire \R_brem_reg[15]_i_53_n_0 ;
  wire \R_brem_reg[15]_i_53_n_1 ;
  wire \R_brem_reg[15]_i_53_n_2 ;
  wire \R_brem_reg[15]_i_53_n_3 ;
  wire [3:0]\R_brem_reg[15]_i_80 ;
  wire \R_brem_reg[15]_i_97_n_0 ;
  wire \R_brem_reg[15]_i_97_n_1 ;
  wire \R_brem_reg[15]_i_97_n_2 ;
  wire \R_brem_reg[15]_i_97_n_3 ;
  wire \R_brem_reg[1]_0 ;
  wire \R_brem_reg[2]_0 ;
  wire \R_brem_reg[3]_0 ;
  wire \R_brem_reg[3]_i_7_n_0 ;
  wire \R_brem_reg[3]_i_7_n_1 ;
  wire \R_brem_reg[3]_i_7_n_2 ;
  wire \R_brem_reg[3]_i_7_n_3 ;
  wire \R_brem_reg[3]_i_7_n_4 ;
  wire \R_brem_reg[3]_i_7_n_5 ;
  wire \R_brem_reg[3]_i_7_n_6 ;
  wire \R_brem_reg[3]_i_7_n_7 ;
  wire \R_brem_reg[4]_0 ;
  wire \R_brem_reg[5]_0 ;
  wire \R_brem_reg[6]_0 ;
  wire \R_brem_reg[7]_0 ;
  wire \R_brem_reg[7]_i_7_n_0 ;
  wire \R_brem_reg[7]_i_7_n_1 ;
  wire \R_brem_reg[7]_i_7_n_2 ;
  wire \R_brem_reg[7]_i_7_n_3 ;
  wire \R_brem_reg[7]_i_7_n_4 ;
  wire \R_brem_reg[7]_i_7_n_5 ;
  wire \R_brem_reg[7]_i_7_n_6 ;
  wire \R_brem_reg[7]_i_7_n_7 ;
  wire \R_brem_reg[8]_0 ;
  wire \R_brem_reg[9]_0 ;
  wire [8:0]R_cnt;
  wire \R_cnt[0]_i_1_n_0 ;
  wire \R_cnt[1]_i_1_n_0 ;
  wire \R_cnt[2]_i_1_n_0 ;
  wire \R_cnt[3]_i_1_n_0 ;
  wire \R_cnt[4]_i_1_n_0 ;
  wire \R_cnt[4]_i_2_n_0 ;
  wire \R_cnt[5]_i_1_n_0 ;
  wire \R_cnt[5]_i_2_n_0 ;
  wire \R_cnt[6]_i_1_n_0 ;
  wire \R_cnt[7]_i_1_n_0 ;
  wire \R_cnt[8]_i_1_n_0 ;
  wire \R_cnt[8]_i_2_n_0 ;
  wire \R_cnt[8]_i_3_n_0 ;
  wire R_ctl2;
  wire \R_ctl[1]_i_1_n_0 ;
  wire \R_ctl[1]_i_2_n_0 ;
  wire \R_ctl[2]_i_1_n_0 ;
  wire \R_ctl[2]_i_2_n_0 ;
  wire \R_ctl[3]_i_1_n_0 ;
  wire \R_ctl[3]_i_2_n_0 ;
  wire \R_ctl[4]_i_10_n_0 ;
  wire \R_ctl[4]_i_13_n_0 ;
  wire \R_ctl[4]_i_14_n_0 ;
  wire \R_ctl[4]_i_15_n_0 ;
  wire \R_ctl[4]_i_17_n_0 ;
  wire \R_ctl[4]_i_18_n_0 ;
  wire \R_ctl[4]_i_19_n_0 ;
  wire \R_ctl[4]_i_1_n_0 ;
  wire \R_ctl[4]_i_20_n_0 ;
  wire \R_ctl[4]_i_21_n_0 ;
  wire \R_ctl[4]_i_22_n_0 ;
  wire \R_ctl[4]_i_23_n_0 ;
  wire \R_ctl[4]_i_24_n_0 ;
  wire \R_ctl[4]_i_25_n_0 ;
  wire \R_ctl[4]_i_26_n_0 ;
  wire \R_ctl[4]_i_27_n_0 ;
  wire \R_ctl[4]_i_28_n_0 ;
  wire \R_ctl[4]_i_2_n_0 ;
  wire \R_ctl[4]_i_3_n_0 ;
  wire \R_ctl[4]_i_4_n_0 ;
  wire \R_ctl[4]_i_5_n_0 ;
  wire \R_ctl[4]_i_6_n_0 ;
  wire \R_ctl[4]_i_7_n_0 ;
  wire \R_ctl[4]_i_8_n_0 ;
  wire \R_ctl[4]_i_9_n_0 ;
  wire \R_ctl_reg[4]_i_11_n_2 ;
  wire \R_ctl_reg[4]_i_11_n_3 ;
  wire \R_ctl_reg[4]_i_12_n_0 ;
  wire \R_ctl_reg[4]_i_12_n_1 ;
  wire \R_ctl_reg[4]_i_12_n_2 ;
  wire \R_ctl_reg[4]_i_12_n_3 ;
  wire \R_ctl_reg[4]_i_16_n_0 ;
  wire \R_ctl_reg[4]_i_16_n_1 ;
  wire \R_ctl_reg[4]_i_16_n_2 ;
  wire \R_ctl_reg[4]_i_16_n_3 ;
  wire R_done0;
  wire R_done_i_10_n_0;
  wire R_done_i_11_n_0;
  wire R_done_i_12_n_0;
  wire R_done_i_13_n_0;
  wire R_done_i_14_n_0;
  wire R_done_i_1_n_0;
  wire R_done_i_3_n_0;
  wire R_done_i_5_n_0;
  wire R_done_i_6_n_0;
  wire R_done_i_7_n_0;
  wire R_done_i_8_n_0;
  wire R_done_i_9_n_0;
  wire R_done_reg_0;
  wire R_done_reg_i_4_n_0;
  wire R_done_reg_i_4_n_1;
  wire R_done_reg_i_4_n_2;
  wire R_done_reg_i_4_n_3;
  wire R_done_reg_n_0;
  wire R_empty_i_102_n_0;
  wire R_empty_i_129_n_0;
  wire R_empty_i_130_n_0;
  wire R_empty_i_131_n_0;
  wire R_empty_i_132_n_0;
  wire R_empty_i_138_n_0;
  wire R_empty_i_140_n_0;
  wire R_empty_i_143_n_0;
  wire R_empty_i_144_n_0;
  wire R_empty_i_145_n_0;
  wire R_empty_i_146_n_0;
  wire R_empty_i_151_n_0;
  wire R_empty_i_153_n_0;
  wire R_empty_i_155_n_0;
  wire R_empty_i_156_n_0;
  wire R_empty_i_157_n_0;
  wire R_empty_i_158_n_0;
  wire [1:0]R_empty_i_17_0;
  wire R_empty_i_1_n_0;
  wire R_empty_i_2_n_0;
  wire R_empty_reg_0;
  wire [0:0]R_empty_reg_1;
  wire [0:0]R_empty_reg_2;
  wire R_empty_reg_3;
  wire R_empty_reg_4;
  wire R_empty_reg_i_100_n_0;
  wire R_empty_reg_i_100_n_1;
  wire R_empty_reg_i_100_n_2;
  wire R_empty_reg_i_100_n_3;
  wire [3:0]R_empty_reg_i_128_0;
  wire R_empty_reg_i_128_n_0;
  wire R_empty_reg_i_128_n_1;
  wire R_empty_reg_i_128_n_2;
  wire R_empty_reg_i_128_n_3;
  wire R_empty_reg_i_137_n_0;
  wire R_empty_reg_i_137_n_1;
  wire R_empty_reg_i_137_n_2;
  wire R_empty_reg_i_137_n_3;
  wire R_empty_reg_i_142_n_0;
  wire R_empty_reg_i_142_n_1;
  wire R_empty_reg_i_142_n_2;
  wire R_empty_reg_i_142_n_3;
  wire [3:0]R_empty_reg_i_32;
  wire [1:0]R_empty_reg_i_44_0;
  wire R_empty_reg_i_44_n_1;
  wire R_empty_reg_i_44_n_2;
  wire R_empty_reg_i_44_n_3;
  wire [3:0]R_empty_reg_i_63_0;
  wire R_empty_reg_i_63_n_1;
  wire R_empty_reg_i_63_n_2;
  wire R_empty_reg_i_63_n_3;
  wire R_first;
  wire R_first_i_3_n_0;
  wire R_first_reg_0;
  wire R_first_reg_n_0;
  wire R_full14_out;
  wire R_full_reg_0;
  wire R_full_reg_1;
  wire R_go_i_1_n_0;
  wire R_go_reg_n_0;
  wire R_last_i_10_n_0;
  wire R_last_i_1_n_0;
  wire R_last_i_3_n_0;
  wire R_last_i_5_n_0;
  wire R_last_i_6_n_0;
  wire R_last_i_7_n_0;
  wire R_last_i_8_n_0;
  wire R_last_i_9_n_0;
  wire R_last_reg_i_2_n_2;
  wire R_last_reg_i_2_n_3;
  wire R_last_reg_i_4_n_0;
  wire R_last_reg_i_4_n_1;
  wire R_last_reg_i_4_n_2;
  wire R_last_reg_i_4_n_3;
  wire R_last_reg_n_0;
  wire [8:1]R_len;
  wire \R_len[0]_i_1_n_0 ;
  wire \R_len[1]_i_1_n_0 ;
  wire \R_len[2]_i_1_n_0 ;
  wire \R_len[2]_i_3_n_0 ;
  wire \R_len[3]_i_1_n_0 ;
  wire \R_len[4]_i_1_n_0 ;
  wire \R_len[5]_i_1_n_0 ;
  wire \R_len[6]_i_1_n_0 ;
  wire \R_len[7]_i_1_n_0 ;
  wire \R_len[8]_i_1_n_0 ;
  wire [0:0]\R_len_reg[0]_0 ;
  wire \R_len_reg[2]_i_2_n_0 ;
  wire \R_len_reg[2]_i_2_n_1 ;
  wire \R_len_reg[2]_i_2_n_2 ;
  wire \R_len_reg[2]_i_2_n_3 ;
  wire \R_len_reg[2]_i_2_n_4 ;
  wire \R_len_reg[2]_i_2_n_5 ;
  wire \R_len_reg[2]_i_2_n_6 ;
  wire \R_len_reg[6]_i_2_n_0 ;
  wire \R_len_reg[6]_i_2_n_1 ;
  wire \R_len_reg[6]_i_2_n_2 ;
  wire \R_len_reg[6]_i_2_n_3 ;
  wire \R_len_reg[6]_i_2_n_4 ;
  wire \R_len_reg[6]_i_2_n_5 ;
  wire \R_len_reg[6]_i_2_n_6 ;
  wire \R_len_reg[6]_i_2_n_7 ;
  wire \R_len_reg[8]_i_2_n_3 ;
  wire \R_len_reg[8]_i_2_n_6 ;
  wire \R_len_reg[8]_i_2_n_7 ;
  wire \R_size_reg[2]_0 ;
  wire [1:0]S;
  wire conf_tx_en;
  wire conf_tx_reset;
  wire desc_ready1_out;
  wire desc_ready_i_1_n_0;
  wire desc_ready_reg_0;
  wire [35:0]din;
  wire full;
  (* MARK_DEBUG *) (* RTL_KEEP = "true" *) wire [2:0]state;
  wire \state[0]_i_1_n_0 ;
  wire \state[0]_i_2_n_0 ;
  wire \state[1]_i_1_n_0 ;
  wire \state[2]_i_1_n_0 ;
  (* RTL_KEEP = "true" *) wire [1:0]state_read;
  wire \state_read[0]_i_1_n_0 ;
  wire \state_read[0]_i_2_n_0 ;
  wire \state_read[1]_i_1_n_0 ;
  wire \state_reg[0]_0 ;
  wire \state_reg[0]_1 ;
  wire \state_reg[0]_10 ;
  wire \state_reg[0]_11 ;
  wire \state_reg[0]_12 ;
  wire \state_reg[0]_13 ;
  wire \state_reg[0]_14 ;
  wire \state_reg[0]_15 ;
  wire \state_reg[0]_16 ;
  wire \state_reg[0]_17 ;
  wire \state_reg[0]_18 ;
  wire \state_reg[0]_19 ;
  wire \state_reg[0]_2 ;
  wire \state_reg[0]_20 ;
  wire \state_reg[0]_21 ;
  wire \state_reg[0]_22 ;
  wire \state_reg[0]_23 ;
  wire \state_reg[0]_24 ;
  wire \state_reg[0]_25 ;
  wire \state_reg[0]_26 ;
  wire \state_reg[0]_27 ;
  wire \state_reg[0]_28 ;
  wire \state_reg[0]_29 ;
  wire \state_reg[0]_3 ;
  wire \state_reg[0]_30 ;
  wire \state_reg[0]_4 ;
  wire \state_reg[0]_5 ;
  wire \state_reg[0]_6 ;
  wire \state_reg[0]_7 ;
  wire \state_reg[0]_8 ;
  wire \state_reg[0]_9 ;
  wire \state_reg[2]_0 ;
  wire tx_addr_empty;
  wire [31:0]tx_addr_end;
  wire [3:0]\tx_addr_end_reg[11] ;
  wire [3:0]\tx_addr_end_reg[15] ;
  wire [3:0]\tx_addr_end_reg[19] ;
  wire [3:0]\tx_addr_end_reg[23] ;
  wire [3:0]\tx_addr_end_reg[27] ;
  wire [3:0]\tx_addr_end_reg[31] ;
  wire [3:0]\tx_addr_end_reg[3] ;
  wire [3:0]\tx_addr_end_reg[7] ;
  wire [31:0]tx_addr_head;
  wire [3:0]\tx_addr_head_reg[11] ;
  wire [3:0]\tx_addr_head_reg[15] ;
  wire [0:0]\tx_addr_head_reg[31] ;
  wire [3:0]\tx_addr_head_reg[3] ;
  wire [3:0]\tx_addr_head_reg[7] ;
  wire [31:0]tx_addr_start;
  wire [31:0]tx_addr_tail;
  wire tx_addr_tail_update;
  wire tx_descriptor_rd_rdy;
  wire tx_descriptor_rd_vld;
  wire wr_en;
  wire [3:3]\NLW_DMA_BREM_reg[15]_i_2_CO_UNCONNECTED ;
  wire [3:2]\NLW_R_addr_reg[31]_i_6_CO_UNCONNECTED ;
  wire [3:3]\NLW_R_addr_reg[31]_i_6_O_UNCONNECTED ;
  wire [3:3]\NLW_R_addr_reg[31]_i_8_CO_UNCONNECTED ;
  wire [3:3]\NLW_R_bmove_reg[15]_i_3_CO_UNCONNECTED ;
  wire [3:0]\NLW_R_bmove_reg[15]_i_3_O_UNCONNECTED ;
  wire [3:0]\NLW_R_bmove_reg[15]_i_4_O_UNCONNECTED ;
  wire [3:0]\NLW_R_brem_reg[15]_i_106_O_UNCONNECTED ;
  wire [3:0]\NLW_R_brem_reg[15]_i_144_O_UNCONNECTED ;
  wire [3:0]\NLW_R_brem_reg[15]_i_157_O_UNCONNECTED ;
  wire [3:0]\NLW_R_brem_reg[15]_i_194_O_UNCONNECTED ;
  wire [3:0]\NLW_R_brem_reg[15]_i_24_O_UNCONNECTED ;
  wire [3:3]\NLW_R_brem_reg[15]_i_36_CO_UNCONNECTED ;
  wire [3:0]\NLW_R_brem_reg[15]_i_41_O_UNCONNECTED ;
  wire [3:0]\NLW_R_brem_reg[15]_i_53_O_UNCONNECTED ;
  wire [3:0]\NLW_R_brem_reg[15]_i_97_O_UNCONNECTED ;
  wire [3:3]\NLW_R_ctl_reg[4]_i_11_CO_UNCONNECTED ;
  wire [3:0]\NLW_R_ctl_reg[4]_i_11_O_UNCONNECTED ;
  wire [3:0]\NLW_R_ctl_reg[4]_i_12_O_UNCONNECTED ;
  wire [3:0]\NLW_R_ctl_reg[4]_i_16_O_UNCONNECTED ;
  wire [3:1]NLW_R_done_reg_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_R_done_reg_i_2_O_UNCONNECTED;
  wire [3:0]NLW_R_done_reg_i_4_O_UNCONNECTED;
  wire [3:0]NLW_R_empty_reg_i_100_O_UNCONNECTED;
  wire [3:0]NLW_R_empty_reg_i_128_O_UNCONNECTED;
  wire [3:0]NLW_R_empty_reg_i_137_O_UNCONNECTED;
  wire [3:0]NLW_R_empty_reg_i_142_O_UNCONNECTED;
  wire [3:3]NLW_R_empty_reg_i_44_CO_UNCONNECTED;
  wire [3:0]NLW_R_empty_reg_i_44_O_UNCONNECTED;
  wire [3:0]NLW_R_empty_reg_i_63_O_UNCONNECTED;
  wire [3:2]NLW_R_last_reg_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_R_last_reg_i_2_O_UNCONNECTED;
  wire [3:0]NLW_R_last_reg_i_4_O_UNCONNECTED;
  wire [0:0]\NLW_R_len_reg[2]_i_2_O_UNCONNECTED ;
  wire [3:1]\NLW_R_len_reg[8]_i_2_CO_UNCONNECTED ;
  wire [3:2]\NLW_R_len_reg[8]_i_2_O_UNCONNECTED ;

  assign out[0] = state[1];
  FDCE #(
    .INIT(1'b0)) 
    \CID_reg[0] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\CID_reg[0]_1 ),
        .Q(\CID_reg[0]_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \CID_reg[1] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARID[1]_i_1_n_0 ),
        .Q(\CID_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \CID_reg[2] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARID[2]_i_1_n_0 ),
        .Q(\CID_reg_n_0_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \CID_reg[3] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARID[3]_i_2_n_0 ),
        .Q(\CID_reg_n_0_[3] ));
  LUT6 #(
    .INIT(64'hFFCFAAAA0000AAAA)) 
    \DMA_ADDR_TAIL[0]_C_i_1 
       (.I0(tx_addr_start[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(state[0]),
        .I4(conf_tx_en),
        .I5(\DMA_ADDR_TAIL_reg[0]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[0]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \DMA_ADDR_TAIL[10]_C_i_1 
       (.I0(Q[10]),
        .I1(conf_tx_en),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_1 ),
        .I3(tx_addr_start[10]),
        .I4(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[10]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[10]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \DMA_ADDR_TAIL[11]_C_i_1 
       (.I0(Q[11]),
        .I1(conf_tx_en),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_1 ),
        .I3(tx_addr_start[11]),
        .I4(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[11]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[11]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \DMA_ADDR_TAIL[12]_C_i_1 
       (.I0(Q[12]),
        .I1(conf_tx_en),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_1 ),
        .I3(tx_addr_start[12]),
        .I4(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[12]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[12]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \DMA_ADDR_TAIL[13]_C_i_1 
       (.I0(Q[13]),
        .I1(conf_tx_en),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_1 ),
        .I3(tx_addr_start[13]),
        .I4(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[13]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[13]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \DMA_ADDR_TAIL[14]_C_i_1 
       (.I0(Q[14]),
        .I1(conf_tx_en),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_1 ),
        .I3(tx_addr_start[14]),
        .I4(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[14]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[14]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \DMA_ADDR_TAIL[15]_C_i_1 
       (.I0(Q[15]),
        .I1(conf_tx_en),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_1 ),
        .I3(tx_addr_start[15]),
        .I4(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[15]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[15]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \DMA_ADDR_TAIL[16]_C_i_1 
       (.I0(Q[16]),
        .I1(conf_tx_en),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_1 ),
        .I3(tx_addr_start[16]),
        .I4(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[16]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[16]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \DMA_ADDR_TAIL[17]_C_i_1 
       (.I0(Q[17]),
        .I1(conf_tx_en),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_1 ),
        .I3(tx_addr_start[17]),
        .I4(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[17]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[17]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \DMA_ADDR_TAIL[18]_C_i_1 
       (.I0(Q[18]),
        .I1(conf_tx_en),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_1 ),
        .I3(tx_addr_start[18]),
        .I4(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[18]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[18]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \DMA_ADDR_TAIL[19]_C_i_1 
       (.I0(Q[19]),
        .I1(conf_tx_en),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_1 ),
        .I3(tx_addr_start[19]),
        .I4(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[19]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[19]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFCFAAAA0000AAAA)) 
    \DMA_ADDR_TAIL[1]_C_i_1 
       (.I0(tx_addr_start[1]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(state[0]),
        .I4(conf_tx_en),
        .I5(\DMA_ADDR_TAIL_reg[1]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[1]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \DMA_ADDR_TAIL[20]_C_i_1 
       (.I0(Q[20]),
        .I1(conf_tx_en),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_1 ),
        .I3(tx_addr_start[20]),
        .I4(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[20]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[20]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \DMA_ADDR_TAIL[21]_C_i_1 
       (.I0(Q[21]),
        .I1(conf_tx_en),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_1 ),
        .I3(tx_addr_start[21]),
        .I4(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[21]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[21]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \DMA_ADDR_TAIL[22]_C_i_1 
       (.I0(Q[22]),
        .I1(conf_tx_en),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_1 ),
        .I3(tx_addr_start[22]),
        .I4(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[22]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[22]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \DMA_ADDR_TAIL[23]_C_i_1 
       (.I0(Q[23]),
        .I1(conf_tx_en),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_1 ),
        .I3(tx_addr_start[23]),
        .I4(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[23]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[23]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \DMA_ADDR_TAIL[24]_C_i_1 
       (.I0(Q[24]),
        .I1(conf_tx_en),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_1 ),
        .I3(tx_addr_start[24]),
        .I4(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[24]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[24]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \DMA_ADDR_TAIL[25]_C_i_1 
       (.I0(Q[25]),
        .I1(conf_tx_en),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_1 ),
        .I3(tx_addr_start[25]),
        .I4(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[25]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[25]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \DMA_ADDR_TAIL[26]_C_i_1 
       (.I0(Q[26]),
        .I1(conf_tx_en),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_1 ),
        .I3(tx_addr_start[26]),
        .I4(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[26]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[26]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \DMA_ADDR_TAIL[27]_C_i_1 
       (.I0(Q[27]),
        .I1(conf_tx_en),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_1 ),
        .I3(tx_addr_start[27]),
        .I4(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[27]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[27]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \DMA_ADDR_TAIL[28]_C_i_1 
       (.I0(Q[28]),
        .I1(conf_tx_en),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_1 ),
        .I3(tx_addr_start[28]),
        .I4(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[28]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[28]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \DMA_ADDR_TAIL[29]_C_i_1 
       (.I0(Q[29]),
        .I1(conf_tx_en),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_1 ),
        .I3(tx_addr_start[29]),
        .I4(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[29]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[29]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \DMA_ADDR_TAIL[2]_C_i_1 
       (.I0(Q[2]),
        .I1(conf_tx_en),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_1 ),
        .I3(tx_addr_start[2]),
        .I4(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[2]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[2]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \DMA_ADDR_TAIL[30]_C_i_1 
       (.I0(Q[30]),
        .I1(conf_tx_en),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_1 ),
        .I3(tx_addr_start[30]),
        .I4(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[30]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[30]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \DMA_ADDR_TAIL[31]_C_i_1 
       (.I0(Q[31]),
        .I1(conf_tx_en),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_1 ),
        .I3(tx_addr_start[31]),
        .I4(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[31]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[31]_C_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h04FF)) 
    \DMA_ADDR_TAIL[31]_P_i_1 
       (.I0(state[1]),
        .I1(state[2]),
        .I2(state[0]),
        .I3(conf_tx_en),
        .O(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \DMA_ADDR_TAIL[3]_C_i_1 
       (.I0(Q[3]),
        .I1(conf_tx_en),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_1 ),
        .I3(tx_addr_start[3]),
        .I4(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[3]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[3]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \DMA_ADDR_TAIL[4]_C_i_1 
       (.I0(Q[4]),
        .I1(conf_tx_en),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_1 ),
        .I3(tx_addr_start[4]),
        .I4(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[4]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[4]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \DMA_ADDR_TAIL[5]_C_i_1 
       (.I0(Q[5]),
        .I1(conf_tx_en),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_1 ),
        .I3(tx_addr_start[5]),
        .I4(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[5]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[5]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \DMA_ADDR_TAIL[6]_C_i_1 
       (.I0(Q[6]),
        .I1(conf_tx_en),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_1 ),
        .I3(tx_addr_start[6]),
        .I4(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[6]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[6]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \DMA_ADDR_TAIL[7]_C_i_1 
       (.I0(Q[7]),
        .I1(conf_tx_en),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_1 ),
        .I3(tx_addr_start[7]),
        .I4(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[7]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[7]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \DMA_ADDR_TAIL[8]_C_i_1 
       (.I0(Q[8]),
        .I1(conf_tx_en),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_1 ),
        .I3(tx_addr_start[8]),
        .I4(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[8]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[8]_C_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \DMA_ADDR_TAIL[9]_C_i_1 
       (.I0(Q[9]),
        .I1(conf_tx_en),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_1 ),
        .I3(tx_addr_start[9]),
        .I4(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[9]_C_n_0 ),
        .O(\DMA_ADDR_TAIL[9]_C_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hCCCA0000)) 
    DMA_ADDR_TAIL_UPDATE_i_1
       (.I0(state[2]),
        .I1(tx_addr_tail_update),
        .I2(state[1]),
        .I3(state[0]),
        .I4(conf_tx_en),
        .O(DMA_ADDR_TAIL_UPDATE_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    DMA_ADDR_TAIL_UPDATE_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(conf_tx_reset),
        .D(DMA_ADDR_TAIL_UPDATE_i_1_n_0),
        .Q(tx_addr_tail_update));
  FDCE \DMA_ADDR_TAIL_reg[0]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[0]_C_0 ),
        .D(\DMA_ADDR_TAIL[0]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[0]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[0]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[0]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[0]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[0]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[0]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[0]_P_1 ),
        .PRE(\DMA_ADDR_TAIL_reg[0]_P_0 ),
        .Q(\DMA_ADDR_TAIL_reg[0]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[10]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[10]_C_0 ),
        .D(\DMA_ADDR_TAIL[10]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[10]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[10]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[10]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[10]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[10]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[10]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[10]_P_1 ),
        .PRE(\DMA_ADDR_TAIL_reg[10]_P_0 ),
        .Q(\DMA_ADDR_TAIL_reg[10]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[11]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[11]_C_0 ),
        .D(\DMA_ADDR_TAIL[11]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[11]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[11]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[11]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[11]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[11]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[11]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[11]_P_1 ),
        .PRE(\DMA_ADDR_TAIL_reg[11]_P_0 ),
        .Q(\DMA_ADDR_TAIL_reg[11]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[12]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[12]_C_0 ),
        .D(\DMA_ADDR_TAIL[12]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[12]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[12]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[12]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[12]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[12]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[12]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[12]_P_1 ),
        .PRE(\DMA_ADDR_TAIL_reg[12]_P_0 ),
        .Q(\DMA_ADDR_TAIL_reg[12]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[13]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[13]_C_0 ),
        .D(\DMA_ADDR_TAIL[13]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[13]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[13]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[13]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[13]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[13]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[13]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[13]_P_1 ),
        .PRE(\DMA_ADDR_TAIL_reg[13]_P_0 ),
        .Q(\DMA_ADDR_TAIL_reg[13]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[14]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[14]_C_0 ),
        .D(\DMA_ADDR_TAIL[14]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[14]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[14]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[14]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[14]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[14]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[14]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[14]_P_1 ),
        .PRE(\DMA_ADDR_TAIL_reg[14]_P_0 ),
        .Q(\DMA_ADDR_TAIL_reg[14]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[15]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[15]_C_0 ),
        .D(\DMA_ADDR_TAIL[15]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[15]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[15]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[15]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[15]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[15]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[15]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[15]_P_1 ),
        .PRE(\DMA_ADDR_TAIL_reg[15]_P_0 ),
        .Q(\DMA_ADDR_TAIL_reg[15]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[16]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[16]_C_0 ),
        .D(\DMA_ADDR_TAIL[16]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[16]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[16]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[16]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[16]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[16]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[16]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[16]_P_1 ),
        .PRE(\DMA_ADDR_TAIL_reg[16]_P_0 ),
        .Q(\DMA_ADDR_TAIL_reg[16]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[17]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[17]_C_0 ),
        .D(\DMA_ADDR_TAIL[17]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[17]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[17]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[17]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[17]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[17]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[17]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[17]_P_1 ),
        .PRE(\DMA_ADDR_TAIL_reg[17]_P_0 ),
        .Q(\DMA_ADDR_TAIL_reg[17]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[18]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[18]_C_0 ),
        .D(\DMA_ADDR_TAIL[18]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[18]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[18]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[18]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[18]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[18]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[18]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[18]_P_1 ),
        .PRE(\DMA_ADDR_TAIL_reg[18]_P_0 ),
        .Q(\DMA_ADDR_TAIL_reg[18]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[19]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[19]_C_0 ),
        .D(\DMA_ADDR_TAIL[19]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[19]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[19]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[19]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[19]_P_1 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[19]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[19]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[19]_P_2 ),
        .PRE(\DMA_ADDR_TAIL_reg[19]_P_1 ),
        .Q(\DMA_ADDR_TAIL_reg[19]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[1]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[1]_C_0 ),
        .D(\DMA_ADDR_TAIL[1]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[1]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[1]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[1]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[1]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[1]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[1]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[1]_P_1 ),
        .PRE(\DMA_ADDR_TAIL_reg[1]_P_0 ),
        .Q(\DMA_ADDR_TAIL_reg[1]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[20]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[20]_C_0 ),
        .D(\DMA_ADDR_TAIL[20]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[20]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[20]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[20]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[20]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[20]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[20]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[20]_P_1 ),
        .PRE(\DMA_ADDR_TAIL_reg[20]_P_0 ),
        .Q(\DMA_ADDR_TAIL_reg[20]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[21]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[21]_C_0 ),
        .D(\DMA_ADDR_TAIL[21]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[21]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[21]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[21]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[21]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[21]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[21]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[21]_P_1 ),
        .PRE(\DMA_ADDR_TAIL_reg[21]_P_0 ),
        .Q(\DMA_ADDR_TAIL_reg[21]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[22]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[22]_C_0 ),
        .D(\DMA_ADDR_TAIL[22]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[22]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[22]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[22]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[22]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[22]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[22]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[22]_P_1 ),
        .PRE(\DMA_ADDR_TAIL_reg[22]_P_0 ),
        .Q(\DMA_ADDR_TAIL_reg[22]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[23]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[23]_C_0 ),
        .D(\DMA_ADDR_TAIL[23]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[23]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[23]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[23]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[23]_P_1 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[23]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[23]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[23]_P_2 ),
        .PRE(\DMA_ADDR_TAIL_reg[23]_P_1 ),
        .Q(\DMA_ADDR_TAIL_reg[23]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[24]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[24]_C_0 ),
        .D(\DMA_ADDR_TAIL[24]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[24]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[24]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[24]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[24]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[24]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[24]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[24]_P_1 ),
        .PRE(\DMA_ADDR_TAIL_reg[24]_P_0 ),
        .Q(\DMA_ADDR_TAIL_reg[24]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[25]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[25]_C_0 ),
        .D(\DMA_ADDR_TAIL[25]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[25]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[25]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[25]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[25]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[25]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[25]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[25]_P_1 ),
        .PRE(\DMA_ADDR_TAIL_reg[25]_P_0 ),
        .Q(\DMA_ADDR_TAIL_reg[25]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[26]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[26]_C_0 ),
        .D(\DMA_ADDR_TAIL[26]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[26]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[26]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[26]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[26]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[26]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[26]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[26]_P_1 ),
        .PRE(\DMA_ADDR_TAIL_reg[26]_P_0 ),
        .Q(\DMA_ADDR_TAIL_reg[26]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[27]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[27]_C_0 ),
        .D(\DMA_ADDR_TAIL[27]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[27]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[27]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[27]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[27]_P_1 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[27]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[27]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[27]_P_2 ),
        .PRE(\DMA_ADDR_TAIL_reg[27]_P_1 ),
        .Q(\DMA_ADDR_TAIL_reg[27]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[28]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[28]_C_0 ),
        .D(\DMA_ADDR_TAIL[28]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[28]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[28]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[28]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[28]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[28]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[28]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[28]_P_1 ),
        .PRE(\DMA_ADDR_TAIL_reg[28]_P_0 ),
        .Q(\DMA_ADDR_TAIL_reg[28]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[29]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[29]_C_0 ),
        .D(\DMA_ADDR_TAIL[29]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[29]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[29]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[29]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[29]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[29]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[29]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[29]_P_1 ),
        .PRE(\DMA_ADDR_TAIL_reg[29]_P_0 ),
        .Q(\DMA_ADDR_TAIL_reg[29]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[2]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[2]_C_0 ),
        .D(\DMA_ADDR_TAIL[2]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[2]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[2]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[2]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[2]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[2]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[2]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[2]_P_1 ),
        .PRE(\DMA_ADDR_TAIL_reg[2]_P_0 ),
        .Q(\DMA_ADDR_TAIL_reg[2]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[30]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[30]_C_0 ),
        .D(\DMA_ADDR_TAIL[30]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[30]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[30]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[30]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[30]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[30]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[30]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[30]_P_1 ),
        .PRE(\DMA_ADDR_TAIL_reg[30]_P_0 ),
        .Q(\DMA_ADDR_TAIL_reg[30]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[31]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[31]_C_0 ),
        .D(\DMA_ADDR_TAIL[31]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[31]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[31]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[31]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[31]_P_1 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[31]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[31]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[31]_P_2 ),
        .PRE(\DMA_ADDR_TAIL_reg[31]_P_1 ),
        .Q(\DMA_ADDR_TAIL_reg[31]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[3]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[3]_C_0 ),
        .D(\DMA_ADDR_TAIL[3]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[3]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[3]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[3]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[3]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[3]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[3]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[3]_P_1 ),
        .PRE(\DMA_ADDR_TAIL_reg[3]_P_0 ),
        .Q(\DMA_ADDR_TAIL_reg[3]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[4]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[4]_C_0 ),
        .D(\DMA_ADDR_TAIL[4]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[4]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[4]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[4]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[4]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[4]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[4]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[4]_P_1 ),
        .PRE(\DMA_ADDR_TAIL_reg[4]_P_0 ),
        .Q(\DMA_ADDR_TAIL_reg[4]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[5]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[5]_C_0 ),
        .D(\DMA_ADDR_TAIL[5]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[5]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[5]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[5]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[5]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[5]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[5]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[5]_P_1 ),
        .PRE(\DMA_ADDR_TAIL_reg[5]_P_0 ),
        .Q(\DMA_ADDR_TAIL_reg[5]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[6]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[6]_C_0 ),
        .D(\DMA_ADDR_TAIL[6]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[6]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[6]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[6]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[6]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[6]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[6]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[6]_P_1 ),
        .PRE(\DMA_ADDR_TAIL_reg[6]_P_0 ),
        .Q(\DMA_ADDR_TAIL_reg[6]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[7]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[7]_C_0 ),
        .D(\DMA_ADDR_TAIL[7]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[7]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[7]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[7]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[7]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[7]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[7]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[7]_P_1 ),
        .PRE(\DMA_ADDR_TAIL_reg[7]_P_0 ),
        .Q(\DMA_ADDR_TAIL_reg[7]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[8]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[8]_C_0 ),
        .D(\DMA_ADDR_TAIL[8]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[8]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[8]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[8]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[8]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[8]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[8]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[8]_P_1 ),
        .PRE(\DMA_ADDR_TAIL_reg[8]_P_0 ),
        .Q(\DMA_ADDR_TAIL_reg[8]_P_n_0 ));
  FDCE \DMA_ADDR_TAIL_reg[9]_C 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(\DMA_ADDR_TAIL_reg[9]_C_0 ),
        .D(\DMA_ADDR_TAIL[9]_C_i_1_n_0 ),
        .Q(\DMA_ADDR_TAIL_reg[9]_C_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \DMA_ADDR_TAIL_reg[9]_LDC 
       (.CLR(\DMA_ADDR_TAIL_reg[9]_C_0 ),
        .D(1'b1),
        .G(\DMA_ADDR_TAIL_reg[9]_P_0 ),
        .GE(1'b1),
        .Q(\DMA_ADDR_TAIL_reg[9]_LDC_n_0 ));
  FDPE \DMA_ADDR_TAIL_reg[9]_P 
       (.C(ACLK),
        .CE(\DMA_ADDR_TAIL[31]_P_i_1_n_0 ),
        .D(\DMA_ADDR_TAIL_reg[9]_P_1 ),
        .PRE(\DMA_ADDR_TAIL_reg[9]_P_0 ),
        .Q(\DMA_ADDR_TAIL_reg[9]_P_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \DMA_BREM[11]_i_3 
       (.I0(\DMA_BREM_reg[15]_0 [11]),
        .I1(R_bmove[11]),
        .O(\DMA_BREM[11]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \DMA_BREM[11]_i_4 
       (.I0(\DMA_BREM_reg[15]_0 [10]),
        .I1(R_bmove[10]),
        .O(\DMA_BREM[11]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \DMA_BREM[11]_i_5 
       (.I0(\DMA_BREM_reg[15]_0 [9]),
        .I1(R_bmove[9]),
        .O(\DMA_BREM[11]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \DMA_BREM[11]_i_6 
       (.I0(\DMA_BREM_reg[15]_0 [8]),
        .I1(R_bmove[8]),
        .O(\DMA_BREM[11]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \DMA_BREM[15]_i_3 
       (.I0(\DMA_BREM_reg[15]_0 [15]),
        .I1(R_bmove[15]),
        .O(\DMA_BREM[15]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \DMA_BREM[15]_i_4 
       (.I0(\DMA_BREM_reg[15]_0 [14]),
        .I1(R_bmove[14]),
        .O(\DMA_BREM[15]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \DMA_BREM[15]_i_5 
       (.I0(\DMA_BREM_reg[15]_0 [13]),
        .I1(R_bmove[13]),
        .O(\DMA_BREM[15]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \DMA_BREM[15]_i_6 
       (.I0(\DMA_BREM_reg[15]_0 [12]),
        .I1(R_bmove[12]),
        .O(\DMA_BREM[15]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \DMA_BREM[3]_i_3 
       (.I0(\DMA_BREM_reg[15]_0 [3]),
        .I1(R_bmove[3]),
        .O(\DMA_BREM[3]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \DMA_BREM[3]_i_4 
       (.I0(\DMA_BREM_reg[15]_0 [2]),
        .I1(R_bmove[2]),
        .O(\DMA_BREM[3]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \DMA_BREM[3]_i_5 
       (.I0(\DMA_BREM_reg[15]_0 [1]),
        .I1(R_bmove[1]),
        .O(\DMA_BREM[3]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \DMA_BREM[3]_i_6 
       (.I0(\DMA_BREM_reg[15]_0 [0]),
        .I1(R_bmove[0]),
        .O(\DMA_BREM[3]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \DMA_BREM[7]_i_3 
       (.I0(\DMA_BREM_reg[15]_0 [7]),
        .I1(R_bmove[7]),
        .O(\DMA_BREM[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \DMA_BREM[7]_i_4 
       (.I0(\DMA_BREM_reg[15]_0 [6]),
        .I1(R_bmove[6]),
        .O(\DMA_BREM[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \DMA_BREM[7]_i_5 
       (.I0(\DMA_BREM_reg[15]_0 [5]),
        .I1(R_bmove[5]),
        .O(\DMA_BREM[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \DMA_BREM[7]_i_6 
       (.I0(\DMA_BREM_reg[15]_0 [4]),
        .I1(R_bmove[4]),
        .O(\DMA_BREM[7]_i_6_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_BREM_reg[0] 
       (.C(ACLK),
        .CE(R_first),
        .CLR(conf_tx_reset),
        .D(\DMA_BREM_reg[15]_4 [0]),
        .Q(\DMA_BREM_reg[15]_0 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_BREM_reg[10] 
       (.C(ACLK),
        .CE(R_first),
        .CLR(conf_tx_reset),
        .D(\DMA_BREM_reg[15]_4 [10]),
        .Q(\DMA_BREM_reg[15]_0 [10]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_BREM_reg[11] 
       (.C(ACLK),
        .CE(R_first),
        .CLR(conf_tx_reset),
        .D(\DMA_BREM_reg[15]_4 [11]),
        .Q(\DMA_BREM_reg[15]_0 [11]));
  CARRY4 \DMA_BREM_reg[11]_i_2 
       (.CI(\DMA_BREM_reg[7]_i_2_n_0 ),
        .CO({\DMA_BREM_reg[11]_i_2_n_0 ,\DMA_BREM_reg[11]_i_2_n_1 ,\DMA_BREM_reg[11]_i_2_n_2 ,\DMA_BREM_reg[11]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI(\DMA_BREM_reg[15]_0 [11:8]),
        .O(\DMA_BREM_reg[11]_1 ),
        .S({\DMA_BREM[11]_i_3_n_0 ,\DMA_BREM[11]_i_4_n_0 ,\DMA_BREM[11]_i_5_n_0 ,\DMA_BREM[11]_i_6_n_0 }));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_BREM_reg[12] 
       (.C(ACLK),
        .CE(R_first),
        .CLR(conf_tx_reset),
        .D(\DMA_BREM_reg[15]_4 [12]),
        .Q(\DMA_BREM_reg[15]_0 [12]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_BREM_reg[13] 
       (.C(ACLK),
        .CE(R_first),
        .CLR(conf_tx_reset),
        .D(\DMA_BREM_reg[15]_4 [13]),
        .Q(\DMA_BREM_reg[15]_0 [13]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_BREM_reg[14] 
       (.C(ACLK),
        .CE(R_first),
        .CLR(conf_tx_reset),
        .D(\DMA_BREM_reg[15]_4 [14]),
        .Q(\DMA_BREM_reg[15]_0 [14]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_BREM_reg[15] 
       (.C(ACLK),
        .CE(R_first),
        .CLR(conf_tx_reset),
        .D(\DMA_BREM_reg[15]_4 [15]),
        .Q(\DMA_BREM_reg[15]_0 [15]));
  CARRY4 \DMA_BREM_reg[15]_i_2 
       (.CI(\DMA_BREM_reg[11]_i_2_n_0 ),
        .CO({\NLW_DMA_BREM_reg[15]_i_2_CO_UNCONNECTED [3],\DMA_BREM_reg[15]_i_2_n_1 ,\DMA_BREM_reg[15]_i_2_n_2 ,\DMA_BREM_reg[15]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\DMA_BREM_reg[15]_0 [14:12]}),
        .O(\DMA_BREM_reg[14]_1 ),
        .S({\DMA_BREM[15]_i_3_n_0 ,\DMA_BREM[15]_i_4_n_0 ,\DMA_BREM[15]_i_5_n_0 ,\DMA_BREM[15]_i_6_n_0 }));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_BREM_reg[1] 
       (.C(ACLK),
        .CE(R_first),
        .CLR(conf_tx_reset),
        .D(\DMA_BREM_reg[15]_4 [1]),
        .Q(\DMA_BREM_reg[15]_0 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_BREM_reg[2] 
       (.C(ACLK),
        .CE(R_first),
        .CLR(conf_tx_reset),
        .D(\DMA_BREM_reg[15]_4 [2]),
        .Q(\DMA_BREM_reg[15]_0 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_BREM_reg[3] 
       (.C(ACLK),
        .CE(R_first),
        .CLR(conf_tx_reset),
        .D(\DMA_BREM_reg[15]_4 [3]),
        .Q(\DMA_BREM_reg[15]_0 [3]));
  CARRY4 \DMA_BREM_reg[3]_i_2 
       (.CI(1'b0),
        .CO({\DMA_BREM_reg[3]_i_2_n_0 ,\DMA_BREM_reg[3]_i_2_n_1 ,\DMA_BREM_reg[3]_i_2_n_2 ,\DMA_BREM_reg[3]_i_2_n_3 }),
        .CYINIT(1'b1),
        .DI(\DMA_BREM_reg[15]_0 [3:0]),
        .O(\DMA_BREM_reg[3]_1 ),
        .S({\DMA_BREM[3]_i_3_n_0 ,\DMA_BREM[3]_i_4_n_0 ,\DMA_BREM[3]_i_5_n_0 ,\DMA_BREM[3]_i_6_n_0 }));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_BREM_reg[4] 
       (.C(ACLK),
        .CE(R_first),
        .CLR(conf_tx_reset),
        .D(\DMA_BREM_reg[15]_4 [4]),
        .Q(\DMA_BREM_reg[15]_0 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_BREM_reg[5] 
       (.C(ACLK),
        .CE(R_first),
        .CLR(conf_tx_reset),
        .D(\DMA_BREM_reg[15]_4 [5]),
        .Q(\DMA_BREM_reg[15]_0 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_BREM_reg[6] 
       (.C(ACLK),
        .CE(R_first),
        .CLR(conf_tx_reset),
        .D(\DMA_BREM_reg[15]_4 [6]),
        .Q(\DMA_BREM_reg[15]_0 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_BREM_reg[7] 
       (.C(ACLK),
        .CE(R_first),
        .CLR(conf_tx_reset),
        .D(\DMA_BREM_reg[15]_4 [7]),
        .Q(\DMA_BREM_reg[15]_0 [7]));
  CARRY4 \DMA_BREM_reg[7]_i_2 
       (.CI(\DMA_BREM_reg[3]_i_2_n_0 ),
        .CO({\DMA_BREM_reg[7]_i_2_n_0 ,\DMA_BREM_reg[7]_i_2_n_1 ,\DMA_BREM_reg[7]_i_2_n_2 ,\DMA_BREM_reg[7]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI(\DMA_BREM_reg[15]_0 [7:4]),
        .O(\DMA_BREM_reg[7]_1 ),
        .S({\DMA_BREM[7]_i_3_n_0 ,\DMA_BREM[7]_i_4_n_0 ,\DMA_BREM[7]_i_5_n_0 ,\DMA_BREM[7]_i_6_n_0 }));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_BREM_reg[8] 
       (.C(ACLK),
        .CE(R_first),
        .CLR(conf_tx_reset),
        .D(\DMA_BREM_reg[15]_4 [8]),
        .Q(\DMA_BREM_reg[15]_0 [8]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_BREM_reg[9] 
       (.C(ACLK),
        .CE(R_first),
        .CLR(conf_tx_reset),
        .D(\DMA_BREM_reg[15]_4 [9]),
        .Q(\DMA_BREM_reg[15]_0 [9]));
  LUT5 #(
    .INIT(32'h0001FFFF)) 
    \DMA_WCHUNK[13]_i_1__0 
       (.I0(state[1]),
        .I1(state[0]),
        .I2(state[2]),
        .I3(tx_addr_tail_update),
        .I4(conf_tx_en),
        .O(\DMA_WCHUNK[13]_i_1__0_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_WCHUNK_reg[0] 
       (.C(ACLK),
        .CE(\DMA_WCHUNK[13]_i_1__0_n_0 ),
        .CLR(conf_tx_reset),
        .D(D[0]),
        .Q(DMA_WCHUNK[0]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_WCHUNK_reg[10] 
       (.C(ACLK),
        .CE(\DMA_WCHUNK[13]_i_1__0_n_0 ),
        .CLR(conf_tx_reset),
        .D(D[10]),
        .Q(DMA_WCHUNK[10]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_WCHUNK_reg[11] 
       (.C(ACLK),
        .CE(\DMA_WCHUNK[13]_i_1__0_n_0 ),
        .CLR(conf_tx_reset),
        .D(D[11]),
        .Q(DMA_WCHUNK[11]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_WCHUNK_reg[12] 
       (.C(ACLK),
        .CE(\DMA_WCHUNK[13]_i_1__0_n_0 ),
        .CLR(conf_tx_reset),
        .D(D[12]),
        .Q(DMA_WCHUNK[12]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_WCHUNK_reg[13] 
       (.C(ACLK),
        .CE(\DMA_WCHUNK[13]_i_1__0_n_0 ),
        .CLR(conf_tx_reset),
        .D(D[13]),
        .Q(DMA_WCHUNK[13]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_WCHUNK_reg[1] 
       (.C(ACLK),
        .CE(\DMA_WCHUNK[13]_i_1__0_n_0 ),
        .CLR(conf_tx_reset),
        .D(D[1]),
        .Q(DMA_WCHUNK[1]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_WCHUNK_reg[2] 
       (.C(ACLK),
        .CE(\DMA_WCHUNK[13]_i_1__0_n_0 ),
        .CLR(conf_tx_reset),
        .D(D[2]),
        .Q(DMA_WCHUNK[2]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_WCHUNK_reg[3] 
       (.C(ACLK),
        .CE(\DMA_WCHUNK[13]_i_1__0_n_0 ),
        .CLR(conf_tx_reset),
        .D(D[3]),
        .Q(DMA_WCHUNK[3]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_WCHUNK_reg[4] 
       (.C(ACLK),
        .CE(\DMA_WCHUNK[13]_i_1__0_n_0 ),
        .CLR(conf_tx_reset),
        .D(D[4]),
        .Q(DMA_WCHUNK[4]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_WCHUNK_reg[5] 
       (.C(ACLK),
        .CE(\DMA_WCHUNK[13]_i_1__0_n_0 ),
        .CLR(conf_tx_reset),
        .D(D[5]),
        .Q(DMA_WCHUNK[5]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_WCHUNK_reg[6] 
       (.C(ACLK),
        .CE(\DMA_WCHUNK[13]_i_1__0_n_0 ),
        .CLR(conf_tx_reset),
        .D(D[6]),
        .Q(DMA_WCHUNK[6]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_WCHUNK_reg[7] 
       (.C(ACLK),
        .CE(\DMA_WCHUNK[13]_i_1__0_n_0 ),
        .CLR(conf_tx_reset),
        .D(D[7]),
        .Q(DMA_WCHUNK[7]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_WCHUNK_reg[8] 
       (.C(ACLK),
        .CE(\DMA_WCHUNK[13]_i_1__0_n_0 ),
        .CLR(conf_tx_reset),
        .D(D[8]),
        .Q(DMA_WCHUNK[8]));
  FDCE #(
    .INIT(1'b0)) 
    \DMA_WCHUNK_reg[9] 
       (.C(ACLK),
        .CE(\DMA_WCHUNK[13]_i_1__0_n_0 ),
        .CLR(conf_tx_reset),
        .D(D[9]),
        .Q(DMA_WCHUNK[9]));
  FDCE \M_ARADDR_reg[0] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [0]),
        .Q(M_ARADDR[0]));
  FDCE \M_ARADDR_reg[10] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [10]),
        .Q(M_ARADDR[10]));
  FDCE \M_ARADDR_reg[11] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [11]),
        .Q(M_ARADDR[11]));
  FDCE \M_ARADDR_reg[12] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [12]),
        .Q(M_ARADDR[12]));
  FDCE \M_ARADDR_reg[13] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [13]),
        .Q(M_ARADDR[13]));
  FDCE \M_ARADDR_reg[14] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [14]),
        .Q(M_ARADDR[14]));
  FDCE \M_ARADDR_reg[15] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [15]),
        .Q(M_ARADDR[15]));
  FDCE \M_ARADDR_reg[16] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [16]),
        .Q(M_ARADDR[16]));
  FDCE \M_ARADDR_reg[17] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [17]),
        .Q(M_ARADDR[17]));
  FDCE \M_ARADDR_reg[18] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [18]),
        .Q(M_ARADDR[18]));
  FDCE \M_ARADDR_reg[19] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [19]),
        .Q(M_ARADDR[19]));
  FDCE \M_ARADDR_reg[1] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [1]),
        .Q(M_ARADDR[1]));
  FDCE \M_ARADDR_reg[20] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [20]),
        .Q(M_ARADDR[20]));
  FDCE \M_ARADDR_reg[21] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [21]),
        .Q(M_ARADDR[21]));
  FDCE \M_ARADDR_reg[22] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [22]),
        .Q(M_ARADDR[22]));
  FDCE \M_ARADDR_reg[23] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [23]),
        .Q(M_ARADDR[23]));
  FDCE \M_ARADDR_reg[24] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [24]),
        .Q(M_ARADDR[24]));
  FDCE \M_ARADDR_reg[25] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [25]),
        .Q(M_ARADDR[25]));
  FDCE \M_ARADDR_reg[26] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [26]),
        .Q(M_ARADDR[26]));
  FDCE \M_ARADDR_reg[27] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [27]),
        .Q(M_ARADDR[27]));
  FDCE \M_ARADDR_reg[28] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [28]),
        .Q(M_ARADDR[28]));
  FDCE \M_ARADDR_reg[29] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [29]),
        .Q(M_ARADDR[29]));
  FDCE \M_ARADDR_reg[2] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [2]),
        .Q(M_ARADDR[2]));
  FDCE \M_ARADDR_reg[30] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [30]),
        .Q(M_ARADDR[30]));
  FDCE \M_ARADDR_reg[31] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [31]),
        .Q(M_ARADDR[31]));
  FDCE \M_ARADDR_reg[3] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [3]),
        .Q(M_ARADDR[3]));
  FDCE \M_ARADDR_reg[4] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [4]),
        .Q(M_ARADDR[4]));
  FDCE \M_ARADDR_reg[5] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [5]),
        .Q(M_ARADDR[5]));
  FDCE \M_ARADDR_reg[6] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [6]),
        .Q(M_ARADDR[6]));
  FDCE \M_ARADDR_reg[7] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [7]),
        .Q(M_ARADDR[7]));
  FDCE \M_ARADDR_reg[8] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [8]),
        .Q(M_ARADDR[8]));
  FDCE \M_ARADDR_reg[9] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARADDR_reg[31]_0 [9]),
        .Q(M_ARADDR[9]));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT3 #(
    .INIT(8'h60)) 
    \M_ARID[1]_i_1 
       (.I0(\CID_reg_n_0_[1] ),
        .I1(\CID_reg[0]_0 ),
        .I2(conf_tx_en),
        .O(\M_ARID[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT4 #(
    .INIT(16'h2888)) 
    \M_ARID[2]_i_1 
       (.I0(conf_tx_en),
        .I1(\CID_reg_n_0_[2] ),
        .I2(\CID_reg_n_0_[1] ),
        .I3(\CID_reg[0]_0 ),
        .O(\M_ARID[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h04FF)) 
    \M_ARID[3]_i_1 
       (.I0(state_read[1]),
        .I1(R_go_reg_n_0),
        .I2(state_read[0]),
        .I3(conf_tx_en),
        .O(\M_ARID[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT5 #(
    .INIT(32'h2AAA8000)) 
    \M_ARID[3]_i_2 
       (.I0(conf_tx_en),
        .I1(\CID_reg_n_0_[2] ),
        .I2(\CID_reg_n_0_[1] ),
        .I3(\CID_reg[0]_0 ),
        .I4(\CID_reg_n_0_[3] ),
        .O(\M_ARID[3]_i_2_n_0 ));
  FDCE \M_ARID_reg[0] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\CID_reg[0]_1 ),
        .Q(M_ARID[0]));
  FDCE \M_ARID_reg[1] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARID[1]_i_1_n_0 ),
        .Q(M_ARID[1]));
  FDCE \M_ARID_reg[2] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARID[2]_i_1_n_0 ),
        .Q(M_ARID[2]));
  FDCE \M_ARID_reg[3] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARID[3]_i_2_n_0 ),
        .Q(M_ARID[3]));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT3 #(
    .INIT(8'h82)) 
    \M_ARLEN[1]_i_1 
       (.I0(conf_tx_en),
        .I1(\R_len_reg[0]_0 ),
        .I2(R_len[1]),
        .O(\M_ARLEN[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT4 #(
    .INIT(16'h8882)) 
    \M_ARLEN[2]_i_1 
       (.I0(conf_tx_en),
        .I1(R_len[2]),
        .I2(\R_len_reg[0]_0 ),
        .I3(R_len[1]),
        .O(\M_ARLEN[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT5 #(
    .INIT(32'hAAA80002)) 
    \M_ARLEN[3]_i_1 
       (.I0(conf_tx_en),
        .I1(R_len[2]),
        .I2(\R_len_reg[0]_0 ),
        .I3(R_len[1]),
        .I4(R_len[3]),
        .O(\M_ARLEN[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAA800000002)) 
    \M_ARLEN[4]_i_1 
       (.I0(conf_tx_en),
        .I1(R_len[3]),
        .I2(R_len[1]),
        .I3(\R_len_reg[0]_0 ),
        .I4(R_len[2]),
        .I5(R_len[4]),
        .O(\M_ARLEN[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT4 #(
    .INIT(16'hA082)) 
    \M_ARLEN[5]_i_1 
       (.I0(conf_tx_en),
        .I1(\M_ARLEN[7]_i_2_n_0 ),
        .I2(R_len[5]),
        .I3(R_len[4]),
        .O(\M_ARLEN[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT5 #(
    .INIT(32'hAAA80002)) 
    \M_ARLEN[6]_i_1 
       (.I0(conf_tx_en),
        .I1(\M_ARLEN[7]_i_2_n_0 ),
        .I2(R_len[5]),
        .I3(R_len[4]),
        .I4(R_len[6]),
        .O(\M_ARLEN[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAA800000002)) 
    \M_ARLEN[7]_i_1 
       (.I0(conf_tx_en),
        .I1(\M_ARLEN[7]_i_2_n_0 ),
        .I2(R_len[4]),
        .I3(R_len[5]),
        .I4(R_len[6]),
        .I5(R_len[7]),
        .O(\M_ARLEN[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \M_ARLEN[7]_i_2 
       (.I0(R_len[2]),
        .I1(\R_len_reg[0]_0 ),
        .I2(R_len[1]),
        .I3(R_len[3]),
        .O(\M_ARLEN[7]_i_2_n_0 ));
  FDCE \M_ARLEN_reg[0] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARLEN_reg[0]_0 ),
        .Q(M_ARLEN[0]));
  FDCE \M_ARLEN_reg[1] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARLEN[1]_i_1_n_0 ),
        .Q(M_ARLEN[1]));
  FDCE \M_ARLEN_reg[2] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARLEN[2]_i_1_n_0 ),
        .Q(M_ARLEN[2]));
  FDCE \M_ARLEN_reg[3] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARLEN[3]_i_1_n_0 ),
        .Q(M_ARLEN[3]));
  FDCE \M_ARLEN_reg[4] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARLEN[4]_i_1_n_0 ),
        .Q(M_ARLEN[4]));
  FDCE \M_ARLEN_reg[5] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARLEN[5]_i_1_n_0 ),
        .Q(M_ARLEN[5]));
  FDCE \M_ARLEN_reg[6] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARLEN[6]_i_1_n_0 ),
        .Q(M_ARLEN[6]));
  FDCE \M_ARLEN_reg[7] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARLEN[7]_i_1_n_0 ),
        .Q(M_ARLEN[7]));
  FDCE \M_ARSIZE_reg[1] 
       (.C(ACLK),
        .CE(\M_ARID[3]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\M_ARSIZE_reg[1]_0 ),
        .Q(M_ARSIZE));
  LUT6 #(
    .INIT(64'hAA0AAAAA00080008)) 
    M_ARVALID_i_1
       (.I0(conf_tx_en),
        .I1(R_go_reg_n_0),
        .I2(state_read[0]),
        .I3(state_read[1]),
        .I4(M_ARREADY),
        .I5(M_ARVALID),
        .O(M_ARVALID_i_1_n_0));
  FDCE M_ARVALID_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(conf_tx_reset),
        .D(M_ARVALID_i_1_n_0),
        .Q(M_ARVALID));
  LUT3 #(
    .INIT(8'h04)) 
    M_RREADY_INST_0
       (.I0(full),
        .I1(state_read[1]),
        .I2(state_read[0]),
        .O(M_RREADY));
  LUT5 #(
    .INIT(32'h74777444)) 
    \R_addr[0]_i_2 
       (.I0(Q[0]),
        .I1(state[0]),
        .I2(tx_addr_start[0]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[0]),
        .O(\R_addr_reg[0]_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[10]_i_2 
       (.I0(\R_addr_reg[12]_i_3_n_6 ),
        .I1(state[0]),
        .I2(tx_addr_start[10]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[10]),
        .O(\state_reg[0]_21 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[11]_i_2 
       (.I0(\R_addr_reg[12]_i_3_n_5 ),
        .I1(state[0]),
        .I2(tx_addr_start[11]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[11]),
        .O(\state_reg[0]_20 ));
  LUT2 #(
    .INIT(4'h6)) 
    \R_addr[11]_i_4 
       (.I0(Q[11]),
        .I1(R_bmove[11]),
        .O(\R_addr[11]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \R_addr[11]_i_5 
       (.I0(Q[10]),
        .I1(R_bmove[10]),
        .O(\R_addr[11]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \R_addr[11]_i_6 
       (.I0(Q[9]),
        .I1(R_bmove[9]),
        .O(\R_addr[11]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \R_addr[11]_i_7 
       (.I0(Q[8]),
        .I1(R_bmove[8]),
        .O(\R_addr[11]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[12]_i_2 
       (.I0(\R_addr_reg[12]_i_3_n_4 ),
        .I1(state[0]),
        .I2(tx_addr_start[12]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[12]),
        .O(\state_reg[0]_19 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[13]_i_2 
       (.I0(\R_addr_reg[16]_i_3_n_7 ),
        .I1(state[0]),
        .I2(tx_addr_start[13]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[13]),
        .O(\state_reg[0]_18 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[14]_i_2 
       (.I0(\R_addr_reg[16]_i_3_n_6 ),
        .I1(state[0]),
        .I2(tx_addr_start[14]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[14]),
        .O(\state_reg[0]_17 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[15]_i_2 
       (.I0(\R_addr_reg[16]_i_3_n_5 ),
        .I1(state[0]),
        .I2(tx_addr_start[15]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[15]),
        .O(\state_reg[0]_16 ));
  LUT2 #(
    .INIT(4'h6)) 
    \R_addr[15]_i_4 
       (.I0(Q[15]),
        .I1(R_bmove[15]),
        .O(\R_addr[15]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \R_addr[15]_i_5 
       (.I0(Q[14]),
        .I1(R_bmove[14]),
        .O(\R_addr[15]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \R_addr[15]_i_6 
       (.I0(Q[13]),
        .I1(R_bmove[13]),
        .O(\R_addr[15]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \R_addr[15]_i_7 
       (.I0(Q[12]),
        .I1(R_bmove[12]),
        .O(\R_addr[15]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[16]_i_2 
       (.I0(\R_addr_reg[16]_i_3_n_4 ),
        .I1(state[0]),
        .I2(tx_addr_start[16]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[16]),
        .O(\state_reg[0]_15 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[17]_i_2 
       (.I0(\R_addr_reg[20]_i_3_n_7 ),
        .I1(state[0]),
        .I2(tx_addr_start[17]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[17]),
        .O(\state_reg[0]_14 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[18]_i_2 
       (.I0(\R_addr_reg[20]_i_3_n_6 ),
        .I1(state[0]),
        .I2(tx_addr_start[18]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[18]),
        .O(\state_reg[0]_13 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[19]_i_2 
       (.I0(\R_addr_reg[20]_i_3_n_5 ),
        .I1(state[0]),
        .I2(tx_addr_start[19]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[19]),
        .O(\state_reg[0]_12 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[1]_i_2 
       (.I0(\R_addr_reg[4]_i_3_n_7 ),
        .I1(state[0]),
        .I2(tx_addr_start[1]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[1]),
        .O(\state_reg[0]_30 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[20]_i_2 
       (.I0(\R_addr_reg[20]_i_3_n_4 ),
        .I1(state[0]),
        .I2(tx_addr_start[20]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[20]),
        .O(\state_reg[0]_11 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[21]_i_2 
       (.I0(\R_addr_reg[24]_i_3_n_7 ),
        .I1(state[0]),
        .I2(tx_addr_start[21]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[21]),
        .O(\state_reg[0]_10 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[22]_i_2 
       (.I0(\R_addr_reg[24]_i_3_n_6 ),
        .I1(state[0]),
        .I2(tx_addr_start[22]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[22]),
        .O(\state_reg[0]_9 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[23]_i_2 
       (.I0(\R_addr_reg[24]_i_3_n_5 ),
        .I1(state[0]),
        .I2(tx_addr_start[23]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[23]),
        .O(\state_reg[0]_8 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[24]_i_2 
       (.I0(\R_addr_reg[24]_i_3_n_4 ),
        .I1(state[0]),
        .I2(tx_addr_start[24]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[24]),
        .O(\state_reg[0]_7 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[25]_i_2 
       (.I0(\R_addr_reg[28]_i_3_n_7 ),
        .I1(state[0]),
        .I2(tx_addr_start[25]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[25]),
        .O(\state_reg[0]_6 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[26]_i_2 
       (.I0(\R_addr_reg[28]_i_3_n_6 ),
        .I1(state[0]),
        .I2(tx_addr_start[26]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[26]),
        .O(\state_reg[0]_5 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[27]_i_2 
       (.I0(\R_addr_reg[28]_i_3_n_5 ),
        .I1(state[0]),
        .I2(tx_addr_start[27]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[27]),
        .O(\state_reg[0]_4 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[28]_i_2 
       (.I0(\R_addr_reg[28]_i_3_n_4 ),
        .I1(state[0]),
        .I2(tx_addr_start[28]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[28]),
        .O(\state_reg[0]_3 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[29]_i_2 
       (.I0(\R_addr_reg[31]_i_6_n_7 ),
        .I1(state[0]),
        .I2(tx_addr_start[29]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[29]),
        .O(\state_reg[0]_2 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[2]_i_2 
       (.I0(\R_addr_reg[4]_i_3_n_6 ),
        .I1(state[0]),
        .I2(tx_addr_start[2]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[2]),
        .O(\state_reg[0]_29 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[30]_i_2 
       (.I0(\R_addr_reg[31]_i_6_n_6 ),
        .I1(state[0]),
        .I2(tx_addr_start[30]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[30]),
        .O(\state_reg[0]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00002000)) 
    \R_addr[31]_i_1 
       (.I0(\R_addr[31]_i_3_n_0 ),
        .I1(R_done_reg_n_0),
        .I2(state[0]),
        .I3(state[1]),
        .I4(state[2]),
        .I5(R_first),
        .O(\R_addr[31]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \R_addr[31]_i_10 
       (.I0(\DMA_BREM_reg[15]_0 [5]),
        .I1(\DMA_BREM_reg[15]_0 [10]),
        .I2(\DMA_BREM_reg[15]_0 [8]),
        .I3(\DMA_BREM_reg[15]_0 [12]),
        .I4(\R_addr[31]_i_15_n_0 ),
        .O(\R_addr[31]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \R_addr[31]_i_15 
       (.I0(\DMA_BREM_reg[15]_0 [3]),
        .I1(\DMA_BREM_reg[15]_0 [2]),
        .I2(\DMA_BREM_reg[15]_0 [11]),
        .I3(\DMA_BREM_reg[15]_0 [1]),
        .O(\R_addr[31]_i_15_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \R_addr[31]_i_3 
       (.I0(\R_brem[15]_i_5_n_0 ),
        .I1(\R_addr[31]_i_5_n_0 ),
        .O(\R_addr[31]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[31]_i_4 
       (.I0(\R_addr_reg[31]_i_6_n_5 ),
        .I1(state[0]),
        .I2(tx_addr_start[31]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[31]),
        .O(\state_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \R_addr[31]_i_5 
       (.I0(\R_addr[31]_i_9_n_0 ),
        .I1(\DMA_BREM_reg[15]_0 [7]),
        .I2(\DMA_BREM_reg[15]_0 [6]),
        .I3(\DMA_BREM_reg[15]_0 [14]),
        .I4(\DMA_BREM_reg[15]_0 [9]),
        .I5(\R_addr[31]_i_10_n_0 ),
        .O(\R_addr[31]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \R_addr[31]_i_9 
       (.I0(\DMA_BREM_reg[15]_0 [13]),
        .I1(\DMA_BREM_reg[15]_0 [15]),
        .I2(\DMA_BREM_reg[15]_0 [4]),
        .I3(\DMA_BREM_reg[15]_0 [0]),
        .O(\R_addr[31]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[3]_i_2 
       (.I0(\R_addr_reg[4]_i_3_n_5 ),
        .I1(state[0]),
        .I2(tx_addr_start[3]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[3]),
        .O(\state_reg[0]_28 ));
  LUT2 #(
    .INIT(4'h6)) 
    \R_addr[3]_i_4 
       (.I0(Q[3]),
        .I1(R_bmove[3]),
        .O(\R_addr[3]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \R_addr[3]_i_5 
       (.I0(Q[2]),
        .I1(R_bmove[2]),
        .O(\R_addr[3]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \R_addr[3]_i_6 
       (.I0(Q[1]),
        .I1(R_bmove[1]),
        .O(\R_addr[3]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \R_addr[3]_i_7 
       (.I0(Q[0]),
        .I1(R_bmove[0]),
        .O(\R_addr[3]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[4]_i_2 
       (.I0(\R_addr_reg[4]_i_3_n_4 ),
        .I1(state[0]),
        .I2(tx_addr_start[4]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[4]),
        .O(\state_reg[0]_27 ));
  LUT1 #(
    .INIT(2'h1)) 
    \R_addr[4]_i_4 
       (.I0(Q[1]),
        .O(\R_addr[4]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[5]_i_2 
       (.I0(\R_addr_reg[8]_i_3_n_7 ),
        .I1(state[0]),
        .I2(tx_addr_start[5]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[5]),
        .O(\state_reg[0]_26 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[6]_i_2 
       (.I0(\R_addr_reg[8]_i_3_n_6 ),
        .I1(state[0]),
        .I2(tx_addr_start[6]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[6]),
        .O(\state_reg[0]_25 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[7]_i_2 
       (.I0(\R_addr_reg[8]_i_3_n_5 ),
        .I1(state[0]),
        .I2(tx_addr_start[7]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[7]),
        .O(\state_reg[0]_24 ));
  LUT2 #(
    .INIT(4'h6)) 
    \R_addr[7]_i_4 
       (.I0(Q[7]),
        .I1(R_bmove[7]),
        .O(\R_addr[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \R_addr[7]_i_5 
       (.I0(Q[6]),
        .I1(R_bmove[6]),
        .O(\R_addr[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \R_addr[7]_i_6 
       (.I0(Q[5]),
        .I1(R_bmove[5]),
        .O(\R_addr[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \R_addr[7]_i_7 
       (.I0(Q[4]),
        .I1(R_bmove[4]),
        .O(\R_addr[7]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[8]_i_2 
       (.I0(\R_addr_reg[8]_i_3_n_4 ),
        .I1(state[0]),
        .I2(tx_addr_start[8]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[8]),
        .O(\state_reg[0]_23 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \R_addr[9]_i_2 
       (.I0(\R_addr_reg[12]_i_3_n_7 ),
        .I1(state[0]),
        .I2(tx_addr_start[9]),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_addr2[9]),
        .O(\state_reg[0]_22 ));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[0] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [0]),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[10] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [10]),
        .Q(Q[10]));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[11] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [11]),
        .Q(Q[11]));
  CARRY4 \R_addr_reg[11]_i_3 
       (.CI(\R_addr_reg[7]_i_3_n_0 ),
        .CO({\R_addr_reg[11]_i_3_n_0 ,\R_addr_reg[11]_i_3_n_1 ,\R_addr_reg[11]_i_3_n_2 ,\R_addr_reg[11]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[11:8]),
        .O(R_addr2[11:8]),
        .S({\R_addr[11]_i_4_n_0 ,\R_addr[11]_i_5_n_0 ,\R_addr[11]_i_6_n_0 ,\R_addr[11]_i_7_n_0 }));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[12] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [12]),
        .Q(Q[12]));
  CARRY4 \R_addr_reg[12]_i_3 
       (.CI(\R_addr_reg[8]_i_3_n_0 ),
        .CO({\R_addr_reg[12]_i_3_n_0 ,\R_addr_reg[12]_i_3_n_1 ,\R_addr_reg[12]_i_3_n_2 ,\R_addr_reg[12]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\R_addr_reg[12]_i_3_n_4 ,\R_addr_reg[12]_i_3_n_5 ,\R_addr_reg[12]_i_3_n_6 ,\R_addr_reg[12]_i_3_n_7 }),
        .S(Q[12:9]));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[13] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [13]),
        .Q(Q[13]));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[14] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [14]),
        .Q(Q[14]));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[15] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [15]),
        .Q(Q[15]));
  CARRY4 \R_addr_reg[15]_i_3 
       (.CI(\R_addr_reg[11]_i_3_n_0 ),
        .CO({\R_addr_reg[15]_i_3_n_0 ,\R_addr_reg[15]_i_3_n_1 ,\R_addr_reg[15]_i_3_n_2 ,\R_addr_reg[15]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[15:12]),
        .O(R_addr2[15:12]),
        .S({\R_addr[15]_i_4_n_0 ,\R_addr[15]_i_5_n_0 ,\R_addr[15]_i_6_n_0 ,\R_addr[15]_i_7_n_0 }));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[16] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [16]),
        .Q(Q[16]));
  CARRY4 \R_addr_reg[16]_i_3 
       (.CI(\R_addr_reg[12]_i_3_n_0 ),
        .CO({\R_addr_reg[16]_i_3_n_0 ,\R_addr_reg[16]_i_3_n_1 ,\R_addr_reg[16]_i_3_n_2 ,\R_addr_reg[16]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\R_addr_reg[16]_i_3_n_4 ,\R_addr_reg[16]_i_3_n_5 ,\R_addr_reg[16]_i_3_n_6 ,\R_addr_reg[16]_i_3_n_7 }),
        .S(Q[16:13]));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[17] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [17]),
        .Q(Q[17]));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[18] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [18]),
        .Q(Q[18]));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[19] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [19]),
        .Q(Q[19]));
  CARRY4 \R_addr_reg[19]_i_3 
       (.CI(\R_addr_reg[15]_i_3_n_0 ),
        .CO({\R_addr_reg[19]_i_3_n_0 ,\R_addr_reg[19]_i_3_n_1 ,\R_addr_reg[19]_i_3_n_2 ,\R_addr_reg[19]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(R_addr2[19:16]),
        .S(Q[19:16]));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[1] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[20] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [20]),
        .Q(Q[20]));
  CARRY4 \R_addr_reg[20]_i_3 
       (.CI(\R_addr_reg[16]_i_3_n_0 ),
        .CO({\R_addr_reg[20]_i_3_n_0 ,\R_addr_reg[20]_i_3_n_1 ,\R_addr_reg[20]_i_3_n_2 ,\R_addr_reg[20]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\R_addr_reg[20]_i_3_n_4 ,\R_addr_reg[20]_i_3_n_5 ,\R_addr_reg[20]_i_3_n_6 ,\R_addr_reg[20]_i_3_n_7 }),
        .S(Q[20:17]));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[21] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [21]),
        .Q(Q[21]));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[22] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [22]),
        .Q(Q[22]));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[23] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [23]),
        .Q(Q[23]));
  CARRY4 \R_addr_reg[23]_i_3 
       (.CI(\R_addr_reg[19]_i_3_n_0 ),
        .CO({\R_addr_reg[23]_i_3_n_0 ,\R_addr_reg[23]_i_3_n_1 ,\R_addr_reg[23]_i_3_n_2 ,\R_addr_reg[23]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(R_addr2[23:20]),
        .S(Q[23:20]));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[24] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [24]),
        .Q(Q[24]));
  CARRY4 \R_addr_reg[24]_i_3 
       (.CI(\R_addr_reg[20]_i_3_n_0 ),
        .CO({\R_addr_reg[24]_i_3_n_0 ,\R_addr_reg[24]_i_3_n_1 ,\R_addr_reg[24]_i_3_n_2 ,\R_addr_reg[24]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\R_addr_reg[24]_i_3_n_4 ,\R_addr_reg[24]_i_3_n_5 ,\R_addr_reg[24]_i_3_n_6 ,\R_addr_reg[24]_i_3_n_7 }),
        .S(Q[24:21]));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[25] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [25]),
        .Q(Q[25]));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[26] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [26]),
        .Q(Q[26]));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[27] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [27]),
        .Q(Q[27]));
  CARRY4 \R_addr_reg[27]_i_3 
       (.CI(\R_addr_reg[23]_i_3_n_0 ),
        .CO({\R_addr_reg[27]_i_3_n_0 ,\R_addr_reg[27]_i_3_n_1 ,\R_addr_reg[27]_i_3_n_2 ,\R_addr_reg[27]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(R_addr2[27:24]),
        .S(Q[27:24]));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[28] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [28]),
        .Q(Q[28]));
  CARRY4 \R_addr_reg[28]_i_3 
       (.CI(\R_addr_reg[24]_i_3_n_0 ),
        .CO({\R_addr_reg[28]_i_3_n_0 ,\R_addr_reg[28]_i_3_n_1 ,\R_addr_reg[28]_i_3_n_2 ,\R_addr_reg[28]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\R_addr_reg[28]_i_3_n_4 ,\R_addr_reg[28]_i_3_n_5 ,\R_addr_reg[28]_i_3_n_6 ,\R_addr_reg[28]_i_3_n_7 }),
        .S(Q[28:25]));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[29] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [29]),
        .Q(Q[29]));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[2] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[30] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [30]),
        .Q(Q[30]));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[31] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [31]),
        .Q(Q[31]));
  CARRY4 \R_addr_reg[31]_i_6 
       (.CI(\R_addr_reg[28]_i_3_n_0 ),
        .CO({\NLW_R_addr_reg[31]_i_6_CO_UNCONNECTED [3:2],\R_addr_reg[31]_i_6_n_2 ,\R_addr_reg[31]_i_6_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_R_addr_reg[31]_i_6_O_UNCONNECTED [3],\R_addr_reg[31]_i_6_n_5 ,\R_addr_reg[31]_i_6_n_6 ,\R_addr_reg[31]_i_6_n_7 }),
        .S({1'b0,Q[31:29]}));
  CARRY4 \R_addr_reg[31]_i_8 
       (.CI(\R_addr_reg[27]_i_3_n_0 ),
        .CO({\NLW_R_addr_reg[31]_i_8_CO_UNCONNECTED [3],\R_addr_reg[31]_i_8_n_1 ,\R_addr_reg[31]_i_8_n_2 ,\R_addr_reg[31]_i_8_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(R_addr2[31:28]),
        .S(Q[31:28]));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[3] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [3]),
        .Q(Q[3]));
  CARRY4 \R_addr_reg[3]_i_3 
       (.CI(1'b0),
        .CO({\R_addr_reg[3]_i_3_n_0 ,\R_addr_reg[3]_i_3_n_1 ,\R_addr_reg[3]_i_3_n_2 ,\R_addr_reg[3]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[3:0]),
        .O(R_addr2[3:0]),
        .S({\R_addr[3]_i_4_n_0 ,\R_addr[3]_i_5_n_0 ,\R_addr[3]_i_6_n_0 ,\R_addr[3]_i_7_n_0 }));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[4] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [4]),
        .Q(Q[4]));
  CARRY4 \R_addr_reg[4]_i_3 
       (.CI(1'b0),
        .CO({\R_addr_reg[4]_i_3_n_0 ,\R_addr_reg[4]_i_3_n_1 ,\R_addr_reg[4]_i_3_n_2 ,\R_addr_reg[4]_i_3_n_3 }),
        .CYINIT(Q[0]),
        .DI({1'b0,1'b0,1'b0,Q[1]}),
        .O({\R_addr_reg[4]_i_3_n_4 ,\R_addr_reg[4]_i_3_n_5 ,\R_addr_reg[4]_i_3_n_6 ,\R_addr_reg[4]_i_3_n_7 }),
        .S({Q[4:2],\R_addr[4]_i_4_n_0 }));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[5] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [5]),
        .Q(Q[5]));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[6] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [6]),
        .Q(Q[6]));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[7] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [7]),
        .Q(Q[7]));
  CARRY4 \R_addr_reg[7]_i_3 
       (.CI(\R_addr_reg[3]_i_3_n_0 ),
        .CO({\R_addr_reg[7]_i_3_n_0 ,\R_addr_reg[7]_i_3_n_1 ,\R_addr_reg[7]_i_3_n_2 ,\R_addr_reg[7]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[7:4]),
        .O(R_addr2[7:4]),
        .S({\R_addr[7]_i_4_n_0 ,\R_addr[7]_i_5_n_0 ,\R_addr[7]_i_6_n_0 ,\R_addr[7]_i_7_n_0 }));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[8] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [8]),
        .Q(Q[8]));
  CARRY4 \R_addr_reg[8]_i_3 
       (.CI(\R_addr_reg[4]_i_3_n_0 ),
        .CO({\R_addr_reg[8]_i_3_n_0 ,\R_addr_reg[8]_i_3_n_1 ,\R_addr_reg[8]_i_3_n_2 ,\R_addr_reg[8]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\R_addr_reg[8]_i_3_n_4 ,\R_addr_reg[8]_i_3_n_5 ,\R_addr_reg[8]_i_3_n_6 ,\R_addr_reg[8]_i_3_n_7 }),
        .S(Q[8:5]));
  FDCE #(
    .INIT(1'b0)) 
    \R_addr_reg[9] 
       (.C(ACLK),
        .CE(\R_addr[31]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_addr_reg[31]_2 [9]),
        .Q(Q[9]));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT4 #(
    .INIT(16'hD080)) 
    \R_bmove[10]_i_1 
       (.I0(\R_brem_reg[15]_1 ),
        .I1(DMA_WCHUNK[8]),
        .I2(conf_tx_en),
        .I3(\R_brem_reg[15]_0 [10]),
        .O(\R_bmove[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT4 #(
    .INIT(16'hE200)) 
    \R_bmove[11]_i_1 
       (.I0(\R_brem_reg[15]_0 [11]),
        .I1(\R_brem_reg[15]_1 ),
        .I2(DMA_WCHUNK[9]),
        .I3(conf_tx_en),
        .O(\R_bmove[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT4 #(
    .INIT(16'hE200)) 
    \R_bmove[12]_i_1 
       (.I0(\R_brem_reg[15]_0 [12]),
        .I1(\R_brem_reg[15]_1 ),
        .I2(DMA_WCHUNK[10]),
        .I3(conf_tx_en),
        .O(\R_bmove[12]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_bmove[13]_i_1 
       (.I0(\R_brem_reg[15]_0 [13]),
        .I1(\R_brem_reg[15]_1 ),
        .I2(DMA_WCHUNK[11]),
        .I3(conf_tx_en),
        .O(\R_bmove[13]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_bmove[14]_i_1 
       (.I0(\R_brem_reg[15]_0 [14]),
        .I1(\R_brem_reg[15]_1 ),
        .I2(DMA_WCHUNK[12]),
        .I3(conf_tx_en),
        .O(\R_bmove[14]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h04FF)) 
    \R_bmove[15]_i_1 
       (.I0(state[1]),
        .I1(state[0]),
        .I2(state[2]),
        .I3(conf_tx_en),
        .O(\R_bmove[15]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \R_bmove[15]_i_10 
       (.I0(DMA_WCHUNK[9]),
        .I1(\R_brem_reg[15]_0 [11]),
        .I2(DMA_WCHUNK[8]),
        .I3(\R_brem_reg[15]_0 [10]),
        .O(\R_bmove[15]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \R_bmove[15]_i_11 
       (.I0(\R_brem_reg[15]_0 [9]),
        .I1(DMA_WCHUNK[7]),
        .I2(\R_brem_reg[15]_0 [8]),
        .I3(DMA_WCHUNK[6]),
        .O(\R_bmove[15]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \R_bmove[15]_i_12 
       (.I0(\R_brem_reg[15]_0 [7]),
        .I1(DMA_WCHUNK[5]),
        .I2(\R_brem_reg[15]_0 [6]),
        .I3(DMA_WCHUNK[4]),
        .O(\R_bmove[15]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \R_bmove[15]_i_13 
       (.I0(\R_brem_reg[15]_0 [5]),
        .I1(DMA_WCHUNK[3]),
        .I2(\R_brem_reg[15]_0 [4]),
        .I3(DMA_WCHUNK[2]),
        .O(\R_bmove[15]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \R_bmove[15]_i_14 
       (.I0(\R_brem_reg[15]_0 [3]),
        .I1(DMA_WCHUNK[1]),
        .I2(\R_brem_reg[15]_0 [2]),
        .I3(DMA_WCHUNK[0]),
        .O(\R_bmove[15]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \R_bmove[15]_i_15 
       (.I0(DMA_WCHUNK[7]),
        .I1(\R_brem_reg[15]_0 [9]),
        .I2(DMA_WCHUNK[6]),
        .I3(\R_brem_reg[15]_0 [8]),
        .O(\R_bmove[15]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \R_bmove[15]_i_16 
       (.I0(DMA_WCHUNK[5]),
        .I1(\R_brem_reg[15]_0 [7]),
        .I2(DMA_WCHUNK[4]),
        .I3(\R_brem_reg[15]_0 [6]),
        .O(\R_bmove[15]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \R_bmove[15]_i_17 
       (.I0(DMA_WCHUNK[3]),
        .I1(\R_brem_reg[15]_0 [5]),
        .I2(DMA_WCHUNK[2]),
        .I3(\R_brem_reg[15]_0 [4]),
        .O(\R_bmove[15]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \R_bmove[15]_i_18 
       (.I0(DMA_WCHUNK[1]),
        .I1(\R_brem_reg[15]_0 [3]),
        .I2(DMA_WCHUNK[0]),
        .I3(\R_brem_reg[15]_0 [2]),
        .O(\R_bmove[15]_i_18_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \R_bmove[15]_i_2 
       (.I0(\R_brem_reg[15]_0 [15]),
        .I1(\R_brem_reg[15]_1 ),
        .I2(DMA_WCHUNK[13]),
        .I3(conf_tx_en),
        .O(\R_bmove[15]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \R_bmove[15]_i_5 
       (.I0(\R_brem_reg[15]_0 [15]),
        .I1(DMA_WCHUNK[13]),
        .I2(\R_brem_reg[15]_0 [14]),
        .I3(DMA_WCHUNK[12]),
        .O(\R_bmove[15]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \R_bmove[15]_i_6 
       (.I0(\R_brem_reg[15]_0 [13]),
        .I1(DMA_WCHUNK[11]),
        .I2(\R_brem_reg[15]_0 [12]),
        .I3(DMA_WCHUNK[10]),
        .O(\R_bmove[15]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \R_bmove[15]_i_7 
       (.I0(\R_brem_reg[15]_0 [11]),
        .I1(DMA_WCHUNK[9]),
        .I2(\R_brem_reg[15]_0 [10]),
        .I3(DMA_WCHUNK[8]),
        .O(\R_bmove[15]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \R_bmove[15]_i_8 
       (.I0(DMA_WCHUNK[13]),
        .I1(\R_brem_reg[15]_0 [15]),
        .I2(DMA_WCHUNK[12]),
        .I3(\R_brem_reg[15]_0 [14]),
        .O(\R_bmove[15]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \R_bmove[15]_i_9 
       (.I0(DMA_WCHUNK[11]),
        .I1(\R_brem_reg[15]_0 [13]),
        .I2(DMA_WCHUNK[10]),
        .I3(\R_brem_reg[15]_0 [12]),
        .O(\R_bmove[15]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT4 #(
    .INIT(16'hD080)) 
    \R_bmove[2]_i_1 
       (.I0(\R_brem_reg[15]_1 ),
        .I1(DMA_WCHUNK[0]),
        .I2(conf_tx_en),
        .I3(\R_brem_reg[15]_0 [2]),
        .O(\R_bmove[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT4 #(
    .INIT(16'hD080)) 
    \R_bmove[3]_i_1 
       (.I0(\R_brem_reg[15]_1 ),
        .I1(DMA_WCHUNK[1]),
        .I2(conf_tx_en),
        .I3(\R_brem_reg[15]_0 [3]),
        .O(\R_bmove[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT4 #(
    .INIT(16'hD080)) 
    \R_bmove[4]_i_1 
       (.I0(\R_brem_reg[15]_1 ),
        .I1(DMA_WCHUNK[2]),
        .I2(conf_tx_en),
        .I3(\R_brem_reg[15]_0 [4]),
        .O(\R_bmove[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT4 #(
    .INIT(16'hD080)) 
    \R_bmove[5]_i_1 
       (.I0(\R_brem_reg[15]_1 ),
        .I1(DMA_WCHUNK[3]),
        .I2(conf_tx_en),
        .I3(\R_brem_reg[15]_0 [5]),
        .O(\R_bmove[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT4 #(
    .INIT(16'hD080)) 
    \R_bmove[6]_i_1 
       (.I0(\R_brem_reg[15]_1 ),
        .I1(DMA_WCHUNK[4]),
        .I2(conf_tx_en),
        .I3(\R_brem_reg[15]_0 [6]),
        .O(\R_bmove[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT4 #(
    .INIT(16'hD080)) 
    \R_bmove[7]_i_1 
       (.I0(\R_brem_reg[15]_1 ),
        .I1(DMA_WCHUNK[5]),
        .I2(conf_tx_en),
        .I3(\R_brem_reg[15]_0 [7]),
        .O(\R_bmove[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT4 #(
    .INIT(16'hE200)) 
    \R_bmove[8]_i_1 
       (.I0(\R_brem_reg[15]_0 [8]),
        .I1(\R_brem_reg[15]_1 ),
        .I2(DMA_WCHUNK[6]),
        .I3(conf_tx_en),
        .O(\R_bmove[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT4 #(
    .INIT(16'hE200)) 
    \R_bmove[9]_i_1 
       (.I0(\R_brem_reg[15]_0 [9]),
        .I1(\R_brem_reg[15]_1 ),
        .I2(DMA_WCHUNK[7]),
        .I3(conf_tx_en),
        .O(\R_bmove[9]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \R_bmove_reg[0] 
       (.C(ACLK),
        .CE(\R_bmove[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_bmove_reg[1]_0 [0]),
        .Q(R_bmove[0]));
  FDCE #(
    .INIT(1'b0)) 
    \R_bmove_reg[10] 
       (.C(ACLK),
        .CE(\R_bmove[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_bmove[10]_i_1_n_0 ),
        .Q(R_bmove[10]));
  FDCE #(
    .INIT(1'b0)) 
    \R_bmove_reg[11] 
       (.C(ACLK),
        .CE(\R_bmove[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_bmove[11]_i_1_n_0 ),
        .Q(R_bmove[11]));
  FDCE #(
    .INIT(1'b0)) 
    \R_bmove_reg[12] 
       (.C(ACLK),
        .CE(\R_bmove[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_bmove[12]_i_1_n_0 ),
        .Q(R_bmove[12]));
  FDCE #(
    .INIT(1'b0)) 
    \R_bmove_reg[13] 
       (.C(ACLK),
        .CE(\R_bmove[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_bmove[13]_i_1_n_0 ),
        .Q(R_bmove[13]));
  FDCE #(
    .INIT(1'b0)) 
    \R_bmove_reg[14] 
       (.C(ACLK),
        .CE(\R_bmove[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_bmove[14]_i_1_n_0 ),
        .Q(R_bmove[14]));
  FDCE #(
    .INIT(1'b0)) 
    \R_bmove_reg[15] 
       (.C(ACLK),
        .CE(\R_bmove[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_bmove[15]_i_2_n_0 ),
        .Q(R_bmove[15]));
  CARRY4 \R_bmove_reg[15]_i_3 
       (.CI(\R_bmove_reg[15]_i_4_n_0 ),
        .CO({\NLW_R_bmove_reg[15]_i_3_CO_UNCONNECTED [3],\R_brem_reg[15]_1 ,\R_bmove_reg[15]_i_3_n_2 ,\R_bmove_reg[15]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\R_bmove[15]_i_5_n_0 ,\R_bmove[15]_i_6_n_0 ,\R_bmove[15]_i_7_n_0 }),
        .O(\NLW_R_bmove_reg[15]_i_3_O_UNCONNECTED [3:0]),
        .S({1'b0,\R_bmove[15]_i_8_n_0 ,\R_bmove[15]_i_9_n_0 ,\R_bmove[15]_i_10_n_0 }));
  CARRY4 \R_bmove_reg[15]_i_4 
       (.CI(1'b0),
        .CO({\R_bmove_reg[15]_i_4_n_0 ,\R_bmove_reg[15]_i_4_n_1 ,\R_bmove_reg[15]_i_4_n_2 ,\R_bmove_reg[15]_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI({\R_bmove[15]_i_11_n_0 ,\R_bmove[15]_i_12_n_0 ,\R_bmove[15]_i_13_n_0 ,\R_bmove[15]_i_14_n_0 }),
        .O(\NLW_R_bmove_reg[15]_i_4_O_UNCONNECTED [3:0]),
        .S({\R_bmove[15]_i_15_n_0 ,\R_bmove[15]_i_16_n_0 ,\R_bmove[15]_i_17_n_0 ,\R_bmove[15]_i_18_n_0 }));
  FDCE #(
    .INIT(1'b0)) 
    \R_bmove_reg[1] 
       (.C(ACLK),
        .CE(\R_bmove[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_bmove_reg[1]_0 [1]),
        .Q(R_bmove[1]));
  FDCE #(
    .INIT(1'b0)) 
    \R_bmove_reg[2] 
       (.C(ACLK),
        .CE(\R_bmove[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_bmove[2]_i_1_n_0 ),
        .Q(R_bmove[2]));
  FDCE #(
    .INIT(1'b0)) 
    \R_bmove_reg[3] 
       (.C(ACLK),
        .CE(\R_bmove[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_bmove[3]_i_1_n_0 ),
        .Q(R_bmove[3]));
  FDCE #(
    .INIT(1'b0)) 
    \R_bmove_reg[4] 
       (.C(ACLK),
        .CE(\R_bmove[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_bmove[4]_i_1_n_0 ),
        .Q(R_bmove[4]));
  FDCE #(
    .INIT(1'b0)) 
    \R_bmove_reg[5] 
       (.C(ACLK),
        .CE(\R_bmove[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_bmove[5]_i_1_n_0 ),
        .Q(R_bmove[5]));
  FDCE #(
    .INIT(1'b0)) 
    \R_bmove_reg[6] 
       (.C(ACLK),
        .CE(\R_bmove[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_bmove[6]_i_1_n_0 ),
        .Q(R_bmove[6]));
  FDCE #(
    .INIT(1'b0)) 
    \R_bmove_reg[7] 
       (.C(ACLK),
        .CE(\R_bmove[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_bmove[7]_i_1_n_0 ),
        .Q(R_bmove[7]));
  FDCE #(
    .INIT(1'b0)) 
    \R_bmove_reg[8] 
       (.C(ACLK),
        .CE(\R_bmove[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_bmove[8]_i_1_n_0 ),
        .Q(R_bmove[8]));
  FDCE #(
    .INIT(1'b0)) 
    \R_bmove_reg[9] 
       (.C(ACLK),
        .CE(\R_bmove[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_bmove[9]_i_1_n_0 ),
        .Q(R_bmove[9]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \R_brem[0]_i_3 
       (.I0(\DMA_BREM_reg[15]_0 [0]),
        .I1(\R_brem_reg[14]_0 ),
        .I2(\R_brem[15]_i_5_n_0 ),
        .I3(\R_brem_reg[0]_2 ),
        .I4(state[0]),
        .I5(\R_brem_reg[3]_i_7_n_7 ),
        .O(\DMA_BREM_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \R_brem[10]_i_3 
       (.I0(\DMA_BREM_reg[15]_0 [10]),
        .I1(\R_brem_reg[14]_0 ),
        .I2(\R_brem[15]_i_5_n_0 ),
        .I3(\R_brem_reg[10]_0 ),
        .I4(state[0]),
        .I5(\R_brem_reg[11]_i_7_n_5 ),
        .O(\DMA_BREM_reg[10]_0 ));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[11]_i_10 
       (.I0(tx_addr_head[9]),
        .I1(\DMA_ADDR_TAIL_reg[9]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[9]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[9]_P_n_0 ),
        .O(\tx_addr_head_reg[11] [1]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[11]_i_11 
       (.I0(tx_addr_head[8]),
        .I1(\DMA_ADDR_TAIL_reg[8]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[8]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[8]_P_n_0 ),
        .O(\tx_addr_head_reg[11] [0]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[11]_i_12 
       (.I0(tx_addr_end[11]),
        .I1(\DMA_ADDR_TAIL_reg[11]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[11]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[11]_P_n_0 ),
        .O(\tx_addr_end_reg[11] [3]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[11]_i_13 
       (.I0(tx_addr_end[10]),
        .I1(\DMA_ADDR_TAIL_reg[10]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[10]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[10]_P_n_0 ),
        .O(\tx_addr_end_reg[11] [2]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[11]_i_14 
       (.I0(tx_addr_end[9]),
        .I1(\DMA_ADDR_TAIL_reg[9]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[9]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[9]_P_n_0 ),
        .O(\tx_addr_end_reg[11] [1]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[11]_i_15 
       (.I0(tx_addr_end[8]),
        .I1(\DMA_ADDR_TAIL_reg[8]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[8]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[8]_P_n_0 ),
        .O(\tx_addr_end_reg[11] [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[11]_i_16 
       (.I0(\R_brem_reg[15]_0 [11]),
        .I1(R_bmove[11]),
        .O(\R_brem[11]_i_16_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[11]_i_17 
       (.I0(\R_brem_reg[15]_0 [10]),
        .I1(R_bmove[10]),
        .O(\R_brem[11]_i_17_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[11]_i_18 
       (.I0(\R_brem_reg[15]_0 [9]),
        .I1(R_bmove[9]),
        .O(\R_brem[11]_i_18_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[11]_i_19 
       (.I0(\R_brem_reg[15]_0 [8]),
        .I1(R_bmove[8]),
        .O(\R_brem[11]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \R_brem[11]_i_3 
       (.I0(\DMA_BREM_reg[15]_0 [11]),
        .I1(\R_brem_reg[14]_0 ),
        .I2(\R_brem[15]_i_5_n_0 ),
        .I3(\R_brem_reg[11]_0 ),
        .I4(state[0]),
        .I5(\R_brem_reg[11]_i_7_n_4 ),
        .O(\DMA_BREM_reg[11]_0 ));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[11]_i_8 
       (.I0(tx_addr_head[11]),
        .I1(\DMA_ADDR_TAIL_reg[11]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[11]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[11]_P_n_0 ),
        .O(\tx_addr_head_reg[11] [3]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[11]_i_9 
       (.I0(tx_addr_head[10]),
        .I1(\DMA_ADDR_TAIL_reg[10]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[10]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[10]_P_n_0 ),
        .O(\tx_addr_head_reg[11] [2]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \R_brem[12]_i_3 
       (.I0(\DMA_BREM_reg[15]_0 [12]),
        .I1(\R_brem_reg[14]_0 ),
        .I2(\R_brem[15]_i_5_n_0 ),
        .I3(\R_brem_reg[12]_0 ),
        .I4(state[0]),
        .I5(\R_brem_reg[15]_i_36_n_7 ),
        .O(\DMA_BREM_reg[12]_0 ));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \R_brem[13]_i_3 
       (.I0(\DMA_BREM_reg[15]_0 [13]),
        .I1(\R_brem_reg[14]_0 ),
        .I2(\R_brem[15]_i_5_n_0 ),
        .I3(\R_brem_reg[13]_0 ),
        .I4(state[0]),
        .I5(\R_brem_reg[15]_i_36_n_6 ),
        .O(\DMA_BREM_reg[13]_0 ));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \R_brem[14]_i_3 
       (.I0(\DMA_BREM_reg[15]_0 [14]),
        .I1(\R_brem_reg[14]_0 ),
        .I2(\R_brem[15]_i_5_n_0 ),
        .I3(\R_brem_reg[14]_1 ),
        .I4(state[0]),
        .I5(\R_brem_reg[15]_i_36_n_5 ),
        .O(\DMA_BREM_reg[14]_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAABABAAAB)) 
    \R_brem[15]_i_1 
       (.I0(R_first),
        .I1(\R_brem_reg[0]_0 ),
        .I2(\R_addr[31]_i_3_n_0 ),
        .I3(\R_brem_reg[0]_1 ),
        .I4(\R_brem[15]_i_5_n_0 ),
        .I5(\R_brem[15]_i_6_n_0 ),
        .O(\R_brem[15]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h44D4)) 
    \R_brem[15]_i_100 
       (.I0(\R_brem_reg[15]_0 [11]),
        .I1(\R_brem_reg[11]_0 ),
        .I2(\R_brem_reg[10]_0 ),
        .I3(\R_brem_reg[15]_0 [10]),
        .O(\R_brem[15]_i_100_n_0 ));
  LUT4 #(
    .INIT(16'h44D4)) 
    \R_brem[15]_i_101 
       (.I0(\R_brem_reg[15]_0 [9]),
        .I1(\R_brem_reg[9]_0 ),
        .I2(\R_brem_reg[8]_0 ),
        .I3(\R_brem_reg[15]_0 [8]),
        .O(\R_brem[15]_i_101_n_0 ));
  LUT6 #(
    .INIT(64'h44444444DDD444D4)) 
    \R_brem[15]_i_107 
       (.I0(tx_addr_head[23]),
        .I1(tx_addr_tail[23]),
        .I2(\DMA_ADDR_TAIL_reg[22]_C_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[22]_LDC_n_0 ),
        .I4(\DMA_ADDR_TAIL_reg[22]_P_n_0 ),
        .I5(tx_addr_head[22]),
        .O(\R_brem[15]_i_107_n_0 ));
  LUT6 #(
    .INIT(64'h44444444DDD444D4)) 
    \R_brem[15]_i_108 
       (.I0(tx_addr_head[21]),
        .I1(tx_addr_tail[21]),
        .I2(\DMA_ADDR_TAIL_reg[20]_C_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[20]_LDC_n_0 ),
        .I4(\DMA_ADDR_TAIL_reg[20]_P_n_0 ),
        .I5(tx_addr_head[20]),
        .O(\R_brem[15]_i_108_n_0 ));
  LUT6 #(
    .INIT(64'h44444444DDD444D4)) 
    \R_brem[15]_i_109 
       (.I0(tx_addr_head[19]),
        .I1(tx_addr_tail[19]),
        .I2(\DMA_ADDR_TAIL_reg[18]_C_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[18]_LDC_n_0 ),
        .I4(\DMA_ADDR_TAIL_reg[18]_P_n_0 ),
        .I5(tx_addr_head[18]),
        .O(\R_brem[15]_i_109_n_0 ));
  LUT6 #(
    .INIT(64'h44444444DDD444D4)) 
    \R_brem[15]_i_110 
       (.I0(tx_addr_head[17]),
        .I1(tx_addr_tail[17]),
        .I2(\DMA_ADDR_TAIL_reg[16]_C_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[16]_LDC_n_0 ),
        .I4(\DMA_ADDR_TAIL_reg[16]_P_n_0 ),
        .I5(tx_addr_head[16]),
        .O(\R_brem[15]_i_110_n_0 ));
  LUT6 #(
    .INIT(64'hB84700000000B847)) 
    \R_brem[15]_i_111 
       (.I0(\DMA_ADDR_TAIL_reg[23]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[23]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[23]_C_n_0 ),
        .I3(tx_addr_head[23]),
        .I4(tx_addr_tail[22]),
        .I5(tx_addr_head[22]),
        .O(\R_brem[15]_i_111_n_0 ));
  LUT6 #(
    .INIT(64'hB84700000000B847)) 
    \R_brem[15]_i_112 
       (.I0(\DMA_ADDR_TAIL_reg[21]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[21]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[21]_C_n_0 ),
        .I3(tx_addr_head[21]),
        .I4(tx_addr_tail[20]),
        .I5(tx_addr_head[20]),
        .O(\R_brem[15]_i_112_n_0 ));
  LUT6 #(
    .INIT(64'hB84700000000B847)) 
    \R_brem[15]_i_113 
       (.I0(\DMA_ADDR_TAIL_reg[19]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[19]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[19]_C_n_0 ),
        .I3(tx_addr_head[19]),
        .I4(tx_addr_tail[18]),
        .I5(tx_addr_head[18]),
        .O(\R_brem[15]_i_113_n_0 ));
  LUT6 #(
    .INIT(64'hB84700000000B847)) 
    \R_brem[15]_i_114 
       (.I0(\DMA_ADDR_TAIL_reg[17]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[17]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[17]_C_n_0 ),
        .I3(tx_addr_head[17]),
        .I4(tx_addr_tail[16]),
        .I5(tx_addr_head[16]),
        .O(\R_brem[15]_i_114_n_0 ));
  LUT4 #(
    .INIT(16'hB847)) 
    \R_brem[15]_i_128 
       (.I0(\DMA_ADDR_TAIL_reg[31]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[31]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[31]_C_n_0 ),
        .I3(tx_addr_head[31]),
        .O(\DMA_ADDR_TAIL_reg[31]_P_0 [3]));
  LUT4 #(
    .INIT(16'hB847)) 
    \R_brem[15]_i_129 
       (.I0(\DMA_ADDR_TAIL_reg[30]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[30]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[30]_C_n_0 ),
        .I3(tx_addr_head[30]),
        .O(\DMA_ADDR_TAIL_reg[31]_P_0 [2]));
  LUT4 #(
    .INIT(16'hB847)) 
    \R_brem[15]_i_130 
       (.I0(\DMA_ADDR_TAIL_reg[29]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[29]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[29]_C_n_0 ),
        .I3(tx_addr_head[29]),
        .O(\DMA_ADDR_TAIL_reg[31]_P_0 [1]));
  LUT4 #(
    .INIT(16'hB847)) 
    \R_brem[15]_i_131 
       (.I0(\DMA_ADDR_TAIL_reg[28]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[28]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[28]_C_n_0 ),
        .I3(tx_addr_head[28]),
        .O(\DMA_ADDR_TAIL_reg[31]_P_0 [0]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[15]_i_132 
       (.I0(tx_addr_end[31]),
        .I1(\DMA_ADDR_TAIL_reg[31]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[31]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[31]_P_n_0 ),
        .O(\tx_addr_end_reg[31] [3]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[15]_i_133 
       (.I0(tx_addr_end[30]),
        .I1(\DMA_ADDR_TAIL_reg[30]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[30]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[30]_P_n_0 ),
        .O(\tx_addr_end_reg[31] [2]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[15]_i_134 
       (.I0(tx_addr_end[29]),
        .I1(\DMA_ADDR_TAIL_reg[29]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[29]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[29]_P_n_0 ),
        .O(\tx_addr_end_reg[31] [1]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[15]_i_135 
       (.I0(tx_addr_end[28]),
        .I1(\DMA_ADDR_TAIL_reg[28]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[28]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[28]_P_n_0 ),
        .O(\tx_addr_end_reg[31] [0]));
  LUT4 #(
    .INIT(16'hB847)) 
    \R_brem[15]_i_136 
       (.I0(\DMA_ADDR_TAIL_reg[27]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[27]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[27]_C_n_0 ),
        .I3(tx_addr_head[27]),
        .O(\DMA_ADDR_TAIL_reg[27]_P_0 [3]));
  LUT4 #(
    .INIT(16'hB847)) 
    \R_brem[15]_i_137 
       (.I0(\DMA_ADDR_TAIL_reg[26]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[26]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[26]_C_n_0 ),
        .I3(tx_addr_head[26]),
        .O(\DMA_ADDR_TAIL_reg[27]_P_0 [2]));
  LUT4 #(
    .INIT(16'hB847)) 
    \R_brem[15]_i_138 
       (.I0(\DMA_ADDR_TAIL_reg[25]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[25]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[25]_C_n_0 ),
        .I3(tx_addr_head[25]),
        .O(\DMA_ADDR_TAIL_reg[27]_P_0 [1]));
  LUT4 #(
    .INIT(16'hB847)) 
    \R_brem[15]_i_139 
       (.I0(\DMA_ADDR_TAIL_reg[24]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[24]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[24]_C_n_0 ),
        .I3(tx_addr_head[24]),
        .O(\DMA_ADDR_TAIL_reg[27]_P_0 [0]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[15]_i_140 
       (.I0(tx_addr_end[27]),
        .I1(\DMA_ADDR_TAIL_reg[27]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[27]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[27]_P_n_0 ),
        .O(\tx_addr_end_reg[27] [3]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[15]_i_141 
       (.I0(tx_addr_end[26]),
        .I1(\DMA_ADDR_TAIL_reg[26]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[26]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[26]_P_n_0 ),
        .O(\tx_addr_end_reg[27] [2]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[15]_i_142 
       (.I0(tx_addr_end[25]),
        .I1(\DMA_ADDR_TAIL_reg[25]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[25]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[25]_P_n_0 ),
        .O(\tx_addr_end_reg[27] [1]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[15]_i_143 
       (.I0(tx_addr_end[24]),
        .I1(\DMA_ADDR_TAIL_reg[24]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[24]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[24]_P_n_0 ),
        .O(\tx_addr_end_reg[27] [0]));
  LUT4 #(
    .INIT(16'h44D4)) 
    \R_brem[15]_i_149 
       (.I0(\R_brem_reg[15]_0 [7]),
        .I1(\R_brem_reg[7]_0 ),
        .I2(\R_brem_reg[6]_0 ),
        .I3(\R_brem_reg[15]_0 [6]),
        .O(\R_brem[15]_i_149_n_0 ));
  LUT4 #(
    .INIT(16'h44D4)) 
    \R_brem[15]_i_150 
       (.I0(\R_brem_reg[15]_0 [5]),
        .I1(\R_brem_reg[5]_0 ),
        .I2(\R_brem_reg[4]_0 ),
        .I3(\R_brem_reg[15]_0 [4]),
        .O(\R_brem[15]_i_150_n_0 ));
  LUT4 #(
    .INIT(16'h44D4)) 
    \R_brem[15]_i_151 
       (.I0(\R_brem_reg[15]_0 [3]),
        .I1(\R_brem_reg[3]_0 ),
        .I2(\R_brem_reg[2]_0 ),
        .I3(\R_brem_reg[15]_0 [2]),
        .O(\R_brem[15]_i_151_n_0 ));
  LUT4 #(
    .INIT(16'h44D4)) 
    \R_brem[15]_i_152 
       (.I0(\R_brem_reg[15]_0 [1]),
        .I1(\R_brem_reg[1]_0 ),
        .I2(\R_brem_reg[0]_2 ),
        .I3(\R_brem_reg[15]_0 [0]),
        .O(\R_brem[15]_i_152_n_0 ));
  LUT6 #(
    .INIT(64'h22222222BBB222B2)) 
    \R_brem[15]_i_158 
       (.I0(tx_addr_tail[15]),
        .I1(tx_addr_head[15]),
        .I2(\DMA_ADDR_TAIL_reg[14]_C_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[14]_LDC_n_0 ),
        .I4(\DMA_ADDR_TAIL_reg[14]_P_n_0 ),
        .I5(tx_addr_head[14]),
        .O(\R_brem[15]_i_158_n_0 ));
  LUT6 #(
    .INIT(64'h22222222BBB222B2)) 
    \R_brem[15]_i_159 
       (.I0(tx_addr_tail[13]),
        .I1(tx_addr_head[13]),
        .I2(\DMA_ADDR_TAIL_reg[12]_C_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[12]_LDC_n_0 ),
        .I4(\DMA_ADDR_TAIL_reg[12]_P_n_0 ),
        .I5(tx_addr_head[12]),
        .O(\R_brem[15]_i_159_n_0 ));
  LUT6 #(
    .INIT(64'h22222222BBB222B2)) 
    \R_brem[15]_i_160 
       (.I0(tx_addr_tail[11]),
        .I1(tx_addr_head[11]),
        .I2(\DMA_ADDR_TAIL_reg[10]_C_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[10]_LDC_n_0 ),
        .I4(\DMA_ADDR_TAIL_reg[10]_P_n_0 ),
        .I5(tx_addr_head[10]),
        .O(\R_brem[15]_i_160_n_0 ));
  LUT6 #(
    .INIT(64'h22222222BBB222B2)) 
    \R_brem[15]_i_161 
       (.I0(tx_addr_tail[9]),
        .I1(tx_addr_head[9]),
        .I2(\DMA_ADDR_TAIL_reg[8]_C_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[8]_LDC_n_0 ),
        .I4(\DMA_ADDR_TAIL_reg[8]_P_n_0 ),
        .I5(tx_addr_head[8]),
        .O(\R_brem[15]_i_161_n_0 ));
  LUT6 #(
    .INIT(64'hA95900000000A959)) 
    \R_brem[15]_i_162 
       (.I0(tx_addr_head[15]),
        .I1(\DMA_ADDR_TAIL_reg[15]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[15]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[15]_P_n_0 ),
        .I4(tx_addr_head[14]),
        .I5(tx_addr_tail[14]),
        .O(\R_brem[15]_i_162_n_0 ));
  LUT6 #(
    .INIT(64'hA95900000000A959)) 
    \R_brem[15]_i_163 
       (.I0(tx_addr_head[13]),
        .I1(\DMA_ADDR_TAIL_reg[13]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[13]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[13]_P_n_0 ),
        .I4(tx_addr_head[12]),
        .I5(tx_addr_tail[12]),
        .O(\R_brem[15]_i_163_n_0 ));
  LUT6 #(
    .INIT(64'hA95900000000A959)) 
    \R_brem[15]_i_164 
       (.I0(tx_addr_head[11]),
        .I1(\DMA_ADDR_TAIL_reg[11]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[11]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[11]_P_n_0 ),
        .I4(tx_addr_head[10]),
        .I5(tx_addr_tail[10]),
        .O(\R_brem[15]_i_164_n_0 ));
  LUT6 #(
    .INIT(64'hA95900000000A959)) 
    \R_brem[15]_i_165 
       (.I0(tx_addr_head[9]),
        .I1(\DMA_ADDR_TAIL_reg[9]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[9]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[9]_P_n_0 ),
        .I4(tx_addr_head[8]),
        .I5(tx_addr_tail[8]),
        .O(\R_brem[15]_i_165_n_0 ));
  LUT4 #(
    .INIT(16'hB847)) 
    \R_brem[15]_i_178 
       (.I0(\DMA_ADDR_TAIL_reg[23]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[23]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[23]_C_n_0 ),
        .I3(tx_addr_head[23]),
        .O(\DMA_ADDR_TAIL_reg[23]_P_0 [3]));
  LUT4 #(
    .INIT(16'hB847)) 
    \R_brem[15]_i_179 
       (.I0(\DMA_ADDR_TAIL_reg[22]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[22]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[22]_C_n_0 ),
        .I3(tx_addr_head[22]),
        .O(\DMA_ADDR_TAIL_reg[23]_P_0 [2]));
  LUT4 #(
    .INIT(16'hB847)) 
    \R_brem[15]_i_180 
       (.I0(\DMA_ADDR_TAIL_reg[21]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[21]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[21]_C_n_0 ),
        .I3(tx_addr_head[21]),
        .O(\DMA_ADDR_TAIL_reg[23]_P_0 [1]));
  LUT4 #(
    .INIT(16'hB847)) 
    \R_brem[15]_i_181 
       (.I0(\DMA_ADDR_TAIL_reg[20]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[20]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[20]_C_n_0 ),
        .I3(tx_addr_head[20]),
        .O(\DMA_ADDR_TAIL_reg[23]_P_0 [0]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[15]_i_182 
       (.I0(tx_addr_end[23]),
        .I1(\DMA_ADDR_TAIL_reg[23]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[23]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[23]_P_n_0 ),
        .O(\tx_addr_end_reg[23] [3]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[15]_i_183 
       (.I0(tx_addr_end[22]),
        .I1(\DMA_ADDR_TAIL_reg[22]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[22]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[22]_P_n_0 ),
        .O(\tx_addr_end_reg[23] [2]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[15]_i_184 
       (.I0(tx_addr_end[21]),
        .I1(\DMA_ADDR_TAIL_reg[21]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[21]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[21]_P_n_0 ),
        .O(\tx_addr_end_reg[23] [1]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[15]_i_185 
       (.I0(tx_addr_end[20]),
        .I1(\DMA_ADDR_TAIL_reg[20]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[20]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[20]_P_n_0 ),
        .O(\tx_addr_end_reg[23] [0]));
  LUT4 #(
    .INIT(16'hB847)) 
    \R_brem[15]_i_186 
       (.I0(\DMA_ADDR_TAIL_reg[19]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[19]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[19]_C_n_0 ),
        .I3(tx_addr_head[19]),
        .O(\DMA_ADDR_TAIL_reg[19]_P_0 [3]));
  LUT4 #(
    .INIT(16'hB847)) 
    \R_brem[15]_i_187 
       (.I0(\DMA_ADDR_TAIL_reg[18]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[18]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[18]_C_n_0 ),
        .I3(tx_addr_head[18]),
        .O(\DMA_ADDR_TAIL_reg[19]_P_0 [2]));
  LUT4 #(
    .INIT(16'hB847)) 
    \R_brem[15]_i_188 
       (.I0(\DMA_ADDR_TAIL_reg[17]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[17]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[17]_C_n_0 ),
        .I3(tx_addr_head[17]),
        .O(\DMA_ADDR_TAIL_reg[19]_P_0 [1]));
  LUT4 #(
    .INIT(16'hB847)) 
    \R_brem[15]_i_189 
       (.I0(\DMA_ADDR_TAIL_reg[16]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[16]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[16]_C_n_0 ),
        .I3(tx_addr_head[16]),
        .O(\DMA_ADDR_TAIL_reg[19]_P_0 [0]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[15]_i_190 
       (.I0(tx_addr_end[19]),
        .I1(\DMA_ADDR_TAIL_reg[19]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[19]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[19]_P_n_0 ),
        .O(\tx_addr_end_reg[19] [3]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[15]_i_191 
       (.I0(tx_addr_end[18]),
        .I1(\DMA_ADDR_TAIL_reg[18]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[18]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[18]_P_n_0 ),
        .O(\tx_addr_end_reg[19] [2]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[15]_i_192 
       (.I0(tx_addr_end[17]),
        .I1(\DMA_ADDR_TAIL_reg[17]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[17]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[17]_P_n_0 ),
        .O(\tx_addr_end_reg[19] [1]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[15]_i_193 
       (.I0(tx_addr_end[16]),
        .I1(\DMA_ADDR_TAIL_reg[16]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[16]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[16]_P_n_0 ),
        .O(\tx_addr_end_reg[19] [0]));
  LUT4 #(
    .INIT(16'h44D4)) 
    \R_brem[15]_i_195 
       (.I0(\DMA_BREM_reg[15]_0 [15]),
        .I1(\R_brem_reg[15]_3 ),
        .I2(\R_brem_reg[14]_1 ),
        .I3(\DMA_BREM_reg[15]_0 [14]),
        .O(\R_brem[15]_i_195_n_0 ));
  LUT4 #(
    .INIT(16'h44D4)) 
    \R_brem[15]_i_196 
       (.I0(\DMA_BREM_reg[15]_0 [13]),
        .I1(\R_brem_reg[13]_0 ),
        .I2(\R_brem_reg[12]_0 ),
        .I3(\DMA_BREM_reg[15]_0 [12]),
        .O(\R_brem[15]_i_196_n_0 ));
  LUT4 #(
    .INIT(16'h44D4)) 
    \R_brem[15]_i_197 
       (.I0(\DMA_BREM_reg[15]_0 [11]),
        .I1(\R_brem_reg[11]_0 ),
        .I2(\R_brem_reg[10]_0 ),
        .I3(\DMA_BREM_reg[15]_0 [10]),
        .O(\R_brem[15]_i_197_n_0 ));
  LUT4 #(
    .INIT(16'h44D4)) 
    \R_brem[15]_i_198 
       (.I0(\DMA_BREM_reg[15]_0 [9]),
        .I1(\R_brem_reg[9]_0 ),
        .I2(\R_brem_reg[8]_0 ),
        .I3(\DMA_BREM_reg[15]_0 [8]),
        .O(\R_brem[15]_i_198_n_0 ));
  LUT6 #(
    .INIT(64'h22222222BBB222B2)) 
    \R_brem[15]_i_203 
       (.I0(tx_addr_tail[7]),
        .I1(tx_addr_head[7]),
        .I2(\DMA_ADDR_TAIL_reg[6]_C_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[6]_LDC_n_0 ),
        .I4(\DMA_ADDR_TAIL_reg[6]_P_n_0 ),
        .I5(tx_addr_head[6]),
        .O(\R_brem[15]_i_203_n_0 ));
  LUT6 #(
    .INIT(64'h22222222BBB222B2)) 
    \R_brem[15]_i_204 
       (.I0(tx_addr_tail[5]),
        .I1(tx_addr_head[5]),
        .I2(\DMA_ADDR_TAIL_reg[4]_C_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[4]_LDC_n_0 ),
        .I4(\DMA_ADDR_TAIL_reg[4]_P_n_0 ),
        .I5(tx_addr_head[4]),
        .O(\R_brem[15]_i_204_n_0 ));
  LUT6 #(
    .INIT(64'h22222222BBB222B2)) 
    \R_brem[15]_i_205 
       (.I0(tx_addr_tail[3]),
        .I1(tx_addr_head[3]),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[2]_LDC_n_0 ),
        .I4(\DMA_ADDR_TAIL_reg[2]_P_n_0 ),
        .I5(tx_addr_head[2]),
        .O(\R_brem[15]_i_205_n_0 ));
  LUT6 #(
    .INIT(64'h22222222BBB222B2)) 
    \R_brem[15]_i_206 
       (.I0(tx_addr_tail[1]),
        .I1(tx_addr_head[1]),
        .I2(\DMA_ADDR_TAIL_reg[0]_C_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[0]_LDC_n_0 ),
        .I4(\DMA_ADDR_TAIL_reg[0]_P_n_0 ),
        .I5(tx_addr_head[0]),
        .O(\R_brem[15]_i_206_n_0 ));
  LUT6 #(
    .INIT(64'hA95900000000A959)) 
    \R_brem[15]_i_207 
       (.I0(tx_addr_head[7]),
        .I1(\DMA_ADDR_TAIL_reg[7]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[7]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[7]_P_n_0 ),
        .I4(tx_addr_head[6]),
        .I5(tx_addr_tail[6]),
        .O(\R_brem[15]_i_207_n_0 ));
  LUT6 #(
    .INIT(64'hA95900000000A959)) 
    \R_brem[15]_i_208 
       (.I0(tx_addr_head[5]),
        .I1(\DMA_ADDR_TAIL_reg[5]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[5]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[5]_P_n_0 ),
        .I4(tx_addr_head[4]),
        .I5(tx_addr_tail[4]),
        .O(\R_brem[15]_i_208_n_0 ));
  LUT6 #(
    .INIT(64'hA95900000000A959)) 
    \R_brem[15]_i_209 
       (.I0(tx_addr_head[3]),
        .I1(\DMA_ADDR_TAIL_reg[3]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[3]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[3]_P_n_0 ),
        .I4(tx_addr_head[2]),
        .I5(tx_addr_tail[2]),
        .O(\R_brem[15]_i_209_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \R_brem[15]_i_21 
       (.I0(\R_brem_reg[15]_0 [4]),
        .I1(\R_brem_reg[15]_0 [0]),
        .I2(\R_brem_reg[15]_0 [5]),
        .I3(\R_brem_reg[15]_0 [3]),
        .O(\R_brem[15]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'hA95900000000A959)) 
    \R_brem[15]_i_210 
       (.I0(tx_addr_head[1]),
        .I1(\DMA_ADDR_TAIL_reg[1]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[1]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[1]_P_n_0 ),
        .I4(tx_addr_head[0]),
        .I5(tx_addr_tail[0]),
        .O(\R_brem[15]_i_210_n_0 ));
  LUT4 #(
    .INIT(16'h44D4)) 
    \R_brem[15]_i_215 
       (.I0(\DMA_BREM_reg[15]_0 [7]),
        .I1(\R_brem_reg[7]_0 ),
        .I2(\R_brem_reg[6]_0 ),
        .I3(\DMA_BREM_reg[15]_0 [6]),
        .O(\R_brem[15]_i_215_n_0 ));
  LUT4 #(
    .INIT(16'h44D4)) 
    \R_brem[15]_i_216 
       (.I0(\DMA_BREM_reg[15]_0 [5]),
        .I1(\R_brem_reg[5]_0 ),
        .I2(\R_brem_reg[4]_0 ),
        .I3(\DMA_BREM_reg[15]_0 [4]),
        .O(\R_brem[15]_i_216_n_0 ));
  LUT4 #(
    .INIT(16'h44D4)) 
    \R_brem[15]_i_217 
       (.I0(\DMA_BREM_reg[15]_0 [3]),
        .I1(\R_brem_reg[3]_0 ),
        .I2(\R_brem_reg[2]_0 ),
        .I3(\DMA_BREM_reg[15]_0 [2]),
        .O(\R_brem[15]_i_217_n_0 ));
  LUT4 #(
    .INIT(16'h44D4)) 
    \R_brem[15]_i_218 
       (.I0(\DMA_BREM_reg[15]_0 [1]),
        .I1(\R_brem_reg[1]_0 ),
        .I2(\R_brem_reg[0]_2 ),
        .I3(\DMA_BREM_reg[15]_0 [0]),
        .O(\R_brem[15]_i_218_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \R_brem[15]_i_22 
       (.I0(\R_brem_reg[15]_0 [11]),
        .I1(\R_brem_reg[15]_0 [12]),
        .I2(\R_brem_reg[15]_0 [9]),
        .I3(\R_brem_reg[15]_0 [10]),
        .I4(\R_brem[15]_i_48_n_0 ),
        .O(\R_brem[15]_i_22_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \R_brem[15]_i_48 
       (.I0(\R_brem_reg[15]_0 [2]),
        .I1(\R_brem_reg[15]_0 [1]),
        .I2(\R_brem_reg[15]_0 [13]),
        .I3(\R_brem_reg[15]_0 [8]),
        .O(\R_brem[15]_i_48_n_0 ));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[15]_i_49 
       (.I0(tx_addr_head[15]),
        .I1(\DMA_ADDR_TAIL_reg[15]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[15]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[15]_P_n_0 ),
        .O(\tx_addr_head_reg[15] [3]));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \R_brem[15]_i_5 
       (.I0(\R_brem[15]_i_21_n_0 ),
        .I1(\R_brem_reg[15]_0 [7]),
        .I2(\R_brem_reg[15]_0 [6]),
        .I3(\R_brem_reg[15]_0 [15]),
        .I4(\R_brem_reg[15]_0 [14]),
        .I5(\R_brem[15]_i_22_n_0 ),
        .O(\R_brem[15]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[15]_i_50 
       (.I0(tx_addr_head[14]),
        .I1(\DMA_ADDR_TAIL_reg[14]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[14]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[14]_P_n_0 ),
        .O(\tx_addr_head_reg[15] [2]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[15]_i_51 
       (.I0(tx_addr_head[13]),
        .I1(\DMA_ADDR_TAIL_reg[13]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[13]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[13]_P_n_0 ),
        .O(\tx_addr_head_reg[15] [1]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[15]_i_52 
       (.I0(tx_addr_head[12]),
        .I1(\DMA_ADDR_TAIL_reg[12]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[12]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[12]_P_n_0 ),
        .O(\tx_addr_head_reg[15] [0]));
  LUT6 #(
    .INIT(64'h4D4D4D4444444D44)) 
    \R_brem[15]_i_54 
       (.I0(tx_addr_head[31]),
        .I1(tx_addr_tail[31]),
        .I2(tx_addr_head[30]),
        .I3(\DMA_ADDR_TAIL_reg[30]_C_n_0 ),
        .I4(\DMA_ADDR_TAIL_reg[30]_LDC_n_0 ),
        .I5(\DMA_ADDR_TAIL_reg[30]_P_n_0 ),
        .O(\R_brem[15]_i_54_n_0 ));
  LUT6 #(
    .INIT(64'h44444444DDD444D4)) 
    \R_brem[15]_i_55 
       (.I0(tx_addr_head[29]),
        .I1(tx_addr_tail[29]),
        .I2(\DMA_ADDR_TAIL_reg[28]_C_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[28]_LDC_n_0 ),
        .I4(\DMA_ADDR_TAIL_reg[28]_P_n_0 ),
        .I5(tx_addr_head[28]),
        .O(\R_brem[15]_i_55_n_0 ));
  LUT6 #(
    .INIT(64'h44444444DDD444D4)) 
    \R_brem[15]_i_56 
       (.I0(tx_addr_head[27]),
        .I1(tx_addr_tail[27]),
        .I2(\DMA_ADDR_TAIL_reg[26]_C_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[26]_LDC_n_0 ),
        .I4(\DMA_ADDR_TAIL_reg[26]_P_n_0 ),
        .I5(tx_addr_head[26]),
        .O(\R_brem[15]_i_56_n_0 ));
  LUT6 #(
    .INIT(64'h44444444DDD444D4)) 
    \R_brem[15]_i_57 
       (.I0(tx_addr_head[25]),
        .I1(tx_addr_tail[25]),
        .I2(\DMA_ADDR_TAIL_reg[24]_C_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[24]_LDC_n_0 ),
        .I4(\DMA_ADDR_TAIL_reg[24]_P_n_0 ),
        .I5(tx_addr_head[24]),
        .O(\R_brem[15]_i_57_n_0 ));
  LUT6 #(
    .INIT(64'hB84700000000B847)) 
    \R_brem[15]_i_58 
       (.I0(\DMA_ADDR_TAIL_reg[31]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[31]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[31]_C_n_0 ),
        .I3(tx_addr_head[31]),
        .I4(tx_addr_tail[30]),
        .I5(tx_addr_head[30]),
        .O(\R_brem[15]_i_58_n_0 ));
  LUT6 #(
    .INIT(64'hB84700000000B847)) 
    \R_brem[15]_i_59 
       (.I0(\DMA_ADDR_TAIL_reg[29]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[29]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[29]_C_n_0 ),
        .I3(tx_addr_head[29]),
        .I4(tx_addr_tail[28]),
        .I5(tx_addr_head[28]),
        .O(\R_brem[15]_i_59_n_0 ));
  LUT4 #(
    .INIT(16'hFFBF)) 
    \R_brem[15]_i_6 
       (.I0(state[2]),
        .I1(state[1]),
        .I2(state[0]),
        .I3(R_done_reg_n_0),
        .O(\R_brem[15]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hB84700000000B847)) 
    \R_brem[15]_i_60 
       (.I0(\DMA_ADDR_TAIL_reg[27]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[27]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[27]_C_n_0 ),
        .I3(tx_addr_head[27]),
        .I4(tx_addr_tail[26]),
        .I5(tx_addr_head[26]),
        .O(\R_brem[15]_i_60_n_0 ));
  LUT6 #(
    .INIT(64'hB84700000000B847)) 
    \R_brem[15]_i_61 
       (.I0(\DMA_ADDR_TAIL_reg[25]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[25]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[25]_C_n_0 ),
        .I3(tx_addr_head[25]),
        .I4(tx_addr_tail[24]),
        .I5(tx_addr_head[24]),
        .O(\R_brem[15]_i_61_n_0 ));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[15]_i_62 
       (.I0(tx_addr_end[15]),
        .I1(\DMA_ADDR_TAIL_reg[15]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[15]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[15]_P_n_0 ),
        .O(\tx_addr_end_reg[15] [3]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[15]_i_63 
       (.I0(tx_addr_end[14]),
        .I1(\DMA_ADDR_TAIL_reg[14]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[14]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[14]_P_n_0 ),
        .O(\tx_addr_end_reg[15] [2]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[15]_i_64 
       (.I0(tx_addr_end[13]),
        .I1(\DMA_ADDR_TAIL_reg[13]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[13]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[13]_P_n_0 ),
        .O(\tx_addr_end_reg[15] [1]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[15]_i_65 
       (.I0(tx_addr_end[12]),
        .I1(\DMA_ADDR_TAIL_reg[12]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[12]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[12]_P_n_0 ),
        .O(\tx_addr_end_reg[15] [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[15]_i_85 
       (.I0(\R_brem_reg[15]_0 [15]),
        .I1(R_bmove[15]),
        .O(\R_brem[15]_i_85_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[15]_i_86 
       (.I0(\R_brem_reg[15]_0 [14]),
        .I1(R_bmove[14]),
        .O(\R_brem[15]_i_86_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[15]_i_87 
       (.I0(\R_brem_reg[15]_0 [13]),
        .I1(R_bmove[13]),
        .O(\R_brem[15]_i_87_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[15]_i_88 
       (.I0(\R_brem_reg[15]_0 [12]),
        .I1(R_bmove[12]),
        .O(\R_brem[15]_i_88_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[15]_i_89 
       (.I0(Q[31]),
        .I1(tx_addr_end[31]),
        .O(\R_addr_reg[31]_0 ));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \R_brem[15]_i_9 
       (.I0(\DMA_BREM_reg[15]_0 [15]),
        .I1(\R_brem_reg[14]_0 ),
        .I2(\R_brem[15]_i_5_n_0 ),
        .I3(\R_brem_reg[15]_3 ),
        .I4(state[0]),
        .I5(\R_brem_reg[15]_i_36_n_4 ),
        .O(\DMA_BREM_reg[15]_1 ));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[15]_i_93 
       (.I0(Q[31]),
        .I1(tx_addr_head[31]),
        .O(\R_addr_reg[31]_1 ));
  LUT4 #(
    .INIT(16'h44D4)) 
    \R_brem[15]_i_98 
       (.I0(\R_brem_reg[15]_0 [15]),
        .I1(\R_brem_reg[15]_3 ),
        .I2(\R_brem_reg[14]_1 ),
        .I3(\R_brem_reg[15]_0 [14]),
        .O(\R_brem[15]_i_98_n_0 ));
  LUT4 #(
    .INIT(16'h44D4)) 
    \R_brem[15]_i_99 
       (.I0(\R_brem_reg[15]_0 [13]),
        .I1(\R_brem_reg[13]_0 ),
        .I2(\R_brem_reg[12]_0 ),
        .I3(\R_brem_reg[15]_0 [12]),
        .O(\R_brem[15]_i_99_n_0 ));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \R_brem[1]_i_3 
       (.I0(\DMA_BREM_reg[15]_0 [1]),
        .I1(\R_brem_reg[14]_0 ),
        .I2(\R_brem[15]_i_5_n_0 ),
        .I3(\R_brem_reg[1]_0 ),
        .I4(state[0]),
        .I5(\R_brem_reg[3]_i_7_n_6 ),
        .O(\DMA_BREM_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \R_brem[2]_i_3 
       (.I0(\DMA_BREM_reg[15]_0 [2]),
        .I1(\R_brem_reg[14]_0 ),
        .I2(\R_brem[15]_i_5_n_0 ),
        .I3(\R_brem_reg[2]_0 ),
        .I4(state[0]),
        .I5(\R_brem_reg[3]_i_7_n_5 ),
        .O(\DMA_BREM_reg[2]_0 ));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[3]_i_10 
       (.I0(tx_addr_end[1]),
        .I1(\DMA_ADDR_TAIL_reg[1]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[1]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[1]_P_n_0 ),
        .O(\tx_addr_end_reg[3] [1]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[3]_i_11 
       (.I0(tx_addr_end[0]),
        .I1(\DMA_ADDR_TAIL_reg[0]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[0]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[0]_P_n_0 ),
        .O(\tx_addr_end_reg[3] [0]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[3]_i_12 
       (.I0(tx_addr_head[3]),
        .I1(\DMA_ADDR_TAIL_reg[3]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[3]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[3]_P_n_0 ),
        .O(\tx_addr_head_reg[3] [3]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[3]_i_13 
       (.I0(tx_addr_head[2]),
        .I1(\DMA_ADDR_TAIL_reg[2]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[2]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[2]_P_n_0 ),
        .O(\tx_addr_head_reg[3] [2]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[3]_i_14 
       (.I0(tx_addr_head[1]),
        .I1(\DMA_ADDR_TAIL_reg[1]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[1]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[1]_P_n_0 ),
        .O(\tx_addr_head_reg[3] [1]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[3]_i_15 
       (.I0(tx_addr_head[0]),
        .I1(\DMA_ADDR_TAIL_reg[0]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[0]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[0]_P_n_0 ),
        .O(\tx_addr_head_reg[3] [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[3]_i_16 
       (.I0(\R_brem_reg[15]_0 [3]),
        .I1(R_bmove[3]),
        .O(\R_brem[3]_i_16_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[3]_i_17 
       (.I0(\R_brem_reg[15]_0 [2]),
        .I1(R_bmove[2]),
        .O(\R_brem[3]_i_17_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[3]_i_18 
       (.I0(\R_brem_reg[15]_0 [1]),
        .I1(R_bmove[1]),
        .O(\R_brem[3]_i_18_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[3]_i_19 
       (.I0(\R_brem_reg[15]_0 [0]),
        .I1(R_bmove[0]),
        .O(\R_brem[3]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \R_brem[3]_i_3 
       (.I0(\DMA_BREM_reg[15]_0 [3]),
        .I1(\R_brem_reg[14]_0 ),
        .I2(\R_brem[15]_i_5_n_0 ),
        .I3(\R_brem_reg[3]_0 ),
        .I4(state[0]),
        .I5(\R_brem_reg[3]_i_7_n_4 ),
        .O(\DMA_BREM_reg[3]_0 ));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[3]_i_8 
       (.I0(tx_addr_end[3]),
        .I1(\DMA_ADDR_TAIL_reg[3]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[3]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[3]_P_n_0 ),
        .O(\tx_addr_end_reg[3] [3]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[3]_i_9 
       (.I0(tx_addr_end[2]),
        .I1(\DMA_ADDR_TAIL_reg[2]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[2]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[2]_P_n_0 ),
        .O(\tx_addr_end_reg[3] [2]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \R_brem[4]_i_3 
       (.I0(\DMA_BREM_reg[15]_0 [4]),
        .I1(\R_brem_reg[14]_0 ),
        .I2(\R_brem[15]_i_5_n_0 ),
        .I3(\R_brem_reg[4]_0 ),
        .I4(state[0]),
        .I5(\R_brem_reg[7]_i_7_n_7 ),
        .O(\DMA_BREM_reg[4]_0 ));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \R_brem[5]_i_3 
       (.I0(\DMA_BREM_reg[15]_0 [5]),
        .I1(\R_brem_reg[14]_0 ),
        .I2(\R_brem[15]_i_5_n_0 ),
        .I3(\R_brem_reg[5]_0 ),
        .I4(state[0]),
        .I5(\R_brem_reg[7]_i_7_n_6 ),
        .O(\DMA_BREM_reg[5]_0 ));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \R_brem[6]_i_3 
       (.I0(\DMA_BREM_reg[15]_0 [6]),
        .I1(\R_brem_reg[14]_0 ),
        .I2(\R_brem[15]_i_5_n_0 ),
        .I3(\R_brem_reg[6]_0 ),
        .I4(state[0]),
        .I5(\R_brem_reg[7]_i_7_n_5 ),
        .O(\DMA_BREM_reg[6]_0 ));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[7]_i_10 
       (.I0(tx_addr_head[5]),
        .I1(\DMA_ADDR_TAIL_reg[5]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[5]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[5]_P_n_0 ),
        .O(\tx_addr_head_reg[7] [1]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[7]_i_11 
       (.I0(tx_addr_head[4]),
        .I1(\DMA_ADDR_TAIL_reg[4]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[4]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[4]_P_n_0 ),
        .O(\tx_addr_head_reg[7] [0]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[7]_i_12 
       (.I0(tx_addr_end[7]),
        .I1(\DMA_ADDR_TAIL_reg[7]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[7]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[7]_P_n_0 ),
        .O(\tx_addr_end_reg[7] [3]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[7]_i_13 
       (.I0(tx_addr_end[6]),
        .I1(\DMA_ADDR_TAIL_reg[6]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[6]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[6]_P_n_0 ),
        .O(\tx_addr_end_reg[7] [2]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[7]_i_14 
       (.I0(tx_addr_end[5]),
        .I1(\DMA_ADDR_TAIL_reg[5]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[5]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[5]_P_n_0 ),
        .O(\tx_addr_end_reg[7] [1]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[7]_i_15 
       (.I0(tx_addr_end[4]),
        .I1(\DMA_ADDR_TAIL_reg[4]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[4]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[4]_P_n_0 ),
        .O(\tx_addr_end_reg[7] [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[7]_i_18 
       (.I0(\R_brem_reg[15]_0 [7]),
        .I1(R_bmove[7]),
        .O(\R_brem[7]_i_18_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[7]_i_19 
       (.I0(\R_brem_reg[15]_0 [6]),
        .I1(R_bmove[6]),
        .O(\R_brem[7]_i_19_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[7]_i_20 
       (.I0(\R_brem_reg[15]_0 [5]),
        .I1(R_bmove[5]),
        .O(\R_brem[7]_i_20_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \R_brem[7]_i_21 
       (.I0(\R_brem_reg[15]_0 [4]),
        .I1(R_bmove[4]),
        .O(\R_brem[7]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \R_brem[7]_i_3 
       (.I0(\DMA_BREM_reg[15]_0 [7]),
        .I1(\R_brem_reg[14]_0 ),
        .I2(\R_brem[15]_i_5_n_0 ),
        .I3(\R_brem_reg[7]_0 ),
        .I4(state[0]),
        .I5(\R_brem_reg[7]_i_7_n_4 ),
        .O(\DMA_BREM_reg[7]_0 ));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[7]_i_8 
       (.I0(tx_addr_head[7]),
        .I1(\DMA_ADDR_TAIL_reg[7]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[7]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[7]_P_n_0 ),
        .O(\tx_addr_head_reg[7] [3]));
  LUT4 #(
    .INIT(16'hA959)) 
    \R_brem[7]_i_9 
       (.I0(tx_addr_head[6]),
        .I1(\DMA_ADDR_TAIL_reg[6]_C_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[6]_LDC_n_0 ),
        .I3(\DMA_ADDR_TAIL_reg[6]_P_n_0 ),
        .O(\tx_addr_head_reg[7] [2]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \R_brem[8]_i_3 
       (.I0(\DMA_BREM_reg[15]_0 [8]),
        .I1(\R_brem_reg[14]_0 ),
        .I2(\R_brem[15]_i_5_n_0 ),
        .I3(\R_brem_reg[8]_0 ),
        .I4(state[0]),
        .I5(\R_brem_reg[11]_i_7_n_7 ),
        .O(\DMA_BREM_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \R_brem[9]_i_3 
       (.I0(\DMA_BREM_reg[15]_0 [9]),
        .I1(\R_brem_reg[14]_0 ),
        .I2(\R_brem[15]_i_5_n_0 ),
        .I3(\R_brem_reg[9]_0 ),
        .I4(state[0]),
        .I5(\R_brem_reg[11]_i_7_n_6 ),
        .O(\DMA_BREM_reg[9]_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \R_brem_reg[0] 
       (.C(ACLK),
        .CE(\R_brem[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_brem_reg[15]_4 [0]),
        .Q(\R_brem_reg[15]_0 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \R_brem_reg[10] 
       (.C(ACLK),
        .CE(\R_brem[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_brem_reg[15]_4 [10]),
        .Q(\R_brem_reg[15]_0 [10]));
  FDCE #(
    .INIT(1'b0)) 
    \R_brem_reg[11] 
       (.C(ACLK),
        .CE(\R_brem[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_brem_reg[15]_4 [11]),
        .Q(\R_brem_reg[15]_0 [11]));
  CARRY4 \R_brem_reg[11]_i_7 
       (.CI(\R_brem_reg[7]_i_7_n_0 ),
        .CO({\R_brem_reg[11]_i_7_n_0 ,\R_brem_reg[11]_i_7_n_1 ,\R_brem_reg[11]_i_7_n_2 ,\R_brem_reg[11]_i_7_n_3 }),
        .CYINIT(1'b0),
        .DI(\R_brem_reg[15]_0 [11:8]),
        .O({\R_brem_reg[11]_i_7_n_4 ,\R_brem_reg[11]_i_7_n_5 ,\R_brem_reg[11]_i_7_n_6 ,\R_brem_reg[11]_i_7_n_7 }),
        .S({\R_brem[11]_i_16_n_0 ,\R_brem[11]_i_17_n_0 ,\R_brem[11]_i_18_n_0 ,\R_brem[11]_i_19_n_0 }));
  FDCE #(
    .INIT(1'b0)) 
    \R_brem_reg[12] 
       (.C(ACLK),
        .CE(\R_brem[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_brem_reg[15]_4 [12]),
        .Q(\R_brem_reg[15]_0 [12]));
  FDCE #(
    .INIT(1'b0)) 
    \R_brem_reg[13] 
       (.C(ACLK),
        .CE(\R_brem[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_brem_reg[15]_4 [13]),
        .Q(\R_brem_reg[15]_0 [13]));
  FDCE #(
    .INIT(1'b0)) 
    \R_brem_reg[14] 
       (.C(ACLK),
        .CE(\R_brem[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_brem_reg[15]_4 [14]),
        .Q(\R_brem_reg[15]_0 [14]));
  FDCE #(
    .INIT(1'b0)) 
    \R_brem_reg[15] 
       (.C(ACLK),
        .CE(\R_brem[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_brem_reg[15]_4 [15]),
        .Q(\R_brem_reg[15]_0 [15]));
  CARRY4 \R_brem_reg[15]_i_106 
       (.CI(\R_brem_reg[15]_i_157_n_0 ),
        .CO({\R_brem_reg[15]_i_106_n_0 ,\R_brem_reg[15]_i_106_n_1 ,\R_brem_reg[15]_i_106_n_2 ,\R_brem_reg[15]_i_106_n_3 }),
        .CYINIT(1'b0),
        .DI({\R_brem[15]_i_158_n_0 ,\R_brem[15]_i_159_n_0 ,\R_brem[15]_i_160_n_0 ,\R_brem[15]_i_161_n_0 }),
        .O(\NLW_R_brem_reg[15]_i_106_O_UNCONNECTED [3:0]),
        .S({\R_brem[15]_i_162_n_0 ,\R_brem[15]_i_163_n_0 ,\R_brem[15]_i_164_n_0 ,\R_brem[15]_i_165_n_0 }));
  CARRY4 \R_brem_reg[15]_i_144 
       (.CI(\R_brem_reg[15]_i_194_n_0 ),
        .CO({\DMA_BREM_reg[15]_2 ,\R_brem_reg[15]_i_144_n_1 ,\R_brem_reg[15]_i_144_n_2 ,\R_brem_reg[15]_i_144_n_3 }),
        .CYINIT(1'b0),
        .DI({\R_brem[15]_i_195_n_0 ,\R_brem[15]_i_196_n_0 ,\R_brem[15]_i_197_n_0 ,\R_brem[15]_i_198_n_0 }),
        .O(\NLW_R_brem_reg[15]_i_144_O_UNCONNECTED [3:0]),
        .S(\R_brem_reg[15]_i_80 ));
  CARRY4 \R_brem_reg[15]_i_157 
       (.CI(1'b0),
        .CO({\R_brem_reg[15]_i_157_n_0 ,\R_brem_reg[15]_i_157_n_1 ,\R_brem_reg[15]_i_157_n_2 ,\R_brem_reg[15]_i_157_n_3 }),
        .CYINIT(1'b0),
        .DI({\R_brem[15]_i_203_n_0 ,\R_brem[15]_i_204_n_0 ,\R_brem[15]_i_205_n_0 ,\R_brem[15]_i_206_n_0 }),
        .O(\NLW_R_brem_reg[15]_i_157_O_UNCONNECTED [3:0]),
        .S({\R_brem[15]_i_207_n_0 ,\R_brem[15]_i_208_n_0 ,\R_brem[15]_i_209_n_0 ,\R_brem[15]_i_210_n_0 }));
  CARRY4 \R_brem_reg[15]_i_194 
       (.CI(1'b0),
        .CO({\R_brem_reg[15]_i_194_n_0 ,\R_brem_reg[15]_i_194_n_1 ,\R_brem_reg[15]_i_194_n_2 ,\R_brem_reg[15]_i_194_n_3 }),
        .CYINIT(1'b0),
        .DI({\R_brem[15]_i_215_n_0 ,\R_brem[15]_i_216_n_0 ,\R_brem[15]_i_217_n_0 ,\R_brem[15]_i_218_n_0 }),
        .O(\NLW_R_brem_reg[15]_i_194_O_UNCONNECTED [3:0]),
        .S(\R_brem_reg[15]_i_144_0 ));
  CARRY4 \R_brem_reg[15]_i_24 
       (.CI(\R_brem_reg[15]_i_53_n_0 ),
        .CO({\tx_addr_head_reg[31] ,\R_brem_reg[15]_i_24_n_1 ,\R_brem_reg[15]_i_24_n_2 ,\R_brem_reg[15]_i_24_n_3 }),
        .CYINIT(1'b0),
        .DI({\R_brem[15]_i_54_n_0 ,\R_brem[15]_i_55_n_0 ,\R_brem[15]_i_56_n_0 ,\R_brem[15]_i_57_n_0 }),
        .O(\NLW_R_brem_reg[15]_i_24_O_UNCONNECTED [3:0]),
        .S({\R_brem[15]_i_58_n_0 ,\R_brem[15]_i_59_n_0 ,\R_brem[15]_i_60_n_0 ,\R_brem[15]_i_61_n_0 }));
  CARRY4 \R_brem_reg[15]_i_36 
       (.CI(\R_brem_reg[11]_i_7_n_0 ),
        .CO({\NLW_R_brem_reg[15]_i_36_CO_UNCONNECTED [3],\R_brem_reg[15]_i_36_n_1 ,\R_brem_reg[15]_i_36_n_2 ,\R_brem_reg[15]_i_36_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\R_brem_reg[15]_0 [14:12]}),
        .O({\R_brem_reg[15]_i_36_n_4 ,\R_brem_reg[15]_i_36_n_5 ,\R_brem_reg[15]_i_36_n_6 ,\R_brem_reg[15]_i_36_n_7 }),
        .S({\R_brem[15]_i_85_n_0 ,\R_brem[15]_i_86_n_0 ,\R_brem[15]_i_87_n_0 ,\R_brem[15]_i_88_n_0 }));
  CARRY4 \R_brem_reg[15]_i_41 
       (.CI(\R_brem_reg[15]_i_97_n_0 ),
        .CO({\R_brem_reg[15]_2 ,\R_brem_reg[15]_i_41_n_1 ,\R_brem_reg[15]_i_41_n_2 ,\R_brem_reg[15]_i_41_n_3 }),
        .CYINIT(1'b0),
        .DI({\R_brem[15]_i_98_n_0 ,\R_brem[15]_i_99_n_0 ,\R_brem[15]_i_100_n_0 ,\R_brem[15]_i_101_n_0 }),
        .O(\NLW_R_brem_reg[15]_i_41_O_UNCONNECTED [3:0]),
        .S(\R_brem_reg[15]_i_13 ));
  CARRY4 \R_brem_reg[15]_i_53 
       (.CI(\R_brem_reg[15]_i_106_n_0 ),
        .CO({\R_brem_reg[15]_i_53_n_0 ,\R_brem_reg[15]_i_53_n_1 ,\R_brem_reg[15]_i_53_n_2 ,\R_brem_reg[15]_i_53_n_3 }),
        .CYINIT(1'b0),
        .DI({\R_brem[15]_i_107_n_0 ,\R_brem[15]_i_108_n_0 ,\R_brem[15]_i_109_n_0 ,\R_brem[15]_i_110_n_0 }),
        .O(\NLW_R_brem_reg[15]_i_53_O_UNCONNECTED [3:0]),
        .S({\R_brem[15]_i_111_n_0 ,\R_brem[15]_i_112_n_0 ,\R_brem[15]_i_113_n_0 ,\R_brem[15]_i_114_n_0 }));
  CARRY4 \R_brem_reg[15]_i_97 
       (.CI(1'b0),
        .CO({\R_brem_reg[15]_i_97_n_0 ,\R_brem_reg[15]_i_97_n_1 ,\R_brem_reg[15]_i_97_n_2 ,\R_brem_reg[15]_i_97_n_3 }),
        .CYINIT(1'b0),
        .DI({\R_brem[15]_i_149_n_0 ,\R_brem[15]_i_150_n_0 ,\R_brem[15]_i_151_n_0 ,\R_brem[15]_i_152_n_0 }),
        .O(\NLW_R_brem_reg[15]_i_97_O_UNCONNECTED [3:0]),
        .S(\R_brem_reg[15]_i_41_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \R_brem_reg[1] 
       (.C(ACLK),
        .CE(\R_brem[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_brem_reg[15]_4 [1]),
        .Q(\R_brem_reg[15]_0 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \R_brem_reg[2] 
       (.C(ACLK),
        .CE(\R_brem[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_brem_reg[15]_4 [2]),
        .Q(\R_brem_reg[15]_0 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \R_brem_reg[3] 
       (.C(ACLK),
        .CE(\R_brem[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_brem_reg[15]_4 [3]),
        .Q(\R_brem_reg[15]_0 [3]));
  CARRY4 \R_brem_reg[3]_i_7 
       (.CI(1'b0),
        .CO({\R_brem_reg[3]_i_7_n_0 ,\R_brem_reg[3]_i_7_n_1 ,\R_brem_reg[3]_i_7_n_2 ,\R_brem_reg[3]_i_7_n_3 }),
        .CYINIT(1'b1),
        .DI(\R_brem_reg[15]_0 [3:0]),
        .O({\R_brem_reg[3]_i_7_n_4 ,\R_brem_reg[3]_i_7_n_5 ,\R_brem_reg[3]_i_7_n_6 ,\R_brem_reg[3]_i_7_n_7 }),
        .S({\R_brem[3]_i_16_n_0 ,\R_brem[3]_i_17_n_0 ,\R_brem[3]_i_18_n_0 ,\R_brem[3]_i_19_n_0 }));
  FDCE #(
    .INIT(1'b0)) 
    \R_brem_reg[4] 
       (.C(ACLK),
        .CE(\R_brem[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_brem_reg[15]_4 [4]),
        .Q(\R_brem_reg[15]_0 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \R_brem_reg[5] 
       (.C(ACLK),
        .CE(\R_brem[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_brem_reg[15]_4 [5]),
        .Q(\R_brem_reg[15]_0 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \R_brem_reg[6] 
       (.C(ACLK),
        .CE(\R_brem[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_brem_reg[15]_4 [6]),
        .Q(\R_brem_reg[15]_0 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \R_brem_reg[7] 
       (.C(ACLK),
        .CE(\R_brem[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_brem_reg[15]_4 [7]),
        .Q(\R_brem_reg[15]_0 [7]));
  CARRY4 \R_brem_reg[7]_i_7 
       (.CI(\R_brem_reg[3]_i_7_n_0 ),
        .CO({\R_brem_reg[7]_i_7_n_0 ,\R_brem_reg[7]_i_7_n_1 ,\R_brem_reg[7]_i_7_n_2 ,\R_brem_reg[7]_i_7_n_3 }),
        .CYINIT(1'b0),
        .DI(\R_brem_reg[15]_0 [7:4]),
        .O({\R_brem_reg[7]_i_7_n_4 ,\R_brem_reg[7]_i_7_n_5 ,\R_brem_reg[7]_i_7_n_6 ,\R_brem_reg[7]_i_7_n_7 }),
        .S({\R_brem[7]_i_18_n_0 ,\R_brem[7]_i_19_n_0 ,\R_brem[7]_i_20_n_0 ,\R_brem[7]_i_21_n_0 }));
  FDCE #(
    .INIT(1'b0)) 
    \R_brem_reg[8] 
       (.C(ACLK),
        .CE(\R_brem[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_brem_reg[15]_4 [8]),
        .Q(\R_brem_reg[15]_0 [8]));
  FDCE #(
    .INIT(1'b0)) 
    \R_brem_reg[9] 
       (.C(ACLK),
        .CE(\R_brem[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_brem_reg[15]_4 [9]),
        .Q(\R_brem_reg[15]_0 [9]));
  LUT3 #(
    .INIT(8'h2A)) 
    \R_cnt[0]_i_1 
       (.I0(conf_tx_en),
        .I1(state_read[1]),
        .I2(R_cnt[0]),
        .O(\R_cnt[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h2800)) 
    \R_cnt[1]_i_1 
       (.I0(conf_tx_en),
        .I1(R_cnt[0]),
        .I2(R_cnt[1]),
        .I3(state_read[1]),
        .O(\R_cnt[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h08808080)) 
    \R_cnt[2]_i_1 
       (.I0(conf_tx_en),
        .I1(state_read[1]),
        .I2(R_cnt[2]),
        .I3(R_cnt[1]),
        .I4(R_cnt[0]),
        .O(\R_cnt[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0880808080808080)) 
    \R_cnt[3]_i_1 
       (.I0(conf_tx_en),
        .I1(state_read[1]),
        .I2(R_cnt[3]),
        .I3(R_cnt[2]),
        .I4(R_cnt[0]),
        .I5(R_cnt[1]),
        .O(\R_cnt[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8008)) 
    \R_cnt[4]_i_1 
       (.I0(conf_tx_en),
        .I1(state_read[1]),
        .I2(R_cnt[4]),
        .I3(\R_cnt[4]_i_2_n_0 ),
        .O(\R_cnt[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \R_cnt[4]_i_2 
       (.I0(R_cnt[3]),
        .I1(R_cnt[1]),
        .I2(R_cnt[0]),
        .I3(R_cnt[2]),
        .O(\R_cnt[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h8008)) 
    \R_cnt[5]_i_1 
       (.I0(conf_tx_en),
        .I1(state_read[1]),
        .I2(R_cnt[5]),
        .I3(\R_cnt[5]_i_2_n_0 ),
        .O(\R_cnt[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \R_cnt[5]_i_2 
       (.I0(R_cnt[3]),
        .I1(R_cnt[1]),
        .I2(R_cnt[0]),
        .I3(R_cnt[2]),
        .I4(R_cnt[4]),
        .O(\R_cnt[5]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h8008)) 
    \R_cnt[6]_i_1 
       (.I0(conf_tx_en),
        .I1(state_read[1]),
        .I2(R_cnt[6]),
        .I3(\R_cnt[8]_i_3_n_0 ),
        .O(\R_cnt[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80088080)) 
    \R_cnt[7]_i_1 
       (.I0(conf_tx_en),
        .I1(state_read[1]),
        .I2(R_cnt[7]),
        .I3(\R_cnt[8]_i_3_n_0 ),
        .I4(R_cnt[6]),
        .O(\R_cnt[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h55557D75)) 
    \R_cnt[8]_i_1 
       (.I0(conf_tx_en),
        .I1(state_read[1]),
        .I2(state_read[0]),
        .I3(M_RVALID),
        .I4(full),
        .O(\R_cnt[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8888288800000000)) 
    \R_cnt[8]_i_2 
       (.I0(conf_tx_en),
        .I1(R_cnt[8]),
        .I2(R_cnt[7]),
        .I3(R_cnt[6]),
        .I4(\R_cnt[8]_i_3_n_0 ),
        .I5(state_read[1]),
        .O(\R_cnt[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \R_cnt[8]_i_3 
       (.I0(R_cnt[4]),
        .I1(R_cnt[2]),
        .I2(R_cnt[0]),
        .I3(R_cnt[1]),
        .I4(R_cnt[3]),
        .I5(R_cnt[5]),
        .O(\R_cnt[8]_i_3_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \R_cnt_reg[0] 
       (.C(ACLK),
        .CE(\R_cnt[8]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_cnt[0]_i_1_n_0 ),
        .Q(R_cnt[0]));
  FDCE #(
    .INIT(1'b0)) 
    \R_cnt_reg[1] 
       (.C(ACLK),
        .CE(\R_cnt[8]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_cnt[1]_i_1_n_0 ),
        .Q(R_cnt[1]));
  FDCE #(
    .INIT(1'b0)) 
    \R_cnt_reg[2] 
       (.C(ACLK),
        .CE(\R_cnt[8]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_cnt[2]_i_1_n_0 ),
        .Q(R_cnt[2]));
  FDCE #(
    .INIT(1'b0)) 
    \R_cnt_reg[3] 
       (.C(ACLK),
        .CE(\R_cnt[8]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_cnt[3]_i_1_n_0 ),
        .Q(R_cnt[3]));
  FDCE #(
    .INIT(1'b0)) 
    \R_cnt_reg[4] 
       (.C(ACLK),
        .CE(\R_cnt[8]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_cnt[4]_i_1_n_0 ),
        .Q(R_cnt[4]));
  FDCE #(
    .INIT(1'b0)) 
    \R_cnt_reg[5] 
       (.C(ACLK),
        .CE(\R_cnt[8]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_cnt[5]_i_1_n_0 ),
        .Q(R_cnt[5]));
  FDCE #(
    .INIT(1'b0)) 
    \R_cnt_reg[6] 
       (.C(ACLK),
        .CE(\R_cnt[8]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_cnt[6]_i_1_n_0 ),
        .Q(R_cnt[6]));
  FDCE #(
    .INIT(1'b0)) 
    \R_cnt_reg[7] 
       (.C(ACLK),
        .CE(\R_cnt[8]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_cnt[7]_i_1_n_0 ),
        .Q(R_cnt[7]));
  FDCE #(
    .INIT(1'b0)) 
    \R_cnt_reg[8] 
       (.C(ACLK),
        .CE(\R_cnt[8]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_cnt[8]_i_2_n_0 ),
        .Q(R_cnt[8]));
  LUT6 #(
    .INIT(64'h000008AA0A0A08AA)) 
    \R_ctl[1]_i_1 
       (.I0(conf_tx_en),
        .I1(\R_ctl[4]_i_5_n_0 ),
        .I2(\R_ctl[1]_i_2_n_0 ),
        .I3(\R_ctl[4]_i_7_n_0 ),
        .I4(state_read[1]),
        .I5(\R_ctl[4]_i_8_n_0 ),
        .O(\R_ctl[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT2 #(
    .INIT(4'hD)) 
    \R_ctl[1]_i_2 
       (.I0(R_bmove[0]),
        .I1(R_bmove[1]),
        .O(\R_ctl[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000008AA0A0A08AA)) 
    \R_ctl[2]_i_1 
       (.I0(conf_tx_en),
        .I1(\R_ctl[4]_i_5_n_0 ),
        .I2(\R_ctl[2]_i_2_n_0 ),
        .I3(\R_ctl[4]_i_7_n_0 ),
        .I4(state_read[1]),
        .I5(\R_ctl[4]_i_8_n_0 ),
        .O(\R_ctl[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \R_ctl[2]_i_2 
       (.I0(R_bmove[0]),
        .I1(R_bmove[1]),
        .O(\R_ctl[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000008AA0A0A08AA)) 
    \R_ctl[3]_i_1 
       (.I0(conf_tx_en),
        .I1(\R_ctl[4]_i_5_n_0 ),
        .I2(\R_ctl[3]_i_2_n_0 ),
        .I3(\R_ctl[4]_i_7_n_0 ),
        .I4(state_read[1]),
        .I5(\R_ctl[4]_i_8_n_0 ),
        .O(\R_ctl[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \R_ctl[3]_i_2 
       (.I0(R_bmove[0]),
        .I1(R_bmove[1]),
        .O(\R_ctl[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAABFBBBBBB)) 
    \R_ctl[4]_i_1 
       (.I0(\R_ctl[4]_i_3_n_0 ),
        .I1(\R_ctl[4]_i_4_n_0 ),
        .I2(state_read[1]),
        .I3(R_go_reg_n_0),
        .I4(R_first_reg_n_0),
        .I5(state_read[0]),
        .O(\R_ctl[4]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \R_ctl[4]_i_10 
       (.I0(R_len[6]),
        .I1(R_len[5]),
        .I2(R_len[4]),
        .O(\R_ctl[4]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \R_ctl[4]_i_13 
       (.I0(R_len[6]),
        .I1(R_len[5]),
        .I2(R_len[4]),
        .I3(\M_ARLEN[7]_i_2_n_0 ),
        .I4(R_len[8]),
        .I5(R_len[7]),
        .O(\R_ctl[4]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \R_ctl[4]_i_14 
       (.I0(R_len[6]),
        .I1(R_len[5]),
        .I2(R_len[4]),
        .I3(\M_ARLEN[7]_i_2_n_0 ),
        .I4(R_len[8]),
        .I5(R_len[7]),
        .O(\R_ctl[4]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \R_ctl[4]_i_15 
       (.I0(R_len[6]),
        .I1(R_len[5]),
        .I2(R_len[4]),
        .I3(\M_ARLEN[7]_i_2_n_0 ),
        .I4(R_len[8]),
        .I5(R_len[7]),
        .O(\R_ctl[4]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \R_ctl[4]_i_17 
       (.I0(R_len[6]),
        .I1(R_len[5]),
        .I2(R_len[4]),
        .I3(\M_ARLEN[7]_i_2_n_0 ),
        .I4(R_len[8]),
        .I5(R_len[7]),
        .O(\R_ctl[4]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \R_ctl[4]_i_18 
       (.I0(R_len[6]),
        .I1(R_len[5]),
        .I2(R_len[4]),
        .I3(\M_ARLEN[7]_i_2_n_0 ),
        .I4(R_len[8]),
        .I5(R_len[7]),
        .O(\R_ctl[4]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \R_ctl[4]_i_19 
       (.I0(R_len[6]),
        .I1(R_len[5]),
        .I2(R_len[4]),
        .I3(\M_ARLEN[7]_i_2_n_0 ),
        .I4(R_len[8]),
        .I5(R_len[7]),
        .O(\R_ctl[4]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h000008AA0A0A08AA)) 
    \R_ctl[4]_i_2 
       (.I0(conf_tx_en),
        .I1(\R_ctl[4]_i_5_n_0 ),
        .I2(\R_ctl[4]_i_6_n_0 ),
        .I3(\R_ctl[4]_i_7_n_0 ),
        .I4(state_read[1]),
        .I5(\R_ctl[4]_i_8_n_0 ),
        .O(\R_ctl[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \R_ctl[4]_i_20 
       (.I0(R_len[6]),
        .I1(R_len[5]),
        .I2(R_len[4]),
        .I3(\M_ARLEN[7]_i_2_n_0 ),
        .I4(R_len[8]),
        .I5(R_len[7]),
        .O(\R_ctl[4]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \R_ctl[4]_i_21 
       (.I0(R_len[6]),
        .I1(R_len[5]),
        .I2(R_len[4]),
        .I3(\M_ARLEN[7]_i_2_n_0 ),
        .I4(R_len[8]),
        .I5(R_len[7]),
        .O(\R_ctl[4]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'h0000006060060600)) 
    \R_ctl[4]_i_22 
       (.I0(\R_ctl[4]_i_25_n_0 ),
        .I1(R_cnt[6]),
        .I2(R_cnt[7]),
        .I3(\R_ctl[4]_i_26_n_0 ),
        .I4(R_len[7]),
        .I5(\R_ctl[4]_i_27_n_0 ),
        .O(\R_ctl[4]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'h0000000090090960)) 
    \R_ctl[4]_i_23 
       (.I0(R_len[5]),
        .I1(R_cnt[5]),
        .I2(R_cnt[4]),
        .I3(\M_ARLEN[7]_i_2_n_0 ),
        .I4(R_len[4]),
        .I5(\R_ctl[4]_i_28_n_0 ),
        .O(\R_ctl[4]_i_23_n_0 ));
  LUT6 #(
    .INIT(64'h0009006090000900)) 
    \R_ctl[4]_i_24 
       (.I0(R_len[2]),
        .I1(R_cnt[2]),
        .I2(R_cnt[1]),
        .I3(\R_len_reg[0]_0 ),
        .I4(R_len[1]),
        .I5(R_cnt[0]),
        .O(\R_ctl[4]_i_24_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT4 #(
    .INIT(16'h01FE)) 
    \R_ctl[4]_i_25 
       (.I0(\M_ARLEN[7]_i_2_n_0 ),
        .I1(R_len[4]),
        .I2(R_len[5]),
        .I3(R_len[6]),
        .O(\R_ctl[4]_i_25_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \R_ctl[4]_i_26 
       (.I0(\M_ARLEN[7]_i_2_n_0 ),
        .I1(R_len[4]),
        .I2(R_len[5]),
        .I3(R_len[6]),
        .O(\R_ctl[4]_i_26_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \R_ctl[4]_i_27 
       (.I0(R_cnt[8]),
        .I1(R_len[8]),
        .O(\R_ctl[4]_i_27_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT5 #(
    .INIT(32'h5556AAA9)) 
    \R_ctl[4]_i_28 
       (.I0(R_cnt[3]),
        .I1(R_len[2]),
        .I2(\R_len_reg[0]_0 ),
        .I3(R_len[1]),
        .I4(R_len[3]),
        .O(\R_ctl[4]_i_28_n_0 ));
  LUT4 #(
    .INIT(16'h04FF)) 
    \R_ctl[4]_i_3 
       (.I0(full),
        .I1(state_read[0]),
        .I2(state_read[1]),
        .I3(conf_tx_en),
        .O(\R_ctl[4]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFBFF)) 
    \R_ctl[4]_i_4 
       (.I0(full),
        .I1(M_RVALID),
        .I2(state_read[0]),
        .I3(state_read[1]),
        .O(\R_ctl[4]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00002000)) 
    \R_ctl[4]_i_5 
       (.I0(\R_ctl[4]_i_9_n_0 ),
        .I1(R_len[2]),
        .I2(R_last_reg_n_0),
        .I3(\R_len_reg[0]_0 ),
        .I4(\R_ctl[4]_i_10_n_0 ),
        .O(\R_ctl[4]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \R_ctl[4]_i_6 
       (.I0(R_bmove[0]),
        .I1(R_bmove[1]),
        .O(\R_ctl[4]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \R_ctl[4]_i_7 
       (.I0(state_read[0]),
        .I1(R_first_reg_n_0),
        .O(\R_ctl[4]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \R_ctl[4]_i_8 
       (.I0(R_ctl2),
        .I1(R_last_reg_n_0),
        .O(\R_ctl[4]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    \R_ctl[4]_i_9 
       (.I0(R_len[8]),
        .I1(R_len[7]),
        .I2(R_len[1]),
        .I3(R_len[3]),
        .I4(R_first_reg_n_0),
        .I5(state_read[0]),
        .O(\R_ctl[4]_i_9_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \R_ctl_reg[1] 
       (.C(ACLK),
        .CE(\R_ctl[4]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_ctl[1]_i_1_n_0 ),
        .Q(din[32]));
  FDCE #(
    .INIT(1'b0)) 
    \R_ctl_reg[2] 
       (.C(ACLK),
        .CE(\R_ctl[4]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_ctl[2]_i_1_n_0 ),
        .Q(din[33]));
  FDCE #(
    .INIT(1'b0)) 
    \R_ctl_reg[3] 
       (.C(ACLK),
        .CE(\R_ctl[4]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_ctl[3]_i_1_n_0 ),
        .Q(din[34]));
  FDCE #(
    .INIT(1'b0)) 
    \R_ctl_reg[4] 
       (.C(ACLK),
        .CE(\R_ctl[4]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_ctl[4]_i_2_n_0 ),
        .Q(din[35]));
  CARRY4 \R_ctl_reg[4]_i_11 
       (.CI(\R_ctl_reg[4]_i_12_n_0 ),
        .CO({\NLW_R_ctl_reg[4]_i_11_CO_UNCONNECTED [3],R_ctl2,\R_ctl_reg[4]_i_11_n_2 ,\R_ctl_reg[4]_i_11_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_R_ctl_reg[4]_i_11_O_UNCONNECTED [3:0]),
        .S({1'b0,\R_ctl[4]_i_13_n_0 ,\R_ctl[4]_i_14_n_0 ,\R_ctl[4]_i_15_n_0 }));
  CARRY4 \R_ctl_reg[4]_i_12 
       (.CI(\R_ctl_reg[4]_i_16_n_0 ),
        .CO({\R_ctl_reg[4]_i_12_n_0 ,\R_ctl_reg[4]_i_12_n_1 ,\R_ctl_reg[4]_i_12_n_2 ,\R_ctl_reg[4]_i_12_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_R_ctl_reg[4]_i_12_O_UNCONNECTED [3:0]),
        .S({\R_ctl[4]_i_17_n_0 ,\R_ctl[4]_i_18_n_0 ,\R_ctl[4]_i_19_n_0 ,\R_ctl[4]_i_20_n_0 }));
  CARRY4 \R_ctl_reg[4]_i_16 
       (.CI(1'b0),
        .CO({\R_ctl_reg[4]_i_16_n_0 ,\R_ctl_reg[4]_i_16_n_1 ,\R_ctl_reg[4]_i_16_n_2 ,\R_ctl_reg[4]_i_16_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_R_ctl_reg[4]_i_16_O_UNCONNECTED [3:0]),
        .S({\R_ctl[4]_i_21_n_0 ,\R_ctl[4]_i_22_n_0 ,\R_ctl[4]_i_23_n_0 ,\R_ctl[4]_i_24_n_0 }));
  LUT6 #(
    .INIT(64'hE2FF0000E2000000)) 
    R_done_i_1
       (.I0(R_done0),
        .I1(state_read[0]),
        .I2(R_go_reg_n_0),
        .I3(R_done_i_3_n_0),
        .I4(conf_tx_en),
        .I5(R_done_reg_n_0),
        .O(R_done_i_1_n_0));
  LUT4 #(
    .INIT(16'h2B22)) 
    R_done_i_10
       (.I0(R_cnt[1]),
        .I1(R_len[1]),
        .I2(\R_len_reg[0]_0 ),
        .I3(R_cnt[0]),
        .O(R_done_i_10_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    R_done_i_11
       (.I0(R_len[7]),
        .I1(R_cnt[7]),
        .I2(R_len[6]),
        .I3(R_cnt[6]),
        .O(R_done_i_11_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    R_done_i_12
       (.I0(R_len[5]),
        .I1(R_cnt[5]),
        .I2(R_len[4]),
        .I3(R_cnt[4]),
        .O(R_done_i_12_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    R_done_i_13
       (.I0(R_len[3]),
        .I1(R_cnt[3]),
        .I2(R_len[2]),
        .I3(R_cnt[2]),
        .O(R_done_i_13_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    R_done_i_14
       (.I0(R_len[1]),
        .I1(R_cnt[1]),
        .I2(\R_len_reg[0]_0 ),
        .I3(R_cnt[0]),
        .O(R_done_i_14_n_0));
  LUT6 #(
    .INIT(64'h00000800C0C0C8C0)) 
    R_done_i_3
       (.I0(R_done0),
        .I1(state_read[1]),
        .I2(state_read[0]),
        .I3(M_RVALID),
        .I4(full),
        .I5(R_go_reg_n_0),
        .O(R_done_i_3_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    R_done_i_5
       (.I0(R_cnt[8]),
        .I1(R_len[8]),
        .O(R_done_i_5_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_done_i_6
       (.I0(R_len[8]),
        .I1(R_cnt[8]),
        .O(R_done_i_6_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    R_done_i_7
       (.I0(R_cnt[7]),
        .I1(R_len[7]),
        .I2(R_cnt[6]),
        .I3(R_len[6]),
        .O(R_done_i_7_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    R_done_i_8
       (.I0(R_cnt[5]),
        .I1(R_len[5]),
        .I2(R_cnt[4]),
        .I3(R_len[4]),
        .O(R_done_i_8_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    R_done_i_9
       (.I0(R_cnt[3]),
        .I1(R_len[3]),
        .I2(R_cnt[2]),
        .I3(R_len[2]),
        .O(R_done_i_9_n_0));
  FDCE #(
    .INIT(1'b0)) 
    R_done_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(conf_tx_reset),
        .D(R_done_i_1_n_0),
        .Q(R_done_reg_n_0));
  CARRY4 R_done_reg_i_2
       (.CI(R_done_reg_i_4_n_0),
        .CO({NLW_R_done_reg_i_2_CO_UNCONNECTED[3:1],R_done0}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,R_done_i_5_n_0}),
        .O(NLW_R_done_reg_i_2_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,1'b0,R_done_i_6_n_0}));
  CARRY4 R_done_reg_i_4
       (.CI(1'b0),
        .CO({R_done_reg_i_4_n_0,R_done_reg_i_4_n_1,R_done_reg_i_4_n_2,R_done_reg_i_4_n_3}),
        .CYINIT(1'b1),
        .DI({R_done_i_7_n_0,R_done_i_8_n_0,R_done_i_9_n_0,R_done_i_10_n_0}),
        .O(NLW_R_done_reg_i_4_O_UNCONNECTED[3:0]),
        .S({R_done_i_11_n_0,R_done_i_12_n_0,R_done_i_13_n_0,R_done_i_14_n_0}));
  LUT6 #(
    .INIT(64'hBFBBBFBFB0BBB0B0)) 
    R_empty_i_1
       (.I0(R_empty_i_2_n_0),
        .I1(conf_tx_en),
        .I2(R_first),
        .I3(R_empty_reg_3),
        .I4(R_empty_reg_4),
        .I5(R_empty_reg_0),
        .O(R_empty_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_empty_i_102
       (.I0(Q[28]),
        .I1(tx_addr_head[28]),
        .I2(Q[29]),
        .I3(tx_addr_head[29]),
        .I4(tx_addr_head[27]),
        .I5(Q[27]),
        .O(R_empty_i_102_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    R_empty_i_129
       (.I0(Q[23]),
        .I1(tx_addr_head[23]),
        .I2(Q[22]),
        .I3(tx_addr_head[22]),
        .O(R_empty_i_129_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    R_empty_i_130
       (.I0(Q[21]),
        .I1(tx_addr_head[21]),
        .I2(Q[20]),
        .I3(tx_addr_head[20]),
        .O(R_empty_i_130_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    R_empty_i_131
       (.I0(Q[19]),
        .I1(tx_addr_head[19]),
        .I2(Q[18]),
        .I3(tx_addr_head[18]),
        .O(R_empty_i_131_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    R_empty_i_132
       (.I0(Q[17]),
        .I1(tx_addr_head[17]),
        .I2(Q[16]),
        .I3(tx_addr_head[16]),
        .O(R_empty_i_132_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_empty_i_138
       (.I0(Q[22]),
        .I1(tx_addr_head[22]),
        .I2(Q[23]),
        .I3(tx_addr_head[23]),
        .I4(tx_addr_head[21]),
        .I5(Q[21]),
        .O(R_empty_i_138_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_empty_i_140
       (.I0(Q[16]),
        .I1(tx_addr_head[16]),
        .I2(Q[17]),
        .I3(tx_addr_head[17]),
        .I4(tx_addr_head[15]),
        .I5(Q[15]),
        .O(R_empty_i_140_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    R_empty_i_143
       (.I0(Q[15]),
        .I1(tx_addr_head[15]),
        .I2(Q[14]),
        .I3(tx_addr_head[14]),
        .O(R_empty_i_143_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    R_empty_i_144
       (.I0(Q[13]),
        .I1(tx_addr_head[13]),
        .I2(Q[12]),
        .I3(tx_addr_head[12]),
        .O(R_empty_i_144_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    R_empty_i_145
       (.I0(Q[11]),
        .I1(tx_addr_head[11]),
        .I2(Q[10]),
        .I3(tx_addr_head[10]),
        .O(R_empty_i_145_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    R_empty_i_146
       (.I0(Q[9]),
        .I1(tx_addr_head[9]),
        .I2(Q[8]),
        .I3(tx_addr_head[8]),
        .O(R_empty_i_146_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_empty_i_151
       (.I0(Q[10]),
        .I1(tx_addr_head[10]),
        .I2(Q[11]),
        .I3(tx_addr_head[11]),
        .I4(tx_addr_head[9]),
        .I5(Q[9]),
        .O(R_empty_i_151_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_empty_i_153
       (.I0(Q[4]),
        .I1(tx_addr_head[4]),
        .I2(Q[5]),
        .I3(tx_addr_head[5]),
        .I4(tx_addr_head[3]),
        .I5(Q[3]),
        .O(R_empty_i_153_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    R_empty_i_155
       (.I0(Q[7]),
        .I1(tx_addr_head[7]),
        .I2(Q[6]),
        .I3(tx_addr_head[6]),
        .O(R_empty_i_155_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    R_empty_i_156
       (.I0(Q[5]),
        .I1(tx_addr_head[5]),
        .I2(Q[4]),
        .I3(tx_addr_head[4]),
        .O(R_empty_i_156_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    R_empty_i_157
       (.I0(Q[3]),
        .I1(tx_addr_head[3]),
        .I2(Q[2]),
        .I3(tx_addr_head[2]),
        .O(R_empty_i_157_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    R_empty_i_158
       (.I0(Q[1]),
        .I1(tx_addr_head[1]),
        .I2(Q[0]),
        .I3(tx_addr_head[0]),
        .O(R_empty_i_158_n_0));
  LUT6 #(
    .INIT(64'hEAFFFFFFFFFFFFFF)) 
    R_empty_i_17
       (.I0(\R_brem_reg[5]_0 ),
        .I1(state[2]),
        .I2(conf_tx_en),
        .I3(R_empty_reg_i_44_n_1),
        .I4(state[1]),
        .I5(state[0]),
        .O(\state_reg[2]_0 ));
  LUT6 #(
    .INIT(64'h00000000EEE222E2)) 
    R_empty_i_2
       (.I0(tx_addr_empty),
        .I1(state[1]),
        .I2(R_empty_reg_1),
        .I3(\R_addr_reg[0]_1 ),
        .I4(R_empty_reg_2),
        .I5(state[0]),
        .O(R_empty_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT2 #(
    .INIT(4'h1)) 
    R_empty_i_38
       (.I0(R_full_reg_0),
        .I1(CO),
        .O(R_full_reg_1));
  LUT4 #(
    .INIT(16'h22B2)) 
    R_empty_i_65
       (.I0(Q[29]),
        .I1(tx_addr_head[29]),
        .I2(Q[28]),
        .I3(tx_addr_head[28]),
        .O(DI[2]));
  LUT4 #(
    .INIT(16'h22B2)) 
    R_empty_i_66
       (.I0(Q[27]),
        .I1(tx_addr_head[27]),
        .I2(Q[26]),
        .I3(tx_addr_head[26]),
        .O(DI[1]));
  LUT4 #(
    .INIT(16'h22B2)) 
    R_empty_i_67
       (.I0(Q[25]),
        .I1(tx_addr_head[25]),
        .I2(Q[24]),
        .I3(tx_addr_head[24]),
        .O(DI[0]));
  FDPE #(
    .INIT(1'b1)) 
    R_empty_reg
       (.C(ACLK),
        .CE(1'b1),
        .D(R_empty_i_1_n_0),
        .PRE(conf_tx_reset),
        .Q(R_empty_reg_0));
  CARRY4 R_empty_reg_i_100
       (.CI(R_empty_reg_i_137_n_0),
        .CO({R_empty_reg_i_100_n_0,R_empty_reg_i_100_n_1,R_empty_reg_i_100_n_2,R_empty_reg_i_100_n_3}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_R_empty_reg_i_100_O_UNCONNECTED[3:0]),
        .S({R_empty_i_138_n_0,R_empty_reg_i_44_0[1],R_empty_i_140_n_0,R_empty_reg_i_44_0[0]}));
  CARRY4 R_empty_reg_i_128
       (.CI(R_empty_reg_i_142_n_0),
        .CO({R_empty_reg_i_128_n_0,R_empty_reg_i_128_n_1,R_empty_reg_i_128_n_2,R_empty_reg_i_128_n_3}),
        .CYINIT(1'b0),
        .DI({R_empty_i_143_n_0,R_empty_i_144_n_0,R_empty_i_145_n_0,R_empty_i_146_n_0}),
        .O(NLW_R_empty_reg_i_128_O_UNCONNECTED[3:0]),
        .S(R_empty_reg_i_63_0));
  CARRY4 R_empty_reg_i_137
       (.CI(1'b0),
        .CO({R_empty_reg_i_137_n_0,R_empty_reg_i_137_n_1,R_empty_reg_i_137_n_2,R_empty_reg_i_137_n_3}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_R_empty_reg_i_137_O_UNCONNECTED[3:0]),
        .S({R_empty_i_151_n_0,S[1],R_empty_i_153_n_0,S[0]}));
  CARRY4 R_empty_reg_i_142
       (.CI(1'b0),
        .CO({R_empty_reg_i_142_n_0,R_empty_reg_i_142_n_1,R_empty_reg_i_142_n_2,R_empty_reg_i_142_n_3}),
        .CYINIT(1'b0),
        .DI({R_empty_i_155_n_0,R_empty_i_156_n_0,R_empty_i_157_n_0,R_empty_i_158_n_0}),
        .O(NLW_R_empty_reg_i_142_O_UNCONNECTED[3:0]),
        .S(R_empty_reg_i_128_0));
  CARRY4 R_empty_reg_i_44
       (.CI(R_empty_reg_i_100_n_0),
        .CO({NLW_R_empty_reg_i_44_CO_UNCONNECTED[3],R_empty_reg_i_44_n_1,R_empty_reg_i_44_n_2,R_empty_reg_i_44_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O(NLW_R_empty_reg_i_44_O_UNCONNECTED[3:0]),
        .S({1'b0,R_empty_i_17_0[1],R_empty_i_102_n_0,R_empty_i_17_0[0]}));
  CARRY4 R_empty_reg_i_63
       (.CI(R_empty_reg_i_128_n_0),
        .CO({\R_addr_reg[23]_0 ,R_empty_reg_i_63_n_1,R_empty_reg_i_63_n_2,R_empty_reg_i_63_n_3}),
        .CYINIT(1'b0),
        .DI({R_empty_i_129_n_0,R_empty_i_130_n_0,R_empty_i_131_n_0,R_empty_i_132_n_0}),
        .O(NLW_R_empty_reg_i_63_O_UNCONNECTED[3:0]),
        .S(R_empty_reg_i_32));
  LUT6 #(
    .INIT(64'h0000FF40FFFFFFFF)) 
    R_first_i_1
       (.I0(state[0]),
        .I1(R_done_reg_n_0),
        .I2(state[1]),
        .I3(R_first_i_3_n_0),
        .I4(state[2]),
        .I5(conf_tx_en),
        .O(R_first));
  LUT5 #(
    .INIT(32'h00010000)) 
    R_first_i_3
       (.I0(\DMA_BREM_reg[15]_3 ),
        .I1(state[1]),
        .I2(state[0]),
        .I3(tx_addr_tail_update),
        .I4(tx_descriptor_rd_vld),
        .O(R_first_i_3_n_0));
  FDPE #(
    .INIT(1'b1)) 
    R_first_reg
       (.C(ACLK),
        .CE(R_first),
        .D(R_first_reg_0),
        .PRE(conf_tx_reset),
        .Q(R_first_reg_n_0));
  FDCE #(
    .INIT(1'b0)) 
    R_full_reg
       (.C(ACLK),
        .CE(R_first),
        .CLR(conf_tx_reset),
        .D(R_full14_out),
        .Q(R_full_reg_0));
  LUT6 #(
    .INIT(64'hAAAA8AAA02020000)) 
    R_go_i_1
       (.I0(conf_tx_en),
        .I1(state[2]),
        .I2(state[1]),
        .I3(R_done_reg_n_0),
        .I4(state[0]),
        .I5(R_go_reg_n_0),
        .O(R_go_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    R_go_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(conf_tx_reset),
        .D(R_go_i_1_n_0),
        .Q(R_go_reg_n_0));
  LUT6 #(
    .INIT(64'hE200FFFFE2000000)) 
    R_last_i_1
       (.I0(R_last_reg_i_2_n_2),
        .I1(state[1]),
        .I2(R_done_reg_n_0),
        .I3(conf_tx_en),
        .I4(R_last_i_3_n_0),
        .I5(R_last_reg_n_0),
        .O(R_last_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_last_i_10
       (.I0(\R_brem_reg[15]_0 [0]),
        .I1(\DMA_BREM_reg[15]_0 [0]),
        .I2(\R_brem_reg[15]_0 [1]),
        .I3(\DMA_BREM_reg[15]_0 [1]),
        .I4(\DMA_BREM_reg[15]_0 [2]),
        .I5(\R_brem_reg[15]_0 [2]),
        .O(R_last_i_10_n_0));
  LUT6 #(
    .INIT(64'h00004700FFFFFFFF)) 
    R_last_i_3
       (.I0(R_done_reg_n_0),
        .I1(state[1]),
        .I2(\R_brem_reg[15]_1 ),
        .I3(state[0]),
        .I4(state[2]),
        .I5(conf_tx_en),
        .O(R_last_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    R_last_i_5
       (.I0(\DMA_BREM_reg[15]_0 [15]),
        .I1(\R_brem_reg[15]_0 [15]),
        .O(R_last_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_last_i_6
       (.I0(\R_brem_reg[15]_0 [12]),
        .I1(\DMA_BREM_reg[15]_0 [12]),
        .I2(\R_brem_reg[15]_0 [13]),
        .I3(\DMA_BREM_reg[15]_0 [13]),
        .I4(\DMA_BREM_reg[15]_0 [14]),
        .I5(\R_brem_reg[15]_0 [14]),
        .O(R_last_i_6_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_last_i_7
       (.I0(\R_brem_reg[15]_0 [11]),
        .I1(\DMA_BREM_reg[15]_0 [11]),
        .I2(\R_brem_reg[15]_0 [9]),
        .I3(\DMA_BREM_reg[15]_0 [9]),
        .I4(\DMA_BREM_reg[15]_0 [10]),
        .I5(\R_brem_reg[15]_0 [10]),
        .O(R_last_i_7_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_last_i_8
       (.I0(\R_brem_reg[15]_0 [6]),
        .I1(\DMA_BREM_reg[15]_0 [6]),
        .I2(\R_brem_reg[15]_0 [7]),
        .I3(\DMA_BREM_reg[15]_0 [7]),
        .I4(\DMA_BREM_reg[15]_0 [8]),
        .I5(\R_brem_reg[15]_0 [8]),
        .O(R_last_i_8_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    R_last_i_9
       (.I0(\R_brem_reg[15]_0 [5]),
        .I1(\DMA_BREM_reg[15]_0 [5]),
        .I2(\R_brem_reg[15]_0 [3]),
        .I3(\DMA_BREM_reg[15]_0 [3]),
        .I4(\DMA_BREM_reg[15]_0 [4]),
        .I5(\R_brem_reg[15]_0 [4]),
        .O(R_last_i_9_n_0));
  FDCE #(
    .INIT(1'b0)) 
    R_last_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(conf_tx_reset),
        .D(R_last_i_1_n_0),
        .Q(R_last_reg_n_0));
  CARRY4 R_last_reg_i_2
       (.CI(R_last_reg_i_4_n_0),
        .CO({NLW_R_last_reg_i_2_CO_UNCONNECTED[3:2],R_last_reg_i_2_n_2,R_last_reg_i_2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_R_last_reg_i_2_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,R_last_i_5_n_0,R_last_i_6_n_0}));
  CARRY4 R_last_reg_i_4
       (.CI(1'b0),
        .CO({R_last_reg_i_4_n_0,R_last_reg_i_4_n_1,R_last_reg_i_4_n_2,R_last_reg_i_4_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_R_last_reg_i_4_O_UNCONNECTED[3:0]),
        .S({R_last_i_7_n_0,R_last_i_8_n_0,R_last_i_9_n_0,R_last_i_10_n_0}));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT4 #(
    .INIT(16'hE200)) 
    \R_len[0]_i_1 
       (.I0(\R_len_reg[2]_i_2_n_6 ),
        .I1(\R_brem_reg[15]_1 ),
        .I2(DMA_WCHUNK[0]),
        .I3(conf_tx_en),
        .O(\R_len[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT4 #(
    .INIT(16'hE200)) 
    \R_len[1]_i_1 
       (.I0(\R_len_reg[2]_i_2_n_5 ),
        .I1(\R_brem_reg[15]_1 ),
        .I2(DMA_WCHUNK[1]),
        .I3(conf_tx_en),
        .O(\R_len[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT4 #(
    .INIT(16'hE200)) 
    \R_len[2]_i_1 
       (.I0(\R_len_reg[2]_i_2_n_4 ),
        .I1(\R_brem_reg[15]_1 ),
        .I2(DMA_WCHUNK[2]),
        .I3(conf_tx_en),
        .O(\R_len[2]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \R_len[2]_i_3 
       (.I0(\R_brem_reg[15]_0 [1]),
        .O(\R_len[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT4 #(
    .INIT(16'hE200)) 
    \R_len[3]_i_1 
       (.I0(\R_len_reg[6]_i_2_n_7 ),
        .I1(\R_brem_reg[15]_1 ),
        .I2(DMA_WCHUNK[3]),
        .I3(conf_tx_en),
        .O(\R_len[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT4 #(
    .INIT(16'hE200)) 
    \R_len[4]_i_1 
       (.I0(\R_len_reg[6]_i_2_n_6 ),
        .I1(\R_brem_reg[15]_1 ),
        .I2(DMA_WCHUNK[4]),
        .I3(conf_tx_en),
        .O(\R_len[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT4 #(
    .INIT(16'hE200)) 
    \R_len[5]_i_1 
       (.I0(\R_len_reg[6]_i_2_n_5 ),
        .I1(\R_brem_reg[15]_1 ),
        .I2(DMA_WCHUNK[5]),
        .I3(conf_tx_en),
        .O(\R_len[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT4 #(
    .INIT(16'hD080)) 
    \R_len[6]_i_1 
       (.I0(\R_brem_reg[15]_1 ),
        .I1(DMA_WCHUNK[6]),
        .I2(conf_tx_en),
        .I3(\R_len_reg[6]_i_2_n_4 ),
        .O(\R_len[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT4 #(
    .INIT(16'hD080)) 
    \R_len[7]_i_1 
       (.I0(\R_brem_reg[15]_1 ),
        .I1(DMA_WCHUNK[7]),
        .I2(conf_tx_en),
        .I3(\R_len_reg[8]_i_2_n_7 ),
        .O(\R_len[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT4 #(
    .INIT(16'hE200)) 
    \R_len[8]_i_1 
       (.I0(\R_len_reg[8]_i_2_n_6 ),
        .I1(\R_brem_reg[15]_1 ),
        .I2(DMA_WCHUNK[8]),
        .I3(conf_tx_en),
        .O(\R_len[8]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \R_len_reg[0] 
       (.C(ACLK),
        .CE(\R_bmove[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_len[0]_i_1_n_0 ),
        .Q(\R_len_reg[0]_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \R_len_reg[1] 
       (.C(ACLK),
        .CE(\R_bmove[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_len[1]_i_1_n_0 ),
        .Q(R_len[1]));
  FDCE #(
    .INIT(1'b0)) 
    \R_len_reg[2] 
       (.C(ACLK),
        .CE(\R_bmove[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_len[2]_i_1_n_0 ),
        .Q(R_len[2]));
  CARRY4 \R_len_reg[2]_i_2 
       (.CI(1'b0),
        .CO({\R_len_reg[2]_i_2_n_0 ,\R_len_reg[2]_i_2_n_1 ,\R_len_reg[2]_i_2_n_2 ,\R_len_reg[2]_i_2_n_3 }),
        .CYINIT(\R_brem_reg[15]_0 [0]),
        .DI({1'b0,1'b0,1'b0,\R_brem_reg[15]_0 [1]}),
        .O({\R_len_reg[2]_i_2_n_4 ,\R_len_reg[2]_i_2_n_5 ,\R_len_reg[2]_i_2_n_6 ,\NLW_R_len_reg[2]_i_2_O_UNCONNECTED [0]}),
        .S({\R_brem_reg[15]_0 [4:2],\R_len[2]_i_3_n_0 }));
  FDCE #(
    .INIT(1'b0)) 
    \R_len_reg[3] 
       (.C(ACLK),
        .CE(\R_bmove[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_len[3]_i_1_n_0 ),
        .Q(R_len[3]));
  FDCE #(
    .INIT(1'b0)) 
    \R_len_reg[4] 
       (.C(ACLK),
        .CE(\R_bmove[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_len[4]_i_1_n_0 ),
        .Q(R_len[4]));
  FDCE #(
    .INIT(1'b0)) 
    \R_len_reg[5] 
       (.C(ACLK),
        .CE(\R_bmove[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_len[5]_i_1_n_0 ),
        .Q(R_len[5]));
  FDCE #(
    .INIT(1'b0)) 
    \R_len_reg[6] 
       (.C(ACLK),
        .CE(\R_bmove[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_len[6]_i_1_n_0 ),
        .Q(R_len[6]));
  CARRY4 \R_len_reg[6]_i_2 
       (.CI(\R_len_reg[2]_i_2_n_0 ),
        .CO({\R_len_reg[6]_i_2_n_0 ,\R_len_reg[6]_i_2_n_1 ,\R_len_reg[6]_i_2_n_2 ,\R_len_reg[6]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\R_len_reg[6]_i_2_n_4 ,\R_len_reg[6]_i_2_n_5 ,\R_len_reg[6]_i_2_n_6 ,\R_len_reg[6]_i_2_n_7 }),
        .S(\R_brem_reg[15]_0 [8:5]));
  FDCE #(
    .INIT(1'b0)) 
    \R_len_reg[7] 
       (.C(ACLK),
        .CE(\R_bmove[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_len[7]_i_1_n_0 ),
        .Q(R_len[7]));
  FDCE #(
    .INIT(1'b0)) 
    \R_len_reg[8] 
       (.C(ACLK),
        .CE(\R_bmove[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(\R_len[8]_i_1_n_0 ),
        .Q(R_len[8]));
  CARRY4 \R_len_reg[8]_i_2 
       (.CI(\R_len_reg[6]_i_2_n_0 ),
        .CO({\NLW_R_len_reg[8]_i_2_CO_UNCONNECTED [3:1],\R_len_reg[8]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_R_len_reg[8]_i_2_O_UNCONNECTED [3:2],\R_len_reg[8]_i_2_n_6 ,\R_len_reg[8]_i_2_n_7 }),
        .S({1'b0,1'b0,\R_brem_reg[15]_0 [10:9]}));
  FDCE #(
    .INIT(1'b0)) 
    \R_size_reg[2] 
       (.C(ACLK),
        .CE(\R_bmove[15]_i_1_n_0 ),
        .CLR(conf_tx_reset),
        .D(conf_tx_en),
        .Q(\R_size_reg[2]_0 ));
  LUT3 #(
    .INIT(8'h8A)) 
    \TX_BLK_128.u_fifo_tx_i_1 
       (.I0(M_RDATA[31]),
        .I1(state_read[1]),
        .I2(state_read[0]),
        .O(din[31]));
  LUT3 #(
    .INIT(8'h8A)) 
    \TX_BLK_128.u_fifo_tx_i_10 
       (.I0(M_RDATA[22]),
        .I1(state_read[1]),
        .I2(state_read[0]),
        .O(din[22]));
  LUT3 #(
    .INIT(8'h8A)) 
    \TX_BLK_128.u_fifo_tx_i_11 
       (.I0(M_RDATA[21]),
        .I1(state_read[1]),
        .I2(state_read[0]),
        .O(din[21]));
  LUT3 #(
    .INIT(8'h8A)) 
    \TX_BLK_128.u_fifo_tx_i_12 
       (.I0(M_RDATA[20]),
        .I1(state_read[1]),
        .I2(state_read[0]),
        .O(din[20]));
  LUT3 #(
    .INIT(8'h8A)) 
    \TX_BLK_128.u_fifo_tx_i_13 
       (.I0(M_RDATA[19]),
        .I1(state_read[1]),
        .I2(state_read[0]),
        .O(din[19]));
  LUT3 #(
    .INIT(8'h8A)) 
    \TX_BLK_128.u_fifo_tx_i_14 
       (.I0(M_RDATA[18]),
        .I1(state_read[1]),
        .I2(state_read[0]),
        .O(din[18]));
  LUT3 #(
    .INIT(8'h8A)) 
    \TX_BLK_128.u_fifo_tx_i_15 
       (.I0(M_RDATA[17]),
        .I1(state_read[1]),
        .I2(state_read[0]),
        .O(din[17]));
  LUT3 #(
    .INIT(8'h8A)) 
    \TX_BLK_128.u_fifo_tx_i_16 
       (.I0(M_RDATA[16]),
        .I1(state_read[1]),
        .I2(state_read[0]),
        .O(din[16]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \TX_BLK_128.u_fifo_tx_i_17 
       (.I0(\DMA_BREM_reg[15]_0 [15]),
        .I1(state_read[0]),
        .I2(state_read[1]),
        .I3(M_RDATA[15]),
        .O(din[15]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \TX_BLK_128.u_fifo_tx_i_18 
       (.I0(\DMA_BREM_reg[15]_0 [14]),
        .I1(state_read[0]),
        .I2(state_read[1]),
        .I3(M_RDATA[14]),
        .O(din[14]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \TX_BLK_128.u_fifo_tx_i_19 
       (.I0(\DMA_BREM_reg[15]_0 [13]),
        .I1(state_read[0]),
        .I2(state_read[1]),
        .I3(M_RDATA[13]),
        .O(din[13]));
  LUT3 #(
    .INIT(8'h8A)) 
    \TX_BLK_128.u_fifo_tx_i_2 
       (.I0(M_RDATA[30]),
        .I1(state_read[1]),
        .I2(state_read[0]),
        .O(din[30]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \TX_BLK_128.u_fifo_tx_i_20 
       (.I0(\DMA_BREM_reg[15]_0 [12]),
        .I1(state_read[0]),
        .I2(state_read[1]),
        .I3(M_RDATA[12]),
        .O(din[12]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \TX_BLK_128.u_fifo_tx_i_21 
       (.I0(\DMA_BREM_reg[15]_0 [11]),
        .I1(state_read[0]),
        .I2(state_read[1]),
        .I3(M_RDATA[11]),
        .O(din[11]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \TX_BLK_128.u_fifo_tx_i_22 
       (.I0(\DMA_BREM_reg[15]_0 [10]),
        .I1(state_read[0]),
        .I2(state_read[1]),
        .I3(M_RDATA[10]),
        .O(din[10]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \TX_BLK_128.u_fifo_tx_i_23 
       (.I0(\DMA_BREM_reg[15]_0 [9]),
        .I1(state_read[0]),
        .I2(state_read[1]),
        .I3(M_RDATA[9]),
        .O(din[9]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \TX_BLK_128.u_fifo_tx_i_24 
       (.I0(\DMA_BREM_reg[15]_0 [8]),
        .I1(state_read[0]),
        .I2(state_read[1]),
        .I3(M_RDATA[8]),
        .O(din[8]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \TX_BLK_128.u_fifo_tx_i_25 
       (.I0(\DMA_BREM_reg[15]_0 [7]),
        .I1(state_read[0]),
        .I2(state_read[1]),
        .I3(M_RDATA[7]),
        .O(din[7]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \TX_BLK_128.u_fifo_tx_i_26 
       (.I0(\DMA_BREM_reg[15]_0 [6]),
        .I1(state_read[0]),
        .I2(state_read[1]),
        .I3(M_RDATA[6]),
        .O(din[6]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \TX_BLK_128.u_fifo_tx_i_27 
       (.I0(\DMA_BREM_reg[15]_0 [5]),
        .I1(state_read[0]),
        .I2(state_read[1]),
        .I3(M_RDATA[5]),
        .O(din[5]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \TX_BLK_128.u_fifo_tx_i_28 
       (.I0(\DMA_BREM_reg[15]_0 [4]),
        .I1(state_read[0]),
        .I2(state_read[1]),
        .I3(M_RDATA[4]),
        .O(din[4]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \TX_BLK_128.u_fifo_tx_i_29 
       (.I0(\DMA_BREM_reg[15]_0 [3]),
        .I1(state_read[0]),
        .I2(state_read[1]),
        .I3(M_RDATA[3]),
        .O(din[3]));
  LUT3 #(
    .INIT(8'h8A)) 
    \TX_BLK_128.u_fifo_tx_i_3 
       (.I0(M_RDATA[29]),
        .I1(state_read[1]),
        .I2(state_read[0]),
        .O(din[29]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \TX_BLK_128.u_fifo_tx_i_30 
       (.I0(\DMA_BREM_reg[15]_0 [2]),
        .I1(state_read[0]),
        .I2(state_read[1]),
        .I3(M_RDATA[2]),
        .O(din[2]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \TX_BLK_128.u_fifo_tx_i_31 
       (.I0(\DMA_BREM_reg[15]_0 [1]),
        .I1(state_read[0]),
        .I2(state_read[1]),
        .I3(M_RDATA[1]),
        .O(din[1]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \TX_BLK_128.u_fifo_tx_i_32 
       (.I0(\DMA_BREM_reg[15]_0 [0]),
        .I1(state_read[0]),
        .I2(state_read[1]),
        .I3(M_RDATA[0]),
        .O(din[0]));
  LUT5 #(
    .INIT(32'h00003808)) 
    \TX_BLK_128.u_fifo_tx_i_33 
       (.I0(R_first_reg_n_0),
        .I1(state_read[0]),
        .I2(state_read[1]),
        .I3(M_RVALID),
        .I4(full),
        .O(wr_en));
  LUT3 #(
    .INIT(8'h8A)) 
    \TX_BLK_128.u_fifo_tx_i_4 
       (.I0(M_RDATA[28]),
        .I1(state_read[1]),
        .I2(state_read[0]),
        .O(din[28]));
  LUT3 #(
    .INIT(8'h8A)) 
    \TX_BLK_128.u_fifo_tx_i_5 
       (.I0(M_RDATA[27]),
        .I1(state_read[1]),
        .I2(state_read[0]),
        .O(din[27]));
  LUT3 #(
    .INIT(8'h8A)) 
    \TX_BLK_128.u_fifo_tx_i_6 
       (.I0(M_RDATA[26]),
        .I1(state_read[1]),
        .I2(state_read[0]),
        .O(din[26]));
  LUT3 #(
    .INIT(8'h8A)) 
    \TX_BLK_128.u_fifo_tx_i_7 
       (.I0(M_RDATA[25]),
        .I1(state_read[1]),
        .I2(state_read[0]),
        .O(din[25]));
  LUT3 #(
    .INIT(8'h8A)) 
    \TX_BLK_128.u_fifo_tx_i_8 
       (.I0(M_RDATA[24]),
        .I1(state_read[1]),
        .I2(state_read[0]),
        .O(din[24]));
  LUT3 #(
    .INIT(8'h8A)) 
    \TX_BLK_128.u_fifo_tx_i_9 
       (.I0(M_RDATA[23]),
        .I1(state_read[1]),
        .I2(state_read[0]),
        .O(din[23]));
  LUT5 #(
    .INIT(32'hBBBA888A)) 
    desc_ready_i_1
       (.I0(desc_ready1_out),
        .I1(desc_ready_reg_0),
        .I2(state[0]),
        .I3(state[1]),
        .I4(tx_descriptor_rd_rdy),
        .O(desc_ready_i_1_n_0));
  LUT6 #(
    .INIT(64'hCCCCCCCC00004000)) 
    desc_ready_i_2
       (.I0(state[2]),
        .I1(conf_tx_en),
        .I2(\DMA_BREM_reg[15]_3 ),
        .I3(tx_descriptor_rd_vld),
        .I4(tx_addr_tail_update),
        .I5(state[0]),
        .O(desc_ready1_out));
  FDCE #(
    .INIT(1'b0)) 
    desc_ready_reg
       (.C(ACLK),
        .CE(1'b1),
        .CLR(conf_tx_reset),
        .D(desc_ready_i_1_n_0),
        .Q(tx_descriptor_rd_rdy));
  LUT4 #(
    .INIT(16'h00D0)) 
    \state[0]_i_1 
       (.I0(state[2]),
        .I1(state[0]),
        .I2(conf_tx_en),
        .I3(\state[0]_i_2_n_0 ),
        .O(\state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000000F0D0F)) 
    \state[0]_i_2 
       (.I0(state[0]),
        .I1(\R_addr[31]_i_3_n_0 ),
        .I2(state[2]),
        .I3(state[1]),
        .I4(R_done_reg_n_0),
        .I5(R_first_i_3_n_0),
        .O(\state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000F0EFF0F0)) 
    \state[1]_i_1 
       (.I0(\R_brem_reg[0]_0 ),
        .I1(R_done_reg_n_0),
        .I2(state[1]),
        .I3(state[2]),
        .I4(state[0]),
        .I5(desc_ready_reg_0),
        .O(\state[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00002000)) 
    \state[1]_i_3 
       (.I0(\R_addr[31]_i_3_n_0 ),
        .I1(R_done_reg_n_0),
        .I2(state[0]),
        .I3(state[1]),
        .I4(state[2]),
        .O(R_done_reg_0));
  LUT6 #(
    .INIT(64'hF0F02000F0000000)) 
    \state[2]_i_1 
       (.I0(\R_addr[31]_i_3_n_0 ),
        .I1(R_done_reg_n_0),
        .I2(conf_tx_en),
        .I3(state[0]),
        .I4(state[2]),
        .I5(state[1]),
        .O(\state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hA808AAA0A8080A00)) 
    \state_read[0]_i_1 
       (.I0(conf_tx_en),
        .I1(full),
        .I2(state_read[1]),
        .I3(R_go_reg_n_0),
        .I4(state_read[0]),
        .I5(\state_read[0]_i_2_n_0 ),
        .O(\state_read[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000800)) 
    \state_read[0]_i_2 
       (.I0(R_done0),
        .I1(state_read[1]),
        .I2(state_read[0]),
        .I3(M_RVALID),
        .I4(full),
        .O(\state_read[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h88A80828)) 
    \state_read[1]_i_1 
       (.I0(conf_tx_en),
        .I1(state_read[1]),
        .I2(state_read[0]),
        .I3(full),
        .I4(R_go_reg_n_0),
        .O(\state_read[1]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_read_reg[0] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(conf_tx_reset),
        .D(\state_read[0]_i_1_n_0 ),
        .Q(state_read[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_read_reg[1] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(conf_tx_reset),
        .D(\state_read[1]_i_1_n_0 ),
        .Q(state_read[1]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_reg[0] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(conf_tx_reset),
        .D(\state[0]_i_1_n_0 ),
        .Q(state[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_reg[1] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(conf_tx_reset),
        .D(\state[1]_i_1_n_0 ),
        .Q(state[1]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_reg[2] 
       (.C(ACLK),
        .CE(1'b1),
        .CLR(conf_tx_reset),
        .D(\state[2]_i_1_n_0 ),
        .Q(state[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_10
       (.I0(\DMA_ADDR_TAIL_reg[26]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[26]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[26]_C_n_0 ),
        .O(tx_addr_tail[26]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_11
       (.I0(\DMA_ADDR_TAIL_reg[25]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[25]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[25]_C_n_0 ),
        .O(tx_addr_tail[25]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_12
       (.I0(\DMA_ADDR_TAIL_reg[24]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[24]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[24]_C_n_0 ),
        .O(tx_addr_tail[24]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_13
       (.I0(\DMA_ADDR_TAIL_reg[23]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[23]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[23]_C_n_0 ),
        .O(tx_addr_tail[23]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_14
       (.I0(\DMA_ADDR_TAIL_reg[22]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[22]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[22]_C_n_0 ),
        .O(tx_addr_tail[22]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_15
       (.I0(\DMA_ADDR_TAIL_reg[21]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[21]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[21]_C_n_0 ),
        .O(tx_addr_tail[21]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_16
       (.I0(\DMA_ADDR_TAIL_reg[20]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[20]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[20]_C_n_0 ),
        .O(tx_addr_tail[20]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_17
       (.I0(\DMA_ADDR_TAIL_reg[19]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[19]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[19]_C_n_0 ),
        .O(tx_addr_tail[19]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_18
       (.I0(\DMA_ADDR_TAIL_reg[18]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[18]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[18]_C_n_0 ),
        .O(tx_addr_tail[18]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_19
       (.I0(\DMA_ADDR_TAIL_reg[17]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[17]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[17]_C_n_0 ),
        .O(tx_addr_tail[17]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_20
       (.I0(\DMA_ADDR_TAIL_reg[16]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[16]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[16]_C_n_0 ),
        .O(tx_addr_tail[16]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_21
       (.I0(\DMA_ADDR_TAIL_reg[15]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[15]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[15]_C_n_0 ),
        .O(tx_addr_tail[15]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_22
       (.I0(\DMA_ADDR_TAIL_reg[14]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[14]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[14]_C_n_0 ),
        .O(tx_addr_tail[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_23
       (.I0(\DMA_ADDR_TAIL_reg[13]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[13]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[13]_C_n_0 ),
        .O(tx_addr_tail[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_24
       (.I0(\DMA_ADDR_TAIL_reg[12]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[12]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[12]_C_n_0 ),
        .O(tx_addr_tail[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_25
       (.I0(\DMA_ADDR_TAIL_reg[11]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[11]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[11]_C_n_0 ),
        .O(tx_addr_tail[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_26
       (.I0(\DMA_ADDR_TAIL_reg[10]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[10]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[10]_C_n_0 ),
        .O(tx_addr_tail[10]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_27
       (.I0(\DMA_ADDR_TAIL_reg[9]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[9]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[9]_C_n_0 ),
        .O(tx_addr_tail[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_28
       (.I0(\DMA_ADDR_TAIL_reg[8]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[8]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[8]_C_n_0 ),
        .O(tx_addr_tail[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_29
       (.I0(\DMA_ADDR_TAIL_reg[7]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[7]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[7]_C_n_0 ),
        .O(tx_addr_tail[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_30
       (.I0(\DMA_ADDR_TAIL_reg[6]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[6]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[6]_C_n_0 ),
        .O(tx_addr_tail[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_31
       (.I0(\DMA_ADDR_TAIL_reg[5]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[5]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[5]_C_n_0 ),
        .O(tx_addr_tail[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_32
       (.I0(\DMA_ADDR_TAIL_reg[4]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[4]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[4]_C_n_0 ),
        .O(tx_addr_tail[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_33
       (.I0(\DMA_ADDR_TAIL_reg[3]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[3]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[3]_C_n_0 ),
        .O(tx_addr_tail[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_34
       (.I0(\DMA_ADDR_TAIL_reg[2]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[2]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[2]_C_n_0 ),
        .O(tx_addr_tail[2]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_35
       (.I0(\DMA_ADDR_TAIL_reg[1]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[1]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[1]_C_n_0 ),
        .O(tx_addr_tail[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_36
       (.I0(\DMA_ADDR_TAIL_reg[0]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[0]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[0]_C_n_0 ),
        .O(tx_addr_tail[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_5
       (.I0(\DMA_ADDR_TAIL_reg[31]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[31]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[31]_C_n_0 ),
        .O(tx_addr_tail[31]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_6
       (.I0(\DMA_ADDR_TAIL_reg[30]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[30]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[30]_C_n_0 ),
        .O(tx_addr_tail[30]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_7
       (.I0(\DMA_ADDR_TAIL_reg[29]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[29]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[29]_C_n_0 ),
        .O(tx_addr_tail[29]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_8
       (.I0(\DMA_ADDR_TAIL_reg[28]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[28]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[28]_C_n_0 ),
        .O(tx_addr_tail[28]));
  LUT3 #(
    .INIT(8'hB8)) 
    u_csr_i_9
       (.I0(\DMA_ADDR_TAIL_reg[27]_P_n_0 ),
        .I1(\DMA_ADDR_TAIL_reg[27]_LDC_n_0 ),
        .I2(\DMA_ADDR_TAIL_reg[27]_C_n_0 ),
        .O(tx_addr_tail[27]));
endmodule

(* MAX_FRAME_SIZE_JUMBO = "9018" *) (* MAX_FRAME_SIZE_STANDARD = "1518" *) (* MIN_FRAME_SIZE = "64" *) 
(* P_CNT_IFG = "9" *) (* P_WIDTH_DCNT = "14" *) (* ST_BNUM = "1" *) 
(* ST_CRC0 = "7" *) (* ST_CRC1 = "8" *) (* ST_CRC2 = "9" *) 
(* ST_CRC3 = "10" *) (* ST_DATA0 = "3" *) (* ST_DATA1 = "4" *) 
(* ST_DATA2 = "5" *) (* ST_DATA3 = "6" *) (* ST_DROP = "14" *) 
(* ST_DROP_ALL = "15" *) (* ST_ERROR = "12" *) (* ST_IFG = "11" *) 
(* ST_PAD = "13" *) (* ST_PRE = "2" *) (* ST_READY = "0" *) 
module git_eth_mac_core_tx
   (reset_n,
    tx_clk,
    conf_tx_en,
    conf_tx_no_gen_crc,
    conf_tx_jumbo_en,
    client_rdy,
    client_vld,
    client_ctl,
    client_dat,
    gmii_txd,
    gmii_txen,
    gmii_txer);
  input reset_n;
  input tx_clk;
  input conf_tx_en;
  input conf_tx_no_gen_crc;
  input conf_tx_jumbo_en;
  output client_rdy;
  input client_vld;
  input [3:0]client_ctl;
  input [31:0]client_dat;
  (* mark_debug = "true" *) output [7:0]gmii_txd;
  (* mark_debug = "true" *) output gmii_txen;
  (* mark_debug = "true" *) output gmii_txer;

  wire [3:0]client_ctl;
  wire [31:0]client_dat;
  wire client_rdy;
  wire client_rdy4_out;
  wire client_rdy_i_10_n_0;
  wire client_rdy_i_13_n_0;
  wire client_rdy_i_14_n_0;
  wire client_rdy_i_15_n_0;
  wire client_rdy_i_16_n_0;
  wire client_rdy_i_17_n_0;
  wire client_rdy_i_18_n_0;
  wire client_rdy_i_19_n_0;
  wire client_rdy_i_1_n_0;
  wire client_rdy_i_20_n_0;
  wire client_rdy_i_21_n_0;
  wire client_rdy_i_22_n_0;
  wire client_rdy_i_23_n_0;
  wire client_rdy_i_24_n_0;
  wire client_rdy_i_25_n_0;
  wire client_rdy_i_26_n_0;
  wire client_rdy_i_27_n_0;
  wire client_rdy_i_2_n_0;
  wire client_rdy_i_4_n_0;
  wire client_rdy_i_5_n_0;
  wire client_rdy_i_6_n_0;
  wire client_rdy_i_7_n_0;
  wire client_rdy_i_8_n_0;
  wire client_rdy_reg_i_11_n_0;
  wire client_rdy_reg_i_11_n_1;
  wire client_rdy_reg_i_11_n_2;
  wire client_rdy_reg_i_11_n_3;
  wire client_rdy_reg_i_12_n_2;
  wire client_rdy_reg_i_12_n_7;
  wire client_rdy_reg_i_28_n_0;
  wire client_rdy_reg_i_28_n_1;
  wire client_rdy_reg_i_28_n_2;
  wire client_rdy_reg_i_28_n_3;
  wire client_rdy_reg_i_28_n_4;
  wire client_rdy_reg_i_28_n_5;
  wire client_rdy_reg_i_28_n_6;
  wire client_rdy_reg_i_28_n_7;
  wire client_rdy_reg_i_29_n_0;
  wire client_rdy_reg_i_29_n_1;
  wire client_rdy_reg_i_29_n_2;
  wire client_rdy_reg_i_29_n_3;
  wire client_rdy_reg_i_29_n_4;
  wire client_rdy_reg_i_29_n_5;
  wire client_rdy_reg_i_29_n_6;
  wire client_rdy_reg_i_29_n_7;
  wire client_rdy_reg_i_30_n_0;
  wire client_rdy_reg_i_30_n_1;
  wire client_rdy_reg_i_30_n_2;
  wire client_rdy_reg_i_30_n_3;
  wire client_rdy_reg_i_30_n_4;
  wire client_rdy_reg_i_30_n_5;
  wire client_rdy_reg_i_30_n_6;
  wire client_rdy_reg_i_9_n_0;
  wire client_rdy_reg_i_9_n_1;
  wire client_rdy_reg_i_9_n_2;
  wire client_rdy_reg_i_9_n_3;
  wire client_vld;
  wire \cnt[0]_i_1_n_0 ;
  wire \cnt[1]_i_1_n_0 ;
  wire \cnt[1]_i_2_n_0 ;
  wire \cnt[2]_i_1_n_0 ;
  wire \cnt[3]_i_10_n_0 ;
  wire \cnt[3]_i_1_n_0 ;
  wire \cnt[3]_i_2_n_0 ;
  wire \cnt[3]_i_3_n_0 ;
  wire \cnt[3]_i_4_n_0 ;
  wire \cnt[3]_i_5_n_0 ;
  wire \cnt[3]_i_6_n_0 ;
  wire \cnt[3]_i_7_n_0 ;
  wire \cnt[3]_i_8_n_0 ;
  wire \cnt[3]_i_9_n_0 ;
  wire \cnt_reg_n_0_[0] ;
  wire \cnt_reg_n_0_[1] ;
  wire \cnt_reg_n_0_[2] ;
  wire \cnt_reg_n_0_[3] ;
  wire conf_tx_en;
  wire conf_tx_jumbo_en;
  wire conf_tx_no_gen_crc;
  wire \crc_reg[0]_i_1_n_0 ;
  wire \crc_reg[0]_i_2_n_0 ;
  wire \crc_reg[0]_i_3_n_0 ;
  wire \crc_reg[0]_i_4_n_0 ;
  wire \crc_reg[0]_i_5_n_0 ;
  wire \crc_reg[10]_i_10_n_0 ;
  wire \crc_reg[10]_i_11_n_0 ;
  wire \crc_reg[10]_i_1_n_0 ;
  wire \crc_reg[10]_i_2_n_0 ;
  wire \crc_reg[10]_i_3_n_0 ;
  wire \crc_reg[10]_i_4_n_0 ;
  wire \crc_reg[10]_i_5_n_0 ;
  wire \crc_reg[10]_i_6_n_0 ;
  wire \crc_reg[10]_i_8_n_0 ;
  wire \crc_reg[10]_i_9_n_0 ;
  wire \crc_reg[11]_i_1_n_0 ;
  wire \crc_reg[11]_i_2_n_0 ;
  wire \crc_reg[11]_i_3_n_0 ;
  wire \crc_reg[11]_i_4_n_0 ;
  wire \crc_reg[11]_i_5_n_0 ;
  wire \crc_reg[11]_i_6_n_0 ;
  wire \crc_reg[11]_i_7_n_0 ;
  wire \crc_reg[11]_i_8_n_0 ;
  wire \crc_reg[11]_i_9_n_0 ;
  wire \crc_reg[12]_i_10_n_0 ;
  wire \crc_reg[12]_i_1_n_0 ;
  wire \crc_reg[12]_i_2_n_0 ;
  wire \crc_reg[12]_i_3_n_0 ;
  wire \crc_reg[12]_i_4_n_0 ;
  wire \crc_reg[12]_i_5_n_0 ;
  wire \crc_reg[12]_i_7_n_0 ;
  wire \crc_reg[12]_i_8_n_0 ;
  wire \crc_reg[12]_i_9_n_0 ;
  wire \crc_reg[13]_i_10_n_0 ;
  wire \crc_reg[13]_i_11_n_0 ;
  wire \crc_reg[13]_i_1_n_0 ;
  wire \crc_reg[13]_i_2_n_0 ;
  wire \crc_reg[13]_i_3_n_0 ;
  wire \crc_reg[13]_i_4_n_0 ;
  wire \crc_reg[13]_i_5_n_0 ;
  wire \crc_reg[13]_i_6_n_0 ;
  wire \crc_reg[13]_i_8_n_0 ;
  wire \crc_reg[13]_i_9_n_0 ;
  wire \crc_reg[14]_i_10_n_0 ;
  wire \crc_reg[14]_i_11_n_0 ;
  wire \crc_reg[14]_i_12_n_0 ;
  wire \crc_reg[14]_i_13_n_0 ;
  wire \crc_reg[14]_i_14_n_0 ;
  wire \crc_reg[14]_i_15_n_0 ;
  wire \crc_reg[14]_i_1_n_0 ;
  wire \crc_reg[14]_i_2_n_0 ;
  wire \crc_reg[14]_i_3_n_0 ;
  wire \crc_reg[14]_i_5_n_0 ;
  wire \crc_reg[14]_i_6_n_0 ;
  wire \crc_reg[14]_i_7_n_0 ;
  wire \crc_reg[14]_i_8_n_0 ;
  wire \crc_reg[15]_i_10_n_0 ;
  wire \crc_reg[15]_i_1_n_0 ;
  wire \crc_reg[15]_i_2_n_0 ;
  wire \crc_reg[15]_i_3_n_0 ;
  wire \crc_reg[15]_i_4_n_0 ;
  wire \crc_reg[15]_i_5_n_0 ;
  wire \crc_reg[15]_i_6_n_0 ;
  wire \crc_reg[15]_i_8_n_0 ;
  wire \crc_reg[15]_i_9_n_0 ;
  wire \crc_reg[16]_i_1_n_0 ;
  wire \crc_reg[16]_i_2_n_0 ;
  wire \crc_reg[16]_i_3_n_0 ;
  wire \crc_reg[16]_i_4_n_0 ;
  wire \crc_reg[16]_i_5_n_0 ;
  wire \crc_reg[16]_i_6_n_0 ;
  wire \crc_reg[16]_i_8_n_0 ;
  wire \crc_reg[17]_i_1_n_0 ;
  wire \crc_reg[17]_i_2_n_0 ;
  wire \crc_reg[17]_i_3_n_0 ;
  wire \crc_reg[17]_i_4_n_0 ;
  wire \crc_reg[17]_i_5_n_0 ;
  wire \crc_reg[17]_i_8_n_0 ;
  wire \crc_reg[17]_i_9_n_0 ;
  wire \crc_reg[18]_i_1_n_0 ;
  wire \crc_reg[18]_i_2_n_0 ;
  wire \crc_reg[18]_i_3_n_0 ;
  wire \crc_reg[18]_i_4_n_0 ;
  wire \crc_reg[18]_i_5_n_0 ;
  wire \crc_reg[18]_i_8_n_0 ;
  wire \crc_reg[19]_i_1_n_0 ;
  wire \crc_reg[19]_i_2_n_0 ;
  wire \crc_reg[19]_i_3_n_0 ;
  wire \crc_reg[19]_i_4_n_0 ;
  wire \crc_reg[19]_i_5_n_0 ;
  wire \crc_reg[19]_i_6_n_0 ;
  wire \crc_reg[1]_i_1_n_0 ;
  wire \crc_reg[1]_i_2_n_0 ;
  wire \crc_reg[1]_i_3_n_0 ;
  wire \crc_reg[1]_i_4_n_0 ;
  wire \crc_reg[1]_i_5_n_0 ;
  wire \crc_reg[1]_i_6_n_0 ;
  wire \crc_reg[1]_i_7_n_0 ;
  wire \crc_reg[20]_i_1_n_0 ;
  wire \crc_reg[20]_i_2_n_0 ;
  wire \crc_reg[20]_i_3_n_0 ;
  wire \crc_reg[21]_i_1_n_0 ;
  wire \crc_reg[21]_i_2_n_0 ;
  wire \crc_reg[21]_i_3_n_0 ;
  wire \crc_reg[22]_i_1_n_0 ;
  wire \crc_reg[22]_i_2_n_0 ;
  wire \crc_reg[22]_i_3_n_0 ;
  wire \crc_reg[23]_i_1_n_0 ;
  wire \crc_reg[23]_i_2_n_0 ;
  wire \crc_reg[23]_i_3_n_0 ;
  wire \crc_reg[23]_i_4_n_0 ;
  wire \crc_reg[23]_i_5_n_0 ;
  wire \crc_reg[23]_i_6_n_0 ;
  wire \crc_reg[23]_i_7_n_0 ;
  wire \crc_reg[23]_i_8_n_0 ;
  wire \crc_reg[23]_i_9_n_0 ;
  wire \crc_reg[24]_i_1_n_0 ;
  wire \crc_reg[24]_i_2_n_0 ;
  wire \crc_reg[24]_i_3_n_0 ;
  wire \crc_reg[24]_i_4_n_0 ;
  wire \crc_reg[24]_i_5_n_0 ;
  wire \crc_reg[24]_i_6_n_0 ;
  wire \crc_reg[24]_i_8_n_0 ;
  wire \crc_reg[25]_i_1_n_0 ;
  wire \crc_reg[25]_i_2_n_0 ;
  wire \crc_reg[25]_i_3_n_0 ;
  wire \crc_reg[25]_i_4_n_0 ;
  wire \crc_reg[25]_i_5_n_0 ;
  wire \crc_reg[25]_i_6_n_0 ;
  wire \crc_reg[26]_i_12_n_0 ;
  wire \crc_reg[26]_i_1_n_0 ;
  wire \crc_reg[26]_i_2_n_0 ;
  wire \crc_reg[26]_i_4_n_0 ;
  wire \crc_reg[26]_i_5_n_0 ;
  wire \crc_reg[26]_i_6_n_0 ;
  wire \crc_reg[26]_i_7_n_0 ;
  wire \crc_reg[26]_i_9_n_0 ;
  wire \crc_reg[27]_i_10_n_0 ;
  wire \crc_reg[27]_i_11_n_0 ;
  wire \crc_reg[27]_i_12_n_0 ;
  wire \crc_reg[27]_i_1_n_0 ;
  wire \crc_reg[27]_i_2_n_0 ;
  wire \crc_reg[27]_i_4_n_0 ;
  wire \crc_reg[27]_i_5_n_0 ;
  wire \crc_reg[27]_i_6_n_0 ;
  wire \crc_reg[27]_i_8_n_0 ;
  wire \crc_reg[27]_i_9_n_0 ;
  wire \crc_reg[28]_i_1_n_0 ;
  wire \crc_reg[28]_i_2_n_0 ;
  wire \crc_reg[28]_i_3_n_0 ;
  wire \crc_reg[28]_i_4_n_0 ;
  wire \crc_reg[28]_i_5_n_0 ;
  wire \crc_reg[28]_i_8_n_0 ;
  wire \crc_reg[29]_i_1_n_0 ;
  wire \crc_reg[29]_i_2_n_0 ;
  wire \crc_reg[29]_i_3_n_0 ;
  wire \crc_reg[29]_i_4_n_0 ;
  wire \crc_reg[29]_i_5_n_0 ;
  wire \crc_reg[29]_i_8_n_0 ;
  wire \crc_reg[2]_i_10_n_0 ;
  wire \crc_reg[2]_i_11_n_0 ;
  wire \crc_reg[2]_i_1_n_0 ;
  wire \crc_reg[2]_i_2_n_0 ;
  wire \crc_reg[2]_i_5_n_0 ;
  wire \crc_reg[2]_i_7_n_0 ;
  wire \crc_reg[2]_i_8_n_0 ;
  wire \crc_reg[2]_i_9_n_0 ;
  wire \crc_reg[30]_i_1_n_0 ;
  wire \crc_reg[30]_i_2_n_0 ;
  wire \crc_reg[30]_i_3_n_0 ;
  wire \crc_reg[30]_i_4_n_0 ;
  wire \crc_reg[30]_i_5_n_0 ;
  wire \crc_reg[30]_i_6_n_0 ;
  wire \crc_reg[31]_i_1_n_0 ;
  wire \crc_reg[31]_i_2_n_0 ;
  wire \crc_reg[31]_i_3_n_0 ;
  wire \crc_reg[31]_i_4_n_0 ;
  wire \crc_reg[31]_i_5_n_0 ;
  wire \crc_reg[31]_i_6_n_0 ;
  wire \crc_reg[31]_i_8_n_0 ;
  wire \crc_reg[3]_i_1_n_0 ;
  wire \crc_reg[3]_i_2_n_0 ;
  wire \crc_reg[3]_i_3_n_0 ;
  wire \crc_reg[3]_i_4_n_0 ;
  wire \crc_reg[3]_i_8_n_0 ;
  wire \crc_reg[4]_i_1_n_0 ;
  wire \crc_reg[4]_i_2_n_0 ;
  wire \crc_reg[4]_i_3_n_0 ;
  wire \crc_reg[4]_i_4_n_0 ;
  wire \crc_reg[5]_i_10_n_0 ;
  wire \crc_reg[5]_i_11_n_0 ;
  wire \crc_reg[5]_i_12_n_0 ;
  wire \crc_reg[5]_i_1_n_0 ;
  wire \crc_reg[5]_i_2_n_0 ;
  wire \crc_reg[5]_i_3_n_0 ;
  wire \crc_reg[5]_i_4_n_0 ;
  wire \crc_reg[5]_i_5_n_0 ;
  wire \crc_reg[5]_i_9_n_0 ;
  wire \crc_reg[6]_i_1_n_0 ;
  wire \crc_reg[6]_i_2_n_0 ;
  wire \crc_reg[6]_i_3_n_0 ;
  wire \crc_reg[6]_i_4_n_0 ;
  wire \crc_reg[6]_i_8_n_0 ;
  wire \crc_reg[7]_i_1_n_0 ;
  wire \crc_reg[7]_i_2_n_0 ;
  wire \crc_reg[7]_i_4_n_0 ;
  wire \crc_reg[7]_i_5_n_0 ;
  wire \crc_reg[8]_i_1_n_0 ;
  wire \crc_reg[8]_i_2_n_0 ;
  wire \crc_reg[8]_i_3_n_0 ;
  wire \crc_reg[8]_i_4_n_0 ;
  wire \crc_reg[9]_i_1_n_0 ;
  wire \crc_reg[9]_i_2_n_0 ;
  wire \crc_reg[9]_i_3_n_0 ;
  wire \crc_reg[9]_i_4_n_0 ;
  wire \crc_reg[9]_i_5_n_0 ;
  wire \crc_reg[9]_i_8_n_0 ;
  wire \crc_reg[9]_i_9_n_0 ;
  wire \crc_reg_reg_n_0_[0] ;
  wire \crc_reg_reg_n_0_[24] ;
  wire [13:0]dcnt;
  wire \dcnt[0]_i_1_n_0 ;
  wire \dcnt[10]_i_1_n_0 ;
  wire \dcnt[11]_i_1_n_0 ;
  wire \dcnt[12]_i_1_n_0 ;
  wire \dcnt[13]_i_1_n_0 ;
  wire \dcnt[13]_i_2_n_0 ;
  wire \dcnt[13]_i_3_n_0 ;
  wire \dcnt[13]_i_5_n_0 ;
  wire \dcnt[1]_i_1_n_0 ;
  wire \dcnt[1]_i_2_n_0 ;
  wire \dcnt[2]_i_1_n_0 ;
  wire \dcnt[3]_i_1_n_0 ;
  wire \dcnt[4]_i_1_n_0 ;
  wire \dcnt[5]_i_1_n_0 ;
  wire \dcnt[6]_i_1_n_0 ;
  wire \dcnt[7]_i_1_n_0 ;
  wire \dcnt[8]_i_1_n_0 ;
  wire \dcnt[9]_i_1_n_0 ;
  wire \dcnt_reg[12]_i_2_n_0 ;
  wire \dcnt_reg[12]_i_2_n_1 ;
  wire \dcnt_reg[12]_i_2_n_2 ;
  wire \dcnt_reg[12]_i_2_n_3 ;
  wire \dcnt_reg[12]_i_2_n_4 ;
  wire \dcnt_reg[12]_i_2_n_5 ;
  wire \dcnt_reg[12]_i_2_n_6 ;
  wire \dcnt_reg[12]_i_2_n_7 ;
  wire \dcnt_reg[13]_i_4_n_7 ;
  wire \dcnt_reg[4]_i_2_n_0 ;
  wire \dcnt_reg[4]_i_2_n_1 ;
  wire \dcnt_reg[4]_i_2_n_2 ;
  wire \dcnt_reg[4]_i_2_n_3 ;
  wire \dcnt_reg[4]_i_2_n_4 ;
  wire \dcnt_reg[4]_i_2_n_5 ;
  wire \dcnt_reg[4]_i_2_n_6 ;
  wire \dcnt_reg[4]_i_2_n_7 ;
  wire \dcnt_reg[8]_i_2_n_0 ;
  wire \dcnt_reg[8]_i_2_n_1 ;
  wire \dcnt_reg[8]_i_2_n_2 ;
  wire \dcnt_reg[8]_i_2_n_3 ;
  wire \dcnt_reg[8]_i_2_n_4 ;
  wire \dcnt_reg[8]_i_2_n_5 ;
  wire \dcnt_reg[8]_i_2_n_6 ;
  wire \dcnt_reg[8]_i_2_n_7 ;
  wire [26:26]func_crc32_d80_return;
  wire func_crc32_d80_return0186_out;
  wire func_crc32_d80_return0188_out;
  wire func_crc32_d80_return0190_out;
  wire func_crc32_d80_return0192_out;
  wire func_crc32_d80_return0193_out;
  wire func_crc32_d80_return0194_out;
  wire [29:2]func_crc32_d81_return;
  wire func_crc32_d81_return0129_out;
  wire func_crc32_d81_return0143_out;
  wire [27:3]func_crc32_d82_return;
  wire func_crc32_d82_return060_out;
  wire func_crc32_d82_return062_out;
  wire [26:2]func_crc32_d8_return;
  (* MARK_DEBUG *) wire [7:0]gmii_txd;
  wire \gmii_txd[0]_i_1_n_0 ;
  wire \gmii_txd[0]_i_2_n_0 ;
  wire \gmii_txd[0]_i_3_n_0 ;
  wire \gmii_txd[1]_i_1_n_0 ;
  wire \gmii_txd[1]_i_2_n_0 ;
  wire \gmii_txd[1]_i_3_n_0 ;
  wire \gmii_txd[2]_i_1_n_0 ;
  wire \gmii_txd[2]_i_2_n_0 ;
  wire \gmii_txd[2]_i_3_n_0 ;
  wire \gmii_txd[3]_i_1_n_0 ;
  wire \gmii_txd[3]_i_2_n_0 ;
  wire \gmii_txd[3]_i_3_n_0 ;
  wire \gmii_txd[4]_i_1_n_0 ;
  wire \gmii_txd[4]_i_2_n_0 ;
  wire \gmii_txd[4]_i_3_n_0 ;
  wire \gmii_txd[5]_i_1_n_0 ;
  wire \gmii_txd[5]_i_2_n_0 ;
  wire \gmii_txd[5]_i_3_n_0 ;
  wire \gmii_txd[6]_i_1_n_0 ;
  wire \gmii_txd[6]_i_2_n_0 ;
  wire \gmii_txd[6]_i_3_n_0 ;
  wire \gmii_txd[6]_i_4_n_0 ;
  wire \gmii_txd[6]_i_5_n_0 ;
  wire \gmii_txd[6]_i_6_n_0 ;
  wire \gmii_txd[7]_i_1_n_0 ;
  wire \gmii_txd[7]_i_2_n_0 ;
  wire \gmii_txd[7]_i_3_n_0 ;
  wire \gmii_txd[7]_i_4_n_0 ;
  wire \gmii_txd[7]_i_5_n_0 ;
  wire \gmii_txd[7]_i_6_n_0 ;
  wire \gmii_txd[7]_i_7_n_0 ;
  wire \gmii_txd[7]_i_8_n_0 ;
  (* MARK_DEBUG *) wire gmii_txen;
  wire gmii_txen1_out;
  wire gmii_txen_i_2_n_0;
  wire gmii_txen_i_3_n_0;
  wire gmii_txen_i_4_n_0;
  (* MARK_DEBUG *) wire gmii_txer;
  wire gmii_txer0_out;
  wire gmii_txer_i_2_n_0;
  wire gmii_txer_i_3_n_0;
  wire gmii_txer_i_4_n_0;
  wire gmii_txer_i_5_n_0;
  wire \max_data_length[10]_i_1_n_0 ;
  wire \max_data_length[2]_i_1_n_0 ;
  wire \max_data_length[3]_i_1_n_0 ;
  wire \max_data_length_reg_n_0_[10] ;
  wire \max_data_length_reg_n_0_[13] ;
  wire \max_data_length_reg_n_0_[1] ;
  wire \max_data_length_reg_n_0_[2] ;
  wire \max_data_length_reg_n_0_[3] ;
  wire \max_data_length_reg_n_0_[4] ;
  wire \max_data_length_reg_n_0_[5] ;
  wire \max_data_length_reg_n_0_[6] ;
  wire \max_data_length_reg_n_0_[7] ;
  wire \max_data_length_reg_n_0_[8] ;
  wire \max_data_length_reg_n_0_[9] ;
  wire min_data_length;
  wire \min_data_length[5]_i_1_n_0 ;
  wire \min_data_length_reg_n_0_[2] ;
  wire \min_data_length_reg_n_0_[3] ;
  wire \min_data_length_reg_n_0_[4] ;
  wire \min_data_length_reg_n_0_[5] ;
  wire \min_data_length_reg_n_0_[6] ;
  wire p_0_in113_in;
  wire p_0_in178_in;
  wire p_0_in284_in;
  wire p_0_in2_in;
  wire p_0_in49_in;
  wire p_11_in122_in;
  wire p_11_in187_in;
  wire p_11_in293_in;
  wire p_11_in57_in;
  wire p_13_in124_in;
  wire p_13_in189_in;
  wire p_13_in295_in;
  wire p_13_in59_in;
  wire p_15_in126_in;
  wire p_15_in191_in;
  wire p_15_in61_in;
  wire p_1_in;
  wire p_1_in243_in;
  wire p_1_in245_in;
  wire p_1_in247_in;
  wire p_1_in249_in;
  wire p_1_in250_in;
  wire p_1_in252_in;
  wire p_1_in253_in;
  wire p_1_in255_in;
  wire p_1_in256_in;
  wire p_1_in258_in;
  wire p_1_in260_in;
  wire p_1_in261_in;
  wire p_1_in262_in;
  wire p_1_in264_in;
  wire p_1_in266_in;
  wire p_1_in268_in;
  wire p_1_in270_in;
  wire p_1_in272_in;
  wire p_1_in274_in;
  wire p_1_in276_in;
  wire p_1_in278_in;
  wire p_1_in280_in;
  wire p_1_in282_in;
  wire p_2_in;
  wire p_2_in286_in;
  wire p_301_in;
  wire p_303_in;
  wire p_307_in;
  wire p_309_in;
  wire p_30_in;
  wire p_311_in;
  wire p_313_in;
  wire p_315_in;
  wire p_317_in;
  wire p_319_in;
  wire p_323_in;
  wire p_325_in;
  wire p_327_in;
  wire p_331_in;
  wire p_335_in;
  wire p_337_in;
  wire p_339_in;
  wire p_341_in;
  wire p_345_in;
  wire p_37_in114_in;
  wire p_37_in179_in;
  wire p_37_in50_in;
  wire p_3_in;
  wire p_4_in;
  wire p_4_in117_in;
  wire p_4_in182_in;
  wire p_4_in53_in;
  wire p_5_in;
  wire p_5_in289_in;
  wire p_6_in;
  wire p_7_in;
  wire p_7_in120_in;
  wire p_7_in185_in;
  wire p_9_in291_in;
  wire \reg_client_ctl[0]_i_1_n_0 ;
  wire \reg_client_ctl[1]_i_1_n_0 ;
  wire \reg_client_ctl[2]_i_1_n_0 ;
  wire \reg_client_ctl[3]_i_2_n_0 ;
  wire \reg_client_ctl[3]_i_3_n_0 ;
  wire \reg_client_ctl[3]_i_4_n_0 ;
  wire \reg_client_ctl[3]_i_5_n_0 ;
  wire \reg_client_ctl[3]_i_6_n_0 ;
  wire \reg_client_ctl_reg_n_0_[0] ;
  wire \reg_client_ctl_reg_n_0_[1] ;
  wire \reg_client_ctl_reg_n_0_[2] ;
  wire \reg_client_ctl_reg_n_0_[3] ;
  wire reg_client_dat;
  wire \reg_client_dat[0]_i_1_n_0 ;
  wire \reg_client_dat[10]_i_1_n_0 ;
  wire \reg_client_dat[11]_i_1_n_0 ;
  wire \reg_client_dat[12]_i_1_n_0 ;
  wire \reg_client_dat[13]_i_1_n_0 ;
  wire \reg_client_dat[14]_i_1_n_0 ;
  wire \reg_client_dat[15]_i_1_n_0 ;
  wire \reg_client_dat[16]_i_1_n_0 ;
  wire \reg_client_dat[17]_i_1_n_0 ;
  wire \reg_client_dat[18]_i_1_n_0 ;
  wire \reg_client_dat[19]_i_1_n_0 ;
  wire \reg_client_dat[1]_i_1_n_0 ;
  wire \reg_client_dat[20]_i_1_n_0 ;
  wire \reg_client_dat[21]_i_1_n_0 ;
  wire \reg_client_dat[22]_i_1_n_0 ;
  wire \reg_client_dat[23]_i_1_n_0 ;
  wire \reg_client_dat[24]_i_1_n_0 ;
  wire \reg_client_dat[25]_i_1_n_0 ;
  wire \reg_client_dat[26]_i_1_n_0 ;
  wire \reg_client_dat[27]_i_1_n_0 ;
  wire \reg_client_dat[28]_i_1_n_0 ;
  wire \reg_client_dat[29]_i_1_n_0 ;
  wire \reg_client_dat[2]_i_1_n_0 ;
  wire \reg_client_dat[30]_i_1_n_0 ;
  wire \reg_client_dat[31]_i_1_n_0 ;
  wire \reg_client_dat[3]_i_1_n_0 ;
  wire \reg_client_dat[4]_i_1_n_0 ;
  wire \reg_client_dat[5]_i_1_n_0 ;
  wire \reg_client_dat[6]_i_1_n_0 ;
  wire \reg_client_dat[7]_i_1_n_0 ;
  wire \reg_client_dat[8]_i_1_n_0 ;
  wire \reg_client_dat[9]_i_1_n_0 ;
  wire \reg_client_dat_reg_n_0_[0] ;
  wire \reg_client_dat_reg_n_0_[16] ;
  wire \reg_client_dat_reg_n_0_[24] ;
  wire \reg_client_dat_reg_n_0_[8] ;
  wire reg_conf_tx_en;
  wire reg_conf_tx_en_i_1_n_0;
  wire reg_conf_tx_no_gen_crc_i_1_n_0;
  wire reg_conf_tx_no_gen_crc_reg_n_0;
  wire reset_n;
  (* MARK_DEBUG *) (* RTL_KEEP = "true" *) wire [3:0]state;
  wire \state[0]_i_10_n_0 ;
  wire \state[0]_i_11_n_0 ;
  wire \state[0]_i_12_n_0 ;
  wire \state[0]_i_1_n_0 ;
  wire \state[0]_i_2_n_0 ;
  wire \state[0]_i_3_n_0 ;
  wire \state[0]_i_4_n_0 ;
  wire \state[0]_i_5_n_0 ;
  wire \state[0]_i_6_n_0 ;
  wire \state[0]_i_7_n_0 ;
  wire \state[0]_i_8_n_0 ;
  wire \state[0]_i_9_n_0 ;
  wire \state[1]_i_10_n_0 ;
  wire \state[1]_i_11_n_0 ;
  wire \state[1]_i_1_n_0 ;
  wire \state[1]_i_2_n_0 ;
  wire \state[1]_i_3_n_0 ;
  wire \state[1]_i_4_n_0 ;
  wire \state[1]_i_5_n_0 ;
  wire \state[1]_i_6_n_0 ;
  wire \state[1]_i_7_n_0 ;
  wire \state[1]_i_8_n_0 ;
  wire \state[1]_i_9_n_0 ;
  wire \state[2]_i_1_n_0 ;
  wire \state[2]_i_2_n_0 ;
  wire \state[2]_i_3_n_0 ;
  wire \state[2]_i_4_n_0 ;
  wire \state[2]_i_5_n_0 ;
  wire \state[2]_i_6_n_0 ;
  wire \state[2]_i_7_n_0 ;
  wire \state[2]_i_8_n_0 ;
  wire \state[2]_i_9_n_0 ;
  wire \state[3]_i_10_n_0 ;
  wire \state[3]_i_11_n_0 ;
  wire \state[3]_i_12_n_0 ;
  wire \state[3]_i_13_n_0 ;
  wire \state[3]_i_14_n_0 ;
  wire \state[3]_i_17_n_0 ;
  wire \state[3]_i_18_n_0 ;
  wire \state[3]_i_19_n_0 ;
  wire \state[3]_i_1_n_0 ;
  wire \state[3]_i_21_n_0 ;
  wire \state[3]_i_22_n_0 ;
  wire \state[3]_i_23_n_0 ;
  wire \state[3]_i_24_n_0 ;
  wire \state[3]_i_25_n_0 ;
  wire \state[3]_i_26_n_0 ;
  wire \state[3]_i_27_n_0 ;
  wire \state[3]_i_28_n_0 ;
  wire \state[3]_i_29_n_0 ;
  wire \state[3]_i_2_n_0 ;
  wire \state[3]_i_30_n_0 ;
  wire \state[3]_i_31_n_0 ;
  wire \state[3]_i_32_n_0 ;
  wire \state[3]_i_3_n_0 ;
  wire \state[3]_i_4_n_0 ;
  wire \state[3]_i_5_n_0 ;
  wire \state[3]_i_6_n_0 ;
  wire \state[3]_i_7_n_0 ;
  wire \state[3]_i_9_n_0 ;
  wire \state_reg[3]_i_15_n_3 ;
  wire \state_reg[3]_i_16_n_0 ;
  wire \state_reg[3]_i_16_n_1 ;
  wire \state_reg[3]_i_16_n_2 ;
  wire \state_reg[3]_i_16_n_3 ;
  wire \state_reg[3]_i_20_n_0 ;
  wire \state_reg[3]_i_20_n_1 ;
  wire \state_reg[3]_i_20_n_2 ;
  wire \state_reg[3]_i_20_n_3 ;
  wire \state_reg[3]_i_8_n_1 ;
  wire \state_reg[3]_i_8_n_2 ;
  wire \state_reg[3]_i_8_n_3 ;
  wire tx_clk;
  wire [3:0]NLW_client_rdy_reg_i_11_O_UNCONNECTED;
  wire [3:0]NLW_client_rdy_reg_i_12_CO_UNCONNECTED;
  wire [3:1]NLW_client_rdy_reg_i_12_O_UNCONNECTED;
  wire [0:0]NLW_client_rdy_reg_i_30_O_UNCONNECTED;
  wire [3:0]NLW_client_rdy_reg_i_9_O_UNCONNECTED;
  wire [3:0]\NLW_dcnt_reg[13]_i_4_CO_UNCONNECTED ;
  wire [3:1]\NLW_dcnt_reg[13]_i_4_O_UNCONNECTED ;
  wire [3:1]\NLW_state_reg[3]_i_15_CO_UNCONNECTED ;
  wire [3:0]\NLW_state_reg[3]_i_15_O_UNCONNECTED ;
  wire [3:0]\NLW_state_reg[3]_i_16_O_UNCONNECTED ;
  wire [3:0]\NLW_state_reg[3]_i_20_O_UNCONNECTED ;
  wire [3:3]\NLW_state_reg[3]_i_8_CO_UNCONNECTED ;
  wire [3:0]\NLW_state_reg[3]_i_8_O_UNCONNECTED ;

  LUT6 #(
    .INIT(64'hAAAAAAABAAAAAAA8)) 
    client_rdy_i_1
       (.I0(client_rdy4_out),
        .I1(client_rdy_i_4_n_0),
        .I2(client_rdy_i_5_n_0),
        .I3(client_rdy_i_6_n_0),
        .I4(client_rdy_i_7_n_0),
        .I5(client_rdy),
        .O(client_rdy_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT4 #(
    .INIT(16'h0116)) 
    client_rdy_i_10
       (.I0(client_ctl[2]),
        .I1(client_ctl[3]),
        .I2(client_ctl[0]),
        .I3(client_ctl[1]),
        .O(client_rdy_i_10_n_0));
  LUT3 #(
    .INIT(8'hD4)) 
    client_rdy_i_13
       (.I0(\max_data_length_reg_n_0_[13] ),
        .I1(client_rdy_reg_i_28_n_4),
        .I2(client_rdy_reg_i_12_n_7),
        .O(client_rdy_i_13_n_0));
  LUT3 #(
    .INIT(8'hF4)) 
    client_rdy_i_14
       (.I0(\max_data_length_reg_n_0_[10] ),
        .I1(client_rdy_reg_i_28_n_6),
        .I2(client_rdy_reg_i_28_n_5),
        .O(client_rdy_i_14_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    client_rdy_i_15
       (.I0(client_rdy_reg_i_28_n_7),
        .I1(\max_data_length_reg_n_0_[9] ),
        .I2(client_rdy_reg_i_29_n_4),
        .I3(\max_data_length_reg_n_0_[8] ),
        .O(client_rdy_i_15_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    client_rdy_i_16
       (.I0(client_rdy_reg_i_12_n_2),
        .O(client_rdy_i_16_n_0));
  LUT3 #(
    .INIT(8'h21)) 
    client_rdy_i_17
       (.I0(\max_data_length_reg_n_0_[13] ),
        .I1(client_rdy_reg_i_28_n_4),
        .I2(client_rdy_reg_i_12_n_7),
        .O(client_rdy_i_17_n_0));
  LUT3 #(
    .INIT(8'h41)) 
    client_rdy_i_18
       (.I0(client_rdy_reg_i_28_n_5),
        .I1(client_rdy_reg_i_28_n_6),
        .I2(\max_data_length_reg_n_0_[10] ),
        .O(client_rdy_i_18_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    client_rdy_i_19
       (.I0(client_rdy_reg_i_28_n_7),
        .I1(\max_data_length_reg_n_0_[9] ),
        .I2(client_rdy_reg_i_29_n_4),
        .I3(\max_data_length_reg_n_0_[8] ),
        .O(client_rdy_i_19_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    client_rdy_i_2
       (.I0(reset_n),
        .O(client_rdy_i_2_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    client_rdy_i_20
       (.I0(client_rdy_reg_i_29_n_5),
        .I1(\max_data_length_reg_n_0_[7] ),
        .I2(client_rdy_reg_i_29_n_6),
        .I3(\max_data_length_reg_n_0_[6] ),
        .O(client_rdy_i_20_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    client_rdy_i_21
       (.I0(client_rdy_reg_i_29_n_7),
        .I1(\max_data_length_reg_n_0_[5] ),
        .I2(client_rdy_reg_i_30_n_4),
        .I3(\max_data_length_reg_n_0_[4] ),
        .O(client_rdy_i_21_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    client_rdy_i_22
       (.I0(client_rdy_reg_i_30_n_5),
        .I1(\max_data_length_reg_n_0_[3] ),
        .I2(client_rdy_reg_i_30_n_6),
        .I3(\max_data_length_reg_n_0_[2] ),
        .O(client_rdy_i_22_n_0));
  LUT3 #(
    .INIT(8'h71)) 
    client_rdy_i_23
       (.I0(\max_data_length_reg_n_0_[1] ),
        .I1(dcnt[0]),
        .I2(\dcnt_reg[4]_i_2_n_7 ),
        .O(client_rdy_i_23_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    client_rdy_i_24
       (.I0(client_rdy_reg_i_29_n_5),
        .I1(\max_data_length_reg_n_0_[7] ),
        .I2(client_rdy_reg_i_29_n_6),
        .I3(\max_data_length_reg_n_0_[6] ),
        .O(client_rdy_i_24_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    client_rdy_i_25
       (.I0(client_rdy_reg_i_29_n_7),
        .I1(\max_data_length_reg_n_0_[5] ),
        .I2(client_rdy_reg_i_30_n_4),
        .I3(\max_data_length_reg_n_0_[4] ),
        .O(client_rdy_i_25_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    client_rdy_i_26
       (.I0(client_rdy_reg_i_30_n_5),
        .I1(\max_data_length_reg_n_0_[3] ),
        .I2(client_rdy_reg_i_30_n_6),
        .I3(\max_data_length_reg_n_0_[2] ),
        .O(client_rdy_i_26_n_0));
  LUT3 #(
    .INIT(8'h90)) 
    client_rdy_i_27
       (.I0(\max_data_length_reg_n_0_[1] ),
        .I1(\dcnt_reg[4]_i_2_n_7 ),
        .I2(dcnt[0]),
        .O(client_rdy_i_27_n_0));
  LUT6 #(
    .INIT(64'hAAAAAAEAAAAAFAEA)) 
    client_rdy_i_3
       (.I0(client_rdy_i_8_n_0),
        .I1(client_vld),
        .I2(reg_conf_tx_en),
        .I3(state[3]),
        .I4(state[0]),
        .I5(\cnt[3]_i_5_n_0 ),
        .O(client_rdy4_out));
  LUT6 #(
    .INIT(64'h0000000000004000)) 
    client_rdy_i_4
       (.I0(\cnt_reg_n_0_[3] ),
        .I1(\cnt_reg_n_0_[1] ),
        .I2(\cnt_reg_n_0_[0] ),
        .I3(\cnt_reg_n_0_[2] ),
        .I4(state[3]),
        .I5(state[2]),
        .O(client_rdy_i_4_n_0));
  LUT6 #(
    .INIT(64'h0400000000000000)) 
    client_rdy_i_5
       (.I0(client_rdy_reg_i_9_n_0),
        .I1(client_vld),
        .I2(state[0]),
        .I3(state[1]),
        .I4(state[2]),
        .I5(\reg_client_ctl[3]_i_5_n_0 ),
        .O(client_rdy_i_5_n_0));
  LUT4 #(
    .INIT(16'h02FF)) 
    client_rdy_i_6
       (.I0(state[0]),
        .I1(state[2]),
        .I2(state[3]),
        .I3(reg_conf_tx_en),
        .O(client_rdy_i_6_n_0));
  LUT6 #(
    .INIT(64'h8000000FF000000F)) 
    client_rdy_i_7
       (.I0(client_vld),
        .I1(client_rdy_i_10_n_0),
        .I2(state[1]),
        .I3(state[3]),
        .I4(state[2]),
        .I5(state[0]),
        .O(client_rdy_i_7_n_0));
  LUT4 #(
    .INIT(16'h0400)) 
    client_rdy_i_8
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(reg_conf_tx_en),
        .O(client_rdy_i_8_n_0));
  FDCE #(
    .INIT(1'b0)) 
    client_rdy_reg
       (.C(tx_clk),
        .CE(1'b1),
        .CLR(client_rdy_i_2_n_0),
        .D(client_rdy_i_1_n_0),
        .Q(client_rdy));
  CARRY4 client_rdy_reg_i_11
       (.CI(1'b0),
        .CO({client_rdy_reg_i_11_n_0,client_rdy_reg_i_11_n_1,client_rdy_reg_i_11_n_2,client_rdy_reg_i_11_n_3}),
        .CYINIT(1'b0),
        .DI({client_rdy_i_20_n_0,client_rdy_i_21_n_0,client_rdy_i_22_n_0,client_rdy_i_23_n_0}),
        .O(NLW_client_rdy_reg_i_11_O_UNCONNECTED[3:0]),
        .S({client_rdy_i_24_n_0,client_rdy_i_25_n_0,client_rdy_i_26_n_0,client_rdy_i_27_n_0}));
  CARRY4 client_rdy_reg_i_12
       (.CI(client_rdy_reg_i_28_n_0),
        .CO({NLW_client_rdy_reg_i_12_CO_UNCONNECTED[3:2],client_rdy_reg_i_12_n_2,NLW_client_rdy_reg_i_12_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_client_rdy_reg_i_12_O_UNCONNECTED[3:1],client_rdy_reg_i_12_n_7}),
        .S({1'b0,1'b0,1'b1,dcnt[13]}));
  CARRY4 client_rdy_reg_i_28
       (.CI(client_rdy_reg_i_29_n_0),
        .CO({client_rdy_reg_i_28_n_0,client_rdy_reg_i_28_n_1,client_rdy_reg_i_28_n_2,client_rdy_reg_i_28_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({client_rdy_reg_i_28_n_4,client_rdy_reg_i_28_n_5,client_rdy_reg_i_28_n_6,client_rdy_reg_i_28_n_7}),
        .S(dcnt[12:9]));
  CARRY4 client_rdy_reg_i_29
       (.CI(client_rdy_reg_i_30_n_0),
        .CO({client_rdy_reg_i_29_n_0,client_rdy_reg_i_29_n_1,client_rdy_reg_i_29_n_2,client_rdy_reg_i_29_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({client_rdy_reg_i_29_n_4,client_rdy_reg_i_29_n_5,client_rdy_reg_i_29_n_6,client_rdy_reg_i_29_n_7}),
        .S(dcnt[8:5]));
  CARRY4 client_rdy_reg_i_30
       (.CI(1'b0),
        .CO({client_rdy_reg_i_30_n_0,client_rdy_reg_i_30_n_1,client_rdy_reg_i_30_n_2,client_rdy_reg_i_30_n_3}),
        .CYINIT(dcnt[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({client_rdy_reg_i_30_n_4,client_rdy_reg_i_30_n_5,client_rdy_reg_i_30_n_6,NLW_client_rdy_reg_i_30_O_UNCONNECTED[0]}),
        .S(dcnt[4:1]));
  CARRY4 client_rdy_reg_i_9
       (.CI(client_rdy_reg_i_11_n_0),
        .CO({client_rdy_reg_i_9_n_0,client_rdy_reg_i_9_n_1,client_rdy_reg_i_9_n_2,client_rdy_reg_i_9_n_3}),
        .CYINIT(1'b0),
        .DI({client_rdy_reg_i_12_n_2,client_rdy_i_13_n_0,client_rdy_i_14_n_0,client_rdy_i_15_n_0}),
        .O(NLW_client_rdy_reg_i_9_O_UNCONNECTED[3:0]),
        .S({client_rdy_i_16_n_0,client_rdy_i_17_n_0,client_rdy_i_18_n_0,client_rdy_i_19_n_0}));
  LUT6 #(
    .INIT(64'h4040000070500000)) 
    \cnt[0]_i_1 
       (.I0(state[3]),
        .I1(state[2]),
        .I2(reg_conf_tx_en),
        .I3(state[0]),
        .I4(state[1]),
        .I5(\cnt_reg_n_0_[0] ),
        .O(\cnt[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000A020A0200000)) 
    \cnt[1]_i_1 
       (.I0(\cnt[1]_i_2_n_0 ),
        .I1(state[3]),
        .I2(state[1]),
        .I3(state[0]),
        .I4(\cnt_reg_n_0_[1] ),
        .I5(\cnt_reg_n_0_[0] ),
        .O(\cnt[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \cnt[1]_i_2 
       (.I0(reg_conf_tx_en),
        .I1(state[2]),
        .O(\cnt[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT4 #(
    .INIT(16'h2A80)) 
    \cnt[2]_i_1 
       (.I0(\cnt[3]_i_8_n_0 ),
        .I1(\cnt_reg_n_0_[1] ),
        .I2(\cnt_reg_n_0_[0] ),
        .I3(\cnt_reg_n_0_[2] ),
        .O(\cnt[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAAEEFE)) 
    \cnt[3]_i_1 
       (.I0(\cnt[3]_i_3_n_0 ),
        .I1(\cnt[3]_i_4_n_0 ),
        .I2(\cnt[3]_i_5_n_0 ),
        .I3(\cnt[3]_i_6_n_0 ),
        .I4(state[0]),
        .I5(\cnt[3]_i_7_n_0 ),
        .O(\cnt[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \cnt[3]_i_10 
       (.I0(state[3]),
        .I1(state[1]),
        .I2(state[2]),
        .O(\cnt[3]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT5 #(
    .INIT(32'h28888888)) 
    \cnt[3]_i_2 
       (.I0(\cnt[3]_i_8_n_0 ),
        .I1(\cnt_reg_n_0_[3] ),
        .I2(\cnt_reg_n_0_[1] ),
        .I3(\cnt_reg_n_0_[0] ),
        .I4(\cnt_reg_n_0_[2] ),
        .O(\cnt[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h3333BF33)) 
    \cnt[3]_i_3 
       (.I0(state[3]),
        .I1(reg_conf_tx_en),
        .I2(state[0]),
        .I3(state[1]),
        .I4(state[2]),
        .O(\cnt[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \cnt[3]_i_4 
       (.I0(client_ctl[3]),
        .I1(client_vld),
        .I2(\cnt[3]_i_9_n_0 ),
        .I3(client_ctl[0]),
        .I4(client_ctl[1]),
        .I5(client_ctl[2]),
        .O(\cnt[3]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \cnt[3]_i_5 
       (.I0(\reg_client_ctl_reg_n_0_[3] ),
        .I1(\reg_client_ctl_reg_n_0_[0] ),
        .I2(\reg_client_ctl_reg_n_0_[1] ),
        .I3(\reg_client_ctl_reg_n_0_[2] ),
        .O(\cnt[3]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \cnt[3]_i_6 
       (.I0(state[1]),
        .I1(state[3]),
        .O(\cnt[3]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h88880000F8880000)) 
    \cnt[3]_i_7 
       (.I0(\cnt[3]_i_10_n_0 ),
        .I1(reg_conf_tx_no_gen_crc_reg_n_0),
        .I2(client_rdy_i_10_n_0),
        .I3(client_vld),
        .I4(state[0]),
        .I5(\cnt[3]_i_6_n_0 ),
        .O(\cnt[3]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'h00008C00)) 
    \cnt[3]_i_8 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[3]),
        .I3(reg_conf_tx_en),
        .I4(state[2]),
        .O(\cnt[3]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \cnt[3]_i_9 
       (.I0(state[2]),
        .I1(state[3]),
        .O(\cnt[3]_i_9_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \cnt_reg[0] 
       (.C(tx_clk),
        .CE(\cnt[3]_i_1_n_0 ),
        .CLR(client_rdy_i_2_n_0),
        .D(\cnt[0]_i_1_n_0 ),
        .Q(\cnt_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \cnt_reg[1] 
       (.C(tx_clk),
        .CE(\cnt[3]_i_1_n_0 ),
        .CLR(client_rdy_i_2_n_0),
        .D(\cnt[1]_i_1_n_0 ),
        .Q(\cnt_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \cnt_reg[2] 
       (.C(tx_clk),
        .CE(\cnt[3]_i_1_n_0 ),
        .CLR(client_rdy_i_2_n_0),
        .D(\cnt[2]_i_1_n_0 ),
        .Q(\cnt_reg_n_0_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \cnt_reg[3] 
       (.C(tx_clk),
        .CE(\cnt[3]_i_1_n_0 ),
        .CLR(client_rdy_i_2_n_0),
        .D(\cnt[3]_i_2_n_0 ),
        .Q(\cnt_reg_n_0_[3] ));
  LUT6 #(
    .INIT(64'hFEFFFFFEFEFEFEFE)) 
    \crc_reg[0]_i_1 
       (.I0(\crc_reg[0]_i_2_n_0 ),
        .I1(\crc_reg[0]_i_3_n_0 ),
        .I2(\crc_reg[7]_i_4_n_0 ),
        .I3(\crc_reg_reg_n_0_[24] ),
        .I4(p_1_in),
        .I5(state[3]),
        .O(\crc_reg[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBEEBEBBEAAAAAAAA)) 
    \crc_reg[0]_i_2 
       (.I0(\crc_reg[0]_i_4_n_0 ),
        .I1(\crc_reg_reg_n_0_[24] ),
        .I2(p_1_in),
        .I3(p_0_in113_in),
        .I4(p_37_in114_in),
        .I5(\crc_reg[14]_i_3_n_0 ),
        .O(\crc_reg[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00006996)) 
    \crc_reg[0]_i_3 
       (.I0(p_0_in284_in),
        .I1(p_30_in),
        .I2(p_1_in),
        .I3(\crc_reg_reg_n_0_[24] ),
        .I4(state[2]),
        .O(\crc_reg[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h90FFFF6090609060)) 
    \crc_reg[0]_i_4 
       (.I0(p_0_in178_in),
        .I1(p_37_in179_in),
        .I2(\crc_reg[26]_i_2_n_0 ),
        .I3(\crc_reg[1]_i_3_n_0 ),
        .I4(\crc_reg[0]_i_5_n_0 ),
        .I5(\cnt[3]_i_10_n_0 ),
        .O(\crc_reg[0]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[0]_i_5 
       (.I0(p_37_in50_in),
        .I1(p_0_in49_in),
        .O(\crc_reg[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEEE)) 
    \crc_reg[10]_i_1 
       (.I0(\crc_reg[31]_i_3_n_0 ),
        .I1(\crc_reg[10]_i_2_n_0 ),
        .I2(\crc_reg[31]_i_5_n_0 ),
        .I3(p_1_in245_in),
        .I4(\crc_reg[10]_i_3_n_0 ),
        .I5(\crc_reg[10]_i_4_n_0 ),
        .O(\crc_reg[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[10]_i_10 
       (.I0(p_13_in295_in),
        .I1(p_5_in289_in),
        .O(\crc_reg[10]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \crc_reg[10]_i_11 
       (.I0(p_15_in126_in),
        .I1(p_37_in114_in),
        .I2(p_7_in120_in),
        .O(\crc_reg[10]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFFFF8F8F2F2F8)) 
    \crc_reg[10]_i_2 
       (.I0(\crc_reg[26]_i_2_n_0 ),
        .I1(\crc_reg[10]_i_5_n_0 ),
        .I2(\crc_reg[10]_i_6_n_0 ),
        .I3(p_303_in),
        .I4(\crc_reg[10]_i_8_n_0 ),
        .I5(\crc_reg[31]_i_8_n_0 ),
        .O(\crc_reg[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[10]_i_3 
       (.I0(\crc_reg[27]_i_4_n_0 ),
        .I1(p_7_in),
        .I2(p_15_in61_in),
        .I3(\crc_reg[10]_i_8_n_0 ),
        .I4(p_303_in),
        .I5(\crc_reg[10]_i_9_n_0 ),
        .O(\crc_reg[10]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[10]_i_4 
       (.I0(\cnt[3]_i_9_n_0 ),
        .I1(p_30_in),
        .I2(p_9_in291_in),
        .I3(\crc_reg[10]_i_8_n_0 ),
        .I4(p_303_in),
        .I5(\crc_reg[10]_i_10_n_0 ),
        .O(\crc_reg[10]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \crc_reg[10]_i_5 
       (.I0(p_15_in191_in),
        .I1(p_11_in187_in),
        .I2(p_7_in185_in),
        .I3(p_37_in179_in),
        .O(\crc_reg[10]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[10]_i_6 
       (.I0(\crc_reg[14]_i_3_n_0 ),
        .I1(\crc_reg[10]_i_11_n_0 ),
        .I2(\crc_reg[10]_i_8_n_0 ),
        .I3(p_2_in),
        .I4(p_1_in245_in),
        .I5(p_11_in122_in),
        .O(\crc_reg[10]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[10]_i_7 
       (.I0(p_2_in),
        .I1(p_1_in245_in),
        .O(p_303_in));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \crc_reg[10]_i_8 
       (.I0(\crc_reg_reg_n_0_[24] ),
        .I1(p_4_in),
        .I2(p_5_in),
        .O(\crc_reg[10]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[10]_i_9 
       (.I0(p_37_in50_in),
        .I1(p_11_in57_in),
        .O(\crc_reg[10]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \crc_reg[11]_i_1 
       (.I0(\crc_reg[31]_i_3_n_0 ),
        .I1(\crc_reg[11]_i_2_n_0 ),
        .I2(\crc_reg[11]_i_3_n_0 ),
        .I3(\crc_reg[31]_i_5_n_0 ),
        .I4(p_1_in247_in),
        .I5(\crc_reg[11]_i_4_n_0 ),
        .O(\crc_reg[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF44F8FF884488448)) 
    \crc_reg[11]_i_2 
       (.I0(\crc_reg[11]_i_5_n_0 ),
        .I1(\crc_reg[14]_i_3_n_0 ),
        .I2(p_3_in),
        .I3(p_1_in247_in),
        .I4(\crc_reg[11]_i_6_n_0 ),
        .I5(\crc_reg[26]_i_2_n_0 ),
        .O(\crc_reg[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[11]_i_3 
       (.I0(\crc_reg[31]_i_8_n_0 ),
        .I1(\crc_reg_reg_n_0_[24] ),
        .I2(p_6_in),
        .I3(p_4_in),
        .I4(p_1_in247_in),
        .I5(p_3_in),
        .O(\crc_reg[11]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF44F8FF884488448)) 
    \crc_reg[11]_i_4 
       (.I0(\crc_reg[11]_i_7_n_0 ),
        .I1(\crc_reg[27]_i_4_n_0 ),
        .I2(p_3_in),
        .I3(p_1_in247_in),
        .I4(\crc_reg[11]_i_8_n_0 ),
        .I5(\cnt[3]_i_9_n_0 ),
        .O(\crc_reg[11]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[11]_i_5 
       (.I0(\crc_reg[11]_i_9_n_0 ),
        .I1(p_4_in117_in),
        .I2(p_37_in114_in),
        .I3(p_11_in122_in),
        .I4(p_13_in124_in),
        .I5(\crc_reg_reg_n_0_[24] ),
        .O(\crc_reg[11]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[11]_i_6 
       (.I0(\crc_reg[11]_i_9_n_0 ),
        .I1(p_37_in179_in),
        .I2(p_11_in187_in),
        .I3(p_4_in182_in),
        .I4(p_13_in189_in),
        .I5(\crc_reg_reg_n_0_[24] ),
        .O(\crc_reg[11]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[11]_i_7 
       (.I0(\crc_reg[11]_i_9_n_0 ),
        .I1(p_37_in50_in),
        .I2(p_11_in57_in),
        .I3(p_13_in59_in),
        .I4(p_4_in53_in),
        .I5(\crc_reg_reg_n_0_[24] ),
        .O(\crc_reg[11]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[11]_i_8 
       (.I0(\crc_reg[11]_i_9_n_0 ),
        .I1(p_11_in293_in),
        .I2(p_9_in291_in),
        .I3(p_2_in286_in),
        .I4(p_30_in),
        .I5(\crc_reg_reg_n_0_[24] ),
        .O(\crc_reg[11]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[11]_i_9 
       (.I0(p_4_in),
        .I1(p_6_in),
        .O(\crc_reg[11]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFEEE)) 
    \crc_reg[12]_i_1 
       (.I0(\crc_reg[31]_i_3_n_0 ),
        .I1(\crc_reg[12]_i_2_n_0 ),
        .I2(\crc_reg[31]_i_5_n_0 ),
        .I3(p_1_in249_in),
        .I4(\crc_reg[12]_i_3_n_0 ),
        .O(\crc_reg[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[12]_i_10 
       (.I0(p_37_in114_in),
        .I1(p_13_in124_in),
        .O(\crc_reg[12]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFFFF8F8F2F2F8)) 
    \crc_reg[12]_i_2 
       (.I0(\crc_reg[26]_i_2_n_0 ),
        .I1(\crc_reg[12]_i_4_n_0 ),
        .I2(\crc_reg[12]_i_5_n_0 ),
        .I3(p_307_in),
        .I4(\crc_reg[12]_i_7_n_0 ),
        .I5(\crc_reg[31]_i_8_n_0 ),
        .O(\crc_reg[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF48F4FF844884488)) 
    \crc_reg[12]_i_3 
       (.I0(\crc_reg[12]_i_8_n_0 ),
        .I1(\crc_reg[27]_i_4_n_0 ),
        .I2(p_5_in289_in),
        .I3(p_307_in),
        .I4(\crc_reg[12]_i_9_n_0 ),
        .I5(\cnt[3]_i_9_n_0 ),
        .O(\crc_reg[12]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[12]_i_4 
       (.I0(p_13_in189_in),
        .I1(p_4_in182_in),
        .I2(p_15_in191_in),
        .I3(p_37_in179_in),
        .I4(p_7_in185_in),
        .I5(p_0_in178_in),
        .O(\crc_reg[12]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[12]_i_5 
       (.I0(\crc_reg[14]_i_3_n_0 ),
        .I1(\crc_reg[14]_i_11_n_0 ),
        .I2(\crc_reg[27]_i_11_n_0 ),
        .I3(\crc_reg[12]_i_7_n_0 ),
        .I4(p_307_in),
        .I5(\crc_reg[12]_i_10_n_0 ),
        .O(\crc_reg[12]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[12]_i_6 
       (.I0(p_1_in249_in),
        .I1(p_2_in),
        .O(p_307_in));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \crc_reg[12]_i_7 
       (.I0(p_5_in),
        .I1(p_1_in),
        .I2(p_6_in),
        .I3(p_3_in),
        .I4(\crc_reg_reg_n_0_[24] ),
        .O(\crc_reg[12]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[12]_i_8 
       (.I0(\crc_reg[9]_i_9_n_0 ),
        .I1(p_13_in59_in),
        .I2(p_37_in50_in),
        .I3(p_15_in61_in),
        .I4(p_0_in49_in),
        .I5(\crc_reg[12]_i_7_n_0 ),
        .O(\crc_reg[12]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[12]_i_9 
       (.I0(p_2_in286_in),
        .I1(p_30_in),
        .I2(p_13_in295_in),
        .I3(p_11_in293_in),
        .I4(p_0_in284_in),
        .I5(\crc_reg[12]_i_7_n_0 ),
        .O(\crc_reg[12]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEEE)) 
    \crc_reg[13]_i_1 
       (.I0(\crc_reg[31]_i_3_n_0 ),
        .I1(\crc_reg[13]_i_2_n_0 ),
        .I2(\crc_reg[31]_i_5_n_0 ),
        .I3(p_1_in250_in),
        .I4(\crc_reg[13]_i_3_n_0 ),
        .I5(\crc_reg[13]_i_4_n_0 ),
        .O(\crc_reg[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \crc_reg[13]_i_10 
       (.I0(p_0_in284_in),
        .I1(p_2_in286_in),
        .I2(p_9_in291_in),
        .I3(\reg_client_dat_reg_n_0_[0] ),
        .I4(\crc_reg[13]_i_8_n_0 ),
        .O(\crc_reg[13]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \crc_reg[13]_i_11 
       (.I0(p_7_in120_in),
        .I1(p_4_in117_in),
        .I2(\reg_client_dat_reg_n_0_[16] ),
        .I3(p_0_in113_in),
        .O(\crc_reg[13]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hF2FFFFF8F2F2F8F8)) 
    \crc_reg[13]_i_2 
       (.I0(\crc_reg[26]_i_2_n_0 ),
        .I1(\crc_reg[13]_i_5_n_0 ),
        .I2(\crc_reg[13]_i_6_n_0 ),
        .I3(p_309_in),
        .I4(\crc_reg[13]_i_8_n_0 ),
        .I5(\crc_reg[31]_i_8_n_0 ),
        .O(\crc_reg[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[13]_i_3 
       (.I0(\crc_reg[27]_i_4_n_0 ),
        .I1(\crc_reg[13]_i_9_n_0 ),
        .I2(\crc_reg[17]_i_9_n_0 ),
        .I3(\crc_reg[13]_i_8_n_0 ),
        .I4(p_11_in57_in),
        .I5(p_309_in),
        .O(\crc_reg[13]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[13]_i_4 
       (.I0(\cnt[3]_i_9_n_0 ),
        .I1(\crc_reg[13]_i_10_n_0 ),
        .I2(p_1_in),
        .I3(p_1_in250_in),
        .I4(p_5_in289_in),
        .I5(p_13_in295_in),
        .O(\crc_reg[13]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[13]_i_5 
       (.I0(p_1_in250_in),
        .I1(p_1_in),
        .I2(p_11_in187_in),
        .I3(p_0_in178_in),
        .I4(p_15_in191_in),
        .I5(\crc_reg[24]_i_5_n_0 ),
        .O(\crc_reg[13]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[13]_i_6 
       (.I0(\crc_reg[14]_i_3_n_0 ),
        .I1(\crc_reg[13]_i_11_n_0 ),
        .I2(\crc_reg[13]_i_8_n_0 ),
        .I3(p_309_in),
        .I4(p_15_in126_in),
        .I5(p_11_in122_in),
        .O(\crc_reg[13]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[13]_i_7 
       (.I0(p_1_in250_in),
        .I1(p_1_in),
        .O(p_309_in));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \crc_reg[13]_i_8 
       (.I0(p_2_in),
        .I1(p_5_in),
        .I2(p_4_in),
        .I3(p_6_in),
        .I4(p_0_in2_in),
        .O(\crc_reg[13]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[13]_i_9 
       (.I0(p_7_in),
        .I1(\reg_client_dat_reg_n_0_[24] ),
        .O(\crc_reg[13]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEEE)) 
    \crc_reg[14]_i_1 
       (.I0(\crc_reg[31]_i_3_n_0 ),
        .I1(\crc_reg[14]_i_2_n_0 ),
        .I2(\crc_reg[14]_i_3_n_0 ),
        .I3(func_crc32_d81_return0143_out),
        .I4(\crc_reg[14]_i_5_n_0 ),
        .I5(\crc_reg[14]_i_6_n_0 ),
        .O(\crc_reg[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[14]_i_10 
       (.I0(p_1_in),
        .I1(\reg_client_dat_reg_n_0_[16] ),
        .O(\crc_reg[14]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[14]_i_11 
       (.I0(p_7_in120_in),
        .I1(p_0_in113_in),
        .O(\crc_reg[14]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[14]_i_12 
       (.I0(\cnt[3]_i_9_n_0 ),
        .I1(\crc_reg[14]_i_14_n_0 ),
        .I2(\crc_reg[14]_i_7_n_0 ),
        .I3(p_0_in284_in),
        .I4(p_1_in),
        .I5(p_11_in293_in),
        .O(\crc_reg[14]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[14]_i_13 
       (.I0(p_0_in49_in),
        .I1(p_7_in),
        .I2(p_13_in59_in),
        .I3(p_11_in57_in),
        .I4(\crc_reg[14]_i_7_n_0 ),
        .I5(\crc_reg[14]_i_15_n_0 ),
        .O(\crc_reg[14]_i_13_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \crc_reg[14]_i_14 
       (.I0(p_5_in289_in),
        .I1(p_1_in252_in),
        .I2(p_0_in2_in),
        .I3(\reg_client_dat_reg_n_0_[0] ),
        .I4(p_9_in291_in),
        .O(\crc_reg[14]_i_14_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[14]_i_15 
       (.I0(\reg_client_dat_reg_n_0_[24] ),
        .I1(p_1_in),
        .O(\crc_reg[14]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'h28828228)) 
    \crc_reg[14]_i_2 
       (.I0(\crc_reg[26]_i_2_n_0 ),
        .I1(p_1_in),
        .I2(\reg_client_dat_reg_n_0_[8] ),
        .I3(\crc_reg[14]_i_7_n_0 ),
        .I4(\crc_reg[14]_i_8_n_0 ),
        .O(\crc_reg[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \crc_reg[14]_i_3 
       (.I0(state[0]),
        .I1(state[3]),
        .I2(state[1]),
        .O(\crc_reg[14]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[14]_i_4 
       (.I0(p_311_in),
        .I1(\crc_reg[14]_i_10_n_0 ),
        .I2(\crc_reg[14]_i_7_n_0 ),
        .I3(p_11_in122_in),
        .I4(p_13_in124_in),
        .I5(\crc_reg[14]_i_11_n_0 ),
        .O(func_crc32_d81_return0143_out));
  LUT6 #(
    .INIT(64'h0880800880080880)) 
    \crc_reg[14]_i_5 
       (.I0(state[3]),
        .I1(state[2]),
        .I2(\crc_reg[14]_i_7_n_0 ),
        .I3(p_0_in2_in),
        .I4(p_1_in252_in),
        .I5(p_1_in),
        .O(\crc_reg[14]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFAEEAEAAEAEEA)) 
    \crc_reg[14]_i_6 
       (.I0(\crc_reg[14]_i_12_n_0 ),
        .I1(\crc_reg[27]_i_4_n_0 ),
        .I2(\crc_reg[14]_i_13_n_0 ),
        .I3(p_0_in2_in),
        .I4(p_1_in252_in),
        .I5(\crc_reg[31]_i_5_n_0 ),
        .O(\crc_reg[14]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \crc_reg[14]_i_7 
       (.I0(p_5_in),
        .I1(p_4_in),
        .I2(p_3_in),
        .O(\crc_reg[14]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[14]_i_8 
       (.I0(p_11_in187_in),
        .I1(p_13_in189_in),
        .I2(p_1_in252_in),
        .I3(p_0_in2_in),
        .I4(p_0_in178_in),
        .I5(p_7_in185_in),
        .O(\crc_reg[14]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[14]_i_9 
       (.I0(p_1_in252_in),
        .I1(p_0_in2_in),
        .O(p_311_in));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEEE)) 
    \crc_reg[15]_i_1 
       (.I0(\crc_reg[31]_i_3_n_0 ),
        .I1(\crc_reg[15]_i_2_n_0 ),
        .I2(\crc_reg[31]_i_5_n_0 ),
        .I3(p_1_in253_in),
        .I4(\crc_reg[15]_i_3_n_0 ),
        .I5(\crc_reg[15]_i_4_n_0 ),
        .O(\crc_reg[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[15]_i_10 
       (.I0(p_13_in124_in),
        .I1(p_11_in122_in),
        .O(\crc_reg[15]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFFFF8F8F2F2F8)) 
    \crc_reg[15]_i_2 
       (.I0(\crc_reg[26]_i_2_n_0 ),
        .I1(\crc_reg[15]_i_5_n_0 ),
        .I2(\crc_reg[15]_i_6_n_0 ),
        .I3(p_313_in),
        .I4(\crc_reg[15]_i_8_n_0 ),
        .I5(\crc_reg[31]_i_8_n_0 ),
        .O(\crc_reg[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[15]_i_3 
       (.I0(\crc_reg[27]_i_4_n_0 ),
        .I1(\crc_reg[15]_i_9_n_0 ),
        .I2(\crc_reg[15]_i_8_n_0 ),
        .I3(\reg_client_dat_reg_n_0_[24] ),
        .I4(p_15_in61_in),
        .I5(p_313_in),
        .O(\crc_reg[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[15]_i_4 
       (.I0(\cnt[3]_i_9_n_0 ),
        .I1(p_9_in291_in),
        .I2(\crc_reg[27]_i_10_n_0 ),
        .I3(\crc_reg[15]_i_8_n_0 ),
        .I4(\reg_client_dat_reg_n_0_[0] ),
        .I5(p_313_in),
        .O(\crc_reg[15]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \crc_reg[15]_i_5 
       (.I0(p_11_in187_in),
        .I1(p_13_in189_in),
        .I2(p_15_in191_in),
        .I3(\reg_client_dat_reg_n_0_[8] ),
        .O(\crc_reg[15]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[15]_i_6 
       (.I0(\crc_reg[14]_i_3_n_0 ),
        .I1(\crc_reg[15]_i_10_n_0 ),
        .I2(\crc_reg[15]_i_8_n_0 ),
        .I3(\reg_client_dat_reg_n_0_[16] ),
        .I4(p_15_in126_in),
        .I5(p_313_in),
        .O(\crc_reg[15]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[15]_i_7 
       (.I0(p_1_in253_in),
        .I1(p_0_in2_in),
        .O(p_313_in));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \crc_reg[15]_i_8 
       (.I0(p_2_in),
        .I1(p_4_in),
        .I2(p_3_in),
        .O(\crc_reg[15]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[15]_i_9 
       (.I0(p_13_in59_in),
        .I1(p_11_in57_in),
        .O(\crc_reg[15]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEEE)) 
    \crc_reg[16]_i_1 
       (.I0(\crc_reg[31]_i_3_n_0 ),
        .I1(\crc_reg[16]_i_2_n_0 ),
        .I2(\crc_reg[31]_i_5_n_0 ),
        .I3(p_1_in255_in),
        .I4(\crc_reg[16]_i_3_n_0 ),
        .I5(\crc_reg[16]_i_4_n_0 ),
        .O(\crc_reg[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAEFFFFEAAEEAAEEA)) 
    \crc_reg[16]_i_2 
       (.I0(\crc_reg[16]_i_5_n_0 ),
        .I1(\crc_reg[14]_i_3_n_0 ),
        .I2(\crc_reg[16]_i_6_n_0 ),
        .I3(p_315_in),
        .I4(\crc_reg[16]_i_8_n_0 ),
        .I5(\crc_reg[31]_i_8_n_0 ),
        .O(\crc_reg[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[16]_i_3 
       (.I0(\crc_reg[27]_i_4_n_0 ),
        .I1(p_15_in61_in),
        .I2(p_37_in50_in),
        .I3(p_13_in59_in),
        .I4(\crc_reg[16]_i_8_n_0 ),
        .I5(p_315_in),
        .O(\crc_reg[16]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[16]_i_4 
       (.I0(\cnt[3]_i_9_n_0 ),
        .I1(p_30_in),
        .I2(\crc_reg[27]_i_10_n_0 ),
        .I3(\crc_reg[16]_i_8_n_0 ),
        .I4(p_1_in255_in),
        .I5(p_2_in),
        .O(\crc_reg[16]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[16]_i_5 
       (.I0(\crc_reg[26]_i_2_n_0 ),
        .I1(p_37_in179_in),
        .I2(p_13_in189_in),
        .I3(\crc_reg[16]_i_8_n_0 ),
        .I4(p_315_in),
        .I5(p_15_in191_in),
        .O(\crc_reg[16]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \crc_reg[16]_i_6 
       (.I0(p_37_in114_in),
        .I1(p_15_in126_in),
        .I2(p_13_in124_in),
        .I3(\crc_reg_reg_n_0_[24] ),
        .I4(p_3_in),
        .O(\crc_reg[16]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[16]_i_7 
       (.I0(p_2_in),
        .I1(p_1_in255_in),
        .O(p_315_in));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[16]_i_8 
       (.I0(\crc_reg_reg_n_0_[24] ),
        .I1(p_3_in),
        .O(\crc_reg[16]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEEE)) 
    \crc_reg[17]_i_1 
       (.I0(\crc_reg[31]_i_3_n_0 ),
        .I1(\crc_reg[17]_i_2_n_0 ),
        .I2(\crc_reg[31]_i_5_n_0 ),
        .I3(p_1_in256_in),
        .I4(\crc_reg[17]_i_3_n_0 ),
        .I5(\crc_reg[17]_i_4_n_0 ),
        .O(\crc_reg[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEAFFFFEAEAEAEAEA)) 
    \crc_reg[17]_i_2 
       (.I0(\crc_reg[17]_i_5_n_0 ),
        .I1(\crc_reg[14]_i_3_n_0 ),
        .I2(func_crc32_d81_return[17]),
        .I3(p_317_in),
        .I4(\crc_reg[17]_i_8_n_0 ),
        .I5(\crc_reg[31]_i_8_n_0 ),
        .O(\crc_reg[17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[17]_i_3 
       (.I0(\crc_reg[27]_i_4_n_0 ),
        .I1(\crc_reg[17]_i_9_n_0 ),
        .I2(p_2_in),
        .I3(p_6_in),
        .I4(p_1_in256_in),
        .I5(p_1_in),
        .O(\crc_reg[17]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[17]_i_4 
       (.I0(\cnt[3]_i_9_n_0 ),
        .I1(p_2_in286_in),
        .I2(p_0_in284_in),
        .I3(\crc_reg[17]_i_8_n_0 ),
        .I4(p_13_in295_in),
        .I5(p_317_in),
        .O(\crc_reg[17]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[17]_i_5 
       (.I0(\crc_reg[26]_i_2_n_0 ),
        .I1(p_4_in182_in),
        .I2(p_317_in),
        .I3(\crc_reg[17]_i_8_n_0 ),
        .I4(p_0_in178_in),
        .I5(p_15_in191_in),
        .O(\crc_reg[17]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[17]_i_6 
       (.I0(p_15_in126_in),
        .I1(p_1_in256_in),
        .I2(p_1_in),
        .I3(\crc_reg[17]_i_8_n_0 ),
        .I4(p_4_in117_in),
        .I5(p_0_in113_in),
        .O(func_crc32_d81_return[17]));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[17]_i_7 
       (.I0(p_1_in),
        .I1(p_1_in256_in),
        .O(p_317_in));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[17]_i_8 
       (.I0(p_6_in),
        .I1(p_2_in),
        .O(\crc_reg[17]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \crc_reg[17]_i_9 
       (.I0(p_0_in49_in),
        .I1(p_4_in53_in),
        .I2(p_15_in61_in),
        .O(\crc_reg[17]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEEE)) 
    \crc_reg[18]_i_1 
       (.I0(\crc_reg[31]_i_3_n_0 ),
        .I1(\crc_reg[18]_i_2_n_0 ),
        .I2(\crc_reg[31]_i_5_n_0 ),
        .I3(p_1_in258_in),
        .I4(\crc_reg[18]_i_3_n_0 ),
        .I5(\crc_reg[18]_i_4_n_0 ),
        .O(\crc_reg[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEAFFFFEAEAEAEAEA)) 
    \crc_reg[18]_i_2 
       (.I0(\crc_reg[18]_i_5_n_0 ),
        .I1(\crc_reg[14]_i_3_n_0 ),
        .I2(func_crc32_d81_return[18]),
        .I3(p_319_in),
        .I4(\crc_reg[18]_i_8_n_0 ),
        .I5(\crc_reg[31]_i_8_n_0 ),
        .O(\crc_reg[18]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[18]_i_3 
       (.I0(\crc_reg[27]_i_4_n_0 ),
        .I1(\reg_client_dat_reg_n_0_[24] ),
        .I2(p_7_in),
        .I3(\crc_reg[18]_i_8_n_0 ),
        .I4(p_319_in),
        .I5(p_0_in49_in),
        .O(\crc_reg[18]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[18]_i_4 
       (.I0(\cnt[3]_i_9_n_0 ),
        .I1(p_0_in284_in),
        .I2(\reg_client_dat_reg_n_0_[0] ),
        .I3(\crc_reg[18]_i_8_n_0 ),
        .I4(p_319_in),
        .I5(p_5_in289_in),
        .O(\crc_reg[18]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[18]_i_5 
       (.I0(\crc_reg[26]_i_2_n_0 ),
        .I1(\reg_client_dat_reg_n_0_[8] ),
        .I2(p_0_in178_in),
        .I3(\crc_reg[18]_i_8_n_0 ),
        .I4(p_319_in),
        .I5(p_7_in185_in),
        .O(\crc_reg[18]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[18]_i_6 
       (.I0(p_7_in120_in),
        .I1(p_1_in258_in),
        .I2(p_0_in2_in),
        .I3(\crc_reg[18]_i_8_n_0 ),
        .I4(p_0_in113_in),
        .I5(\reg_client_dat_reg_n_0_[16] ),
        .O(func_crc32_d81_return[18]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[18]_i_7 
       (.I0(p_0_in2_in),
        .I1(p_1_in258_in),
        .O(p_319_in));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[18]_i_8 
       (.I0(p_5_in),
        .I1(p_1_in),
        .O(\crc_reg[18]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEEE)) 
    \crc_reg[19]_i_1 
       (.I0(\crc_reg[31]_i_3_n_0 ),
        .I1(\crc_reg[19]_i_2_n_0 ),
        .I2(\crc_reg[31]_i_5_n_0 ),
        .I3(p_1_in260_in),
        .I4(\crc_reg[19]_i_3_n_0 ),
        .I5(\crc_reg[19]_i_4_n_0 ),
        .O(\crc_reg[19]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFAEEAEAAEAEEA)) 
    \crc_reg[19]_i_2 
       (.I0(\crc_reg[19]_i_5_n_0 ),
        .I1(\crc_reg[14]_i_3_n_0 ),
        .I2(p_11_in122_in),
        .I3(\reg_client_dat_reg_n_0_[16] ),
        .I4(\crc_reg[19]_i_6_n_0 ),
        .I5(\crc_reg[31]_i_8_n_0 ),
        .O(\crc_reg[19]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[19]_i_3 
       (.I0(\crc_reg[27]_i_4_n_0 ),
        .I1(p_11_in57_in),
        .I2(\reg_client_dat_reg_n_0_[24] ),
        .I3(p_0_in2_in),
        .I4(p_1_in260_in),
        .I5(p_4_in),
        .O(\crc_reg[19]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[19]_i_4 
       (.I0(\cnt[3]_i_9_n_0 ),
        .I1(\reg_client_dat_reg_n_0_[0] ),
        .I2(p_0_in2_in),
        .I3(p_1_in260_in),
        .I4(p_4_in),
        .I5(p_9_in291_in),
        .O(\crc_reg[19]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[19]_i_5 
       (.I0(\crc_reg[26]_i_2_n_0 ),
        .I1(p_11_in187_in),
        .I2(\reg_client_dat_reg_n_0_[8] ),
        .I3(p_0_in2_in),
        .I4(p_1_in260_in),
        .I5(p_4_in),
        .O(\crc_reg[19]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \crc_reg[19]_i_6 
       (.I0(p_0_in2_in),
        .I1(p_1_in260_in),
        .I2(p_4_in),
        .O(\crc_reg[19]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFEEFEFFEEEEEEEEE)) 
    \crc_reg[1]_i_1 
       (.I0(\crc_reg[1]_i_2_n_0 ),
        .I1(\crc_reg[7]_i_4_n_0 ),
        .I2(\crc_reg[1]_i_3_n_0 ),
        .I3(p_6_in),
        .I4(p_0_in2_in),
        .I5(state[3]),
        .O(\crc_reg[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF11F1F444)) 
    \crc_reg[1]_i_2 
       (.I0(state[2]),
        .I1(\crc_reg[1]_i_4_n_0 ),
        .I2(\crc_reg[14]_i_3_n_0 ),
        .I3(\crc_reg[1]_i_5_n_0 ),
        .I4(\crc_reg[24]_i_8_n_0 ),
        .I5(\crc_reg[1]_i_6_n_0 ),
        .O(\crc_reg[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[1]_i_3 
       (.I0(\crc_reg_reg_n_0_[24] ),
        .I1(p_1_in),
        .O(\crc_reg[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[1]_i_4 
       (.I0(p_1_in),
        .I1(\reg_client_dat_reg_n_0_[0] ),
        .I2(p_30_in),
        .I3(p_2_in286_in),
        .I4(p_0_in284_in),
        .I5(\crc_reg_reg_n_0_[24] ),
        .O(\crc_reg[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[1]_i_5 
       (.I0(p_1_in),
        .I1(\reg_client_dat_reg_n_0_[16] ),
        .I2(p_37_in114_in),
        .I3(p_4_in117_in),
        .I4(p_0_in113_in),
        .I5(\crc_reg_reg_n_0_[24] ),
        .O(\crc_reg[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hF84F4FF848484848)) 
    \crc_reg[1]_i_6 
       (.I0(\crc_reg[1]_i_7_n_0 ),
        .I1(\crc_reg[26]_i_2_n_0 ),
        .I2(\crc_reg[24]_i_8_n_0 ),
        .I3(\crc_reg[23]_i_8_n_0 ),
        .I4(\crc_reg[14]_i_15_n_0 ),
        .I5(\cnt[3]_i_10_n_0 ),
        .O(\crc_reg[1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[1]_i_7 
       (.I0(p_1_in),
        .I1(\reg_client_dat_reg_n_0_[8] ),
        .I2(p_37_in179_in),
        .I3(p_4_in182_in),
        .I4(p_0_in178_in),
        .I5(\crc_reg_reg_n_0_[24] ),
        .O(\crc_reg[1]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFEEE)) 
    \crc_reg[20]_i_1 
       (.I0(\crc_reg[31]_i_3_n_0 ),
        .I1(\crc_reg[20]_i_2_n_0 ),
        .I2(\crc_reg[31]_i_5_n_0 ),
        .I3(p_1_in261_in),
        .I4(\crc_reg[20]_i_3_n_0 ),
        .O(\crc_reg[20]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF88822F2F888)) 
    \crc_reg[20]_i_2 
       (.I0(\crc_reg[26]_i_2_n_0 ),
        .I1(p_13_in189_in),
        .I2(\crc_reg[14]_i_3_n_0 ),
        .I3(p_13_in124_in),
        .I4(p_323_in),
        .I5(\crc_reg[31]_i_8_n_0 ),
        .O(\crc_reg[20]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF44F8FF884488448)) 
    \crc_reg[20]_i_3 
       (.I0(p_13_in59_in),
        .I1(\crc_reg[27]_i_4_n_0 ),
        .I2(p_3_in),
        .I3(p_1_in261_in),
        .I4(p_11_in293_in),
        .I5(\cnt[3]_i_9_n_0 ),
        .O(\crc_reg[20]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[20]_i_4 
       (.I0(p_3_in),
        .I1(p_1_in261_in),
        .O(p_323_in));
  LUT5 #(
    .INIT(32'hFFFFFEEE)) 
    \crc_reg[21]_i_1 
       (.I0(\crc_reg[31]_i_3_n_0 ),
        .I1(\crc_reg[21]_i_2_n_0 ),
        .I2(\crc_reg[31]_i_5_n_0 ),
        .I3(p_1_in262_in),
        .I4(\crc_reg[21]_i_3_n_0 ),
        .O(\crc_reg[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF88822F2F888)) 
    \crc_reg[21]_i_2 
       (.I0(\crc_reg[26]_i_2_n_0 ),
        .I1(p_15_in191_in),
        .I2(\crc_reg[14]_i_3_n_0 ),
        .I3(p_15_in126_in),
        .I4(p_325_in),
        .I5(\crc_reg[31]_i_8_n_0 ),
        .O(\crc_reg[21]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF44F8FF884488448)) 
    \crc_reg[21]_i_3 
       (.I0(p_15_in61_in),
        .I1(\crc_reg[27]_i_4_n_0 ),
        .I2(p_2_in),
        .I3(p_1_in262_in),
        .I4(p_13_in295_in),
        .I5(\cnt[3]_i_9_n_0 ),
        .O(\crc_reg[21]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[21]_i_4 
       (.I0(p_1_in262_in),
        .I1(p_2_in),
        .O(p_325_in));
  LUT5 #(
    .INIT(32'hFFFFFEEE)) 
    \crc_reg[22]_i_1 
       (.I0(\crc_reg[31]_i_3_n_0 ),
        .I1(\crc_reg[22]_i_2_n_0 ),
        .I2(\crc_reg[31]_i_5_n_0 ),
        .I3(p_1_in264_in),
        .I4(\crc_reg[22]_i_3_n_0 ),
        .O(\crc_reg[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF88822F2F888)) 
    \crc_reg[22]_i_2 
       (.I0(\crc_reg[26]_i_2_n_0 ),
        .I1(p_37_in179_in),
        .I2(\crc_reg[14]_i_3_n_0 ),
        .I3(p_37_in114_in),
        .I4(p_327_in),
        .I5(\crc_reg[31]_i_8_n_0 ),
        .O(\crc_reg[22]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF44F8FF884488448)) 
    \crc_reg[22]_i_3 
       (.I0(p_37_in50_in),
        .I1(\crc_reg[27]_i_4_n_0 ),
        .I2(\crc_reg_reg_n_0_[24] ),
        .I3(p_1_in264_in),
        .I4(p_30_in),
        .I5(\cnt[3]_i_9_n_0 ),
        .O(\crc_reg[22]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[22]_i_4 
       (.I0(\crc_reg_reg_n_0_[24] ),
        .I1(p_1_in264_in),
        .O(p_327_in));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \crc_reg[23]_i_1 
       (.I0(\crc_reg[31]_i_3_n_0 ),
        .I1(\crc_reg[23]_i_2_n_0 ),
        .I2(\crc_reg[23]_i_3_n_0 ),
        .I3(\crc_reg[31]_i_5_n_0 ),
        .I4(p_1_in266_in),
        .I5(\crc_reg[23]_i_4_n_0 ),
        .O(\crc_reg[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000660000003C)) 
    \crc_reg[23]_i_2 
       (.I0(\crc_reg[23]_i_5_n_0 ),
        .I1(\crc_reg[23]_i_6_n_0 ),
        .I2(\crc_reg[23]_i_7_n_0 ),
        .I3(state[3]),
        .I4(state[1]),
        .I5(state[0]),
        .O(\crc_reg[23]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0880800880080880)) 
    \crc_reg[23]_i_3 
       (.I0(state[3]),
        .I1(state[2]),
        .I2(p_1_in),
        .I3(\crc_reg_reg_n_0_[24] ),
        .I4(p_1_in266_in),
        .I5(p_6_in),
        .O(\crc_reg[23]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h4848484848484FF8)) 
    \crc_reg[23]_i_4 
       (.I0(\crc_reg[23]_i_8_n_0 ),
        .I1(\crc_reg[27]_i_4_n_0 ),
        .I2(\crc_reg[23]_i_6_n_0 ),
        .I3(\crc_reg[23]_i_9_n_0 ),
        .I4(state[2]),
        .I5(state[3]),
        .O(\crc_reg[23]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \crc_reg[23]_i_5 
       (.I0(\crc_reg_reg_n_0_[24] ),
        .I1(p_0_in113_in),
        .I2(p_4_in117_in),
        .I3(p_37_in114_in),
        .O(\crc_reg[23]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \crc_reg[23]_i_6 
       (.I0(p_6_in),
        .I1(p_1_in266_in),
        .I2(p_1_in),
        .O(\crc_reg[23]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \crc_reg[23]_i_7 
       (.I0(\crc_reg_reg_n_0_[24] ),
        .I1(p_0_in178_in),
        .I2(p_4_in182_in),
        .I3(p_37_in179_in),
        .O(\crc_reg[23]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \crc_reg[23]_i_8 
       (.I0(\crc_reg_reg_n_0_[24] ),
        .I1(p_0_in49_in),
        .I2(p_4_in53_in),
        .I3(p_37_in50_in),
        .O(\crc_reg[23]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \crc_reg[23]_i_9 
       (.I0(\crc_reg_reg_n_0_[24] ),
        .I1(p_0_in284_in),
        .I2(p_2_in286_in),
        .I3(p_30_in),
        .O(\crc_reg[23]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEEE)) 
    \crc_reg[24]_i_1 
       (.I0(\crc_reg[31]_i_3_n_0 ),
        .I1(\crc_reg[24]_i_2_n_0 ),
        .I2(\crc_reg[31]_i_5_n_0 ),
        .I3(p_1_in268_in),
        .I4(\crc_reg[24]_i_3_n_0 ),
        .I5(\crc_reg[24]_i_4_n_0 ),
        .O(\crc_reg[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8FFFFF8F8F2F2F8)) 
    \crc_reg[24]_i_2 
       (.I0(\crc_reg[26]_i_2_n_0 ),
        .I1(\crc_reg[24]_i_5_n_0 ),
        .I2(\crc_reg[24]_i_6_n_0 ),
        .I3(p_331_in),
        .I4(\crc_reg[24]_i_8_n_0 ),
        .I5(\crc_reg[31]_i_8_n_0 ),
        .O(\crc_reg[24]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[24]_i_3 
       (.I0(\crc_reg[27]_i_4_n_0 ),
        .I1(\reg_client_dat_reg_n_0_[24] ),
        .I2(p_7_in),
        .I3(\crc_reg[24]_i_8_n_0 ),
        .I4(p_331_in),
        .I5(p_4_in53_in),
        .O(\crc_reg[24]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[24]_i_4 
       (.I0(\cnt[3]_i_9_n_0 ),
        .I1(p_2_in286_in),
        .I2(\reg_client_dat_reg_n_0_[0] ),
        .I3(\crc_reg[24]_i_8_n_0 ),
        .I4(p_331_in),
        .I5(p_5_in289_in),
        .O(\crc_reg[24]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \crc_reg[24]_i_5 
       (.I0(p_4_in182_in),
        .I1(p_7_in185_in),
        .I2(\reg_client_dat_reg_n_0_[8] ),
        .O(\crc_reg[24]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[24]_i_6 
       (.I0(\crc_reg[14]_i_3_n_0 ),
        .I1(\reg_client_dat_reg_n_0_[16] ),
        .I2(p_7_in120_in),
        .I3(\crc_reg[24]_i_8_n_0 ),
        .I4(p_331_in),
        .I5(p_4_in117_in),
        .O(\crc_reg[24]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[24]_i_7 
       (.I0(p_5_in),
        .I1(p_1_in268_in),
        .O(p_331_in));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[24]_i_8 
       (.I0(p_6_in),
        .I1(p_0_in2_in),
        .O(\crc_reg[24]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEEE)) 
    \crc_reg[25]_i_1 
       (.I0(\crc_reg[31]_i_3_n_0 ),
        .I1(\crc_reg[25]_i_2_n_0 ),
        .I2(\crc_reg[31]_i_5_n_0 ),
        .I3(p_1_in270_in),
        .I4(\crc_reg[25]_i_3_n_0 ),
        .I5(\crc_reg[25]_i_4_n_0 ),
        .O(\crc_reg[25]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFAEEAEAAEAEEA)) 
    \crc_reg[25]_i_2 
       (.I0(\crc_reg[25]_i_5_n_0 ),
        .I1(\crc_reg[14]_i_3_n_0 ),
        .I2(p_11_in122_in),
        .I3(p_7_in120_in),
        .I4(\crc_reg[25]_i_6_n_0 ),
        .I5(\crc_reg[31]_i_8_n_0 ),
        .O(\crc_reg[25]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[25]_i_3 
       (.I0(\crc_reg[27]_i_4_n_0 ),
        .I1(p_7_in),
        .I2(p_11_in57_in),
        .I3(p_4_in),
        .I4(p_1_in270_in),
        .I5(p_5_in),
        .O(\crc_reg[25]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[25]_i_4 
       (.I0(\cnt[3]_i_9_n_0 ),
        .I1(p_9_in291_in),
        .I2(p_4_in),
        .I3(p_1_in270_in),
        .I4(p_5_in),
        .I5(p_5_in289_in),
        .O(\crc_reg[25]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[25]_i_5 
       (.I0(\crc_reg[26]_i_2_n_0 ),
        .I1(p_11_in187_in),
        .I2(p_7_in185_in),
        .I3(p_4_in),
        .I4(p_1_in270_in),
        .I5(p_5_in),
        .O(\crc_reg[25]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \crc_reg[25]_i_6 
       (.I0(p_4_in),
        .I1(p_1_in270_in),
        .I2(p_5_in),
        .O(\crc_reg[25]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFEA)) 
    \crc_reg[26]_i_1 
       (.I0(\crc_reg[31]_i_3_n_0 ),
        .I1(\crc_reg[26]_i_2_n_0 ),
        .I2(func_crc32_d80_return),
        .I3(\crc_reg[26]_i_4_n_0 ),
        .I4(\crc_reg[26]_i_5_n_0 ),
        .I5(\crc_reg[26]_i_6_n_0 ),
        .O(\crc_reg[26]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[26]_i_10 
       (.I0(\crc_reg[26]_i_12_n_0 ),
        .I1(p_3_in),
        .I2(p_1_in272_in),
        .I3(\crc_reg[1]_i_3_n_0 ),
        .I4(p_30_in),
        .I5(p_4_in),
        .O(func_crc32_d8_return[26]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[26]_i_11 
       (.I0(\crc_reg[10]_i_9_n_0 ),
        .I1(p_335_in),
        .I2(p_13_in59_in),
        .I3(\crc_reg[1]_i_3_n_0 ),
        .I4(p_0_in49_in),
        .I5(p_4_in),
        .O(func_crc32_d82_return[26]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \crc_reg[26]_i_12 
       (.I0(p_9_in291_in),
        .I1(p_0_in284_in),
        .I2(p_11_in293_in),
        .O(\crc_reg[26]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \crc_reg[26]_i_2 
       (.I0(state[3]),
        .I1(state[1]),
        .I2(state[0]),
        .O(\crc_reg[26]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[26]_i_3 
       (.I0(\crc_reg[26]_i_7_n_0 ),
        .I1(p_37_in179_in),
        .I2(p_335_in),
        .I3(\crc_reg[1]_i_3_n_0 ),
        .I4(p_0_in178_in),
        .I5(p_4_in),
        .O(func_crc32_d80_return));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[26]_i_4 
       (.I0(\crc_reg[14]_i_3_n_0 ),
        .I1(p_4_in),
        .I2(p_0_in113_in),
        .I3(\crc_reg_reg_n_0_[24] ),
        .I4(p_1_in),
        .I5(\crc_reg[26]_i_9_n_0 ),
        .O(\crc_reg[26]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[26]_i_5 
       (.I0(\crc_reg[31]_i_8_n_0 ),
        .I1(p_1_in),
        .I2(\crc_reg_reg_n_0_[24] ),
        .I3(p_1_in272_in),
        .I4(p_3_in),
        .I5(p_4_in),
        .O(\crc_reg[26]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \crc_reg[26]_i_6 
       (.I0(\cnt[3]_i_9_n_0 ),
        .I1(func_crc32_d8_return[26]),
        .I2(\crc_reg[27]_i_4_n_0 ),
        .I3(func_crc32_d82_return[26]),
        .I4(p_1_in272_in),
        .I5(\crc_reg[31]_i_5_n_0 ),
        .O(\crc_reg[26]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[26]_i_7 
       (.I0(p_11_in187_in),
        .I1(p_13_in189_in),
        .O(\crc_reg[26]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[26]_i_8 
       (.I0(p_3_in),
        .I1(p_1_in272_in),
        .O(p_335_in));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \crc_reg[26]_i_9 
       (.I0(p_13_in124_in),
        .I1(p_3_in),
        .I2(p_1_in272_in),
        .I3(p_37_in114_in),
        .I4(p_11_in122_in),
        .O(\crc_reg[26]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEAEAEA)) 
    \crc_reg[27]_i_1 
       (.I0(\crc_reg[27]_i_2_n_0 ),
        .I1(\crc_reg[31]_i_5_n_0 ),
        .I2(p_1_in274_in),
        .I3(func_crc32_d82_return[27]),
        .I4(\crc_reg[27]_i_4_n_0 ),
        .I5(\crc_reg[27]_i_5_n_0 ),
        .O(\crc_reg[27]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[27]_i_10 
       (.I0(p_11_in293_in),
        .I1(p_13_in295_in),
        .O(\crc_reg[27]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[27]_i_11 
       (.I0(p_15_in126_in),
        .I1(p_4_in117_in),
        .O(\crc_reg[27]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[27]_i_12 
       (.I0(p_4_in182_in),
        .I1(p_13_in189_in),
        .O(\crc_reg[27]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF28)) 
    \crc_reg[27]_i_2 
       (.I0(\crc_reg[31]_i_8_n_0 ),
        .I1(\crc_reg[27]_i_6_n_0 ),
        .I2(p_337_in),
        .I3(\crc_reg[27]_i_8_n_0 ),
        .I4(\crc_reg[27]_i_9_n_0 ),
        .I5(\crc_reg[31]_i_3_n_0 ),
        .O(\crc_reg[27]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[27]_i_3 
       (.I0(p_337_in),
        .I1(p_13_in59_in),
        .I2(\reg_client_dat_reg_n_0_[24] ),
        .I3(\crc_reg[27]_i_6_n_0 ),
        .I4(p_15_in61_in),
        .I5(p_4_in53_in),
        .O(func_crc32_d82_return[27]));
  LUT4 #(
    .INIT(16'h0400)) 
    \crc_reg[27]_i_4 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[3]),
        .I3(state[2]),
        .O(\crc_reg[27]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[27]_i_5 
       (.I0(\cnt[3]_i_9_n_0 ),
        .I1(p_2_in286_in),
        .I2(\reg_client_dat_reg_n_0_[0] ),
        .I3(\crc_reg[27]_i_6_n_0 ),
        .I4(p_337_in),
        .I5(\crc_reg[27]_i_10_n_0 ),
        .O(\crc_reg[27]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \crc_reg[27]_i_6 
       (.I0(p_6_in),
        .I1(p_3_in),
        .I2(p_0_in2_in),
        .O(\crc_reg[27]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[27]_i_7 
       (.I0(p_1_in274_in),
        .I1(p_2_in),
        .O(p_337_in));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[27]_i_8 
       (.I0(\crc_reg[14]_i_3_n_0 ),
        .I1(\crc_reg[27]_i_11_n_0 ),
        .I2(\crc_reg[27]_i_6_n_0 ),
        .I3(p_337_in),
        .I4(\reg_client_dat_reg_n_0_[16] ),
        .I5(p_13_in124_in),
        .O(\crc_reg[27]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[27]_i_9 
       (.I0(\crc_reg[26]_i_2_n_0 ),
        .I1(\reg_client_dat_reg_n_0_[8] ),
        .I2(\crc_reg[27]_i_12_n_0 ),
        .I3(\crc_reg[27]_i_6_n_0 ),
        .I4(p_337_in),
        .I5(p_15_in191_in),
        .O(\crc_reg[27]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEEE)) 
    \crc_reg[28]_i_1 
       (.I0(\crc_reg[31]_i_3_n_0 ),
        .I1(\crc_reg[28]_i_2_n_0 ),
        .I2(\crc_reg[31]_i_5_n_0 ),
        .I3(p_1_in276_in),
        .I4(\crc_reg[28]_i_3_n_0 ),
        .I5(\crc_reg[28]_i_4_n_0 ),
        .O(\crc_reg[28]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEAFFFFEAEAEAEAEA)) 
    \crc_reg[28]_i_2 
       (.I0(\crc_reg[28]_i_5_n_0 ),
        .I1(\crc_reg[14]_i_3_n_0 ),
        .I2(func_crc32_d81_return[28]),
        .I3(p_339_in),
        .I4(\crc_reg[28]_i_8_n_0 ),
        .I5(\crc_reg[31]_i_8_n_0 ),
        .O(\crc_reg[28]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[28]_i_3 
       (.I0(\crc_reg[27]_i_4_n_0 ),
        .I1(p_7_in),
        .I2(p_15_in61_in),
        .I3(\crc_reg[28]_i_8_n_0 ),
        .I4(p_0_in49_in),
        .I5(p_339_in),
        .O(\crc_reg[28]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[28]_i_4 
       (.I0(\cnt[3]_i_9_n_0 ),
        .I1(p_5_in289_in),
        .I2(p_13_in295_in),
        .I3(\crc_reg[28]_i_8_n_0 ),
        .I4(p_0_in284_in),
        .I5(p_339_in),
        .O(\crc_reg[28]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[28]_i_5 
       (.I0(\crc_reg[26]_i_2_n_0 ),
        .I1(p_0_in178_in),
        .I2(p_7_in185_in),
        .I3(\crc_reg[28]_i_8_n_0 ),
        .I4(p_339_in),
        .I5(p_15_in191_in),
        .O(\crc_reg[28]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[28]_i_6 
       (.I0(p_1_in276_in),
        .I1(p_1_in),
        .I2(p_0_in113_in),
        .I3(\crc_reg[28]_i_8_n_0 ),
        .I4(p_15_in126_in),
        .I5(p_7_in120_in),
        .O(func_crc32_d81_return[28]));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[28]_i_7 
       (.I0(p_1_in276_in),
        .I1(p_1_in),
        .O(p_339_in));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[28]_i_8 
       (.I0(p_5_in),
        .I1(p_2_in),
        .O(\crc_reg[28]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEEE)) 
    \crc_reg[29]_i_1 
       (.I0(\crc_reg[31]_i_3_n_0 ),
        .I1(\crc_reg[29]_i_2_n_0 ),
        .I2(\crc_reg[31]_i_5_n_0 ),
        .I3(p_1_in278_in),
        .I4(\crc_reg[29]_i_3_n_0 ),
        .I5(\crc_reg[29]_i_4_n_0 ),
        .O(\crc_reg[29]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEAFFFFEAEAEAEAEA)) 
    \crc_reg[29]_i_2 
       (.I0(\crc_reg[29]_i_5_n_0 ),
        .I1(\crc_reg[14]_i_3_n_0 ),
        .I2(func_crc32_d81_return[29]),
        .I3(p_341_in),
        .I4(\crc_reg[29]_i_8_n_0 ),
        .I5(\crc_reg[31]_i_8_n_0 ),
        .O(\crc_reg[29]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[29]_i_3 
       (.I0(\crc_reg[27]_i_4_n_0 ),
        .I1(p_0_in49_in),
        .I2(p_11_in57_in),
        .I3(\crc_reg[29]_i_8_n_0 ),
        .I4(p_341_in),
        .I5(\reg_client_dat_reg_n_0_[24] ),
        .O(\crc_reg[29]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[29]_i_4 
       (.I0(\cnt[3]_i_9_n_0 ),
        .I1(p_9_in291_in),
        .I2(p_341_in),
        .I3(\crc_reg[29]_i_8_n_0 ),
        .I4(p_0_in284_in),
        .I5(\reg_client_dat_reg_n_0_[0] ),
        .O(\crc_reg[29]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[29]_i_5 
       (.I0(\crc_reg[26]_i_2_n_0 ),
        .I1(p_0_in178_in),
        .I2(\reg_client_dat_reg_n_0_[8] ),
        .I3(\crc_reg[29]_i_8_n_0 ),
        .I4(p_341_in),
        .I5(p_11_in187_in),
        .O(\crc_reg[29]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[29]_i_6 
       (.I0(\reg_client_dat_reg_n_0_[16] ),
        .I1(p_0_in2_in),
        .I2(p_1_in278_in),
        .I3(\crc_reg[29]_i_8_n_0 ),
        .I4(p_11_in122_in),
        .I5(p_0_in113_in),
        .O(func_crc32_d81_return[29]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[29]_i_7 
       (.I0(p_0_in2_in),
        .I1(p_1_in278_in),
        .O(p_341_in));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[29]_i_8 
       (.I0(p_1_in),
        .I1(p_4_in),
        .O(\crc_reg[29]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFEAEAFFEA)) 
    \crc_reg[2]_i_1 
       (.I0(\crc_reg[2]_i_2_n_0 ),
        .I1(func_crc32_d81_return[2]),
        .I2(\crc_reg[14]_i_3_n_0 ),
        .I3(func_crc32_d8_return[2]),
        .I4(state[2]),
        .I5(\crc_reg[2]_i_5_n_0 ),
        .O(\crc_reg[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[2]_i_10 
       (.I0(p_0_in284_in),
        .I1(p_2_in286_in),
        .O(\crc_reg[2]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[2]_i_11 
       (.I0(p_7_in185_in),
        .I1(p_37_in179_in),
        .O(\crc_reg[2]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hF88F8FF888888888)) 
    \crc_reg[2]_i_2 
       (.I0(func_crc32_d80_return0186_out),
        .I1(\crc_reg[26]_i_2_n_0 ),
        .I2(p_0_in49_in),
        .I3(p_37_in50_in),
        .I4(\crc_reg[2]_i_7_n_0 ),
        .I5(\cnt[3]_i_10_n_0 ),
        .O(\crc_reg[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[2]_i_3 
       (.I0(\crc_reg[2]_i_8_n_0 ),
        .I1(\crc_reg[2]_i_9_n_0 ),
        .I2(p_4_in117_in),
        .I3(\reg_client_dat_reg_n_0_[16] ),
        .I4(p_1_in),
        .I5(p_7_in120_in),
        .O(func_crc32_d81_return[2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[2]_i_4 
       (.I0(\reg_client_dat_reg_n_0_[0] ),
        .I1(p_5_in289_in),
        .I2(\crc_reg[2]_i_9_n_0 ),
        .I3(\crc_reg[2]_i_10_n_0 ),
        .I4(p_1_in),
        .I5(p_30_in),
        .O(func_crc32_d8_return[2]));
  LUT4 #(
    .INIT(16'hFF28)) 
    \crc_reg[2]_i_5 
       (.I0(state[3]),
        .I1(p_1_in),
        .I2(\crc_reg[2]_i_9_n_0 ),
        .I3(\crc_reg[7]_i_4_n_0 ),
        .O(\crc_reg[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[2]_i_6 
       (.I0(p_4_in182_in),
        .I1(\crc_reg[2]_i_9_n_0 ),
        .I2(p_0_in178_in),
        .I3(\reg_client_dat_reg_n_0_[8] ),
        .I4(p_1_in),
        .I5(\crc_reg[2]_i_11_n_0 ),
        .O(func_crc32_d80_return0186_out));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \crc_reg[2]_i_7 
       (.I0(p_7_in),
        .I1(p_1_in),
        .I2(\reg_client_dat_reg_n_0_[24] ),
        .I3(p_4_in53_in),
        .I4(\crc_reg[2]_i_9_n_0 ),
        .O(\crc_reg[2]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[2]_i_8 
       (.I0(p_0_in113_in),
        .I1(p_37_in114_in),
        .O(\crc_reg[2]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \crc_reg[2]_i_9 
       (.I0(p_6_in),
        .I1(p_5_in),
        .I2(p_0_in2_in),
        .I3(\crc_reg_reg_n_0_[24] ),
        .O(\crc_reg[2]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEEE)) 
    \crc_reg[30]_i_1 
       (.I0(\crc_reg[31]_i_3_n_0 ),
        .I1(\crc_reg[30]_i_2_n_0 ),
        .I2(\crc_reg[31]_i_5_n_0 ),
        .I3(p_1_in280_in),
        .I4(\crc_reg[30]_i_3_n_0 ),
        .I5(\crc_reg[30]_i_4_n_0 ),
        .O(\crc_reg[30]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFAEEAEAAEAEEA)) 
    \crc_reg[30]_i_2 
       (.I0(\crc_reg[30]_i_5_n_0 ),
        .I1(\crc_reg[14]_i_3_n_0 ),
        .I2(p_13_in124_in),
        .I3(\reg_client_dat_reg_n_0_[16] ),
        .I4(\crc_reg[30]_i_6_n_0 ),
        .I5(\crc_reg[31]_i_8_n_0 ),
        .O(\crc_reg[30]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[30]_i_3 
       (.I0(\crc_reg[27]_i_4_n_0 ),
        .I1(p_13_in59_in),
        .I2(\reg_client_dat_reg_n_0_[24] ),
        .I3(p_0_in2_in),
        .I4(p_1_in280_in),
        .I5(p_3_in),
        .O(\crc_reg[30]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[30]_i_4 
       (.I0(\cnt[3]_i_9_n_0 ),
        .I1(\reg_client_dat_reg_n_0_[0] ),
        .I2(p_3_in),
        .I3(p_0_in2_in),
        .I4(p_1_in280_in),
        .I5(p_11_in293_in),
        .O(\crc_reg[30]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[30]_i_5 
       (.I0(\crc_reg[26]_i_2_n_0 ),
        .I1(p_13_in189_in),
        .I2(\reg_client_dat_reg_n_0_[8] ),
        .I3(p_0_in2_in),
        .I4(p_1_in280_in),
        .I5(p_3_in),
        .O(\crc_reg[30]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \crc_reg[30]_i_6 
       (.I0(p_0_in2_in),
        .I1(p_1_in280_in),
        .I2(p_3_in),
        .O(\crc_reg[30]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h7F7D7FFD77DF77DF)) 
    \crc_reg[31]_i_1 
       (.I0(reg_conf_tx_en),
        .I1(state[2]),
        .I2(state[1]),
        .I3(state[3]),
        .I4(reg_conf_tx_no_gen_crc_reg_n_0),
        .I5(state[0]),
        .O(\crc_reg[31]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFEEE)) 
    \crc_reg[31]_i_2 
       (.I0(\crc_reg[31]_i_3_n_0 ),
        .I1(\crc_reg[31]_i_4_n_0 ),
        .I2(\crc_reg[31]_i_5_n_0 ),
        .I3(p_1_in282_in),
        .I4(\crc_reg[31]_i_6_n_0 ),
        .O(\crc_reg[31]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h75555577)) 
    \crc_reg[31]_i_3 
       (.I0(reg_conf_tx_en),
        .I1(state[2]),
        .I2(state[0]),
        .I3(state[3]),
        .I4(state[1]),
        .O(\crc_reg[31]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF88822F2F888)) 
    \crc_reg[31]_i_4 
       (.I0(\crc_reg[26]_i_2_n_0 ),
        .I1(p_15_in191_in),
        .I2(\crc_reg[14]_i_3_n_0 ),
        .I3(p_15_in126_in),
        .I4(p_345_in),
        .I5(\crc_reg[31]_i_8_n_0 ),
        .O(\crc_reg[31]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h0F80)) 
    \crc_reg[31]_i_5 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(state[3]),
        .O(\crc_reg[31]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hF44F8FF884488448)) 
    \crc_reg[31]_i_6 
       (.I0(p_15_in61_in),
        .I1(\crc_reg[27]_i_4_n_0 ),
        .I2(p_2_in),
        .I3(p_1_in282_in),
        .I4(p_13_in295_in),
        .I5(\cnt[3]_i_9_n_0 ),
        .O(\crc_reg[31]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[31]_i_7 
       (.I0(p_2_in),
        .I1(p_1_in282_in),
        .O(p_345_in));
  LUT2 #(
    .INIT(4'h8)) 
    \crc_reg[31]_i_8 
       (.I0(state[2]),
        .I1(state[3]),
        .O(\crc_reg[31]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFEFFFFFEFEFEFEFE)) 
    \crc_reg[3]_i_1 
       (.I0(\crc_reg[3]_i_2_n_0 ),
        .I1(\crc_reg[3]_i_3_n_0 ),
        .I2(\crc_reg[7]_i_4_n_0 ),
        .I3(\crc_reg[3]_i_4_n_0 ),
        .I4(p_5_in),
        .I5(state[3]),
        .O(\crc_reg[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \crc_reg[3]_i_2 
       (.I0(\cnt[3]_i_10_n_0 ),
        .I1(func_crc32_d82_return[3]),
        .I2(\crc_reg[26]_i_2_n_0 ),
        .I3(func_crc32_d80_return0188_out),
        .I4(func_crc32_d81_return[3]),
        .I5(\crc_reg[14]_i_3_n_0 ),
        .O(\crc_reg[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000096696996)) 
    \crc_reg[3]_i_3 
       (.I0(p_5_in),
        .I1(p_2_in286_in),
        .I2(\crc_reg[3]_i_4_n_0 ),
        .I3(p_5_in289_in),
        .I4(\crc_reg[3]_i_8_n_0 ),
        .I5(state[2]),
        .O(\crc_reg[3]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \crc_reg[3]_i_4 
       (.I0(p_4_in),
        .I1(p_6_in),
        .I2(p_0_in2_in),
        .O(\crc_reg[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[3]_i_5 
       (.I0(p_4_in53_in),
        .I1(p_7_in),
        .I2(p_11_in57_in),
        .I3(\crc_reg[3]_i_4_n_0 ),
        .I4(\reg_client_dat_reg_n_0_[24] ),
        .I5(p_5_in),
        .O(func_crc32_d82_return[3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[3]_i_6 
       (.I0(p_11_in187_in),
        .I1(\crc_reg[3]_i_4_n_0 ),
        .I2(\reg_client_dat_reg_n_0_[8] ),
        .I3(p_7_in185_in),
        .I4(p_4_in182_in),
        .I5(p_5_in),
        .O(func_crc32_d80_return0188_out));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[3]_i_7 
       (.I0(p_4_in117_in),
        .I1(p_7_in120_in),
        .I2(p_11_in122_in),
        .I3(\crc_reg[3]_i_4_n_0 ),
        .I4(\reg_client_dat_reg_n_0_[16] ),
        .I5(p_5_in),
        .O(func_crc32_d81_return[3]));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[3]_i_8 
       (.I0(\reg_client_dat_reg_n_0_[0] ),
        .I1(p_9_in291_in),
        .O(\crc_reg[3]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFAEFFABFFAE)) 
    \crc_reg[4]_i_1 
       (.I0(\crc_reg[4]_i_2_n_0 ),
        .I1(\crc_reg[4]_i_3_n_0 ),
        .I2(state[2]),
        .I3(\crc_reg[7]_i_4_n_0 ),
        .I4(\crc_reg[4]_i_4_n_0 ),
        .I5(state[3]),
        .O(\crc_reg[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \crc_reg[4]_i_2 
       (.I0(\cnt[3]_i_10_n_0 ),
        .I1(func_crc32_d82_return060_out),
        .I2(\crc_reg[26]_i_2_n_0 ),
        .I3(func_crc32_d80_return0190_out),
        .I4(func_crc32_d81_return[4]),
        .I5(\crc_reg[14]_i_3_n_0 ),
        .O(\crc_reg[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \crc_reg[4]_i_3 
       (.I0(p_5_in289_in),
        .I1(p_30_in),
        .I2(p_9_in291_in),
        .I3(p_0_in284_in),
        .I4(p_11_in293_in),
        .O(\crc_reg[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \crc_reg[4]_i_4 
       (.I0(p_5_in),
        .I1(p_1_in),
        .I2(p_4_in),
        .I3(p_3_in),
        .I4(\crc_reg_reg_n_0_[24] ),
        .O(\crc_reg[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[4]_i_5 
       (.I0(p_0_in49_in),
        .I1(p_7_in),
        .I2(p_13_in59_in),
        .I3(p_37_in50_in),
        .I4(p_11_in57_in),
        .I5(\crc_reg[4]_i_4_n_0 ),
        .O(func_crc32_d82_return060_out));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[4]_i_6 
       (.I0(p_0_in178_in),
        .I1(p_7_in185_in),
        .I2(p_37_in179_in),
        .I3(p_11_in187_in),
        .I4(p_13_in189_in),
        .I5(\crc_reg[4]_i_4_n_0 ),
        .O(func_crc32_d80_return0190_out));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[4]_i_7 
       (.I0(p_7_in120_in),
        .I1(p_0_in113_in),
        .I2(p_13_in124_in),
        .I3(p_37_in114_in),
        .I4(p_11_in122_in),
        .I5(\crc_reg[4]_i_4_n_0 ),
        .O(func_crc32_d81_return[4]));
  LUT6 #(
    .INIT(64'hFEFFFFFEFEFEFEFE)) 
    \crc_reg[5]_i_1 
       (.I0(\crc_reg[5]_i_2_n_0 ),
        .I1(\crc_reg[5]_i_3_n_0 ),
        .I2(\crc_reg[7]_i_4_n_0 ),
        .I3(\crc_reg[5]_i_4_n_0 ),
        .I4(\crc_reg[5]_i_5_n_0 ),
        .I5(state[3]),
        .O(\crc_reg[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \crc_reg[5]_i_10 
       (.I0(p_13_in59_in),
        .I1(p_37_in50_in),
        .I2(p_11_in57_in),
        .O(\crc_reg[5]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \crc_reg[5]_i_11 
       (.I0(p_11_in187_in),
        .I1(p_13_in189_in),
        .I2(p_4_in182_in),
        .I3(p_15_in191_in),
        .I4(\reg_client_dat_reg_n_0_[8] ),
        .O(\crc_reg[5]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \crc_reg[5]_i_12 
       (.I0(p_37_in114_in),
        .I1(p_13_in124_in),
        .I2(\reg_client_dat_reg_n_0_[16] ),
        .I3(p_15_in126_in),
        .I4(p_11_in122_in),
        .O(\crc_reg[5]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \crc_reg[5]_i_2 
       (.I0(\cnt[3]_i_10_n_0 ),
        .I1(func_crc32_d82_return062_out),
        .I2(\crc_reg[26]_i_2_n_0 ),
        .I3(func_crc32_d80_return0192_out),
        .I4(func_crc32_d81_return[5]),
        .I5(\crc_reg[14]_i_3_n_0 ),
        .O(\crc_reg[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000096696996)) 
    \crc_reg[5]_i_3 
       (.I0(\crc_reg[5]_i_9_n_0 ),
        .I1(p_9_in291_in),
        .I2(\crc_reg[27]_i_10_n_0 ),
        .I3(p_0_in284_in),
        .I4(\reg_client_dat_reg_n_0_[0] ),
        .I5(state[2]),
        .O(\crc_reg[5]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \crc_reg[5]_i_4 
       (.I0(p_2_in),
        .I1(\crc_reg_reg_n_0_[24] ),
        .I2(p_4_in),
        .I3(p_3_in),
        .I4(p_0_in2_in),
        .O(\crc_reg[5]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[5]_i_5 
       (.I0(p_1_in),
        .I1(p_6_in),
        .O(\crc_reg[5]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[5]_i_6 
       (.I0(\crc_reg[5]_i_10_n_0 ),
        .I1(\reg_client_dat_reg_n_0_[24] ),
        .I2(\crc_reg[5]_i_4_n_0 ),
        .I3(\crc_reg[17]_i_9_n_0 ),
        .I4(p_6_in),
        .I5(p_1_in),
        .O(func_crc32_d82_return062_out));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[5]_i_7 
       (.I0(\crc_reg[5]_i_11_n_0 ),
        .I1(\crc_reg[5]_i_4_n_0 ),
        .I2(p_0_in178_in),
        .I3(p_37_in179_in),
        .I4(p_6_in),
        .I5(p_1_in),
        .O(func_crc32_d80_return0192_out));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[5]_i_8 
       (.I0(\crc_reg[5]_i_12_n_0 ),
        .I1(\crc_reg[5]_i_4_n_0 ),
        .I2(p_0_in113_in),
        .I3(p_4_in117_in),
        .I4(p_6_in),
        .I5(p_1_in),
        .O(func_crc32_d81_return[5]));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \crc_reg[5]_i_9 
       (.I0(p_1_in),
        .I1(p_6_in),
        .I2(p_2_in286_in),
        .I3(p_30_in),
        .I4(\crc_reg[5]_i_4_n_0 ),
        .O(\crc_reg[5]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFEFFFFFEFEFEFEFE)) 
    \crc_reg[6]_i_1 
       (.I0(\crc_reg[6]_i_2_n_0 ),
        .I1(\crc_reg[6]_i_3_n_0 ),
        .I2(\crc_reg[7]_i_4_n_0 ),
        .I3(\crc_reg[6]_i_4_n_0 ),
        .I4(p_1_in),
        .I5(state[3]),
        .O(\crc_reg[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \crc_reg[6]_i_2 
       (.I0(\cnt[3]_i_10_n_0 ),
        .I1(func_crc32_d82_return[6]),
        .I2(\crc_reg[26]_i_2_n_0 ),
        .I3(func_crc32_d80_return0193_out),
        .I4(func_crc32_d81_return[6]),
        .I5(\crc_reg[14]_i_3_n_0 ),
        .O(\crc_reg[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000096696996)) 
    \crc_reg[6]_i_3 
       (.I0(\crc_reg[6]_i_8_n_0 ),
        .I1(\crc_reg[6]_i_4_n_0 ),
        .I2(p_5_in289_in),
        .I3(p_13_in295_in),
        .I4(p_11_in293_in),
        .I5(state[2]),
        .O(\crc_reg[6]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \crc_reg[6]_i_4 
       (.I0(p_2_in),
        .I1(p_5_in),
        .I2(p_6_in),
        .I3(p_3_in),
        .I4(p_0_in2_in),
        .O(\crc_reg[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[6]_i_5 
       (.I0(p_0_in49_in),
        .I1(p_15_in61_in),
        .I2(p_13_in59_in),
        .I3(\crc_reg[6]_i_4_n_0 ),
        .I4(\crc_reg[9]_i_9_n_0 ),
        .I5(\crc_reg[14]_i_15_n_0 ),
        .O(func_crc32_d82_return[6]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[6]_i_6 
       (.I0(p_15_in191_in),
        .I1(p_0_in178_in),
        .I2(p_1_in),
        .I3(p_13_in189_in),
        .I4(\crc_reg[24]_i_5_n_0 ),
        .I5(\crc_reg[6]_i_4_n_0 ),
        .O(func_crc32_d80_return0193_out));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[6]_i_7 
       (.I0(p_15_in126_in),
        .I1(p_4_in117_in),
        .I2(p_13_in124_in),
        .I3(\crc_reg[6]_i_4_n_0 ),
        .I4(\crc_reg[14]_i_11_n_0 ),
        .I5(\crc_reg[14]_i_10_n_0 ),
        .O(func_crc32_d81_return[6]));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \crc_reg[6]_i_8 
       (.I0(p_0_in284_in),
        .I1(\reg_client_dat_reg_n_0_[0] ),
        .I2(p_1_in),
        .I3(p_2_in286_in),
        .O(\crc_reg[6]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFAEFFAEFFAE)) 
    \crc_reg[7]_i_1 
       (.I0(\crc_reg[7]_i_2_n_0 ),
        .I1(func_crc32_d8_return[7]),
        .I2(state[2]),
        .I3(\crc_reg[7]_i_4_n_0 ),
        .I4(\crc_reg[7]_i_5_n_0 ),
        .I5(state[3]),
        .O(\crc_reg[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \crc_reg[7]_i_2 
       (.I0(\cnt[3]_i_10_n_0 ),
        .I1(func_crc32_d82_return[7]),
        .I2(\crc_reg[26]_i_2_n_0 ),
        .I3(func_crc32_d80_return0194_out),
        .I4(func_crc32_d81_return0129_out),
        .I5(\crc_reg[14]_i_3_n_0 ),
        .O(\crc_reg[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[7]_i_3 
       (.I0(\reg_client_dat_reg_n_0_[0] ),
        .I1(\crc_reg[7]_i_5_n_0 ),
        .I2(p_5_in289_in),
        .I3(p_13_in295_in),
        .I4(p_30_in),
        .I5(p_9_in291_in),
        .O(func_crc32_d8_return[7]));
  LUT5 #(
    .INIT(32'h7D5F5D5F)) 
    \crc_reg[7]_i_4 
       (.I0(reg_conf_tx_en),
        .I1(state[3]),
        .I2(state[2]),
        .I3(state[1]),
        .I4(state[0]),
        .O(\crc_reg[7]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \crc_reg[7]_i_5 
       (.I0(\crc_reg_reg_n_0_[24] ),
        .I1(p_4_in),
        .I2(p_5_in),
        .I3(p_0_in2_in),
        .I4(p_2_in),
        .O(\crc_reg[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[7]_i_6 
       (.I0(\reg_client_dat_reg_n_0_[24] ),
        .I1(\crc_reg[7]_i_5_n_0 ),
        .I2(p_37_in50_in),
        .I3(p_11_in57_in),
        .I4(p_7_in),
        .I5(p_15_in61_in),
        .O(func_crc32_d82_return[7]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[7]_i_7 
       (.I0(p_15_in191_in),
        .I1(p_11_in187_in),
        .I2(p_7_in185_in),
        .I3(p_37_in179_in),
        .I4(\reg_client_dat_reg_n_0_[8] ),
        .I5(\crc_reg[7]_i_5_n_0 ),
        .O(func_crc32_d80_return0194_out));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[7]_i_8 
       (.I0(p_15_in126_in),
        .I1(p_37_in114_in),
        .I2(p_7_in120_in),
        .I3(\reg_client_dat_reg_n_0_[16] ),
        .I4(p_11_in122_in),
        .I5(\crc_reg[7]_i_5_n_0 ),
        .O(func_crc32_d81_return0129_out));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \crc_reg[8]_i_1 
       (.I0(\crc_reg[31]_i_3_n_0 ),
        .I1(\crc_reg[8]_i_2_n_0 ),
        .I2(\crc_reg[8]_i_3_n_0 ),
        .I3(\crc_reg[31]_i_5_n_0 ),
        .I4(\crc_reg_reg_n_0_[0] ),
        .I5(\crc_reg[8]_i_4_n_0 ),
        .O(\crc_reg[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF44F8FF884488448)) 
    \crc_reg[8]_i_2 
       (.I0(\crc_reg[11]_i_5_n_0 ),
        .I1(\crc_reg[14]_i_3_n_0 ),
        .I2(p_3_in),
        .I3(\crc_reg_reg_n_0_[0] ),
        .I4(\crc_reg[11]_i_6_n_0 ),
        .I5(\crc_reg[26]_i_2_n_0 ),
        .O(\crc_reg[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[8]_i_3 
       (.I0(\crc_reg[31]_i_8_n_0 ),
        .I1(\crc_reg_reg_n_0_[24] ),
        .I2(p_6_in),
        .I3(p_4_in),
        .I4(\crc_reg_reg_n_0_[0] ),
        .I5(p_3_in),
        .O(\crc_reg[8]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF44F8FF884488448)) 
    \crc_reg[8]_i_4 
       (.I0(\crc_reg[11]_i_7_n_0 ),
        .I1(\crc_reg[27]_i_4_n_0 ),
        .I2(p_3_in),
        .I3(\crc_reg_reg_n_0_[0] ),
        .I4(\crc_reg[11]_i_8_n_0 ),
        .I5(\cnt[3]_i_9_n_0 ),
        .O(\crc_reg[8]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEEE)) 
    \crc_reg[9]_i_1 
       (.I0(\crc_reg[31]_i_3_n_0 ),
        .I1(\crc_reg[9]_i_2_n_0 ),
        .I2(\crc_reg[31]_i_5_n_0 ),
        .I3(p_1_in243_in),
        .I4(\crc_reg[9]_i_3_n_0 ),
        .I5(\crc_reg[9]_i_4_n_0 ),
        .O(\crc_reg[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEAFFFFEAEAEAEAEA)) 
    \crc_reg[9]_i_2 
       (.I0(\crc_reg[9]_i_5_n_0 ),
        .I1(\crc_reg[14]_i_3_n_0 ),
        .I2(func_crc32_d81_return[9]),
        .I3(p_301_in),
        .I4(\crc_reg[9]_i_8_n_0 ),
        .I5(\crc_reg[31]_i_8_n_0 ),
        .O(\crc_reg[9]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[9]_i_3 
       (.I0(\crc_reg[27]_i_4_n_0 ),
        .I1(\crc_reg[9]_i_9_n_0 ),
        .I2(\crc_reg[9]_i_8_n_0 ),
        .I3(p_301_in),
        .I4(p_15_in61_in),
        .I5(p_13_in59_in),
        .O(\crc_reg[9]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[9]_i_4 
       (.I0(\cnt[3]_i_9_n_0 ),
        .I1(p_2_in286_in),
        .I2(\crc_reg[27]_i_10_n_0 ),
        .I3(\crc_reg[9]_i_8_n_0 ),
        .I4(p_301_in),
        .I5(p_5_in289_in),
        .O(\crc_reg[9]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg[9]_i_5 
       (.I0(\crc_reg[26]_i_2_n_0 ),
        .I1(p_7_in185_in),
        .I2(\crc_reg[27]_i_12_n_0 ),
        .I3(\crc_reg[9]_i_8_n_0 ),
        .I4(p_301_in),
        .I5(p_15_in191_in),
        .O(\crc_reg[9]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg[9]_i_6 
       (.I0(p_13_in124_in),
        .I1(p_15_in126_in),
        .I2(p_301_in),
        .I3(\crc_reg[9]_i_8_n_0 ),
        .I4(p_4_in117_in),
        .I5(p_7_in120_in),
        .O(func_crc32_d81_return[9]));
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[9]_i_7 
       (.I0(p_1_in243_in),
        .I1(p_2_in),
        .O(p_301_in));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \crc_reg[9]_i_8 
       (.I0(p_5_in),
        .I1(p_6_in),
        .I2(p_3_in),
        .O(\crc_reg[9]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg[9]_i_9 
       (.I0(p_4_in53_in),
        .I1(p_7_in),
        .O(\crc_reg[9]_i_9_n_0 ));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[0] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[0]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(\crc_reg_reg_n_0_[0] ));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[10] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[10]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(p_1_in258_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[11] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[11]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(p_1_in260_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[12] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[12]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(p_1_in261_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[13] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[13]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(p_1_in262_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[14] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[14]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(p_1_in264_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[15] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[15]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(p_1_in266_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[16] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[16]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(p_1_in268_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[17] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[17]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(p_1_in270_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[18] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[18]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(p_1_in272_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[19] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[19]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(p_1_in274_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[1] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[1]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(p_1_in243_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[20] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[20]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(p_1_in276_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[21] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[21]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(p_1_in278_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[22] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[22]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(p_1_in280_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[23] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[23]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(p_1_in282_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[24] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[24]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(\crc_reg_reg_n_0_[24] ));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[25] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[25]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(p_6_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[26] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[26]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(p_5_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[27] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[27]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(p_4_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[28] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[28]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(p_3_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[29] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[29]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(p_2_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[2] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[2]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(p_1_in245_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[30] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[30]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(p_1_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[31] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[31]_i_2_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(p_0_in2_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[3] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[3]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(p_1_in247_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[4] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[4]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(p_1_in249_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[5] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[5]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(p_1_in250_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[6] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[6]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(p_1_in252_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[7] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[7]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(p_1_in253_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[8] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[8]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(p_1_in255_in));
  FDPE #(
    .INIT(1'b1)) 
    \crc_reg_reg[9] 
       (.C(tx_clk),
        .CE(\crc_reg[31]_i_1_n_0 ),
        .D(\crc_reg[9]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(p_1_in256_in));
  LUT6 #(
    .INIT(64'h0000000077007000)) 
    \dcnt[0]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(reg_conf_tx_en),
        .I4(state[2]),
        .I5(dcnt[0]),
        .O(\dcnt[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7700700000000000)) 
    \dcnt[10]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(reg_conf_tx_en),
        .I4(state[2]),
        .I5(\dcnt_reg[12]_i_2_n_6 ),
        .O(\dcnt[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7700700000000000)) 
    \dcnt[11]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(reg_conf_tx_en),
        .I4(state[2]),
        .I5(\dcnt_reg[12]_i_2_n_5 ),
        .O(\dcnt[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7700700000000000)) 
    \dcnt[12]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(reg_conf_tx_en),
        .I4(state[2]),
        .I5(\dcnt_reg[12]_i_2_n_4 ),
        .O(\dcnt[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAABEFFFFAAAEFFFF)) 
    \dcnt[13]_i_1 
       (.I0(\dcnt[13]_i_3_n_0 ),
        .I1(state[2]),
        .I2(state[0]),
        .I3(state[3]),
        .I4(reg_conf_tx_en),
        .I5(state[1]),
        .O(\dcnt[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7700700000000000)) 
    \dcnt[13]_i_2 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(reg_conf_tx_en),
        .I4(state[2]),
        .I5(\dcnt_reg[13]_i_4_n_7 ),
        .O(\dcnt[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h20282028646C2028)) 
    \dcnt[13]_i_3 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(\dcnt[13]_i_5_n_0 ),
        .I4(\reg_client_ctl[3]_i_6_n_0 ),
        .I5(state[3]),
        .O(\dcnt[13]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT4 #(
    .INIT(16'hFBFF)) 
    \dcnt[13]_i_5 
       (.I0(\cnt_reg_n_0_[2] ),
        .I1(\cnt_reg_n_0_[0] ),
        .I2(\cnt_reg_n_0_[1] ),
        .I3(\cnt_reg_n_0_[3] ),
        .O(\dcnt[13]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'h28)) 
    \dcnt[1]_i_1 
       (.I0(\dcnt[1]_i_2_n_0 ),
        .I1(dcnt[1]),
        .I2(dcnt[0]),
        .O(\dcnt[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00C8C8C8)) 
    \dcnt[1]_i_2 
       (.I0(state[2]),
        .I1(reg_conf_tx_en),
        .I2(state[0]),
        .I3(state[3]),
        .I4(state[1]),
        .O(\dcnt[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7700700000000000)) 
    \dcnt[2]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(reg_conf_tx_en),
        .I4(state[2]),
        .I5(\dcnt_reg[4]_i_2_n_6 ),
        .O(\dcnt[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7700700000000000)) 
    \dcnt[3]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(reg_conf_tx_en),
        .I4(state[2]),
        .I5(\dcnt_reg[4]_i_2_n_5 ),
        .O(\dcnt[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7700700000000000)) 
    \dcnt[4]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(reg_conf_tx_en),
        .I4(state[2]),
        .I5(\dcnt_reg[4]_i_2_n_4 ),
        .O(\dcnt[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7700700000000000)) 
    \dcnt[5]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(reg_conf_tx_en),
        .I4(state[2]),
        .I5(\dcnt_reg[8]_i_2_n_7 ),
        .O(\dcnt[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7700700000000000)) 
    \dcnt[6]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(reg_conf_tx_en),
        .I4(state[2]),
        .I5(\dcnt_reg[8]_i_2_n_6 ),
        .O(\dcnt[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7700700000000000)) 
    \dcnt[7]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(reg_conf_tx_en),
        .I4(state[2]),
        .I5(\dcnt_reg[8]_i_2_n_5 ),
        .O(\dcnt[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7700700000000000)) 
    \dcnt[8]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(reg_conf_tx_en),
        .I4(state[2]),
        .I5(\dcnt_reg[8]_i_2_n_4 ),
        .O(\dcnt[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7700700000000000)) 
    \dcnt[9]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(reg_conf_tx_en),
        .I4(state[2]),
        .I5(\dcnt_reg[12]_i_2_n_7 ),
        .O(\dcnt[9]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \dcnt_reg[0] 
       (.C(tx_clk),
        .CE(\dcnt[13]_i_1_n_0 ),
        .CLR(client_rdy_i_2_n_0),
        .D(\dcnt[0]_i_1_n_0 ),
        .Q(dcnt[0]));
  FDCE #(
    .INIT(1'b0)) 
    \dcnt_reg[10] 
       (.C(tx_clk),
        .CE(\dcnt[13]_i_1_n_0 ),
        .CLR(client_rdy_i_2_n_0),
        .D(\dcnt[10]_i_1_n_0 ),
        .Q(dcnt[10]));
  FDCE #(
    .INIT(1'b0)) 
    \dcnt_reg[11] 
       (.C(tx_clk),
        .CE(\dcnt[13]_i_1_n_0 ),
        .CLR(client_rdy_i_2_n_0),
        .D(\dcnt[11]_i_1_n_0 ),
        .Q(dcnt[11]));
  FDCE #(
    .INIT(1'b0)) 
    \dcnt_reg[12] 
       (.C(tx_clk),
        .CE(\dcnt[13]_i_1_n_0 ),
        .CLR(client_rdy_i_2_n_0),
        .D(\dcnt[12]_i_1_n_0 ),
        .Q(dcnt[12]));
  CARRY4 \dcnt_reg[12]_i_2 
       (.CI(\dcnt_reg[8]_i_2_n_0 ),
        .CO({\dcnt_reg[12]_i_2_n_0 ,\dcnt_reg[12]_i_2_n_1 ,\dcnt_reg[12]_i_2_n_2 ,\dcnt_reg[12]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\dcnt_reg[12]_i_2_n_4 ,\dcnt_reg[12]_i_2_n_5 ,\dcnt_reg[12]_i_2_n_6 ,\dcnt_reg[12]_i_2_n_7 }),
        .S(dcnt[12:9]));
  FDCE #(
    .INIT(1'b0)) 
    \dcnt_reg[13] 
       (.C(tx_clk),
        .CE(\dcnt[13]_i_1_n_0 ),
        .CLR(client_rdy_i_2_n_0),
        .D(\dcnt[13]_i_2_n_0 ),
        .Q(dcnt[13]));
  CARRY4 \dcnt_reg[13]_i_4 
       (.CI(\dcnt_reg[12]_i_2_n_0 ),
        .CO(\NLW_dcnt_reg[13]_i_4_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_dcnt_reg[13]_i_4_O_UNCONNECTED [3:1],\dcnt_reg[13]_i_4_n_7 }),
        .S({1'b0,1'b0,1'b0,dcnt[13]}));
  FDCE #(
    .INIT(1'b0)) 
    \dcnt_reg[1] 
       (.C(tx_clk),
        .CE(\dcnt[13]_i_1_n_0 ),
        .CLR(client_rdy_i_2_n_0),
        .D(\dcnt[1]_i_1_n_0 ),
        .Q(dcnt[1]));
  FDCE #(
    .INIT(1'b0)) 
    \dcnt_reg[2] 
       (.C(tx_clk),
        .CE(\dcnt[13]_i_1_n_0 ),
        .CLR(client_rdy_i_2_n_0),
        .D(\dcnt[2]_i_1_n_0 ),
        .Q(dcnt[2]));
  FDCE #(
    .INIT(1'b0)) 
    \dcnt_reg[3] 
       (.C(tx_clk),
        .CE(\dcnt[13]_i_1_n_0 ),
        .CLR(client_rdy_i_2_n_0),
        .D(\dcnt[3]_i_1_n_0 ),
        .Q(dcnt[3]));
  FDCE #(
    .INIT(1'b0)) 
    \dcnt_reg[4] 
       (.C(tx_clk),
        .CE(\dcnt[13]_i_1_n_0 ),
        .CLR(client_rdy_i_2_n_0),
        .D(\dcnt[4]_i_1_n_0 ),
        .Q(dcnt[4]));
  CARRY4 \dcnt_reg[4]_i_2 
       (.CI(1'b0),
        .CO({\dcnt_reg[4]_i_2_n_0 ,\dcnt_reg[4]_i_2_n_1 ,\dcnt_reg[4]_i_2_n_2 ,\dcnt_reg[4]_i_2_n_3 }),
        .CYINIT(dcnt[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\dcnt_reg[4]_i_2_n_4 ,\dcnt_reg[4]_i_2_n_5 ,\dcnt_reg[4]_i_2_n_6 ,\dcnt_reg[4]_i_2_n_7 }),
        .S(dcnt[4:1]));
  FDCE #(
    .INIT(1'b0)) 
    \dcnt_reg[5] 
       (.C(tx_clk),
        .CE(\dcnt[13]_i_1_n_0 ),
        .CLR(client_rdy_i_2_n_0),
        .D(\dcnt[5]_i_1_n_0 ),
        .Q(dcnt[5]));
  FDCE #(
    .INIT(1'b0)) 
    \dcnt_reg[6] 
       (.C(tx_clk),
        .CE(\dcnt[13]_i_1_n_0 ),
        .CLR(client_rdy_i_2_n_0),
        .D(\dcnt[6]_i_1_n_0 ),
        .Q(dcnt[6]));
  FDCE #(
    .INIT(1'b0)) 
    \dcnt_reg[7] 
       (.C(tx_clk),
        .CE(\dcnt[13]_i_1_n_0 ),
        .CLR(client_rdy_i_2_n_0),
        .D(\dcnt[7]_i_1_n_0 ),
        .Q(dcnt[7]));
  FDCE #(
    .INIT(1'b0)) 
    \dcnt_reg[8] 
       (.C(tx_clk),
        .CE(\dcnt[13]_i_1_n_0 ),
        .CLR(client_rdy_i_2_n_0),
        .D(\dcnt[8]_i_1_n_0 ),
        .Q(dcnt[8]));
  CARRY4 \dcnt_reg[8]_i_2 
       (.CI(\dcnt_reg[4]_i_2_n_0 ),
        .CO({\dcnt_reg[8]_i_2_n_0 ,\dcnt_reg[8]_i_2_n_1 ,\dcnt_reg[8]_i_2_n_2 ,\dcnt_reg[8]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\dcnt_reg[8]_i_2_n_4 ,\dcnt_reg[8]_i_2_n_5 ,\dcnt_reg[8]_i_2_n_6 ,\dcnt_reg[8]_i_2_n_7 }),
        .S(dcnt[8:5]));
  FDCE #(
    .INIT(1'b0)) 
    \dcnt_reg[9] 
       (.C(tx_clk),
        .CE(\dcnt[13]_i_1_n_0 ),
        .CLR(client_rdy_i_2_n_0),
        .D(\dcnt[9]_i_1_n_0 ),
        .Q(dcnt[9]));
  LUT5 #(
    .INIT(32'hFFFFEFEE)) 
    \gmii_txd[0]_i_1 
       (.I0(\gmii_txd[6]_i_2_n_0 ),
        .I1(\gmii_txd[0]_i_2_n_0 ),
        .I2(p_0_in2_in),
        .I3(\gmii_txd[6]_i_4_n_0 ),
        .I4(\gmii_txd[0]_i_3_n_0 ),
        .O(\gmii_txd[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF888000088880000)) 
    \gmii_txd[0]_i_2 
       (.I0(\reg_client_dat_reg_n_0_[24] ),
        .I1(\reg_client_ctl[3]_i_4_n_0 ),
        .I2(\reg_client_dat_reg_n_0_[16] ),
        .I3(\crc_reg[14]_i_3_n_0 ),
        .I4(reg_conf_tx_en),
        .I5(state[2]),
        .O(\gmii_txd[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gmii_txd[0]_i_3 
       (.I0(\gmii_txd[7]_i_3_n_0 ),
        .I1(gmii_txd[0]),
        .I2(\gmii_txd[6]_i_6_n_0 ),
        .I3(\reg_client_dat_reg_n_0_[0] ),
        .I4(\reg_client_dat_reg_n_0_[8] ),
        .I5(\gmii_txd[7]_i_6_n_0 ),
        .O(\gmii_txd[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT4 #(
    .INIT(16'hFFF2)) 
    \gmii_txd[1]_i_1 
       (.I0(\gmii_txd[7]_i_5_n_0 ),
        .I1(p_1_in),
        .I2(\gmii_txd[1]_i_2_n_0 ),
        .I3(\gmii_txd[1]_i_3_n_0 ),
        .O(\gmii_txd[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000C00A000000000)) 
    \gmii_txd[1]_i_2 
       (.I0(p_0_in49_in),
        .I1(p_0_in113_in),
        .I2(state[1]),
        .I3(state[3]),
        .I4(state[0]),
        .I5(\state[2]_i_8_n_0 ),
        .O(\gmii_txd[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gmii_txd[1]_i_3 
       (.I0(\gmii_txd[7]_i_3_n_0 ),
        .I1(gmii_txd[1]),
        .I2(\state[2]_i_5_n_0 ),
        .I3(p_0_in284_in),
        .I4(p_0_in178_in),
        .I5(\gmii_txd[7]_i_6_n_0 ),
        .O(\gmii_txd[1]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFEFEE)) 
    \gmii_txd[2]_i_1 
       (.I0(\gmii_txd[6]_i_2_n_0 ),
        .I1(\gmii_txd[2]_i_2_n_0 ),
        .I2(p_2_in),
        .I3(\gmii_txd[6]_i_4_n_0 ),
        .I4(\gmii_txd[2]_i_3_n_0 ),
        .O(\gmii_txd[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF888000088880000)) 
    \gmii_txd[2]_i_2 
       (.I0(p_15_in61_in),
        .I1(\reg_client_ctl[3]_i_4_n_0 ),
        .I2(p_15_in126_in),
        .I3(\crc_reg[14]_i_3_n_0 ),
        .I4(reg_conf_tx_en),
        .I5(state[2]),
        .O(\gmii_txd[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gmii_txd[2]_i_3 
       (.I0(\gmii_txd[7]_i_3_n_0 ),
        .I1(gmii_txd[2]),
        .I2(\gmii_txd[6]_i_6_n_0 ),
        .I3(p_13_in295_in),
        .I4(p_15_in191_in),
        .I5(\gmii_txd[7]_i_6_n_0 ),
        .O(\gmii_txd[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT4 #(
    .INIT(16'hFFF2)) 
    \gmii_txd[3]_i_1 
       (.I0(\gmii_txd[7]_i_5_n_0 ),
        .I1(p_3_in),
        .I2(\gmii_txd[3]_i_2_n_0 ),
        .I3(\gmii_txd[3]_i_3_n_0 ),
        .O(\gmii_txd[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000C00A000000000)) 
    \gmii_txd[3]_i_2 
       (.I0(p_13_in59_in),
        .I1(p_13_in124_in),
        .I2(state[1]),
        .I3(state[3]),
        .I4(state[0]),
        .I5(\state[2]_i_8_n_0 ),
        .O(\gmii_txd[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gmii_txd[3]_i_3 
       (.I0(\gmii_txd[7]_i_3_n_0 ),
        .I1(gmii_txd[3]),
        .I2(\state[2]_i_5_n_0 ),
        .I3(p_11_in293_in),
        .I4(p_13_in189_in),
        .I5(\gmii_txd[7]_i_6_n_0 ),
        .O(\gmii_txd[3]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFEFEE)) 
    \gmii_txd[4]_i_1 
       (.I0(\gmii_txd[6]_i_2_n_0 ),
        .I1(\gmii_txd[4]_i_2_n_0 ),
        .I2(p_4_in),
        .I3(\gmii_txd[6]_i_4_n_0 ),
        .I4(\gmii_txd[4]_i_3_n_0 ),
        .O(\gmii_txd[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF888000088880000)) 
    \gmii_txd[4]_i_2 
       (.I0(p_11_in57_in),
        .I1(\reg_client_ctl[3]_i_4_n_0 ),
        .I2(p_11_in122_in),
        .I3(\crc_reg[14]_i_3_n_0 ),
        .I4(reg_conf_tx_en),
        .I5(state[2]),
        .O(\gmii_txd[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gmii_txd[4]_i_3 
       (.I0(\gmii_txd[7]_i_3_n_0 ),
        .I1(gmii_txd[4]),
        .I2(\gmii_txd[6]_i_6_n_0 ),
        .I3(p_9_in291_in),
        .I4(p_11_in187_in),
        .I5(\gmii_txd[7]_i_6_n_0 ),
        .O(\gmii_txd[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT4 #(
    .INIT(16'hFFF2)) 
    \gmii_txd[5]_i_1 
       (.I0(\gmii_txd[7]_i_5_n_0 ),
        .I1(p_5_in),
        .I2(\gmii_txd[5]_i_2_n_0 ),
        .I3(\gmii_txd[5]_i_3_n_0 ),
        .O(\gmii_txd[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000C00A000000000)) 
    \gmii_txd[5]_i_2 
       (.I0(p_7_in),
        .I1(p_7_in120_in),
        .I2(state[1]),
        .I3(state[3]),
        .I4(state[0]),
        .I5(\state[2]_i_8_n_0 ),
        .O(\gmii_txd[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gmii_txd[5]_i_3 
       (.I0(\gmii_txd[7]_i_3_n_0 ),
        .I1(gmii_txd[5]),
        .I2(\state[2]_i_5_n_0 ),
        .I3(p_5_in289_in),
        .I4(p_7_in185_in),
        .I5(\gmii_txd[7]_i_6_n_0 ),
        .O(\gmii_txd[5]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFEFEE)) 
    \gmii_txd[6]_i_1 
       (.I0(\gmii_txd[6]_i_2_n_0 ),
        .I1(\gmii_txd[6]_i_3_n_0 ),
        .I2(p_6_in),
        .I3(\gmii_txd[6]_i_4_n_0 ),
        .I4(\gmii_txd[6]_i_5_n_0 ),
        .O(\gmii_txd[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000400)) 
    \gmii_txd[6]_i_2 
       (.I0(state[2]),
        .I1(reg_conf_tx_en),
        .I2(state[0]),
        .I3(state[1]),
        .I4(state[3]),
        .O(\gmii_txd[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF888000088880000)) 
    \gmii_txd[6]_i_3 
       (.I0(p_4_in53_in),
        .I1(\reg_client_ctl[3]_i_4_n_0 ),
        .I2(p_4_in117_in),
        .I3(\crc_reg[14]_i_3_n_0 ),
        .I4(reg_conf_tx_en),
        .I5(state[2]),
        .O(\gmii_txd[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h1000504010805040)) 
    \gmii_txd[6]_i_4 
       (.I0(state[2]),
        .I1(state[1]),
        .I2(reg_conf_tx_en),
        .I3(state[3]),
        .I4(state[0]),
        .I5(reg_conf_tx_no_gen_crc_reg_n_0),
        .O(\gmii_txd[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gmii_txd[6]_i_5 
       (.I0(\gmii_txd[7]_i_3_n_0 ),
        .I1(gmii_txd[6]),
        .I2(\gmii_txd[6]_i_6_n_0 ),
        .I3(p_2_in286_in),
        .I4(p_4_in182_in),
        .I5(\gmii_txd[7]_i_6_n_0 ),
        .O(\gmii_txd[6]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h0400)) 
    \gmii_txd[6]_i_6 
       (.I0(state[2]),
        .I1(reg_conf_tx_en),
        .I2(state[3]),
        .I3(state[1]),
        .O(\gmii_txd[6]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEAFFEA)) 
    \gmii_txd[7]_i_1 
       (.I0(\gmii_txd[7]_i_2_n_0 ),
        .I1(gmii_txd[7]),
        .I2(\gmii_txd[7]_i_3_n_0 ),
        .I3(\gmii_txd[7]_i_4_n_0 ),
        .I4(\crc_reg_reg_n_0_[24] ),
        .I5(\gmii_txd[7]_i_5_n_0 ),
        .O(\gmii_txd[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00008C0000008000)) 
    \gmii_txd[7]_i_2 
       (.I0(p_30_in),
        .I1(\cnt[1]_i_2_n_0 ),
        .I2(state[0]),
        .I3(state[1]),
        .I4(state[3]),
        .I5(\reg_client_ctl[3]_i_6_n_0 ),
        .O(\gmii_txd[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8804808480048084)) 
    \gmii_txd[7]_i_3 
       (.I0(state[2]),
        .I1(reg_conf_tx_en),
        .I2(state[3]),
        .I3(state[1]),
        .I4(state[0]),
        .I5(reg_conf_tx_no_gen_crc_reg_n_0),
        .O(\gmii_txd[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \gmii_txd[7]_i_4 
       (.I0(\gmii_txd[7]_i_6_n_0 ),
        .I1(p_37_in179_in),
        .I2(\gmii_txd[7]_i_7_n_0 ),
        .I3(p_37_in114_in),
        .I4(p_37_in50_in),
        .I5(\gmii_txd[7]_i_8_n_0 ),
        .O(\gmii_txd[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h1000500010805000)) 
    \gmii_txd[7]_i_5 
       (.I0(state[2]),
        .I1(state[1]),
        .I2(reg_conf_tx_en),
        .I3(state[3]),
        .I4(state[0]),
        .I5(reg_conf_tx_no_gen_crc_reg_n_0),
        .O(\gmii_txd[7]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h01000000)) 
    \gmii_txd[7]_i_6 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[3]),
        .I3(reg_conf_tx_en),
        .I4(state[2]),
        .O(\gmii_txd[7]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \gmii_txd[7]_i_7 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(reg_conf_tx_en),
        .I4(state[2]),
        .O(\gmii_txd[7]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'h04000000)) 
    \gmii_txd[7]_i_8 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[3]),
        .I3(reg_conf_tx_en),
        .I4(state[2]),
        .O(\gmii_txd[7]_i_8_n_0 ));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gmii_txd_reg[0] 
       (.C(tx_clk),
        .CE(1'b1),
        .CLR(client_rdy_i_2_n_0),
        .D(\gmii_txd[0]_i_1_n_0 ),
        .Q(gmii_txd[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gmii_txd_reg[1] 
       (.C(tx_clk),
        .CE(1'b1),
        .CLR(client_rdy_i_2_n_0),
        .D(\gmii_txd[1]_i_1_n_0 ),
        .Q(gmii_txd[1]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gmii_txd_reg[2] 
       (.C(tx_clk),
        .CE(1'b1),
        .CLR(client_rdy_i_2_n_0),
        .D(\gmii_txd[2]_i_1_n_0 ),
        .Q(gmii_txd[2]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gmii_txd_reg[3] 
       (.C(tx_clk),
        .CE(1'b1),
        .CLR(client_rdy_i_2_n_0),
        .D(\gmii_txd[3]_i_1_n_0 ),
        .Q(gmii_txd[3]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gmii_txd_reg[4] 
       (.C(tx_clk),
        .CE(1'b1),
        .CLR(client_rdy_i_2_n_0),
        .D(\gmii_txd[4]_i_1_n_0 ),
        .Q(gmii_txd[4]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gmii_txd_reg[5] 
       (.C(tx_clk),
        .CE(1'b1),
        .CLR(client_rdy_i_2_n_0),
        .D(\gmii_txd[5]_i_1_n_0 ),
        .Q(gmii_txd[5]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gmii_txd_reg[6] 
       (.C(tx_clk),
        .CE(1'b1),
        .CLR(client_rdy_i_2_n_0),
        .D(\gmii_txd[6]_i_1_n_0 ),
        .Q(gmii_txd[6]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gmii_txd_reg[7] 
       (.C(tx_clk),
        .CE(1'b1),
        .CLR(client_rdy_i_2_n_0),
        .D(\gmii_txd[7]_i_1_n_0 ),
        .Q(gmii_txd[7]));
  LUT5 #(
    .INIT(32'hFFFFFFEA)) 
    gmii_txen_i_1
       (.I0(gmii_txen_i_2_n_0),
        .I1(gmii_txen),
        .I2(gmii_txen_i_3_n_0),
        .I3(\gmii_txd[6]_i_2_n_0 ),
        .I4(gmii_txen_i_4_n_0),
        .O(gmii_txen1_out));
  LUT6 #(
    .INIT(64'h10D0000000000000)) 
    gmii_txen_i_2
       (.I0(state[3]),
        .I1(state[2]),
        .I2(reg_conf_tx_en),
        .I3(reg_conf_tx_no_gen_crc_reg_n_0),
        .I4(state[0]),
        .I5(gmii_txen),
        .O(gmii_txen_i_2_n_0));
  LUT4 #(
    .INIT(16'h8000)) 
    gmii_txen_i_3
       (.I0(state[3]),
        .I1(state[0]),
        .I2(reg_conf_tx_en),
        .I3(state[2]),
        .O(gmii_txen_i_3_n_0));
  LUT6 #(
    .INIT(64'h440C000044C00000)) 
    gmii_txen_i_4
       (.I0(state[1]),
        .I1(gmii_txen),
        .I2(state[3]),
        .I3(state[0]),
        .I4(reg_conf_tx_en),
        .I5(state[2]),
        .O(gmii_txen_i_4_n_0));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    gmii_txen_reg
       (.C(tx_clk),
        .CE(1'b1),
        .CLR(client_rdy_i_2_n_0),
        .D(gmii_txen1_out),
        .Q(gmii_txen));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEEE)) 
    gmii_txer_i_1
       (.I0(gmii_txer_i_2_n_0),
        .I1(gmii_txer_i_3_n_0),
        .I2(\reg_client_ctl[3]_i_3_n_0 ),
        .I3(\state[2]_i_5_n_0 ),
        .I4(gmii_txer_i_4_n_0),
        .I5(gmii_txer_i_5_n_0),
        .O(gmii_txer0_out));
  LUT6 #(
    .INIT(64'h0FFC000002000000)) 
    gmii_txer_i_2
       (.I0(client_rdy_reg_i_9_n_0),
        .I1(state[1]),
        .I2(state[3]),
        .I3(state[2]),
        .I4(reg_conf_tx_en),
        .I5(gmii_txer),
        .O(gmii_txer_i_2_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    gmii_txer_i_3
       (.I0(reg_conf_tx_en),
        .I1(gmii_txer),
        .I2(state[0]),
        .O(gmii_txer_i_3_n_0));
  LUT5 #(
    .INIT(32'h00080000)) 
    gmii_txer_i_4
       (.I0(state[2]),
        .I1(reg_conf_tx_en),
        .I2(state[0]),
        .I3(state[3]),
        .I4(client_rdy_reg_i_9_n_0),
        .O(gmii_txer_i_4_n_0));
  LUT6 #(
    .INIT(64'h2AAAAAA0AAAAAAA2)) 
    gmii_txer_i_5
       (.I0(\gmii_txd[7]_i_8_n_0 ),
        .I1(\reg_client_ctl_reg_n_0_[3] ),
        .I2(\reg_client_ctl_reg_n_0_[2] ),
        .I3(\reg_client_ctl_reg_n_0_[0] ),
        .I4(\reg_client_ctl_reg_n_0_[1] ),
        .I5(client_vld),
        .O(gmii_txer_i_5_n_0));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    gmii_txer_reg
       (.C(tx_clk),
        .CE(1'b1),
        .CLR(client_rdy_i_2_n_0),
        .D(gmii_txer0_out),
        .Q(gmii_txer));
  LUT1 #(
    .INIT(2'h1)) 
    \max_data_length[10]_i_1 
       (.I0(conf_tx_jumbo_en),
        .O(\max_data_length[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \max_data_length[13]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(reset_n),
        .I3(state[0]),
        .I4(reg_conf_tx_en),
        .I5(state[2]),
        .O(min_data_length));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \max_data_length[2]_i_1 
       (.I0(conf_tx_no_gen_crc),
        .I1(conf_tx_jumbo_en),
        .O(\max_data_length[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \max_data_length[3]_i_1 
       (.I0(conf_tx_no_gen_crc),
        .I1(conf_tx_jumbo_en),
        .O(\max_data_length[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \max_data_length_reg[10] 
       (.C(tx_clk),
        .CE(min_data_length),
        .D(\max_data_length[10]_i_1_n_0 ),
        .Q(\max_data_length_reg_n_0_[10] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_data_length_reg[13] 
       (.C(tx_clk),
        .CE(min_data_length),
        .D(conf_tx_jumbo_en),
        .Q(\max_data_length_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_data_length_reg[1] 
       (.C(tx_clk),
        .CE(min_data_length),
        .D(1'b1),
        .Q(\max_data_length_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_data_length_reg[2] 
       (.C(tx_clk),
        .CE(min_data_length),
        .D(\max_data_length[2]_i_1_n_0 ),
        .Q(\max_data_length_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_data_length_reg[3] 
       (.C(tx_clk),
        .CE(min_data_length),
        .D(\max_data_length[3]_i_1_n_0 ),
        .Q(\max_data_length_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_data_length_reg[4] 
       (.C(tx_clk),
        .CE(min_data_length),
        .D(conf_tx_jumbo_en),
        .Q(\max_data_length_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_data_length_reg[5] 
       (.C(tx_clk),
        .CE(min_data_length),
        .D(1'b1),
        .Q(\max_data_length_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_data_length_reg[6] 
       (.C(tx_clk),
        .CE(min_data_length),
        .D(\max_data_length[10]_i_1_n_0 ),
        .Q(\max_data_length_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_data_length_reg[7] 
       (.C(tx_clk),
        .CE(min_data_length),
        .D(\max_data_length[10]_i_1_n_0 ),
        .Q(\max_data_length_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_data_length_reg[8] 
       (.C(tx_clk),
        .CE(min_data_length),
        .D(1'b1),
        .Q(\max_data_length_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_data_length_reg[9] 
       (.C(tx_clk),
        .CE(min_data_length),
        .D(conf_tx_jumbo_en),
        .Q(\max_data_length_reg_n_0_[9] ),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \min_data_length[5]_i_1 
       (.I0(conf_tx_no_gen_crc),
        .O(\min_data_length[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \min_data_length_reg[2] 
       (.C(tx_clk),
        .CE(min_data_length),
        .D(\min_data_length[5]_i_1_n_0 ),
        .Q(\min_data_length_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \min_data_length_reg[3] 
       (.C(tx_clk),
        .CE(min_data_length),
        .D(\min_data_length[5]_i_1_n_0 ),
        .Q(\min_data_length_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \min_data_length_reg[4] 
       (.C(tx_clk),
        .CE(min_data_length),
        .D(\min_data_length[5]_i_1_n_0 ),
        .Q(\min_data_length_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \min_data_length_reg[5] 
       (.C(tx_clk),
        .CE(min_data_length),
        .D(\min_data_length[5]_i_1_n_0 ),
        .Q(\min_data_length_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \min_data_length_reg[6] 
       (.C(tx_clk),
        .CE(min_data_length),
        .D(conf_tx_no_gen_crc),
        .Q(\min_data_length_reg_n_0_[6] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_ctl[0]_i_1 
       (.I0(reg_conf_tx_en),
        .I1(client_ctl[0]),
        .O(\reg_client_ctl[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_ctl[1]_i_1 
       (.I0(reg_conf_tx_en),
        .I1(client_ctl[1]),
        .O(\reg_client_ctl[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_ctl[2]_i_1 
       (.I0(client_ctl[2]),
        .I1(reg_conf_tx_en),
        .O(\reg_client_ctl[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h4C0C4000FFFFFFFF)) 
    \reg_client_ctl[3]_i_1 
       (.I0(\reg_client_ctl[3]_i_3_n_0 ),
        .I1(\reg_client_ctl[3]_i_4_n_0 ),
        .I2(state[2]),
        .I3(\reg_client_ctl[3]_i_5_n_0 ),
        .I4(\reg_client_ctl[3]_i_6_n_0 ),
        .I5(reg_conf_tx_en),
        .O(reg_client_dat));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_ctl[3]_i_2 
       (.I0(reg_conf_tx_en),
        .I1(client_ctl[3]),
        .O(\reg_client_ctl[3]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \reg_client_ctl[3]_i_3 
       (.I0(client_rdy_reg_i_9_n_0),
        .I1(client_vld),
        .O(\reg_client_ctl[3]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \reg_client_ctl[3]_i_4 
       (.I0(state[3]),
        .I1(state[1]),
        .I2(state[0]),
        .O(\reg_client_ctl[3]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT4 #(
    .INIT(16'h8001)) 
    \reg_client_ctl[3]_i_5 
       (.I0(\reg_client_ctl_reg_n_0_[1] ),
        .I1(\reg_client_ctl_reg_n_0_[0] ),
        .I2(\reg_client_ctl_reg_n_0_[2] ),
        .I3(\reg_client_ctl_reg_n_0_[3] ),
        .O(\reg_client_ctl[3]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \reg_client_ctl[3]_i_6 
       (.I0(\cnt_reg_n_0_[2] ),
        .I1(\cnt_reg_n_0_[0] ),
        .I2(\cnt_reg_n_0_[1] ),
        .I3(\cnt_reg_n_0_[3] ),
        .O(\reg_client_ctl[3]_i_6_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_ctl_reg[0] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_ctl[0]_i_1_n_0 ),
        .Q(\reg_client_ctl_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_ctl_reg[1] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_ctl[1]_i_1_n_0 ),
        .Q(\reg_client_ctl_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_ctl_reg[2] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_ctl[2]_i_1_n_0 ),
        .Q(\reg_client_ctl_reg_n_0_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_ctl_reg[3] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_ctl[3]_i_2_n_0 ),
        .Q(\reg_client_ctl_reg_n_0_[3] ));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[0]_i_1 
       (.I0(client_dat[0]),
        .I1(reg_conf_tx_en),
        .O(\reg_client_dat[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[10]_i_1 
       (.I0(reg_conf_tx_en),
        .I1(client_dat[10]),
        .O(\reg_client_dat[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[11]_i_1 
       (.I0(reg_conf_tx_en),
        .I1(client_dat[11]),
        .O(\reg_client_dat[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[12]_i_1 
       (.I0(client_dat[12]),
        .I1(reg_conf_tx_en),
        .O(\reg_client_dat[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[13]_i_1 
       (.I0(reg_conf_tx_en),
        .I1(client_dat[13]),
        .O(\reg_client_dat[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[14]_i_1 
       (.I0(reg_conf_tx_en),
        .I1(client_dat[14]),
        .O(\reg_client_dat[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[15]_i_1 
       (.I0(reg_conf_tx_en),
        .I1(client_dat[15]),
        .O(\reg_client_dat[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[16]_i_1 
       (.I0(reg_conf_tx_en),
        .I1(client_dat[16]),
        .O(\reg_client_dat[16]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[17]_i_1 
       (.I0(reg_conf_tx_en),
        .I1(client_dat[17]),
        .O(\reg_client_dat[17]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[18]_i_1 
       (.I0(client_dat[18]),
        .I1(reg_conf_tx_en),
        .O(\reg_client_dat[18]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[19]_i_1 
       (.I0(client_dat[19]),
        .I1(reg_conf_tx_en),
        .O(\reg_client_dat[19]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[1]_i_1 
       (.I0(client_dat[1]),
        .I1(reg_conf_tx_en),
        .O(\reg_client_dat[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[20]_i_1 
       (.I0(client_dat[20]),
        .I1(reg_conf_tx_en),
        .O(\reg_client_dat[20]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[21]_i_1 
       (.I0(client_dat[21]),
        .I1(reg_conf_tx_en),
        .O(\reg_client_dat[21]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[22]_i_1 
       (.I0(client_dat[22]),
        .I1(reg_conf_tx_en),
        .O(\reg_client_dat[22]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[23]_i_1 
       (.I0(reg_conf_tx_en),
        .I1(client_dat[23]),
        .O(\reg_client_dat[23]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[24]_i_1 
       (.I0(reg_conf_tx_en),
        .I1(client_dat[24]),
        .O(\reg_client_dat[24]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[25]_i_1 
       (.I0(reg_conf_tx_en),
        .I1(client_dat[25]),
        .O(\reg_client_dat[25]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[26]_i_1 
       (.I0(reg_conf_tx_en),
        .I1(client_dat[26]),
        .O(\reg_client_dat[26]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[27]_i_1 
       (.I0(reg_conf_tx_en),
        .I1(client_dat[27]),
        .O(\reg_client_dat[27]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[28]_i_1 
       (.I0(reg_conf_tx_en),
        .I1(client_dat[28]),
        .O(\reg_client_dat[28]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[29]_i_1 
       (.I0(reg_conf_tx_en),
        .I1(client_dat[29]),
        .O(\reg_client_dat[29]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[2]_i_1 
       (.I0(client_dat[2]),
        .I1(reg_conf_tx_en),
        .O(\reg_client_dat[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[30]_i_1 
       (.I0(client_dat[30]),
        .I1(reg_conf_tx_en),
        .O(\reg_client_dat[30]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[31]_i_1 
       (.I0(client_dat[31]),
        .I1(reg_conf_tx_en),
        .O(\reg_client_dat[31]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[3]_i_1 
       (.I0(client_dat[3]),
        .I1(reg_conf_tx_en),
        .O(\reg_client_dat[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[4]_i_1 
       (.I0(client_dat[4]),
        .I1(reg_conf_tx_en),
        .O(\reg_client_dat[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[5]_i_1 
       (.I0(client_dat[5]),
        .I1(reg_conf_tx_en),
        .O(\reg_client_dat[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[6]_i_1 
       (.I0(client_dat[6]),
        .I1(reg_conf_tx_en),
        .O(\reg_client_dat[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[7]_i_1 
       (.I0(client_dat[7]),
        .I1(reg_conf_tx_en),
        .O(\reg_client_dat[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[8]_i_1 
       (.I0(client_dat[8]),
        .I1(reg_conf_tx_en),
        .O(\reg_client_dat[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \reg_client_dat[9]_i_1 
       (.I0(client_dat[9]),
        .I1(reg_conf_tx_en),
        .O(\reg_client_dat[9]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[0] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[0]_i_1_n_0 ),
        .Q(\reg_client_dat_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[10] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[10]_i_1_n_0 ),
        .Q(p_15_in191_in));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[11] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[11]_i_1_n_0 ),
        .Q(p_13_in189_in));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[12] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[12]_i_1_n_0 ),
        .Q(p_11_in187_in));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[13] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[13]_i_1_n_0 ),
        .Q(p_7_in185_in));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[14] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[14]_i_1_n_0 ),
        .Q(p_4_in182_in));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[15] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[15]_i_1_n_0 ),
        .Q(p_37_in179_in));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[16] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[16]_i_1_n_0 ),
        .Q(\reg_client_dat_reg_n_0_[16] ));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[17] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[17]_i_1_n_0 ),
        .Q(p_0_in113_in));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[18] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[18]_i_1_n_0 ),
        .Q(p_15_in126_in));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[19] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[19]_i_1_n_0 ),
        .Q(p_13_in124_in));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[1] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[1]_i_1_n_0 ),
        .Q(p_0_in284_in));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[20] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[20]_i_1_n_0 ),
        .Q(p_11_in122_in));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[21] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[21]_i_1_n_0 ),
        .Q(p_7_in120_in));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[22] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[22]_i_1_n_0 ),
        .Q(p_4_in117_in));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[23] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[23]_i_1_n_0 ),
        .Q(p_37_in114_in));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[24] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[24]_i_1_n_0 ),
        .Q(\reg_client_dat_reg_n_0_[24] ));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[25] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[25]_i_1_n_0 ),
        .Q(p_0_in49_in));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[26] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[26]_i_1_n_0 ),
        .Q(p_15_in61_in));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[27] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[27]_i_1_n_0 ),
        .Q(p_13_in59_in));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[28] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[28]_i_1_n_0 ),
        .Q(p_11_in57_in));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[29] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[29]_i_1_n_0 ),
        .Q(p_7_in));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[2] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[2]_i_1_n_0 ),
        .Q(p_13_in295_in));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[30] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[30]_i_1_n_0 ),
        .Q(p_4_in53_in));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[31] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[31]_i_1_n_0 ),
        .Q(p_37_in50_in));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[3] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[3]_i_1_n_0 ),
        .Q(p_11_in293_in));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[4] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[4]_i_1_n_0 ),
        .Q(p_9_in291_in));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[5] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[5]_i_1_n_0 ),
        .Q(p_5_in289_in));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[6] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[6]_i_1_n_0 ),
        .Q(p_2_in286_in));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[7] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[7]_i_1_n_0 ),
        .Q(p_30_in));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[8] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[8]_i_1_n_0 ),
        .Q(\reg_client_dat_reg_n_0_[8] ));
  FDCE #(
    .INIT(1'b0)) 
    \reg_client_dat_reg[9] 
       (.C(tx_clk),
        .CE(reg_client_dat),
        .CLR(client_rdy_i_2_n_0),
        .D(\reg_client_dat[9]_i_1_n_0 ),
        .Q(p_0_in178_in));
  LUT6 #(
    .INIT(64'hFFFFBFFFAAAAAAAA)) 
    reg_conf_tx_en_i_1
       (.I0(conf_tx_en),
        .I1(state[1]),
        .I2(state[3]),
        .I3(state[0]),
        .I4(state[2]),
        .I5(reg_conf_tx_en),
        .O(reg_conf_tx_en_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    reg_conf_tx_en_reg
       (.C(tx_clk),
        .CE(1'b1),
        .CLR(client_rdy_i_2_n_0),
        .D(reg_conf_tx_en_i_1_n_0),
        .Q(reg_conf_tx_en));
  LUT6 #(
    .INIT(64'hFFFFFFBF00000080)) 
    reg_conf_tx_no_gen_crc_i_1
       (.I0(conf_tx_no_gen_crc),
        .I1(state[0]),
        .I2(reg_conf_tx_en),
        .I3(state[2]),
        .I4(\cnt[3]_i_6_n_0 ),
        .I5(reg_conf_tx_no_gen_crc_reg_n_0),
        .O(reg_conf_tx_no_gen_crc_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    reg_conf_tx_no_gen_crc_reg
       (.C(tx_clk),
        .CE(1'b1),
        .CLR(client_rdy_i_2_n_0),
        .D(reg_conf_tx_no_gen_crc_i_1_n_0),
        .Q(reg_conf_tx_no_gen_crc_reg_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFB)) 
    \state[0]_i_1 
       (.I0(\state[0]_i_2_n_0 ),
        .I1(reg_conf_tx_en),
        .I2(\state[0]_i_3_n_0 ),
        .I3(\state[0]_i_4_n_0 ),
        .I4(\state[0]_i_5_n_0 ),
        .I5(\state[0]_i_6_n_0 ),
        .O(\state[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \state[0]_i_10 
       (.I0(state[1]),
        .I1(state[0]),
        .I2(state[2]),
        .O(\state[0]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT4 #(
    .INIT(16'h7EFE)) 
    \state[0]_i_11 
       (.I0(\reg_client_ctl_reg_n_0_[2] ),
        .I1(\reg_client_ctl_reg_n_0_[0] ),
        .I2(\reg_client_ctl_reg_n_0_[1] ),
        .I3(\reg_client_ctl_reg_n_0_[3] ),
        .O(\state[0]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \state[0]_i_12 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[2]),
        .O(\state[0]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h00005454FF005454)) 
    \state[0]_i_2 
       (.I0(state[0]),
        .I1(\state[0]_i_7_n_0 ),
        .I2(state[3]),
        .I3(\state[0]_i_8_n_0 ),
        .I4(state[2]),
        .I5(client_rdy_reg_i_9_n_0),
        .O(\state[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF8000)) 
    \state[0]_i_3 
       (.I0(state[2]),
        .I1(reg_conf_tx_no_gen_crc_reg_n_0),
        .I2(state[0]),
        .I3(state[1]),
        .I4(\state[3]_i_3_n_0 ),
        .O(\state[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000200000000000)) 
    \state[0]_i_4 
       (.I0(\state[0]_i_9_n_0 ),
        .I1(state[2]),
        .I2(\state[3]_i_10_n_0 ),
        .I3(client_vld),
        .I4(client_rdy_reg_i_9_n_0),
        .I5(\state[3]_i_11_n_0 ),
        .O(\state[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h000000004F444444)) 
    \state[0]_i_5 
       (.I0(\state[3]_i_9_n_0 ),
        .I1(\state[0]_i_10_n_0 ),
        .I2(\state[0]_i_11_n_0 ),
        .I3(\state[0]_i_12_n_0 ),
        .I4(client_vld),
        .I5(client_rdy_reg_i_9_n_0),
        .O(\state[0]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hAFA00400)) 
    \state[0]_i_6 
       (.I0(state[2]),
        .I1(\reg_client_ctl[3]_i_6_n_0 ),
        .I2(state[0]),
        .I3(state[1]),
        .I4(state[3]),
        .O(\state[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    \state[0]_i_7 
       (.I0(client_ctl[2]),
        .I1(client_ctl[3]),
        .I2(client_ctl[0]),
        .I3(client_ctl[1]),
        .I4(state[1]),
        .I5(client_vld),
        .O(\state[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000040)) 
    \state[0]_i_8 
       (.I0(\reg_client_ctl_reg_n_0_[2] ),
        .I1(\reg_client_ctl_reg_n_0_[3] ),
        .I2(\state[1]_i_8_n_0 ),
        .I3(\reg_client_ctl_reg_n_0_[1] ),
        .I4(\reg_client_ctl_reg_n_0_[0] ),
        .I5(\crc_reg[26]_i_2_n_0 ),
        .O(\state[0]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \state[0]_i_9 
       (.I0(\reg_client_ctl_reg_n_0_[0] ),
        .I1(\reg_client_ctl_reg_n_0_[1] ),
        .O(\state[0]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \state[1]_i_1 
       (.I0(\state[1]_i_2_n_0 ),
        .I1(\state[1]_i_3_n_0 ),
        .I2(\state[1]_i_4_n_0 ),
        .I3(\state[1]_i_5_n_0 ),
        .I4(\state[1]_i_6_n_0 ),
        .I5(\state[1]_i_7_n_0 ),
        .O(\state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000008)) 
    \state[1]_i_10 
       (.I0(client_vld),
        .I1(\state[1]_i_8_n_0 ),
        .I2(\reg_client_ctl_reg_n_0_[3] ),
        .I3(\reg_client_ctl_reg_n_0_[2] ),
        .I4(\reg_client_ctl_reg_n_0_[1] ),
        .I5(\reg_client_ctl_reg_n_0_[0] ),
        .O(\state[1]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0003000000004400)) 
    \state[1]_i_11 
       (.I0(state[1]),
        .I1(state[2]),
        .I2(state[3]),
        .I3(\reg_client_ctl_reg_n_0_[1] ),
        .I4(state[0]),
        .I5(\reg_client_ctl_reg_n_0_[0] ),
        .O(\state[1]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h83FCFFFF83B8FFFF)) 
    \state[1]_i_2 
       (.I0(state[3]),
        .I1(state[2]),
        .I2(state[1]),
        .I3(state[0]),
        .I4(reg_conf_tx_en),
        .I5(client_rdy_reg_i_9_n_0),
        .O(\state[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0004)) 
    \state[1]_i_3 
       (.I0(\state[3]_i_14_n_0 ),
        .I1(\state[1]_i_8_n_0 ),
        .I2(\state_reg[3]_i_8_n_1 ),
        .I3(\state[1]_i_9_n_0 ),
        .I4(\state[1]_i_10_n_0 ),
        .I5(\state[0]_i_3_n_0 ),
        .O(\state[1]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h0100)) 
    \state[1]_i_4 
       (.I0(\state_reg[3]_i_8_n_1 ),
        .I1(\reg_client_ctl_reg_n_0_[2] ),
        .I2(\reg_client_ctl_reg_n_0_[3] ),
        .I3(\state[1]_i_11_n_0 ),
        .O(\state[1]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h0000008A)) 
    \state[1]_i_5 
       (.I0(state[0]),
        .I1(client_rdy_reg_i_9_n_0),
        .I2(client_vld),
        .I3(state[3]),
        .I4(state[2]),
        .O(\state[1]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h0000C404)) 
    \state[1]_i_6 
       (.I0(\state_reg[3]_i_8_n_1 ),
        .I1(state[0]),
        .I2(state[3]),
        .I3(\state_reg[3]_i_15_n_3 ),
        .I4(state[1]),
        .O(\state[1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFEFFFF00000000)) 
    \state[1]_i_7 
       (.I0(client_rdy_reg_i_9_n_0),
        .I1(\reg_client_ctl_reg_n_0_[3] ),
        .I2(\reg_client_ctl_reg_n_0_[0] ),
        .I3(\reg_client_ctl_reg_n_0_[1] ),
        .I4(\reg_client_ctl_reg_n_0_[2] ),
        .I5(\crc_reg[14]_i_3_n_0 ),
        .O(\state[1]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \state[1]_i_8 
       (.I0(state[1]),
        .I1(state[0]),
        .O(\state[1]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \state[1]_i_9 
       (.I0(\reg_client_ctl_reg_n_0_[1] ),
        .I1(\reg_client_ctl_reg_n_0_[0] ),
        .O(\state[1]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEEE)) 
    \state[2]_i_1 
       (.I0(\state[2]_i_2_n_0 ),
        .I1(\state[2]_i_3_n_0 ),
        .I2(\reg_client_ctl[3]_i_3_n_0 ),
        .I3(\state[2]_i_4_n_0 ),
        .I4(\state[2]_i_5_n_0 ),
        .I5(\state[2]_i_6_n_0 ),
        .O(\state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEEAEEEAEEEAAAAE)) 
    \state[2]_i_2 
       (.I0(\state[2]_i_7_n_0 ),
        .I1(gmii_txen_i_3_n_0),
        .I2(client_ctl[3]),
        .I3(client_ctl[2]),
        .I4(client_ctl[1]),
        .I5(client_ctl[0]),
        .O(\state[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF888FFFF00000000)) 
    \state[2]_i_3 
       (.I0(client_ctl[3]),
        .I1(client_ctl[2]),
        .I2(client_ctl[1]),
        .I3(client_ctl[0]),
        .I4(client_vld),
        .I5(gmii_txen_i_3_n_0),
        .O(\state[2]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h1000)) 
    \state[2]_i_4 
       (.I0(state[3]),
        .I1(state[0]),
        .I2(reg_conf_tx_en),
        .I3(state[2]),
        .O(\state[2]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00200000)) 
    \state[2]_i_5 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(reg_conf_tx_en),
        .I3(state[2]),
        .I4(state[0]),
        .O(\state[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h5500570055005D00)) 
    \state[2]_i_6 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(\state[2]_i_8_n_0 ),
        .I4(\reg_client_ctl_reg_n_0_[2] ),
        .I5(\state[2]_i_9_n_0 ),
        .O(\state[2]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT5 #(
    .INIT(32'h08888888)) 
    \state[2]_i_7 
       (.I0(\reg_client_ctl_reg_n_0_[2] ),
        .I1(\state[2]_i_4_n_0 ),
        .I2(\reg_client_ctl_reg_n_0_[0] ),
        .I3(\reg_client_ctl_reg_n_0_[1] ),
        .I4(\reg_client_ctl_reg_n_0_[3] ),
        .O(\state[2]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \state[2]_i_8 
       (.I0(state[2]),
        .I1(reg_conf_tx_en),
        .O(\state[2]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \state[2]_i_9 
       (.I0(\reg_client_ctl_reg_n_0_[1] ),
        .I1(\reg_client_ctl_reg_n_0_[0] ),
        .I2(\reg_client_ctl_reg_n_0_[3] ),
        .O(\state[2]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \state[3]_i_1 
       (.I0(\state[3]_i_2_n_0 ),
        .I1(\state[3]_i_3_n_0 ),
        .I2(\state[3]_i_4_n_0 ),
        .I3(\state[3]_i_5_n_0 ),
        .I4(\state[3]_i_6_n_0 ),
        .I5(\state[3]_i_7_n_0 ),
        .O(\state[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \state[3]_i_10 
       (.I0(\reg_client_ctl_reg_n_0_[2] ),
        .I1(\reg_client_ctl_reg_n_0_[3] ),
        .O(\state[3]_i_10_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \state[3]_i_11 
       (.I0(state[3]),
        .I1(state[1]),
        .I2(state[0]),
        .O(\state[3]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \state[3]_i_12 
       (.I0(state[2]),
        .I1(state[0]),
        .O(\state[3]_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT5 #(
    .INIT(32'h7FFCFFFD)) 
    \state[3]_i_13 
       (.I0(client_vld),
        .I1(\reg_client_ctl_reg_n_0_[1] ),
        .I2(\reg_client_ctl_reg_n_0_[0] ),
        .I3(\reg_client_ctl_reg_n_0_[2] ),
        .I4(\reg_client_ctl_reg_n_0_[3] ),
        .O(\state[3]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \state[3]_i_14 
       (.I0(\reg_client_ctl_reg_n_0_[2] ),
        .I1(\reg_client_ctl_reg_n_0_[3] ),
        .O(\state[3]_i_14_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \state[3]_i_17 
       (.I0(client_rdy_reg_i_12_n_2),
        .O(\state[3]_i_17_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \state[3]_i_18 
       (.I0(client_rdy_reg_i_12_n_7),
        .I1(client_rdy_reg_i_28_n_4),
        .O(\state[3]_i_18_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \state[3]_i_19 
       (.I0(client_rdy_reg_i_28_n_6),
        .I1(client_rdy_reg_i_28_n_5),
        .O(\state[3]_i_19_n_0 ));
  LUT5 #(
    .INIT(32'h00FFB000)) 
    \state[3]_i_2 
       (.I0(client_rdy_reg_i_9_n_0),
        .I1(client_vld),
        .I2(state[1]),
        .I3(state[0]),
        .I4(state[3]),
        .O(\state[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \state[3]_i_21 
       (.I0(client_rdy_reg_i_12_n_7),
        .I1(client_rdy_reg_i_28_n_4),
        .I2(client_rdy_reg_i_12_n_2),
        .O(\state[3]_i_21_n_0 ));
  LUT3 #(
    .INIT(8'h10)) 
    \state[3]_i_22 
       (.I0(client_rdy_reg_i_29_n_6),
        .I1(client_rdy_reg_i_29_n_5),
        .I2(\min_data_length_reg_n_0_[6] ),
        .O(\state[3]_i_22_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \state[3]_i_23 
       (.I0(\min_data_length_reg_n_0_[5] ),
        .I1(client_rdy_reg_i_29_n_7),
        .I2(\min_data_length_reg_n_0_[4] ),
        .I3(client_rdy_reg_i_30_n_4),
        .O(\state[3]_i_23_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \state[3]_i_24 
       (.I0(\min_data_length_reg_n_0_[3] ),
        .I1(client_rdy_reg_i_30_n_5),
        .I2(\min_data_length_reg_n_0_[2] ),
        .I3(client_rdy_reg_i_30_n_6),
        .O(\state[3]_i_24_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \state[3]_i_25 
       (.I0(client_rdy_reg_i_28_n_7),
        .I1(client_rdy_reg_i_29_n_4),
        .O(\state[3]_i_25_n_0 ));
  LUT3 #(
    .INIT(8'h21)) 
    \state[3]_i_26 
       (.I0(\min_data_length_reg_n_0_[6] ),
        .I1(client_rdy_reg_i_29_n_5),
        .I2(client_rdy_reg_i_29_n_6),
        .O(\state[3]_i_26_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \state[3]_i_27 
       (.I0(\min_data_length_reg_n_0_[4] ),
        .I1(client_rdy_reg_i_30_n_4),
        .I2(\min_data_length_reg_n_0_[5] ),
        .I3(client_rdy_reg_i_29_n_7),
        .O(\state[3]_i_27_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \state[3]_i_28 
       (.I0(\min_data_length_reg_n_0_[2] ),
        .I1(client_rdy_reg_i_30_n_6),
        .I2(\min_data_length_reg_n_0_[3] ),
        .I3(client_rdy_reg_i_30_n_5),
        .O(\state[3]_i_28_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \state[3]_i_29 
       (.I0(client_rdy_reg_i_28_n_7),
        .I1(client_rdy_reg_i_28_n_6),
        .I2(client_rdy_reg_i_28_n_5),
        .O(\state[3]_i_29_n_0 ));
  LUT6 #(
    .INIT(64'hFBFF000000000000)) 
    \state[3]_i_3 
       (.I0(\cnt_reg_n_0_[2] ),
        .I1(\cnt_reg_n_0_[3] ),
        .I2(\cnt_reg_n_0_[1] ),
        .I3(\cnt_reg_n_0_[0] ),
        .I4(state[3]),
        .I5(state[1]),
        .O(\state[3]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h1001)) 
    \state[3]_i_30 
       (.I0(client_rdy_reg_i_29_n_5),
        .I1(client_rdy_reg_i_29_n_4),
        .I2(client_rdy_reg_i_29_n_6),
        .I3(\min_data_length_reg_n_0_[6] ),
        .O(\state[3]_i_30_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \state[3]_i_31 
       (.I0(\min_data_length_reg_n_0_[5] ),
        .I1(client_rdy_reg_i_29_n_7),
        .I2(\min_data_length_reg_n_0_[4] ),
        .I3(client_rdy_reg_i_30_n_4),
        .I4(client_rdy_reg_i_30_n_5),
        .I5(\min_data_length_reg_n_0_[3] ),
        .O(\state[3]_i_31_n_0 ));
  LUT4 #(
    .INIT(16'h0090)) 
    \state[3]_i_32 
       (.I0(client_rdy_reg_i_30_n_6),
        .I1(\min_data_length_reg_n_0_[2] ),
        .I2(dcnt[0]),
        .I3(\dcnt_reg[4]_i_2_n_7 ),
        .O(\state[3]_i_32_n_0 ));
  LUT6 #(
    .INIT(64'h4040404044404040)) 
    \state[3]_i_4 
       (.I0(state[3]),
        .I1(state[2]),
        .I2(client_rdy_reg_i_9_n_0),
        .I3(\state_reg[3]_i_8_n_1 ),
        .I4(state[0]),
        .I5(\state[3]_i_9_n_0 ),
        .O(\state[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0880008008000000)) 
    \state[3]_i_5 
       (.I0(\state_reg[3]_i_8_n_1 ),
        .I1(\state[3]_i_10_n_0 ),
        .I2(\reg_client_ctl_reg_n_0_[1] ),
        .I3(\reg_client_ctl_reg_n_0_[0] ),
        .I4(\state[3]_i_11_n_0 ),
        .I5(\state[3]_i_12_n_0 ),
        .O(\state[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h8888888880888080)) 
    \state[3]_i_6 
       (.I0(state[2]),
        .I1(state[1]),
        .I2(\state[3]_i_13_n_0 ),
        .I3(\state[3]_i_14_n_0 ),
        .I4(\state_reg[3]_i_8_n_1 ),
        .I5(state[0]),
        .O(\state[3]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h0070FFFF)) 
    \state[3]_i_7 
       (.I0(\state_reg[3]_i_15_n_3 ),
        .I1(state[2]),
        .I2(state[3]),
        .I3(state[1]),
        .I4(reg_conf_tx_en),
        .O(\state[3]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT4 #(
    .INIT(16'hFEFF)) 
    \state[3]_i_9 
       (.I0(\reg_client_ctl_reg_n_0_[3] ),
        .I1(\reg_client_ctl_reg_n_0_[0] ),
        .I2(\reg_client_ctl_reg_n_0_[1] ),
        .I3(\reg_client_ctl_reg_n_0_[2] ),
        .O(\state[3]_i_9_n_0 ));
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    \state_reg[0] 
       (.C(tx_clk),
        .CE(1'b1),
        .D(\state[0]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(state[0]));
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    \state_reg[1] 
       (.C(tx_clk),
        .CE(1'b1),
        .D(\state[1]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(state[1]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \state_reg[2] 
       (.C(tx_clk),
        .CE(1'b1),
        .CLR(client_rdy_i_2_n_0),
        .D(\state[2]_i_1_n_0 ),
        .Q(state[2]));
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    \state_reg[3] 
       (.C(tx_clk),
        .CE(1'b1),
        .D(\state[3]_i_1_n_0 ),
        .PRE(client_rdy_i_2_n_0),
        .Q(state[3]));
  CARRY4 \state_reg[3]_i_15 
       (.CI(\state_reg[3]_i_20_n_0 ),
        .CO({\NLW_state_reg[3]_i_15_CO_UNCONNECTED [3:1],\state_reg[3]_i_15_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_state_reg[3]_i_15_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,1'b0,\state[3]_i_21_n_0 }));
  CARRY4 \state_reg[3]_i_16 
       (.CI(1'b0),
        .CO({\state_reg[3]_i_16_n_0 ,\state_reg[3]_i_16_n_1 ,\state_reg[3]_i_16_n_2 ,\state_reg[3]_i_16_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\state[3]_i_22_n_0 ,\state[3]_i_23_n_0 ,\state[3]_i_24_n_0 }),
        .O(\NLW_state_reg[3]_i_16_O_UNCONNECTED [3:0]),
        .S({\state[3]_i_25_n_0 ,\state[3]_i_26_n_0 ,\state[3]_i_27_n_0 ,\state[3]_i_28_n_0 }));
  CARRY4 \state_reg[3]_i_20 
       (.CI(1'b0),
        .CO({\state_reg[3]_i_20_n_0 ,\state_reg[3]_i_20_n_1 ,\state_reg[3]_i_20_n_2 ,\state_reg[3]_i_20_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_state_reg[3]_i_20_O_UNCONNECTED [3:0]),
        .S({\state[3]_i_29_n_0 ,\state[3]_i_30_n_0 ,\state[3]_i_31_n_0 ,\state[3]_i_32_n_0 }));
  CARRY4 \state_reg[3]_i_8 
       (.CI(\state_reg[3]_i_16_n_0 ),
        .CO({\NLW_state_reg[3]_i_8_CO_UNCONNECTED [3],\state_reg[3]_i_8_n_1 ,\state_reg[3]_i_8_n_2 ,\state_reg[3]_i_8_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_state_reg[3]_i_8_O_UNCONNECTED [3:0]),
        .S({1'b0,\state[3]_i_17_n_0 ,\state[3]_i_18_n_0 ,\state[3]_i_19_n_0 }));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module gig_eth_fifo_async_17x32_blk_mem_gen_generic_cstr
   (D,
    rd_clk,
    wr_clk,
    tmp_ram_rd_en,
    E,
    SR,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    Q,
    din);
  output [16:0]D;
  input rd_clk;
  input wr_clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]SR;
  input [4:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [4:0]Q;
  input [16:0]din;

  wire [16:0]D;
  wire [4:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire [4:0]Q;
  wire [0:0]SR;
  wire [16:0]din;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  gig_eth_fifo_async_17x32_blk_mem_gen_prim_width \ramloop[0].ram.r 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .Q(Q),
        .SR(SR),
        .din(din),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module gig_eth_fifo_async_17x32_blk_mem_gen_prim_width
   (D,
    rd_clk,
    wr_clk,
    tmp_ram_rd_en,
    E,
    SR,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    Q,
    din);
  output [16:0]D;
  input rd_clk;
  input wr_clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]SR;
  input [4:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [4:0]Q;
  input [16:0]din;

  wire [16:0]D;
  wire [4:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire [4:0]Q;
  wire [0:0]SR;
  wire [16:0]din;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  gig_eth_fifo_async_17x32_blk_mem_gen_prim_wrapper \prim_noinit.ram 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .Q(Q),
        .SR(SR),
        .din(din),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module gig_eth_fifo_async_17x32_blk_mem_gen_prim_wrapper
   (D,
    rd_clk,
    wr_clk,
    tmp_ram_rd_en,
    E,
    SR,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ,
    Q,
    din);
  output [16:0]D;
  input rd_clk;
  input wr_clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]SR;
  input [4:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ;
  input [4:0]Q;
  input [16:0]din;

  wire [16:0]D;
  wire [4:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_0 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_1 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_10 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_16 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_17 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_18 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_19 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_2 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_24 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_25 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_26 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_27 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_3 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_32 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_33 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_34 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_35 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_8 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_9 ;
  wire [0:0]E;
  wire [4:0]Q;
  wire [0:0]SR;
  wire [16:0]din;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram 
       (.ADDRARDADDR({1'b0,1'b0,1'b0,1'b0,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({1'b0,1'b0,1'b0,1'b0,Q,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(rd_clk),
        .CLKBWRCLK(wr_clk),
        .DIADI({1'b0,1'b0,1'b0,1'b0,din[8:5],1'b0,1'b0,1'b0,din[4:0]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,din[16:13],1'b0,1'b0,1'b0,1'b0,din[12:9]}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_0 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_1 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_2 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_3 ,D[8:5],\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_8 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_9 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_10 ,D[4:0]}),
        .DOBDO({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_16 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_17 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_18 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_19 ,D[16:13],\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_24 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_25 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_26 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_27 ,D[12:9]}),
        .DOPADOP({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_32 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_33 }),
        .DOPBDOP({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_34 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_n_35 }),
        .ENARDEN(tmp_ram_rd_en),
        .ENBWREN(E),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(SR),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({E,E,E,E}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module gig_eth_fifo_async_17x32_blk_mem_gen_top
   (D,
    rd_clk,
    wr_clk,
    tmp_ram_rd_en,
    E,
    SR,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    Q,
    din);
  output [16:0]D;
  input rd_clk;
  input wr_clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]SR;
  input [4:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [4:0]Q;
  input [16:0]din;

  wire [16:0]D;
  wire [4:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire [4:0]Q;
  wire [0:0]SR;
  wire [16:0]din;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  gig_eth_fifo_async_17x32_blk_mem_gen_generic_cstr \valid.cstr 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .Q(Q),
        .SR(SR),
        .din(din),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_2" *) 
module gig_eth_fifo_async_17x32_blk_mem_gen_v8_4_2
   (D,
    rd_clk,
    wr_clk,
    tmp_ram_rd_en,
    E,
    SR,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    Q,
    din);
  output [16:0]D;
  input rd_clk;
  input wr_clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]SR;
  input [4:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [4:0]Q;
  input [16:0]din;

  wire [16:0]D;
  wire [4:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire [4:0]Q;
  wire [0:0]SR;
  wire [16:0]din;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  gig_eth_fifo_async_17x32_blk_mem_gen_v8_4_2_synth inst_blk_mem_gen
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .Q(Q),
        .SR(SR),
        .din(din),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_2_synth" *) 
module gig_eth_fifo_async_17x32_blk_mem_gen_v8_4_2_synth
   (D,
    rd_clk,
    wr_clk,
    tmp_ram_rd_en,
    E,
    SR,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    Q,
    din);
  output [16:0]D;
  input rd_clk;
  input wr_clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]SR;
  input [4:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [4:0]Q;
  input [16:0]din;

  wire [16:0]D;
  wire [4:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire [4:0]Q;
  wire [0:0]SR;
  wire [16:0]din;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  gig_eth_fifo_async_17x32_blk_mem_gen_top \gnbram.gnativebmg.native_blk_mem_gen 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .Q(Q),
        .SR(SR),
        .din(din),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "clk_x_pntrs" *) 
module gig_eth_fifo_async_17x32_clk_x_pntrs
   (D,
    RD_PNTR_WR,
    \dest_out_bin_ff_reg[2] ,
    \dest_out_bin_ff_reg[0] ,
    WR_PNTR_RD,
    \dest_out_bin_ff_reg[1] ,
    \dest_out_bin_ff_reg[2]_0 ,
    Q,
    ram_empty_fb_i_reg,
    ram_empty_fb_i_reg_0,
    E,
    \src_gray_ff_reg[4] ,
    \g_rd.gvalid_low.rd_dc_i_reg[2] ,
    wr_clk,
    rd_clk);
  output [0:0]D;
  output [4:0]RD_PNTR_WR;
  output \dest_out_bin_ff_reg[2] ;
  output \dest_out_bin_ff_reg[0] ;
  output [4:0]WR_PNTR_RD;
  output [0:0]\dest_out_bin_ff_reg[1] ;
  output \dest_out_bin_ff_reg[2]_0 ;
  input [4:0]Q;
  input [4:0]ram_empty_fb_i_reg;
  input ram_empty_fb_i_reg_0;
  input [0:0]E;
  input [4:0]\src_gray_ff_reg[4] ;
  input \g_rd.gvalid_low.rd_dc_i_reg[2] ;
  input wr_clk;
  input rd_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [4:0]Q;
  wire [4:0]RD_PNTR_WR;
  wire [4:0]WR_PNTR_RD;
  wire \dest_out_bin_ff_reg[0] ;
  wire [0:0]\dest_out_bin_ff_reg[1] ;
  wire \dest_out_bin_ff_reg[2] ;
  wire \dest_out_bin_ff_reg[2]_0 ;
  wire [2:2]diff_wr_rd;
  wire \g_rd.gvalid_low.rd_dc_i_reg[2] ;
  wire [4:0]ram_empty_fb_i_reg;
  wire ram_empty_fb_i_reg_0;
  wire ram_empty_i_i_2_n_0;
  wire ram_empty_i_i_4_n_0;
  wire rd_clk;
  wire [4:0]\src_gray_ff_reg[4] ;
  wire wr_clk;
  wire \wr_data_count_i[3]_i_2_n_0 ;
  wire \wr_data_count_i[3]_i_3_n_0 ;

  LUT6 #(
    .INIT(64'h9669969600000000)) 
    \g_rd.gvalid_low.rd_dc_i[2]_i_1 
       (.I0(diff_wr_rd),
        .I1(WR_PNTR_RD[1]),
        .I2(\src_gray_ff_reg[4] [1]),
        .I3(WR_PNTR_RD[0]),
        .I4(\src_gray_ff_reg[4] [0]),
        .I5(\g_rd.gvalid_low.rd_dc_i_reg[2] ),
        .O(\dest_out_bin_ff_reg[1] ));
  LUT6 #(
    .INIT(64'h5D04A2FBA2FB5D04)) 
    \g_rd.gvalid_low.rd_dc_i[2]_i_2 
       (.I0(WR_PNTR_RD[1]),
        .I1(\src_gray_ff_reg[4] [0]),
        .I2(WR_PNTR_RD[0]),
        .I3(\src_gray_ff_reg[4] [1]),
        .I4(\src_gray_ff_reg[4] [2]),
        .I5(WR_PNTR_RD[2]),
        .O(diff_wr_rd));
  LUT6 #(
    .INIT(64'h0960900909600960)) 
    \g_rd.gvalid_low.rd_dc_i[4]_i_3 
       (.I0(WR_PNTR_RD[2]),
        .I1(\src_gray_ff_reg[4] [2]),
        .I2(WR_PNTR_RD[1]),
        .I3(\src_gray_ff_reg[4] [1]),
        .I4(WR_PNTR_RD[0]),
        .I5(\src_gray_ff_reg[4] [0]),
        .O(\dest_out_bin_ff_reg[2]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF90090000)) 
    ram_empty_i_i_1
       (.I0(WR_PNTR_RD[0]),
        .I1(ram_empty_fb_i_reg[0]),
        .I2(WR_PNTR_RD[1]),
        .I3(ram_empty_fb_i_reg[1]),
        .I4(ram_empty_i_i_2_n_0),
        .I5(ram_empty_fb_i_reg_0),
        .O(\dest_out_bin_ff_reg[0] ));
  LUT6 #(
    .INIT(64'h0000000090000090)) 
    ram_empty_i_i_2
       (.I0(WR_PNTR_RD[4]),
        .I1(ram_empty_fb_i_reg[4]),
        .I2(E),
        .I3(ram_empty_fb_i_reg[3]),
        .I4(WR_PNTR_RD[3]),
        .I5(ram_empty_i_i_4_n_0),
        .O(ram_empty_i_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    ram_empty_i_i_4
       (.I0(WR_PNTR_RD[2]),
        .I1(ram_empty_fb_i_reg[2]),
        .O(ram_empty_i_i_4_n_0));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* REG_OUTPUT = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  gig_eth_fifo_async_17x32_xpm_cdc_gray rd_pntr_cdc_inst
       (.dest_clk(wr_clk),
        .dest_out_bin(RD_PNTR_WR),
        .src_clk(rd_clk),
        .src_in_bin(\src_gray_ff_reg[4] ));
  LUT6 #(
    .INIT(64'h3C96693C693CC369)) 
    \wr_data_count_i[3]_i_1 
       (.I0(\wr_data_count_i[3]_i_2_n_0 ),
        .I1(Q[3]),
        .I2(RD_PNTR_WR[3]),
        .I3(RD_PNTR_WR[2]),
        .I4(Q[2]),
        .I5(\wr_data_count_i[3]_i_3_n_0 ),
        .O(D));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT4 #(
    .INIT(16'h2DD2)) 
    \wr_data_count_i[3]_i_2 
       (.I0(RD_PNTR_WR[0]),
        .I1(Q[0]),
        .I2(RD_PNTR_WR[1]),
        .I3(Q[1]),
        .O(\wr_data_count_i[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT4 #(
    .INIT(16'hDD4D)) 
    \wr_data_count_i[3]_i_3 
       (.I0(RD_PNTR_WR[1]),
        .I1(Q[1]),
        .I2(RD_PNTR_WR[0]),
        .I3(Q[0]),
        .O(\wr_data_count_i[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hD4DD4444DDDDD4DD)) 
    \wr_data_count_i[5]_i_3 
       (.I0(RD_PNTR_WR[2]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(RD_PNTR_WR[0]),
        .I4(Q[1]),
        .I5(RD_PNTR_WR[1]),
        .O(\dest_out_bin_ff_reg[2] ));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* REG_OUTPUT = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  gig_eth_fifo_async_17x32_xpm_cdc_gray__2 wr_pntr_cdc_inst
       (.dest_clk(rd_clk),
        .dest_out_bin(WR_PNTR_RD),
        .src_clk(wr_clk),
        .src_in_bin(Q));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module gig_eth_fifo_async_17x32_fifo_generator_ramfifo
   (wr_rst_busy,
    AR,
    empty,
    VALID,
    full,
    dout,
    rd_data_count,
    wr_data_count,
    almost_full,
    wr_en,
    rst,
    wr_clk,
    rd_clk,
    din,
    rd_en);
  output wr_rst_busy;
  output [0:0]AR;
  output empty;
  output VALID;
  output full;
  output [16:0]dout;
  output [5:0]rd_data_count;
  output [5:0]wr_data_count;
  output almost_full;
  input wr_en;
  input rst;
  input wr_clk;
  input rd_clk;
  input [16:0]din;
  input rd_en;

  wire [0:0]AR;
  wire VALID;
  wire almost_full;
  wire [16:0]din;
  wire [16:0]dout;
  wire empty;
  wire full;
  wire \gntv_or_sync_fifo.gcx.clkx_n_0 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_13 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_14 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_6 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_7 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_14 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_16 ;
  wire [4:0]p_0_out;
  wire [4:0]p_13_out;
  wire p_20_out;
  wire [4:0]p_24_out;
  wire [4:0]p_25_out;
  wire p_6_out;
  wire p_8_out;
  wire rd_clk;
  wire [5:0]rd_data_count;
  wire rd_en;
  wire [4:0]rd_pntr_plus1;
  wire rst;
  wire rst_full_ff_i;
  wire rst_full_gen_i;
  wire rstblk_n_0;
  wire tmp_ram_rd_en;
  wire wr_clk;
  wire [5:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;

  gig_eth_fifo_async_17x32_clk_x_pntrs \gntv_or_sync_fifo.gcx.clkx 
       (.D(\gntv_or_sync_fifo.gcx.clkx_n_0 ),
        .E(p_8_out),
        .Q(p_13_out),
        .RD_PNTR_WR(p_25_out),
        .WR_PNTR_RD(p_24_out),
        .\dest_out_bin_ff_reg[0] (\gntv_or_sync_fifo.gcx.clkx_n_7 ),
        .\dest_out_bin_ff_reg[1] (\gntv_or_sync_fifo.gcx.clkx_n_13 ),
        .\dest_out_bin_ff_reg[2] (\gntv_or_sync_fifo.gcx.clkx_n_6 ),
        .\dest_out_bin_ff_reg[2]_0 (\gntv_or_sync_fifo.gcx.clkx_n_14 ),
        .\g_rd.gvalid_low.rd_dc_i_reg[2] (\gntv_or_sync_fifo.gl0.rd_n_16 ),
        .ram_empty_fb_i_reg(rd_pntr_plus1),
        .ram_empty_fb_i_reg_0(\gntv_or_sync_fifo.gl0.rd_n_14 ),
        .rd_clk(rd_clk),
        .\src_gray_ff_reg[4] (p_0_out),
        .wr_clk(wr_clk));
  gig_eth_fifo_async_17x32_rd_logic \gntv_or_sync_fifo.gl0.rd 
       (.AS(AR),
        .D(\gntv_or_sync_fifo.gcx.clkx_n_13 ),
        .E(p_8_out),
        .Q(rd_pntr_plus1),
        .VALID(VALID),
        .WR_PNTR_RD(p_24_out),
        .\dest_out_bin_ff_reg[0] (\gntv_or_sync_fifo.gl0.rd_n_14 ),
        .empty(empty),
        .\g_rd.gvalid_low.rd_dc_i_reg[4] (\gntv_or_sync_fifo.gcx.clkx_n_14 ),
        .\gc0.count_d1_reg[4] (p_0_out),
        .\gpregsm1.curr_fwft_state_reg[0] (p_6_out),
        .\gpregsm1.user_valid_reg (\gntv_or_sync_fifo.gl0.rd_n_16 ),
        .ram_empty_fb_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_7 ),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .tmp_ram_rd_en(tmp_ram_rd_en));
  gig_eth_fifo_async_17x32_wr_logic \gntv_or_sync_fifo.gl0.wr 
       (.AR(rstblk_n_0),
        .D(\gntv_or_sync_fifo.gcx.clkx_n_0 ),
        .E(p_20_out),
        .Q(p_13_out),
        .RD_PNTR_WR(p_25_out),
        .almost_full(almost_full),
        .full(full),
        .out(rst_full_ff_i),
        .ram_full_fb_i_reg(rst_full_gen_i),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .\wr_data_count_i_reg[4] (\gntv_or_sync_fifo.gcx.clkx_n_6 ),
        .wr_en(wr_en));
  gig_eth_fifo_async_17x32_memory \gntv_or_sync_fifo.mem 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (p_0_out),
        .E(p_20_out),
        .Q(p_13_out),
        .SR(AR),
        .din(din),
        .dout(dout),
        .\goreg_bm.dout_i_reg[16]_0 (p_6_out),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
  gig_eth_fifo_async_17x32_reset_blk_ramfifo rstblk
       (.AR(rstblk_n_0),
        .SR(AR),
        .\grstd1.grst_full.grst_f.rst_d3_reg_0 (rst_full_gen_i),
        .out(rst_full_ff_i),
        .rd_clk(rd_clk),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module gig_eth_fifo_async_17x32_fifo_generator_top
   (wr_rst_busy,
    AS,
    empty,
    VALID,
    full,
    dout,
    rd_data_count,
    wr_data_count,
    almost_full,
    wr_en,
    rst,
    wr_clk,
    rd_clk,
    din,
    rd_en);
  output wr_rst_busy;
  output [0:0]AS;
  output empty;
  output VALID;
  output full;
  output [16:0]dout;
  output [5:0]rd_data_count;
  output [5:0]wr_data_count;
  output almost_full;
  input wr_en;
  input rst;
  input wr_clk;
  input rd_clk;
  input [16:0]din;
  input rd_en;

  wire [0:0]AS;
  wire VALID;
  wire almost_full;
  wire [16:0]din;
  wire [16:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire [5:0]rd_data_count;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire [5:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;

  gig_eth_fifo_async_17x32_fifo_generator_ramfifo \grf.rf 
       (.AR(AS),
        .VALID(VALID),
        .almost_full(almost_full),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* C_ADD_NGC_CONSTRAINT = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) (* C_APPLICATION_TYPE_RACH = "0" *) 
(* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) 
(* C_APPLICATION_TYPE_WRCH = "0" *) (* C_AXIS_TDATA_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "1" *) 
(* C_AXIS_TID_WIDTH = "1" *) (* C_AXIS_TKEEP_WIDTH = "1" *) (* C_AXIS_TSTRB_WIDTH = "1" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TYPE = "0" *) (* C_AXI_ADDR_WIDTH = "32" *) 
(* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_DATA_WIDTH = "64" *) (* C_AXI_ID_WIDTH = "1" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LOCK_WIDTH = "1" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_TYPE = "1" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLOCK = "0" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "5" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "17" *) 
(* C_DIN_WIDTH_AXIS = "1" *) (* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) 
(* C_DIN_WIDTH_WACH = "1" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "17" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_ENABLE_RST_SYNC = "1" *) (* C_EN_SAFETY_CKT = "0" *) (* C_ERROR_INJECTION_TYPE = "0" *) 
(* C_ERROR_INJECTION_TYPE_AXIS = "0" *) (* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_FAMILY = "zynq" *) (* C_FULL_FLAGS_RST_VAL = "1" *) (* C_HAS_ALMOST_EMPTY = "0" *) 
(* C_HAS_ALMOST_FULL = "1" *) (* C_HAS_AXIS_TDATA = "1" *) (* C_HAS_AXIS_TDEST = "0" *) 
(* C_HAS_AXIS_TID = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) (* C_HAS_AXIS_TLAST = "0" *) 
(* C_HAS_AXIS_TREADY = "1" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TUSER = "1" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ID = "0" *) (* C_HAS_AXI_RD_CHANNEL = "1" *) (* C_HAS_AXI_RUSER = "0" *) 
(* C_HAS_AXI_WR_CHANNEL = "1" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_BACKUP = "0" *) 
(* C_HAS_DATA_COUNT = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) (* C_HAS_DATA_COUNTS_RACH = "0" *) 
(* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
(* C_HAS_DATA_COUNTS_WRCH = "0" *) (* C_HAS_INT_CLK = "0" *) (* C_HAS_MASTER_CE = "0" *) 
(* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_WACH = "0" *) 
(* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) (* C_HAS_RD_DATA_COUNT = "1" *) 
(* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "1" *) (* C_HAS_SLAVE_CE = "0" *) 
(* C_HAS_SRST = "0" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "1" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "1" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "2" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_WRCH = "1" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_MEMORY_TYPE = "1" *) (* C_MIF_FILE_NAME = "BlankString" *) (* C_MSGON_VAL = "1" *) 
(* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) (* C_POWER_SAVING_MODE = "0" *) 
(* C_PRELOAD_LATENCY = "0" *) (* C_PRELOAD_REGS = "1" *) (* C_PRIM_FIFO_TYPE = "512x36" *) 
(* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_EMPTY_TYPE_AXIS = "0" *) (* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "31" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "30" *) (* C_PROG_FULL_TYPE = "0" *) 
(* C_PROG_FULL_TYPE_AXIS = "0" *) (* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_RD_DATA_COUNT_WIDTH = "6" *) 
(* C_RD_DEPTH = "32" *) (* C_RD_FREQ = "1" *) (* C_RD_PNTR_WIDTH = "5" *) 
(* C_REG_SLICE_MODE_AXIS = "0" *) (* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_SELECT_XPM = "0" *) (* C_SYNCHRONIZER_STAGE = "2" *) (* C_UNDERFLOW_LOW = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_USE_DOUT_RST = "1" *) (* C_USE_ECC = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_WACH = "0" *) 
(* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) (* C_USE_EMBEDDED_REG = "0" *) 
(* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "1" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) 
(* C_WRCH_TYPE = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "6" *) 
(* C_WR_DEPTH = "32" *) (* C_WR_DEPTH_AXIS = "1024" *) (* C_WR_DEPTH_RACH = "16" *) 
(* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) 
(* C_WR_DEPTH_WRCH = "16" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "5" *) 
(* C_WR_PNTR_WIDTH_AXIS = "10" *) (* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* ORIG_REF_NAME = "fifo_generator_v13_2_3" *) 
module gig_eth_fifo_async_17x32_fifo_generator_v13_2_3
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [16:0]din;
  input wr_en;
  input rd_en;
  input [4:0]prog_empty_thresh;
  input [4:0]prog_empty_thresh_assert;
  input [4:0]prog_empty_thresh_negate;
  input [4:0]prog_full_thresh;
  input [4:0]prog_full_thresh_assert;
  input [4:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [16:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [4:0]data_count;
  output [5:0]rd_data_count;
  output [5:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wid;
  input [63:0]s_axi_wdata;
  input [7:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [0:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [0:0]m_axi_wid;
  output [63:0]m_axi_wdata;
  output [7:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [0:0]s_axi_rid;
  output [63:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [0:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [0:0]m_axi_rid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [7:0]s_axis_tdata;
  input [0:0]s_axis_tstrb;
  input [0:0]s_axis_tkeep;
  input s_axis_tlast;
  input [0:0]s_axis_tid;
  input [0:0]s_axis_tdest;
  input [3:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [7:0]m_axis_tdata;
  output [0:0]m_axis_tstrb;
  output [0:0]m_axis_tkeep;
  output m_axis_tlast;
  output [0:0]m_axis_tid;
  output [0:0]m_axis_tdest;
  output [3:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [3:0]axi_ar_prog_full_thresh;
  input [3:0]axi_ar_prog_empty_thresh;
  output [4:0]axi_ar_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [9:0]axis_prog_full_thresh;
  input [9:0]axis_prog_empty_thresh;
  output [10:0]axis_data_count;
  output [10:0]axis_wr_data_count;
  output [10:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire \<const1> ;
  wire almost_full;
  wire [16:0]din;
  wire [16:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire [5:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire valid;
  wire wr_clk;
  wire [5:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;

  assign almost_empty = \<const0> ;
  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign data_count[4] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const0> ;
  assign prog_full = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  gig_eth_fifo_async_17x32_fifo_generator_v13_2_3_synth inst_fifo_gen
       (.AR(rd_rst_busy),
        .VALID(valid),
        .almost_full(almost_full),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_2_3_synth" *) 
module gig_eth_fifo_async_17x32_fifo_generator_v13_2_3_synth
   (wr_rst_busy,
    AR,
    empty,
    VALID,
    full,
    dout,
    rd_data_count,
    wr_data_count,
    almost_full,
    wr_en,
    rst,
    wr_clk,
    rd_clk,
    din,
    rd_en);
  output wr_rst_busy;
  output [0:0]AR;
  output empty;
  output VALID;
  output full;
  output [16:0]dout;
  output [5:0]rd_data_count;
  output [5:0]wr_data_count;
  output almost_full;
  input wr_en;
  input rst;
  input wr_clk;
  input rd_clk;
  input [16:0]din;
  input rd_en;

  wire [0:0]AR;
  wire VALID;
  wire almost_full;
  wire [16:0]din;
  wire [16:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire [5:0]rd_data_count;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire [5:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;

  gig_eth_fifo_async_17x32_fifo_generator_top \gconvfifo.rf 
       (.AS(AR),
        .VALID(VALID),
        .almost_full(almost_full),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module gig_eth_fifo_async_17x32_memory
   (dout,
    rd_clk,
    wr_clk,
    tmp_ram_rd_en,
    E,
    SR,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    Q,
    din,
    \goreg_bm.dout_i_reg[16]_0 );
  output [16:0]dout;
  input rd_clk;
  input wr_clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]SR;
  input [4:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [4:0]Q;
  input [16:0]din;
  input [0:0]\goreg_bm.dout_i_reg[16]_0 ;

  wire [4:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire [4:0]Q;
  wire [0:0]SR;
  wire [16:0]din;
  wire [16:0]dout;
  wire [16:0]doutb;
  wire [0:0]\goreg_bm.dout_i_reg[16]_0 ;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  gig_eth_fifo_async_17x32_blk_mem_gen_v8_4_2 \gbm.gbmg.gbmga.ngecc.bmg 
       (.D(doutb),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .Q(Q),
        .SR(SR),
        .din(din),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[0] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[16]_0 ),
        .D(doutb[0]),
        .Q(dout[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[10] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[16]_0 ),
        .D(doutb[10]),
        .Q(dout[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[11] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[16]_0 ),
        .D(doutb[11]),
        .Q(dout[11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[12] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[16]_0 ),
        .D(doutb[12]),
        .Q(dout[12]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[13] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[16]_0 ),
        .D(doutb[13]),
        .Q(dout[13]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[14] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[16]_0 ),
        .D(doutb[14]),
        .Q(dout[14]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[15] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[16]_0 ),
        .D(doutb[15]),
        .Q(dout[15]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[16] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[16]_0 ),
        .D(doutb[16]),
        .Q(dout[16]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[1] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[16]_0 ),
        .D(doutb[1]),
        .Q(dout[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[2] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[16]_0 ),
        .D(doutb[2]),
        .Q(dout[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[3] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[16]_0 ),
        .D(doutb[3]),
        .Q(dout[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[4] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[16]_0 ),
        .D(doutb[4]),
        .Q(dout[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[5] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[16]_0 ),
        .D(doutb[5]),
        .Q(dout[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[6] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[16]_0 ),
        .D(doutb[6]),
        .Q(dout[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[7] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[16]_0 ),
        .D(doutb[7]),
        .Q(dout[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[8] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[16]_0 ),
        .D(doutb[8]),
        .Q(dout[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[9] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[16]_0 ),
        .D(doutb[9]),
        .Q(dout[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module gig_eth_fifo_async_17x32_rd_bin_cntr
   (Q,
    \dest_out_bin_ff_reg[0] ,
    \gc0.count_d1_reg[4]_0 ,
    D,
    WR_PNTR_RD,
    \g_rd.gvalid_low.rd_dc_i_reg[4] ,
    out,
    \g_rd.gvalid_low.rd_dc_i_reg[3] ,
    E,
    rd_clk,
    AS);
  output [4:0]Q;
  output \dest_out_bin_ff_reg[0] ;
  output [4:0]\gc0.count_d1_reg[4]_0 ;
  output [2:0]D;
  input [4:0]WR_PNTR_RD;
  input \g_rd.gvalid_low.rd_dc_i_reg[4] ;
  input [0:0]out;
  input \g_rd.gvalid_low.rd_dc_i_reg[3] ;
  input [0:0]E;
  input rd_clk;
  input [0:0]AS;

  wire [0:0]AS;
  wire [2:0]D;
  wire [0:0]E;
  wire [4:0]Q;
  wire [4:0]WR_PNTR_RD;
  wire \dest_out_bin_ff_reg[0] ;
  wire [4:3]diff_wr_rd;
  wire \g_rd.gvalid_low.rd_dc_i[5]_i_2_n_0 ;
  wire \g_rd.gvalid_low.rd_dc_i[5]_i_3_n_0 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[3] ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[4] ;
  wire [4:0]\gc0.count_d1_reg[4]_0 ;
  wire [0:0]out;
  wire [4:0]plusOp__0;
  wire ram_empty_i_i_5_n_0;
  wire rd_clk;

  LUT6 #(
    .INIT(64'h9669000000000000)) 
    \g_rd.gvalid_low.rd_dc_i[3]_i_1 
       (.I0(\g_rd.gvalid_low.rd_dc_i[5]_i_3_n_0 ),
        .I1(\gc0.count_d1_reg[4]_0 [3]),
        .I2(WR_PNTR_RD[3]),
        .I3(\g_rd.gvalid_low.rd_dc_i_reg[4] ),
        .I4(out),
        .I5(\g_rd.gvalid_low.rd_dc_i_reg[3] ),
        .O(D[0]));
  LUT5 #(
    .INIT(32'h6A000000)) 
    \g_rd.gvalid_low.rd_dc_i[4]_i_1 
       (.I0(diff_wr_rd[4]),
        .I1(\g_rd.gvalid_low.rd_dc_i_reg[4] ),
        .I2(diff_wr_rd[3]),
        .I3(out),
        .I4(\g_rd.gvalid_low.rd_dc_i_reg[3] ),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \g_rd.gvalid_low.rd_dc_i[4]_i_2 
       (.I0(WR_PNTR_RD[3]),
        .I1(\g_rd.gvalid_low.rd_dc_i[5]_i_3_n_0 ),
        .I2(\gc0.count_d1_reg[4]_0 [3]),
        .I3(\gc0.count_d1_reg[4]_0 [4]),
        .I4(WR_PNTR_RD[4]),
        .O(diff_wr_rd[4]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \g_rd.gvalid_low.rd_dc_i[4]_i_4 
       (.I0(\g_rd.gvalid_low.rd_dc_i[5]_i_3_n_0 ),
        .I1(\gc0.count_d1_reg[4]_0 [3]),
        .I2(WR_PNTR_RD[3]),
        .O(diff_wr_rd[3]));
  LUT6 #(
    .INIT(64'h2828822882288282)) 
    \g_rd.gvalid_low.rd_dc_i[5]_i_1 
       (.I0(\g_rd.gvalid_low.rd_dc_i[5]_i_2_n_0 ),
        .I1(WR_PNTR_RD[4]),
        .I2(\gc0.count_d1_reg[4]_0 [4]),
        .I3(\gc0.count_d1_reg[4]_0 [3]),
        .I4(\g_rd.gvalid_low.rd_dc_i[5]_i_3_n_0 ),
        .I5(WR_PNTR_RD[3]),
        .O(D[2]));
  LUT6 #(
    .INIT(64'h2882000000000000)) 
    \g_rd.gvalid_low.rd_dc_i[5]_i_2 
       (.I0(\g_rd.gvalid_low.rd_dc_i_reg[4] ),
        .I1(\g_rd.gvalid_low.rd_dc_i[5]_i_3_n_0 ),
        .I2(\gc0.count_d1_reg[4]_0 [3]),
        .I3(WR_PNTR_RD[3]),
        .I4(out),
        .I5(\g_rd.gvalid_low.rd_dc_i_reg[3] ),
        .O(\g_rd.gvalid_low.rd_dc_i[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hDF450000FFFFDF45)) 
    \g_rd.gvalid_low.rd_dc_i[5]_i_3 
       (.I0(\gc0.count_d1_reg[4]_0 [1]),
        .I1(WR_PNTR_RD[0]),
        .I2(\gc0.count_d1_reg[4]_0 [0]),
        .I3(WR_PNTR_RD[1]),
        .I4(WR_PNTR_RD[2]),
        .I5(\gc0.count_d1_reg[4]_0 [2]),
        .O(\g_rd.gvalid_low.rd_dc_i[5]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gc0.count[0]_i_1 
       (.I0(Q[0]),
        .O(plusOp__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(plusOp__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(plusOp__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc0.count[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(plusOp__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gc0.count[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(plusOp__0[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AS),
        .D(Q[0]),
        .Q(\gc0.count_d1_reg[4]_0 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AS),
        .D(Q[1]),
        .Q(\gc0.count_d1_reg[4]_0 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AS),
        .D(Q[2]),
        .Q(\gc0.count_d1_reg[4]_0 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AS),
        .D(Q[3]),
        .Q(\gc0.count_d1_reg[4]_0 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AS),
        .D(Q[4]),
        .Q(\gc0.count_d1_reg[4]_0 [4]));
  FDPE #(
    .INIT(1'b1)) 
    \gc0.count_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__0[0]),
        .PRE(AS),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AS),
        .D(plusOp__0[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AS),
        .D(plusOp__0[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AS),
        .D(plusOp__0[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AS),
        .D(plusOp__0[4]),
        .Q(Q[4]));
  LUT5 #(
    .INIT(32'h82000082)) 
    ram_empty_i_i_3
       (.I0(ram_empty_i_i_5_n_0),
        .I1(WR_PNTR_RD[0]),
        .I2(\gc0.count_d1_reg[4]_0 [0]),
        .I3(WR_PNTR_RD[1]),
        .I4(\gc0.count_d1_reg[4]_0 [1]),
        .O(\dest_out_bin_ff_reg[0] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    ram_empty_i_i_5
       (.I0(\gc0.count_d1_reg[4]_0 [2]),
        .I1(WR_PNTR_RD[2]),
        .I2(WR_PNTR_RD[3]),
        .I3(\gc0.count_d1_reg[4]_0 [3]),
        .I4(\gc0.count_d1_reg[4]_0 [4]),
        .I5(WR_PNTR_RD[4]),
        .O(ram_empty_i_i_5_n_0));
endmodule

(* ORIG_REF_NAME = "rd_dc_fwft_ext_as" *) 
module gig_eth_fifo_async_17x32_rd_dc_fwft_ext_as
   (rd_data_count,
    D,
    rd_clk,
    AS);
  output [5:0]rd_data_count;
  input [5:0]D;
  input rd_clk;
  input [0:0]AS;

  wire [0:0]AS;
  wire [5:0]D;
  wire rd_clk;
  wire [5:0]rd_data_count;

  FDCE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AS),
        .D(D[0]),
        .Q(rd_data_count[0]));
  FDCE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AS),
        .D(D[1]),
        .Q(rd_data_count[1]));
  FDCE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AS),
        .D(D[2]),
        .Q(rd_data_count[2]));
  FDCE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AS),
        .D(D[3]),
        .Q(rd_data_count[3]));
  FDCE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AS),
        .D(D[4]),
        .Q(rd_data_count[4]));
  FDCE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AS),
        .D(D[5]),
        .Q(rd_data_count[5]));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module gig_eth_fifo_async_17x32_rd_fwft
   (out,
    empty,
    \gpregsm1.user_valid_reg_0 ,
    tmp_ram_rd_en,
    E,
    D,
    \gpregsm1.curr_fwft_state_reg[0]_0 ,
    \gpregsm1.user_valid_reg_1 ,
    rd_clk,
    AS,
    rd_en,
    \gpregsm1.curr_fwft_state_reg[1]_0 ,
    WR_PNTR_RD,
    Q);
  output [0:0]out;
  output empty;
  output \gpregsm1.user_valid_reg_0 ;
  output tmp_ram_rd_en;
  output [0:0]E;
  output [1:0]D;
  output [0:0]\gpregsm1.curr_fwft_state_reg[0]_0 ;
  output \gpregsm1.user_valid_reg_1 ;
  input rd_clk;
  input [0:0]AS;
  input rd_en;
  input \gpregsm1.curr_fwft_state_reg[1]_0 ;
  input [1:0]WR_PNTR_RD;
  input [1:0]Q;

  wire [0:0]AS;
  wire [1:0]D;
  wire [0:0]E;
  wire [1:0]Q;
  wire [1:0]WR_PNTR_RD;
  (* DONT_TOUCH *) wire aempty_fwft_fb_i;
  (* DONT_TOUCH *) wire aempty_fwft_i;
  wire aempty_fwft_i0;
  (* DONT_TOUCH *) wire [1:0]curr_fwft_state;
  (* DONT_TOUCH *) wire empty_fwft_fb_i;
  (* DONT_TOUCH *) wire empty_fwft_fb_o_i;
  wire empty_fwft_fb_o_i0;
  (* DONT_TOUCH *) wire empty_fwft_i;
  wire empty_fwft_i0;
  wire [0:0]\gpregsm1.curr_fwft_state_reg[0]_0 ;
  wire \gpregsm1.curr_fwft_state_reg[1]_0 ;
  wire \gpregsm1.user_valid_reg_1 ;
  wire [1:0]next_fwft_state;
  wire rd_clk;
  wire rd_en;
  wire tmp_ram_rd_en;
  (* DONT_TOUCH *) wire user_valid;

  assign empty = empty_fwft_i;
  assign \gpregsm1.user_valid_reg_0  = user_valid;
  assign out[0] = curr_fwft_state[1];
  LUT5 #(
    .INIT(32'hFFFF5515)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_i_1 
       (.I0(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(rd_en),
        .I4(AS),
        .O(tmp_ram_rd_en));
  LUT5 #(
    .INIT(32'hFCFB8000)) 
    aempty_fwft_fb_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .I3(curr_fwft_state[1]),
        .I4(aempty_fwft_fb_i),
        .O(aempty_fwft_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    aempty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0),
        .PRE(AS),
        .Q(aempty_fwft_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    aempty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0),
        .PRE(AS),
        .Q(aempty_fwft_i));
  LUT4 #(
    .INIT(16'h88EA)) 
    empty_fwft_fb_i_i_1
       (.I0(empty_fwft_fb_i),
        .I1(curr_fwft_state[0]),
        .I2(rd_en),
        .I3(curr_fwft_state[1]),
        .O(empty_fwft_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(AS),
        .Q(empty_fwft_fb_i));
  LUT4 #(
    .INIT(16'h88EA)) 
    empty_fwft_fb_o_i_i_1
       (.I0(empty_fwft_fb_o_i),
        .I1(curr_fwft_state[0]),
        .I2(rd_en),
        .I3(curr_fwft_state[1]),
        .O(empty_fwft_fb_o_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_o_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_fb_o_i0),
        .PRE(AS),
        .Q(empty_fwft_fb_o_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(AS),
        .Q(empty_fwft_i));
  LUT4 #(
    .INIT(16'h2AA2)) 
    \g_rd.gvalid_low.rd_dc_i[0]_i_1 
       (.I0(user_valid),
        .I1(curr_fwft_state[1]),
        .I2(WR_PNTR_RD[0]),
        .I3(Q[0]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h8008088080088008)) 
    \g_rd.gvalid_low.rd_dc_i[1]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(user_valid),
        .I2(WR_PNTR_RD[1]),
        .I3(Q[1]),
        .I4(WR_PNTR_RD[0]),
        .I5(Q[0]),
        .O(D[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \g_rd.gvalid_low.rd_dc_i[2]_i_3 
       (.I0(user_valid),
        .I1(curr_fwft_state[1]),
        .O(\gpregsm1.user_valid_reg_1 ));
  LUT4 #(
    .INIT(16'h00F7)) 
    \gc0.count_d1[4]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(curr_fwft_state[0]),
        .I2(rd_en),
        .I3(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .O(E));
  LUT3 #(
    .INIT(8'hD0)) 
    \goreg_bm.dout_i[16]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .O(\gpregsm1.curr_fwft_state_reg[0]_0 ));
  LUT3 #(
    .INIT(8'hF4)) 
    \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .O(next_fwft_state[0]));
  LUT4 #(
    .INIT(16'h40FF)) 
    \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .O(next_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AS),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AS),
        .D(next_fwft_state[1]),
        .Q(curr_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.user_valid_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AS),
        .D(next_fwft_state[0]),
        .Q(user_valid));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module gig_eth_fifo_async_17x32_rd_logic
   (empty,
    VALID,
    Q,
    tmp_ram_rd_en,
    E,
    \gc0.count_d1_reg[4] ,
    \dest_out_bin_ff_reg[0] ,
    \gpregsm1.curr_fwft_state_reg[0] ,
    \gpregsm1.user_valid_reg ,
    rd_data_count,
    ram_empty_fb_i_reg,
    rd_clk,
    AS,
    rd_en,
    WR_PNTR_RD,
    \g_rd.gvalid_low.rd_dc_i_reg[4] ,
    D);
  output empty;
  output VALID;
  output [4:0]Q;
  output tmp_ram_rd_en;
  output [0:0]E;
  output [4:0]\gc0.count_d1_reg[4] ;
  output \dest_out_bin_ff_reg[0] ;
  output [0:0]\gpregsm1.curr_fwft_state_reg[0] ;
  output \gpregsm1.user_valid_reg ;
  output [5:0]rd_data_count;
  input ram_empty_fb_i_reg;
  input rd_clk;
  input [0:0]AS;
  input rd_en;
  input [4:0]WR_PNTR_RD;
  input \g_rd.gvalid_low.rd_dc_i_reg[4] ;
  input [0:0]D;

  wire [0:0]AS;
  wire [0:0]D;
  wire [0:0]E;
  wire [4:0]Q;
  wire VALID;
  wire [4:0]WR_PNTR_RD;
  wire \dest_out_bin_ff_reg[0] ;
  wire empty;
  wire \g_rd.gvalid_low.rd_dc_i_reg[4] ;
  wire [4:0]\gc0.count_d1_reg[4] ;
  wire [0:0]\gpregsm1.curr_fwft_state_reg[0] ;
  wire \gpregsm1.user_valid_reg ;
  wire \gr1.gr1_int.rfwft_n_5 ;
  wire \gr1.gr1_int.rfwft_n_6 ;
  wire p_2_out;
  wire p_3_out;
  wire ram_empty_fb_i_reg;
  wire rd_clk;
  wire [5:0]rd_data_count;
  wire rd_en;
  wire rpntr_n_11;
  wire rpntr_n_12;
  wire rpntr_n_13;
  wire tmp_ram_rd_en;

  gig_eth_fifo_async_17x32_rd_fwft \gr1.gr1_int.rfwft 
       (.AS(AS),
        .D({\gr1.gr1_int.rfwft_n_5 ,\gr1.gr1_int.rfwft_n_6 }),
        .E(E),
        .Q(\gc0.count_d1_reg[4] [1:0]),
        .WR_PNTR_RD(WR_PNTR_RD[1:0]),
        .empty(empty),
        .\gpregsm1.curr_fwft_state_reg[0]_0 (\gpregsm1.curr_fwft_state_reg[0] ),
        .\gpregsm1.curr_fwft_state_reg[1]_0 (p_2_out),
        .\gpregsm1.user_valid_reg_0 (VALID),
        .\gpregsm1.user_valid_reg_1 (\gpregsm1.user_valid_reg ),
        .out(p_3_out),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .tmp_ram_rd_en(tmp_ram_rd_en));
  gig_eth_fifo_async_17x32_rd_dc_fwft_ext_as \gr1.grdc2.rdc 
       (.AS(AS),
        .D({rpntr_n_11,rpntr_n_12,rpntr_n_13,D,\gr1.gr1_int.rfwft_n_5 ,\gr1.gr1_int.rfwft_n_6 }),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count));
  gig_eth_fifo_async_17x32_rd_status_flags_as \gras.rsts 
       (.AS(AS),
        .out(p_2_out),
        .ram_empty_fb_i_reg_0(ram_empty_fb_i_reg),
        .rd_clk(rd_clk));
  gig_eth_fifo_async_17x32_rd_bin_cntr rpntr
       (.AS(AS),
        .D({rpntr_n_11,rpntr_n_12,rpntr_n_13}),
        .E(E),
        .Q(Q),
        .WR_PNTR_RD(WR_PNTR_RD),
        .\dest_out_bin_ff_reg[0] (\dest_out_bin_ff_reg[0] ),
        .\g_rd.gvalid_low.rd_dc_i_reg[3] (VALID),
        .\g_rd.gvalid_low.rd_dc_i_reg[4] (\g_rd.gvalid_low.rd_dc_i_reg[4] ),
        .\gc0.count_d1_reg[4]_0 (\gc0.count_d1_reg[4] ),
        .out(p_3_out),
        .rd_clk(rd_clk));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_as" *) 
module gig_eth_fifo_async_17x32_rd_status_flags_as
   (out,
    ram_empty_fb_i_reg_0,
    rd_clk,
    AS);
  output out;
  input ram_empty_fb_i_reg_0;
  input rd_clk;
  input [0:0]AS;

  wire [0:0]AS;
  (* DONT_TOUCH *) wire ram_empty_fb_i;
  wire ram_empty_fb_i_reg_0;
  (* DONT_TOUCH *) wire ram_empty_i;
  wire rd_clk;

  assign out = ram_empty_fb_i;
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_fb_i_reg_0),
        .PRE(AS),
        .Q(ram_empty_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_fb_i_reg_0),
        .PRE(AS),
        .Q(ram_empty_i));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module gig_eth_fifo_async_17x32_reset_blk_ramfifo
   (AR,
    SR,
    out,
    \grstd1.grst_full.grst_f.rst_d3_reg_0 ,
    wr_rst_busy,
    rst,
    wr_clk,
    rd_clk);
  output [0:0]AR;
  output [0:0]SR;
  output out;
  output \grstd1.grst_full.grst_f.rst_d3_reg_0 ;
  output wr_rst_busy;
  input rst;
  input wr_clk;
  input rd_clk;

  wire [0:0]AR;
  wire [0:0]SR;
  wire dest_out;
  wire \grstd1.grst_full.grst_f.rst_d3_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ;
  wire rd_clk;
  wire [3:0]rd_rst_wr_ext;
  wire rst;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;
  wire sckt_rd_rst_wr;
  wire wr_clk;
  wire wr_rst_busy;
  wire [1:0]wr_rst_rd_ext;

  assign \grstd1.grst_full.grst_f.rst_d3_reg_0  = rst_d3;
  assign out = rst_d2;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_rst_busy),
        .PRE(rst_wr_reg2),
        .Q(rst_d1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1),
        .PRE(rst_wr_reg2),
        .Q(rst_d2));
  LUT2 #(
    .INIT(4'hE)) 
    \grstd1.grst_full.grst_f.rst_d3_i_1 
       (.I0(rst_d2),
        .I1(AR),
        .O(\grstd1.grst_full.grst_f.rst_d3_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grstd1.grst_full.grst_f.rst_d3_i_1_n_0 ),
        .PRE(rst_wr_reg2),
        .Q(rst_d3));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rd_rst_wr_ext_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(rst_wr_reg2),
        .D(sckt_rd_rst_wr),
        .Q(rd_rst_wr_ext[0]));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rd_rst_wr_ext_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(rst_wr_reg2),
        .D(rd_rst_wr_ext[0]),
        .Q(rd_rst_wr_ext[1]));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rd_rst_wr_ext_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(rst_wr_reg2),
        .D(rd_rst_wr_ext[1]),
        .Q(rd_rst_wr_ext[2]));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rd_rst_wr_ext_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(rst_wr_reg2),
        .D(rd_rst_wr_ext[2]),
        .Q(rd_rst_wr_ext[3]));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* INV_DEF_VAL = "1'b1" *) 
  (* RST_ACTIVE_HIGH = "1" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  gig_eth_fifo_async_17x32_xpm_cdc_async_rst \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rst_rd_reg2_inst 
       (.dest_arst(rst_rd_reg2),
        .dest_clk(rd_clk),
        .src_arst(rst));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1 
       (.I0(SR),
        .I1(wr_rst_rd_ext[1]),
        .O(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ));
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ),
        .PRE(rst_rd_reg2),
        .Q(SR));
  LUT3 #(
    .INIT(8'h8A)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1 
       (.I0(AR),
        .I1(rd_rst_wr_ext[0]),
        .I2(rd_rst_wr_ext[1]),
        .O(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ));
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ),
        .PRE(rst_wr_reg2),
        .Q(AR));
  LUT5 #(
    .INIT(32'hAAAA08AA)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_i_1 
       (.I0(wr_rst_busy),
        .I1(rd_rst_wr_ext[1]),
        .I2(rd_rst_wr_ext[0]),
        .I3(rd_rst_wr_ext[3]),
        .I4(rd_rst_wr_ext[2]),
        .O(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ));
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ),
        .PRE(rst_wr_reg2),
        .Q(wr_rst_busy));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_rd_ext_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(rst_rd_reg2),
        .D(dest_out),
        .Q(wr_rst_rd_ext[0]));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_rd_ext_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(rst_rd_reg2),
        .D(wr_rst_rd_ext[0]),
        .Q(wr_rst_rd_ext[1]));
  (* DEST_SYNC_FF = "4" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  gig_eth_fifo_async_17x32_xpm_cdc_single \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr 
       (.dest_clk(wr_clk),
        .dest_out(sckt_rd_rst_wr),
        .src_clk(rd_clk),
        .src_in(SR));
  (* DEST_SYNC_FF = "4" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  gig_eth_fifo_async_17x32_xpm_cdc_single__2 \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd 
       (.dest_clk(rd_clk),
        .dest_out(dest_out),
        .src_clk(wr_clk),
        .src_in(AR));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* INV_DEF_VAL = "1'b1" *) 
  (* RST_ACTIVE_HIGH = "1" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  gig_eth_fifo_async_17x32_xpm_cdc_async_rst__2 \ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst 
       (.dest_arst(rst_wr_reg2),
        .dest_clk(wr_clk),
        .src_arst(rst));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module gig_eth_fifo_async_17x32_wr_bin_cntr
   (ram_full_fb_i_reg,
    D,
    Q,
    wr_en_0,
    out,
    wr_en,
    ram_full_fb_i_reg_0,
    RD_PNTR_WR,
    \wr_data_count_i_reg[4] ,
    almost_full,
    E,
    wr_clk,
    AR);
  output ram_full_fb_i_reg;
  output [4:0]D;
  output [4:0]Q;
  output wr_en_0;
  input out;
  input wr_en;
  input ram_full_fb_i_reg_0;
  input [4:0]RD_PNTR_WR;
  input \wr_data_count_i_reg[4] ;
  input almost_full;
  input [0:0]E;
  input wr_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [4:0]D;
  wire [0:0]E;
  wire [4:0]Q;
  wire [4:0]RD_PNTR_WR;
  wire almost_full;
  wire \gaf.ram_almost_full_i_i_4_n_0 ;
  wire \gaf.ram_almost_full_i_i_5_n_0 ;
  wire \gwas.wsts/comp1 ;
  wire \gwas.wsts/comp2 ;
  wire \gwas.wsts/comp3 ;
  wire out;
  wire [4:0]p_14_out;
  wire [4:0]plusOp;
  wire ram_full_fb_i_reg;
  wire ram_full_fb_i_reg_0;
  wire ram_full_i_i_3_n_0;
  wire wr_clk;
  wire \wr_data_count_i[5]_i_2_n_0 ;
  wire \wr_data_count_i_reg[4] ;
  wire wr_en;
  wire wr_en_0;
  wire [4:0]wr_pntr_plus2;
  wire [4:0]wr_pntr_plus3;

  LUT6 #(
    .INIT(64'h00FF00F8000000F8)) 
    \gaf.ram_almost_full_i_i_1 
       (.I0(\gwas.wsts/comp3 ),
        .I1(wr_en),
        .I2(\gwas.wsts/comp2 ),
        .I3(ram_full_fb_i_reg_0),
        .I4(out),
        .I5(almost_full),
        .O(wr_en_0));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT5 #(
    .INIT(32'h90090000)) 
    \gaf.ram_almost_full_i_i_2 
       (.I0(wr_pntr_plus3[1]),
        .I1(RD_PNTR_WR[1]),
        .I2(wr_pntr_plus3[0]),
        .I3(RD_PNTR_WR[0]),
        .I4(\gaf.ram_almost_full_i_i_4_n_0 ),
        .O(\gwas.wsts/comp3 ));
  LUT5 #(
    .INIT(32'h90090000)) 
    \gaf.ram_almost_full_i_i_3 
       (.I0(wr_pntr_plus2[1]),
        .I1(RD_PNTR_WR[1]),
        .I2(wr_pntr_plus2[0]),
        .I3(RD_PNTR_WR[0]),
        .I4(\gaf.ram_almost_full_i_i_5_n_0 ),
        .O(\gwas.wsts/comp2 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gaf.ram_almost_full_i_i_4 
       (.I0(wr_pntr_plus3[3]),
        .I1(RD_PNTR_WR[3]),
        .I2(wr_pntr_plus3[2]),
        .I3(RD_PNTR_WR[2]),
        .I4(RD_PNTR_WR[4]),
        .I5(wr_pntr_plus3[4]),
        .O(\gaf.ram_almost_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gaf.ram_almost_full_i_i_5 
       (.I0(wr_pntr_plus2[3]),
        .I1(RD_PNTR_WR[3]),
        .I2(wr_pntr_plus2[2]),
        .I3(RD_PNTR_WR[2]),
        .I4(RD_PNTR_WR[4]),
        .I5(wr_pntr_plus2[4]),
        .O(\gaf.ram_almost_full_i_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gic0.gc1.count[0]_i_1 
       (.I0(wr_pntr_plus3[0]),
        .O(plusOp[0]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc1.count[1]_i_1 
       (.I0(wr_pntr_plus3[0]),
        .I1(wr_pntr_plus3[1]),
        .O(plusOp[1]));
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc1.count[2]_i_1 
       (.I0(wr_pntr_plus3[0]),
        .I1(wr_pntr_plus3[1]),
        .I2(wr_pntr_plus3[2]),
        .O(plusOp[2]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc1.count[3]_i_1 
       (.I0(wr_pntr_plus3[1]),
        .I1(wr_pntr_plus3[0]),
        .I2(wr_pntr_plus3[2]),
        .I3(wr_pntr_plus3[3]),
        .O(plusOp[3]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gic0.gc1.count[4]_i_1 
       (.I0(wr_pntr_plus3[2]),
        .I1(wr_pntr_plus3[0]),
        .I2(wr_pntr_plus3[1]),
        .I3(wr_pntr_plus3[3]),
        .I4(wr_pntr_plus3[4]),
        .O(plusOp[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[0]),
        .Q(wr_pntr_plus2[0]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_d1_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(wr_pntr_plus3[1]),
        .PRE(AR),
        .Q(wr_pntr_plus2[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[2]),
        .Q(wr_pntr_plus2[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[3]),
        .Q(wr_pntr_plus2[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus3[4]),
        .Q(wr_pntr_plus2[4]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_d2_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(wr_pntr_plus2[0]),
        .PRE(AR),
        .Q(p_14_out[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[1]),
        .Q(p_14_out[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[2]),
        .Q(p_14_out[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[3]),
        .Q(p_14_out[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(wr_pntr_plus2[4]),
        .Q(p_14_out[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_14_out[0]),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_14_out[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_14_out[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_14_out[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_14_out[4]),
        .Q(Q[4]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp[0]),
        .PRE(AR),
        .Q(wr_pntr_plus3[0]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp[1]),
        .PRE(AR),
        .Q(wr_pntr_plus3[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[2]),
        .Q(wr_pntr_plus3[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[3]),
        .Q(wr_pntr_plus3[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[4]),
        .Q(wr_pntr_plus3[4]));
  LUT5 #(
    .INIT(32'h0000FF20)) 
    ram_full_i_i_1
       (.I0(\gwas.wsts/comp2 ),
        .I1(out),
        .I2(wr_en),
        .I3(\gwas.wsts/comp1 ),
        .I4(ram_full_fb_i_reg_0),
        .O(ram_full_fb_i_reg));
  LUT5 #(
    .INIT(32'h90090000)) 
    ram_full_i_i_2
       (.I0(p_14_out[1]),
        .I1(RD_PNTR_WR[1]),
        .I2(p_14_out[0]),
        .I3(RD_PNTR_WR[0]),
        .I4(ram_full_i_i_3_n_0),
        .O(\gwas.wsts/comp1 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    ram_full_i_i_3
       (.I0(p_14_out[3]),
        .I1(RD_PNTR_WR[3]),
        .I2(p_14_out[2]),
        .I3(RD_PNTR_WR[2]),
        .I4(RD_PNTR_WR[4]),
        .I5(p_14_out[4]),
        .O(ram_full_i_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_data_count_i[0]_i_1 
       (.I0(Q[0]),
        .I1(RD_PNTR_WR[0]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT4 #(
    .INIT(16'h9699)) 
    \wr_data_count_i[1]_i_1 
       (.I0(Q[1]),
        .I1(RD_PNTR_WR[1]),
        .I2(Q[0]),
        .I3(RD_PNTR_WR[0]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h6966696666966966)) 
    \wr_data_count_i[2]_i_1 
       (.I0(Q[2]),
        .I1(RD_PNTR_WR[2]),
        .I2(RD_PNTR_WR[1]),
        .I3(Q[1]),
        .I4(RD_PNTR_WR[0]),
        .I5(Q[0]),
        .O(D[2]));
  LUT6 #(
    .INIT(64'h3C96693C693CC369)) 
    \wr_data_count_i[4]_i_1 
       (.I0(\wr_data_count_i[5]_i_2_n_0 ),
        .I1(Q[4]),
        .I2(RD_PNTR_WR[4]),
        .I3(RD_PNTR_WR[3]),
        .I4(Q[3]),
        .I5(\wr_data_count_i_reg[4] ),
        .O(D[3]));
  LUT6 #(
    .INIT(64'h0090600090000090)) 
    \wr_data_count_i[5]_i_1 
       (.I0(Q[4]),
        .I1(RD_PNTR_WR[4]),
        .I2(\wr_data_count_i[5]_i_2_n_0 ),
        .I3(\wr_data_count_i_reg[4] ),
        .I4(RD_PNTR_WR[3]),
        .I5(Q[3]),
        .O(D[4]));
  LUT6 #(
    .INIT(64'h0960900909600960)) 
    \wr_data_count_i[5]_i_2 
       (.I0(Q[2]),
        .I1(RD_PNTR_WR[2]),
        .I2(Q[1]),
        .I3(RD_PNTR_WR[1]),
        .I4(Q[0]),
        .I5(RD_PNTR_WR[0]),
        .O(\wr_data_count_i[5]_i_2_n_0 ));
endmodule

(* ORIG_REF_NAME = "wr_dc_fwft_ext_as" *) 
module gig_eth_fifo_async_17x32_wr_dc_fwft_ext_as
   (wr_data_count,
    D,
    wr_clk,
    AR);
  output [5:0]wr_data_count;
  input [5:0]D;
  input wr_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [5:0]D;
  wire wr_clk;
  wire [5:0]wr_data_count;

  FDCE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[0]),
        .Q(wr_data_count[0]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[1]),
        .Q(wr_data_count[1]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[2]),
        .Q(wr_data_count[2]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[3]),
        .Q(wr_data_count[3]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[4]),
        .Q(wr_data_count[4]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[5]),
        .Q(wr_data_count[5]));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module gig_eth_fifo_async_17x32_wr_logic
   (full,
    almost_full,
    Q,
    E,
    wr_data_count,
    wr_clk,
    out,
    wr_en,
    ram_full_fb_i_reg,
    RD_PNTR_WR,
    \wr_data_count_i_reg[4] ,
    AR,
    D);
  output full;
  output almost_full;
  output [4:0]Q;
  output [0:0]E;
  output [5:0]wr_data_count;
  input wr_clk;
  input out;
  input wr_en;
  input ram_full_fb_i_reg;
  input [4:0]RD_PNTR_WR;
  input \wr_data_count_i_reg[4] ;
  input [0:0]AR;
  input [0:0]D;

  wire [0:0]AR;
  wire [0:0]D;
  wire [0:0]E;
  wire [4:0]Q;
  wire [4:0]RD_PNTR_WR;
  wire almost_full;
  wire full;
  wire \gwas.wsts_n_1 ;
  wire out;
  wire ram_full_fb_i_reg;
  wire wpntr_n_0;
  wire wpntr_n_1;
  wire wpntr_n_11;
  wire wpntr_n_2;
  wire wpntr_n_3;
  wire wpntr_n_4;
  wire wpntr_n_5;
  wire wr_clk;
  wire [5:0]wr_data_count;
  wire \wr_data_count_i_reg[4] ;
  wire wr_en;

  gig_eth_fifo_async_17x32_wr_dc_fwft_ext_as \gwas.gwdc1.wdcext 
       (.AR(AR),
        .D({wpntr_n_1,wpntr_n_2,D,wpntr_n_3,wpntr_n_4,wpntr_n_5}),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count));
  gig_eth_fifo_async_17x32_wr_status_flags_as \gwas.wsts 
       (.E(E),
        .almost_full(almost_full),
        .full(full),
        .\gaf.ram_almost_full_i_reg_0 (out),
        .\gaf.ram_almost_full_i_reg_1 (wpntr_n_11),
        .out(\gwas.wsts_n_1 ),
        .ram_full_fb_i_reg_0(wpntr_n_0),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  gig_eth_fifo_async_17x32_wr_bin_cntr wpntr
       (.AR(AR),
        .D({wpntr_n_1,wpntr_n_2,wpntr_n_3,wpntr_n_4,wpntr_n_5}),
        .E(E),
        .Q(Q),
        .RD_PNTR_WR(RD_PNTR_WR),
        .almost_full(almost_full),
        .out(\gwas.wsts_n_1 ),
        .ram_full_fb_i_reg(wpntr_n_0),
        .ram_full_fb_i_reg_0(ram_full_fb_i_reg),
        .wr_clk(wr_clk),
        .\wr_data_count_i_reg[4] (\wr_data_count_i_reg[4] ),
        .wr_en(wr_en),
        .wr_en_0(wpntr_n_11));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_as" *) 
module gig_eth_fifo_async_17x32_wr_status_flags_as
   (full,
    out,
    almost_full,
    E,
    ram_full_fb_i_reg_0,
    wr_clk,
    \gaf.ram_almost_full_i_reg_0 ,
    \gaf.ram_almost_full_i_reg_1 ,
    wr_en);
  output full;
  output out;
  output almost_full;
  output [0:0]E;
  input ram_full_fb_i_reg_0;
  input wr_clk;
  input \gaf.ram_almost_full_i_reg_0 ;
  input \gaf.ram_almost_full_i_reg_1 ;
  input wr_en;

  wire [0:0]E;
  wire almost_full;
  wire \gaf.ram_almost_full_i_reg_0 ;
  wire \gaf.ram_almost_full_i_reg_1 ;
  (* DONT_TOUCH *) wire ram_full_fb_i;
  wire ram_full_fb_i_reg_0;
  (* DONT_TOUCH *) wire ram_full_i;
  wire wr_clk;
  wire wr_en;

  assign full = ram_full_i;
  assign out = ram_full_fb_i;
  LUT2 #(
    .INIT(4'h2)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_i_2 
       (.I0(wr_en),
        .I1(ram_full_fb_i),
        .O(E));
  FDPE #(
    .INIT(1'b1)) 
    \gaf.ram_almost_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gaf.ram_almost_full_i_reg_1 ),
        .PRE(\gaf.ram_almost_full_i_reg_0 ),
        .Q(almost_full));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_fb_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_full_fb_i_reg_0),
        .PRE(\gaf.ram_almost_full_i_reg_0 ),
        .Q(ram_full_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_full_fb_i_reg_0),
        .PRE(\gaf.ram_almost_full_i_reg_0 ),
        .Q(ram_full_i));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module gig_eth_fifo_async_36x128_blk_mem_gen_generic_cstr
   (D,
    rd_clk,
    wr_clk,
    tmp_ram_rd_en,
    E,
    SR,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    din);
  output [35:0]D;
  input rd_clk;
  input wr_clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]SR;
  input [6:0]Q;
  input [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [35:0]din;

  wire [35:0]D;
  wire [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire [6:0]Q;
  wire [0:0]SR;
  wire [35:0]din;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  gig_eth_fifo_async_36x128_blk_mem_gen_prim_width \ramloop[0].ram.r 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .Q(Q),
        .SR(SR),
        .din(din),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module gig_eth_fifo_async_36x128_blk_mem_gen_prim_width
   (D,
    rd_clk,
    wr_clk,
    tmp_ram_rd_en,
    E,
    SR,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    din);
  output [35:0]D;
  input rd_clk;
  input wr_clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]SR;
  input [6:0]Q;
  input [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [35:0]din;

  wire [35:0]D;
  wire [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire [6:0]Q;
  wire [0:0]SR;
  wire [35:0]din;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  gig_eth_fifo_async_36x128_blk_mem_gen_prim_wrapper \prim_noinit.ram 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .Q(Q),
        .SR(SR),
        .din(din),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module gig_eth_fifo_async_36x128_blk_mem_gen_prim_wrapper
   (D,
    rd_clk,
    wr_clk,
    tmp_ram_rd_en,
    E,
    SR,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ,
    din);
  output [35:0]D;
  input rd_clk;
  input wr_clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]SR;
  input [6:0]Q;
  input [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ;
  input [35:0]din;

  wire [35:0]D;
  wire [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ;
  wire [0:0]E;
  wire [6:0]Q;
  wire [0:0]SR;
  wire [35:0]din;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram 
       (.ADDRARDADDR({1'b0,1'b0,Q,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({1'b0,1'b0,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(rd_clk),
        .CLKBWRCLK(wr_clk),
        .DIADI({din[16:9],din[7:0]}),
        .DIBDI({din[34:27],din[25:18]}),
        .DIPADIP({din[17],din[8]}),
        .DIPBDIP({din[35],din[26]}),
        .DOADO({D[16:9],D[7:0]}),
        .DOBDO({D[34:27],D[25:18]}),
        .DOPADOP({D[17],D[8]}),
        .DOPBDOP({D[35],D[26]}),
        .ENARDEN(tmp_ram_rd_en),
        .ENBWREN(E),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(SR),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({E,E,E,E}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module gig_eth_fifo_async_36x128_blk_mem_gen_top
   (D,
    rd_clk,
    wr_clk,
    tmp_ram_rd_en,
    E,
    SR,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    din);
  output [35:0]D;
  input rd_clk;
  input wr_clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]SR;
  input [6:0]Q;
  input [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [35:0]din;

  wire [35:0]D;
  wire [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire [6:0]Q;
  wire [0:0]SR;
  wire [35:0]din;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  gig_eth_fifo_async_36x128_blk_mem_gen_generic_cstr \valid.cstr 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .Q(Q),
        .SR(SR),
        .din(din),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_2" *) 
module gig_eth_fifo_async_36x128_blk_mem_gen_v8_4_2
   (D,
    rd_clk,
    wr_clk,
    tmp_ram_rd_en,
    E,
    SR,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    din);
  output [35:0]D;
  input rd_clk;
  input wr_clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]SR;
  input [6:0]Q;
  input [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [35:0]din;

  wire [35:0]D;
  wire [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire [6:0]Q;
  wire [0:0]SR;
  wire [35:0]din;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  gig_eth_fifo_async_36x128_blk_mem_gen_v8_4_2_synth inst_blk_mem_gen
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .Q(Q),
        .SR(SR),
        .din(din),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_2_synth" *) 
module gig_eth_fifo_async_36x128_blk_mem_gen_v8_4_2_synth
   (D,
    rd_clk,
    wr_clk,
    tmp_ram_rd_en,
    E,
    SR,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    din);
  output [35:0]D;
  input rd_clk;
  input wr_clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]SR;
  input [6:0]Q;
  input [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [35:0]din;

  wire [35:0]D;
  wire [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire [6:0]Q;
  wire [0:0]SR;
  wire [35:0]din;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  gig_eth_fifo_async_36x128_blk_mem_gen_top \gnbram.gnativebmg.native_blk_mem_gen 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .Q(Q),
        .SR(SR),
        .din(din),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "clk_x_pntrs" *) 
module gig_eth_fifo_async_36x128_clk_x_pntrs
   (ram_full_fb_i_reg,
    S,
    WR_PNTR_RD,
    \dest_out_bin_ff_reg[6] ,
    RD_PNTR_WR,
    comp0,
    \dest_out_bin_ff_reg[5] ,
    \dest_out_bin_ff_reg[5]_0 ,
    D,
    wr_en_0,
    out,
    wr_en,
    \gaf.ram_almost_full_i_reg ,
    Q,
    ram_full_i_i_2_0,
    \gaf.ram_almost_full_i_i_3_0 ,
    \gaf.ram_almost_full_i_i_2_0 ,
    diff_wr_rd,
    \g_rd.gvalid_low.rd_dc_i_reg[3] ,
    \g_rd.gvalid_low.rd_dc_i_reg[4] ,
    almost_full,
    wr_clk,
    \src_gray_ff_reg[6] ,
    rd_clk);
  output ram_full_fb_i_reg;
  output [3:0]S;
  output [6:0]WR_PNTR_RD;
  output [2:0]\dest_out_bin_ff_reg[6] ;
  output [6:0]RD_PNTR_WR;
  output comp0;
  output \dest_out_bin_ff_reg[5] ;
  output \dest_out_bin_ff_reg[5]_0 ;
  output [1:0]D;
  output wr_en_0;
  input out;
  input wr_en;
  input \gaf.ram_almost_full_i_reg ;
  input [6:0]Q;
  input [6:0]ram_full_i_i_2_0;
  input [6:0]\gaf.ram_almost_full_i_i_3_0 ;
  input [6:0]\gaf.ram_almost_full_i_i_2_0 ;
  input [4:0]diff_wr_rd;
  input \g_rd.gvalid_low.rd_dc_i_reg[3] ;
  input [0:0]\g_rd.gvalid_low.rd_dc_i_reg[4] ;
  input almost_full;
  input wr_clk;
  input [6:0]\src_gray_ff_reg[6] ;
  input rd_clk;

  wire [1:0]D;
  wire [6:0]Q;
  wire [6:0]RD_PNTR_WR;
  wire [3:0]S;
  wire [6:0]WR_PNTR_RD;
  wire almost_full;
  wire comp0;
  wire \dest_out_bin_ff_reg[5] ;
  wire \dest_out_bin_ff_reg[5]_0 ;
  wire [2:0]\dest_out_bin_ff_reg[6] ;
  wire [4:0]diff_wr_rd;
  wire \g_rd.gvalid_low.rd_dc_i_reg[3] ;
  wire [0:0]\g_rd.gvalid_low.rd_dc_i_reg[4] ;
  wire [6:0]\gaf.ram_almost_full_i_i_2_0 ;
  wire [6:0]\gaf.ram_almost_full_i_i_3_0 ;
  wire \gaf.ram_almost_full_i_i_4_n_0 ;
  wire \gaf.ram_almost_full_i_i_5_n_0 ;
  wire \gaf.ram_almost_full_i_i_6_n_0 ;
  wire \gaf.ram_almost_full_i_i_7_n_0 ;
  wire \gaf.ram_almost_full_i_reg ;
  wire \gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp1 ;
  wire \gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp2 ;
  wire \gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp3 ;
  wire out;
  wire ram_empty_i_i_4_n_0;
  wire ram_empty_i_i_5_n_0;
  wire ram_full_fb_i_reg;
  wire [6:0]ram_full_i_i_2_0;
  wire ram_full_i_i_3_n_0;
  wire ram_full_i_i_4_n_0;
  wire rd_clk;
  wire [6:0]\src_gray_ff_reg[6] ;
  wire wr_clk;
  wire wr_en;
  wire wr_en_0;

  LUT5 #(
    .INIT(32'h2A800000)) 
    \g_rd.gvalid_low.rd_dc_i[3]_i_1 
       (.I0(\g_rd.gvalid_low.rd_dc_i_reg[3] ),
        .I1(diff_wr_rd[0]),
        .I2(diff_wr_rd[1]),
        .I3(diff_wr_rd[2]),
        .I4(\g_rd.gvalid_low.rd_dc_i_reg[4] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h2AAA800000000000)) 
    \g_rd.gvalid_low.rd_dc_i[4]_i_1 
       (.I0(\g_rd.gvalid_low.rd_dc_i_reg[3] ),
        .I1(diff_wr_rd[1]),
        .I2(diff_wr_rd[0]),
        .I3(diff_wr_rd[2]),
        .I4(diff_wr_rd[3]),
        .I5(\g_rd.gvalid_low.rd_dc_i_reg[4] ),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \g_rd.gvalid_low.rd_dc_i[5]_i_2 
       (.I0(diff_wr_rd[3]),
        .I1(diff_wr_rd[1]),
        .I2(diff_wr_rd[0]),
        .I3(diff_wr_rd[2]),
        .O(\dest_out_bin_ff_reg[5]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \g_rd.gvalid_low.rd_dc_i[7]_i_2 
       (.I0(diff_wr_rd[4]),
        .I1(diff_wr_rd[2]),
        .I2(diff_wr_rd[0]),
        .I3(diff_wr_rd[1]),
        .I4(diff_wr_rd[3]),
        .O(\dest_out_bin_ff_reg[5] ));
  LUT6 #(
    .INIT(64'h00FF00F8000000F8)) 
    \gaf.ram_almost_full_i_i_1 
       (.I0(\gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp3 ),
        .I1(wr_en),
        .I2(\gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp2 ),
        .I3(\gaf.ram_almost_full_i_reg ),
        .I4(out),
        .I5(almost_full),
        .O(wr_en_0));
  LUT6 #(
    .INIT(64'h0000000082000082)) 
    \gaf.ram_almost_full_i_i_2 
       (.I0(\gaf.ram_almost_full_i_i_4_n_0 ),
        .I1(RD_PNTR_WR[0]),
        .I2(\gaf.ram_almost_full_i_i_2_0 [0]),
        .I3(RD_PNTR_WR[1]),
        .I4(\gaf.ram_almost_full_i_i_2_0 [1]),
        .I5(\gaf.ram_almost_full_i_i_5_n_0 ),
        .O(\gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp3 ));
  LUT6 #(
    .INIT(64'h0000000082000082)) 
    \gaf.ram_almost_full_i_i_3 
       (.I0(\gaf.ram_almost_full_i_i_6_n_0 ),
        .I1(RD_PNTR_WR[0]),
        .I2(\gaf.ram_almost_full_i_i_3_0 [0]),
        .I3(RD_PNTR_WR[1]),
        .I4(\gaf.ram_almost_full_i_i_3_0 [1]),
        .I5(\gaf.ram_almost_full_i_i_7_n_0 ),
        .O(\gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp2 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \gaf.ram_almost_full_i_i_4 
       (.I0(RD_PNTR_WR[2]),
        .I1(\gaf.ram_almost_full_i_i_2_0 [2]),
        .I2(RD_PNTR_WR[3]),
        .I3(\gaf.ram_almost_full_i_i_2_0 [3]),
        .O(\gaf.ram_almost_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \gaf.ram_almost_full_i_i_5 
       (.I0(RD_PNTR_WR[6]),
        .I1(\gaf.ram_almost_full_i_i_2_0 [6]),
        .I2(\gaf.ram_almost_full_i_i_2_0 [5]),
        .I3(RD_PNTR_WR[5]),
        .I4(\gaf.ram_almost_full_i_i_2_0 [4]),
        .I5(RD_PNTR_WR[4]),
        .O(\gaf.ram_almost_full_i_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \gaf.ram_almost_full_i_i_6 
       (.I0(RD_PNTR_WR[2]),
        .I1(\gaf.ram_almost_full_i_i_3_0 [2]),
        .I2(RD_PNTR_WR[3]),
        .I3(\gaf.ram_almost_full_i_i_3_0 [3]),
        .O(\gaf.ram_almost_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \gaf.ram_almost_full_i_i_7 
       (.I0(RD_PNTR_WR[6]),
        .I1(\gaf.ram_almost_full_i_i_3_0 [6]),
        .I2(\gaf.ram_almost_full_i_i_3_0 [5]),
        .I3(RD_PNTR_WR[5]),
        .I4(\gaf.ram_almost_full_i_i_3_0 [4]),
        .I5(RD_PNTR_WR[4]),
        .O(\gaf.ram_almost_full_i_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_1__0
       (.I0(WR_PNTR_RD[6]),
        .I1(Q[6]),
        .O(\dest_out_bin_ff_reg[6] [2]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_2__0
       (.I0(WR_PNTR_RD[5]),
        .I1(Q[5]),
        .O(\dest_out_bin_ff_reg[6] [1]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_3__0
       (.I0(WR_PNTR_RD[4]),
        .I1(Q[4]),
        .O(\dest_out_bin_ff_reg[6] [0]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_1__0
       (.I0(WR_PNTR_RD[3]),
        .I1(Q[3]),
        .O(S[3]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_2__0
       (.I0(WR_PNTR_RD[2]),
        .I1(Q[2]),
        .O(S[2]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_3__0
       (.I0(WR_PNTR_RD[1]),
        .I1(Q[1]),
        .O(S[1]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_4__0
       (.I0(WR_PNTR_RD[0]),
        .I1(Q[0]),
        .O(S[0]));
  LUT6 #(
    .INIT(64'h0000000082000082)) 
    ram_empty_i_i_2
       (.I0(ram_empty_i_i_4_n_0),
        .I1(WR_PNTR_RD[0]),
        .I2(Q[0]),
        .I3(WR_PNTR_RD[1]),
        .I4(Q[1]),
        .I5(ram_empty_i_i_5_n_0),
        .O(comp0));
  LUT4 #(
    .INIT(16'h9009)) 
    ram_empty_i_i_4
       (.I0(WR_PNTR_RD[2]),
        .I1(Q[2]),
        .I2(WR_PNTR_RD[3]),
        .I3(Q[3]),
        .O(ram_empty_i_i_4_n_0));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    ram_empty_i_i_5
       (.I0(WR_PNTR_RD[6]),
        .I1(Q[6]),
        .I2(Q[5]),
        .I3(WR_PNTR_RD[5]),
        .I4(Q[4]),
        .I5(WR_PNTR_RD[4]),
        .O(ram_empty_i_i_5_n_0));
  LUT5 #(
    .INIT(32'h0000FF20)) 
    ram_full_i_i_1
       (.I0(\gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp2 ),
        .I1(out),
        .I2(wr_en),
        .I3(\gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp1 ),
        .I4(\gaf.ram_almost_full_i_reg ),
        .O(ram_full_fb_i_reg));
  LUT6 #(
    .INIT(64'h0000000082000082)) 
    ram_full_i_i_2
       (.I0(ram_full_i_i_3_n_0),
        .I1(RD_PNTR_WR[0]),
        .I2(ram_full_i_i_2_0[0]),
        .I3(RD_PNTR_WR[1]),
        .I4(ram_full_i_i_2_0[1]),
        .I5(ram_full_i_i_4_n_0),
        .O(\gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp1 ));
  LUT4 #(
    .INIT(16'h9009)) 
    ram_full_i_i_3
       (.I0(RD_PNTR_WR[2]),
        .I1(ram_full_i_i_2_0[2]),
        .I2(RD_PNTR_WR[3]),
        .I3(ram_full_i_i_2_0[3]),
        .O(ram_full_i_i_3_n_0));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    ram_full_i_i_4
       (.I0(RD_PNTR_WR[6]),
        .I1(ram_full_i_i_2_0[6]),
        .I2(ram_full_i_i_2_0[5]),
        .I3(RD_PNTR_WR[5]),
        .I4(ram_full_i_i_2_0[4]),
        .I5(RD_PNTR_WR[4]),
        .O(ram_full_i_i_4_n_0));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* REG_OUTPUT = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "7" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  gig_eth_fifo_async_36x128_xpm_cdc_gray rd_pntr_cdc_inst
       (.dest_clk(wr_clk),
        .dest_out_bin(RD_PNTR_WR),
        .src_clk(rd_clk),
        .src_in_bin(Q));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* REG_OUTPUT = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "7" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  gig_eth_fifo_async_36x128_xpm_cdc_gray__2 wr_pntr_cdc_inst
       (.dest_clk(rd_clk),
        .dest_out_bin(WR_PNTR_RD),
        .src_clk(wr_clk),
        .src_in_bin(\src_gray_ff_reg[6] ));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module gig_eth_fifo_async_36x128_fifo_generator_ramfifo
   (wr_rst_busy,
    AR,
    empty,
    VALID,
    full,
    dout,
    rd_data_count,
    wr_data_count,
    almost_full,
    wr_en,
    rst,
    wr_clk,
    rd_clk,
    din,
    rd_en);
  output wr_rst_busy;
  output [0:0]AR;
  output empty;
  output VALID;
  output full;
  output [35:0]dout;
  output [7:0]rd_data_count;
  output [7:0]wr_data_count;
  output almost_full;
  input wr_en;
  input rst;
  input wr_clk;
  input rd_clk;
  input [35:0]din;
  input rd_en;

  wire [0:0]AR;
  wire VALID;
  wire almost_full;
  wire [5:1]diff_wr_rd;
  wire [35:0]din;
  wire [35:0]dout;
  wire empty;
  wire full;
  wire \gntv_or_sync_fifo.gcx.clkx_n_0 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_1 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_12 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_13 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_14 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_2 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_23 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_24 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_25 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_26 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_27 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_3 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_4 ;
  wire \gntv_or_sync_fifo.gl0.wr_n_1 ;
  wire \gras.rsts/comp0 ;
  wire [6:0]p_0_out;
  wire [6:0]p_13_out;
  wire [6:0]p_14_out;
  wire p_20_out;
  wire [6:0]p_24_out;
  wire [6:0]p_25_out;
  wire p_3_out;
  wire p_6_out;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rst;
  wire rst_full_ff_i;
  wire rst_full_gen_i;
  wire rstblk_n_0;
  wire tmp_ram_rd_en;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [6:0]wr_pntr_plus2;
  wire [6:0]wr_pntr_plus3;
  wire wr_rst_busy;

  gig_eth_fifo_async_36x128_clk_x_pntrs \gntv_or_sync_fifo.gcx.clkx 
       (.D({\gntv_or_sync_fifo.gcx.clkx_n_25 ,\gntv_or_sync_fifo.gcx.clkx_n_26 }),
        .Q(p_0_out),
        .RD_PNTR_WR(p_25_out),
        .S({\gntv_or_sync_fifo.gcx.clkx_n_1 ,\gntv_or_sync_fifo.gcx.clkx_n_2 ,\gntv_or_sync_fifo.gcx.clkx_n_3 ,\gntv_or_sync_fifo.gcx.clkx_n_4 }),
        .WR_PNTR_RD(p_24_out),
        .almost_full(almost_full),
        .comp0(\gras.rsts/comp0 ),
        .\dest_out_bin_ff_reg[5] (\gntv_or_sync_fifo.gcx.clkx_n_23 ),
        .\dest_out_bin_ff_reg[5]_0 (\gntv_or_sync_fifo.gcx.clkx_n_24 ),
        .\dest_out_bin_ff_reg[6] ({\gntv_or_sync_fifo.gcx.clkx_n_12 ,\gntv_or_sync_fifo.gcx.clkx_n_13 ,\gntv_or_sync_fifo.gcx.clkx_n_14 }),
        .diff_wr_rd(diff_wr_rd),
        .\g_rd.gvalid_low.rd_dc_i_reg[3] (VALID),
        .\g_rd.gvalid_low.rd_dc_i_reg[4] (p_3_out),
        .\gaf.ram_almost_full_i_i_2_0 (wr_pntr_plus3),
        .\gaf.ram_almost_full_i_i_3_0 (wr_pntr_plus2),
        .\gaf.ram_almost_full_i_reg (rst_full_gen_i),
        .out(\gntv_or_sync_fifo.gl0.wr_n_1 ),
        .ram_full_fb_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_0 ),
        .ram_full_i_i_2_0(p_14_out),
        .rd_clk(rd_clk),
        .\src_gray_ff_reg[6] (p_13_out),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_en_0(\gntv_or_sync_fifo.gcx.clkx_n_27 ));
  gig_eth_fifo_async_36x128_rd_logic \gntv_or_sync_fifo.gl0.rd 
       (.AS(AR),
        .D({\gntv_or_sync_fifo.gcx.clkx_n_25 ,\gntv_or_sync_fifo.gcx.clkx_n_26 }),
        .E(p_6_out),
        .Q(p_0_out),
        .S({\gntv_or_sync_fifo.gcx.clkx_n_1 ,\gntv_or_sync_fifo.gcx.clkx_n_2 ,\gntv_or_sync_fifo.gcx.clkx_n_3 ,\gntv_or_sync_fifo.gcx.clkx_n_4 }),
        .WR_PNTR_RD(p_24_out),
        .comp0(\gras.rsts/comp0 ),
        .\dest_out_bin_ff_reg[5] (diff_wr_rd),
        .empty(empty),
        .\g_rd.gvalid_low.rd_dc_i_reg[5] (\gntv_or_sync_fifo.gcx.clkx_n_24 ),
        .\g_rd.gvalid_low.rd_dc_i_reg[6] (\gntv_or_sync_fifo.gcx.clkx_n_23 ),
        .\g_rd.gvalid_low.rd_dc_i_reg[7] ({\gntv_or_sync_fifo.gcx.clkx_n_12 ,\gntv_or_sync_fifo.gcx.clkx_n_13 ,\gntv_or_sync_fifo.gcx.clkx_n_14 }),
        .\gpregsm1.user_valid_reg (VALID),
        .out(p_3_out),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .tmp_ram_rd_en(tmp_ram_rd_en));
  gig_eth_fifo_async_36x128_wr_logic \gntv_or_sync_fifo.gl0.wr 
       (.AR(rstblk_n_0),
        .E(p_20_out),
        .Q(p_13_out),
        .RD_PNTR_WR(p_25_out),
        .almost_full(almost_full),
        .full(full),
        .\gaf.ram_almost_full_i_reg (rst_full_ff_i),
        .\gaf.ram_almost_full_i_reg_0 (\gntv_or_sync_fifo.gcx.clkx_n_27 ),
        .\gic0.gc1.count_d1_reg[6] (wr_pntr_plus2),
        .\gic0.gc1.count_d2_reg[6] (p_14_out),
        .\gic0.gc1.count_reg[6] (wr_pntr_plus3),
        .out(\gntv_or_sync_fifo.gl0.wr_n_1 ),
        .ram_full_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_0 ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en));
  gig_eth_fifo_async_36x128_memory \gntv_or_sync_fifo.mem 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (p_13_out),
        .E(p_20_out),
        .Q(p_0_out),
        .SR(AR),
        .din(din),
        .dout(dout),
        .\goreg_bm.dout_i_reg[35]_0 (p_6_out),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
  gig_eth_fifo_async_36x128_reset_blk_ramfifo rstblk
       (.AR(rstblk_n_0),
        .SR(AR),
        .\grstd1.grst_full.grst_f.rst_d3_reg_0 (rst_full_gen_i),
        .out(rst_full_ff_i),
        .rd_clk(rd_clk),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module gig_eth_fifo_async_36x128_fifo_generator_top
   (wr_rst_busy,
    AS,
    empty,
    VALID,
    full,
    dout,
    rd_data_count,
    wr_data_count,
    almost_full,
    wr_en,
    rst,
    wr_clk,
    rd_clk,
    din,
    rd_en);
  output wr_rst_busy;
  output [0:0]AS;
  output empty;
  output VALID;
  output full;
  output [35:0]dout;
  output [7:0]rd_data_count;
  output [7:0]wr_data_count;
  output almost_full;
  input wr_en;
  input rst;
  input wr_clk;
  input rd_clk;
  input [35:0]din;
  input rd_en;

  wire [0:0]AS;
  wire VALID;
  wire almost_full;
  wire [35:0]din;
  wire [35:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;

  gig_eth_fifo_async_36x128_fifo_generator_ramfifo \grf.rf 
       (.AR(AS),
        .VALID(VALID),
        .almost_full(almost_full),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* C_ADD_NGC_CONSTRAINT = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) (* C_APPLICATION_TYPE_RACH = "0" *) 
(* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) 
(* C_APPLICATION_TYPE_WRCH = "0" *) (* C_AXIS_TDATA_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "1" *) 
(* C_AXIS_TID_WIDTH = "1" *) (* C_AXIS_TKEEP_WIDTH = "1" *) (* C_AXIS_TSTRB_WIDTH = "1" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TYPE = "0" *) (* C_AXI_ADDR_WIDTH = "32" *) 
(* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_DATA_WIDTH = "64" *) (* C_AXI_ID_WIDTH = "1" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LOCK_WIDTH = "1" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_TYPE = "1" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLOCK = "0" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "7" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "36" *) 
(* C_DIN_WIDTH_AXIS = "1" *) (* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) 
(* C_DIN_WIDTH_WACH = "1" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "36" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_ENABLE_RST_SYNC = "1" *) (* C_EN_SAFETY_CKT = "0" *) (* C_ERROR_INJECTION_TYPE = "0" *) 
(* C_ERROR_INJECTION_TYPE_AXIS = "0" *) (* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_FAMILY = "zynq" *) (* C_FULL_FLAGS_RST_VAL = "1" *) (* C_HAS_ALMOST_EMPTY = "0" *) 
(* C_HAS_ALMOST_FULL = "1" *) (* C_HAS_AXIS_TDATA = "1" *) (* C_HAS_AXIS_TDEST = "0" *) 
(* C_HAS_AXIS_TID = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) (* C_HAS_AXIS_TLAST = "0" *) 
(* C_HAS_AXIS_TREADY = "1" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TUSER = "1" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ID = "0" *) (* C_HAS_AXI_RD_CHANNEL = "1" *) (* C_HAS_AXI_RUSER = "0" *) 
(* C_HAS_AXI_WR_CHANNEL = "1" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_BACKUP = "0" *) 
(* C_HAS_DATA_COUNT = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) (* C_HAS_DATA_COUNTS_RACH = "0" *) 
(* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
(* C_HAS_DATA_COUNTS_WRCH = "0" *) (* C_HAS_INT_CLK = "0" *) (* C_HAS_MASTER_CE = "0" *) 
(* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_WACH = "0" *) 
(* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) (* C_HAS_RD_DATA_COUNT = "1" *) 
(* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "1" *) (* C_HAS_SLAVE_CE = "0" *) 
(* C_HAS_SRST = "0" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "1" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "1" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "2" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_WRCH = "1" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_MEMORY_TYPE = "1" *) (* C_MIF_FILE_NAME = "BlankString" *) (* C_MSGON_VAL = "1" *) 
(* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) (* C_POWER_SAVING_MODE = "0" *) 
(* C_PRELOAD_LATENCY = "0" *) (* C_PRELOAD_REGS = "1" *) (* C_PRIM_FIFO_TYPE = "512x36" *) 
(* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_EMPTY_TYPE_AXIS = "0" *) (* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "127" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "126" *) (* C_PROG_FULL_TYPE = "0" *) 
(* C_PROG_FULL_TYPE_AXIS = "0" *) (* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_RD_DATA_COUNT_WIDTH = "8" *) 
(* C_RD_DEPTH = "128" *) (* C_RD_FREQ = "1" *) (* C_RD_PNTR_WIDTH = "7" *) 
(* C_REG_SLICE_MODE_AXIS = "0" *) (* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_SELECT_XPM = "0" *) (* C_SYNCHRONIZER_STAGE = "2" *) (* C_UNDERFLOW_LOW = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_USE_DOUT_RST = "1" *) (* C_USE_ECC = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_WACH = "0" *) 
(* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) (* C_USE_EMBEDDED_REG = "0" *) 
(* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "1" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) 
(* C_WRCH_TYPE = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "8" *) 
(* C_WR_DEPTH = "128" *) (* C_WR_DEPTH_AXIS = "1024" *) (* C_WR_DEPTH_RACH = "16" *) 
(* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) 
(* C_WR_DEPTH_WRCH = "16" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "7" *) 
(* C_WR_PNTR_WIDTH_AXIS = "10" *) (* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* ORIG_REF_NAME = "fifo_generator_v13_2_3" *) 
module gig_eth_fifo_async_36x128_fifo_generator_v13_2_3
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [35:0]din;
  input wr_en;
  input rd_en;
  input [6:0]prog_empty_thresh;
  input [6:0]prog_empty_thresh_assert;
  input [6:0]prog_empty_thresh_negate;
  input [6:0]prog_full_thresh;
  input [6:0]prog_full_thresh_assert;
  input [6:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [35:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [6:0]data_count;
  output [7:0]rd_data_count;
  output [7:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wid;
  input [63:0]s_axi_wdata;
  input [7:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [0:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [0:0]m_axi_wid;
  output [63:0]m_axi_wdata;
  output [7:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [0:0]s_axi_rid;
  output [63:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [0:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [0:0]m_axi_rid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [7:0]s_axis_tdata;
  input [0:0]s_axis_tstrb;
  input [0:0]s_axis_tkeep;
  input s_axis_tlast;
  input [0:0]s_axis_tid;
  input [0:0]s_axis_tdest;
  input [3:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [7:0]m_axis_tdata;
  output [0:0]m_axis_tstrb;
  output [0:0]m_axis_tkeep;
  output m_axis_tlast;
  output [0:0]m_axis_tid;
  output [0:0]m_axis_tdest;
  output [3:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [3:0]axi_ar_prog_full_thresh;
  input [3:0]axi_ar_prog_empty_thresh;
  output [4:0]axi_ar_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [9:0]axis_prog_full_thresh;
  input [9:0]axis_prog_empty_thresh;
  output [10:0]axis_data_count;
  output [10:0]axis_wr_data_count;
  output [10:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire \<const1> ;
  wire almost_full;
  wire [35:0]din;
  wire [35:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire valid;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;

  assign almost_empty = \<const0> ;
  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign data_count[6] = \<const0> ;
  assign data_count[5] = \<const0> ;
  assign data_count[4] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const0> ;
  assign prog_full = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  gig_eth_fifo_async_36x128_fifo_generator_v13_2_3_synth inst_fifo_gen
       (.AR(rd_rst_busy),
        .VALID(valid),
        .almost_full(almost_full),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_2_3_synth" *) 
module gig_eth_fifo_async_36x128_fifo_generator_v13_2_3_synth
   (wr_rst_busy,
    AR,
    empty,
    VALID,
    full,
    dout,
    rd_data_count,
    wr_data_count,
    almost_full,
    wr_en,
    rst,
    wr_clk,
    rd_clk,
    din,
    rd_en);
  output wr_rst_busy;
  output [0:0]AR;
  output empty;
  output VALID;
  output full;
  output [35:0]dout;
  output [7:0]rd_data_count;
  output [7:0]wr_data_count;
  output almost_full;
  input wr_en;
  input rst;
  input wr_clk;
  input rd_clk;
  input [35:0]din;
  input rd_en;

  wire [0:0]AR;
  wire VALID;
  wire almost_full;
  wire [35:0]din;
  wire [35:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;

  gig_eth_fifo_async_36x128_fifo_generator_top \gconvfifo.rf 
       (.AS(AR),
        .VALID(VALID),
        .almost_full(almost_full),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module gig_eth_fifo_async_36x128_memory
   (dout,
    rd_clk,
    wr_clk,
    tmp_ram_rd_en,
    E,
    SR,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    din,
    \goreg_bm.dout_i_reg[35]_0 );
  output [35:0]dout;
  input rd_clk;
  input wr_clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]SR;
  input [6:0]Q;
  input [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [35:0]din;
  input [0:0]\goreg_bm.dout_i_reg[35]_0 ;

  wire [6:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire [6:0]Q;
  wire [0:0]SR;
  wire [35:0]din;
  wire [35:0]dout;
  wire [35:0]doutb;
  wire [0:0]\goreg_bm.dout_i_reg[35]_0 ;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  gig_eth_fifo_async_36x128_blk_mem_gen_v8_4_2 \gbm.gbmg.gbmga.ngecc.bmg 
       (.D(doutb),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .Q(Q),
        .SR(SR),
        .din(din),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[0] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[0]),
        .Q(dout[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[10] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[10]),
        .Q(dout[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[11] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[11]),
        .Q(dout[11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[12] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[12]),
        .Q(dout[12]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[13] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[13]),
        .Q(dout[13]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[14] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[14]),
        .Q(dout[14]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[15] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[15]),
        .Q(dout[15]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[16] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[16]),
        .Q(dout[16]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[17] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[17]),
        .Q(dout[17]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[18] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[18]),
        .Q(dout[18]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[19] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[19]),
        .Q(dout[19]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[1] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[1]),
        .Q(dout[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[20] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[20]),
        .Q(dout[20]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[21] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[21]),
        .Q(dout[21]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[22] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[22]),
        .Q(dout[22]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[23] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[23]),
        .Q(dout[23]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[24] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[24]),
        .Q(dout[24]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[25] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[25]),
        .Q(dout[25]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[26] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[26]),
        .Q(dout[26]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[27] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[27]),
        .Q(dout[27]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[28] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[28]),
        .Q(dout[28]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[29] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[29]),
        .Q(dout[29]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[2] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[2]),
        .Q(dout[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[30] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[30]),
        .Q(dout[30]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[31] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[31]),
        .Q(dout[31]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[32] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[32]),
        .Q(dout[32]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[33] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[33]),
        .Q(dout[33]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[34] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[34]),
        .Q(dout[34]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[35] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[35]),
        .Q(dout[35]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[3] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[3]),
        .Q(dout[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[4] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[4]),
        .Q(dout[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[5] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[5]),
        .Q(dout[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[6] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[6]),
        .Q(dout[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[7] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[7]),
        .Q(dout[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[8] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[8]),
        .Q(dout[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[9] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[9]),
        .Q(dout[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module gig_eth_fifo_async_36x128_rd_bin_cntr
   (comp1,
    Q,
    WR_PNTR_RD,
    E,
    rd_clk,
    AS);
  output comp1;
  output [6:0]Q;
  input [6:0]WR_PNTR_RD;
  input [0:0]E;
  input rd_clk;
  input [0:0]AS;

  wire [0:0]AS;
  wire [0:0]E;
  wire [6:0]Q;
  wire [6:0]WR_PNTR_RD;
  wire comp1;
  wire \gc0.count[6]_i_2_n_0 ;
  wire [6:0]plusOp__0;
  wire ram_empty_i_i_6_n_0;
  wire ram_empty_i_i_7_n_0;
  wire rd_clk;
  wire [6:0]rd_pntr_plus1;

  LUT1 #(
    .INIT(2'h1)) 
    \gc0.count[0]_i_1 
       (.I0(rd_pntr_plus1[0]),
        .O(plusOp__0[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[1]_i_1 
       (.I0(rd_pntr_plus1[0]),
        .I1(rd_pntr_plus1[1]),
        .O(plusOp__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[2]_i_1 
       (.I0(rd_pntr_plus1[0]),
        .I1(rd_pntr_plus1[1]),
        .I2(rd_pntr_plus1[2]),
        .O(plusOp__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc0.count[3]_i_1 
       (.I0(rd_pntr_plus1[1]),
        .I1(rd_pntr_plus1[0]),
        .I2(rd_pntr_plus1[2]),
        .I3(rd_pntr_plus1[3]),
        .O(plusOp__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gc0.count[4]_i_1 
       (.I0(rd_pntr_plus1[2]),
        .I1(rd_pntr_plus1[0]),
        .I2(rd_pntr_plus1[1]),
        .I3(rd_pntr_plus1[3]),
        .I4(rd_pntr_plus1[4]),
        .O(plusOp__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gc0.count[5]_i_1 
       (.I0(rd_pntr_plus1[3]),
        .I1(rd_pntr_plus1[1]),
        .I2(rd_pntr_plus1[0]),
        .I3(rd_pntr_plus1[2]),
        .I4(rd_pntr_plus1[4]),
        .I5(rd_pntr_plus1[5]),
        .O(plusOp__0[5]));
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[6]_i_1 
       (.I0(\gc0.count[6]_i_2_n_0 ),
        .I1(rd_pntr_plus1[5]),
        .I2(rd_pntr_plus1[6]),
        .O(plusOp__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \gc0.count[6]_i_2 
       (.I0(rd_pntr_plus1[4]),
        .I1(rd_pntr_plus1[2]),
        .I2(rd_pntr_plus1[0]),
        .I3(rd_pntr_plus1[1]),
        .I4(rd_pntr_plus1[3]),
        .O(\gc0.count[6]_i_2_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AS),
        .D(rd_pntr_plus1[0]),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AS),
        .D(rd_pntr_plus1[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AS),
        .D(rd_pntr_plus1[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AS),
        .D(rd_pntr_plus1[3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AS),
        .D(rd_pntr_plus1[4]),
        .Q(Q[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AS),
        .D(rd_pntr_plus1[5]),
        .Q(Q[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AS),
        .D(rd_pntr_plus1[6]),
        .Q(Q[6]));
  FDPE #(
    .INIT(1'b1)) 
    \gc0.count_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__0[0]),
        .PRE(AS),
        .Q(rd_pntr_plus1[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AS),
        .D(plusOp__0[1]),
        .Q(rd_pntr_plus1[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AS),
        .D(plusOp__0[2]),
        .Q(rd_pntr_plus1[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AS),
        .D(plusOp__0[3]),
        .Q(rd_pntr_plus1[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AS),
        .D(plusOp__0[4]),
        .Q(rd_pntr_plus1[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AS),
        .D(plusOp__0[5]),
        .Q(rd_pntr_plus1[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AS),
        .D(plusOp__0[6]),
        .Q(rd_pntr_plus1[6]));
  LUT6 #(
    .INIT(64'h0000000082000082)) 
    ram_empty_i_i_3
       (.I0(ram_empty_i_i_6_n_0),
        .I1(rd_pntr_plus1[0]),
        .I2(WR_PNTR_RD[0]),
        .I3(rd_pntr_plus1[1]),
        .I4(WR_PNTR_RD[1]),
        .I5(ram_empty_i_i_7_n_0),
        .O(comp1));
  LUT4 #(
    .INIT(16'h9009)) 
    ram_empty_i_i_6
       (.I0(rd_pntr_plus1[2]),
        .I1(WR_PNTR_RD[2]),
        .I2(rd_pntr_plus1[3]),
        .I3(WR_PNTR_RD[3]),
        .O(ram_empty_i_i_6_n_0));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    ram_empty_i_i_7
       (.I0(rd_pntr_plus1[6]),
        .I1(WR_PNTR_RD[6]),
        .I2(WR_PNTR_RD[5]),
        .I3(rd_pntr_plus1[5]),
        .I4(WR_PNTR_RD[4]),
        .I5(rd_pntr_plus1[4]),
        .O(ram_empty_i_i_7_n_0));
endmodule

(* ORIG_REF_NAME = "rd_dc_fwft_ext_as" *) 
module gig_eth_fifo_async_36x128_rd_dc_fwft_ext_as
   (\dest_out_bin_ff_reg[5] ,
    diff_wr_rd,
    rd_data_count,
    WR_PNTR_RD,
    S,
    \g_rd.gvalid_low.rd_dc_i_reg[7]_0 ,
    D,
    rd_clk,
    AS);
  output [4:0]\dest_out_bin_ff_reg[5] ;
  output [1:0]diff_wr_rd;
  output [7:0]rd_data_count;
  input [5:0]WR_PNTR_RD;
  input [3:0]S;
  input [2:0]\g_rd.gvalid_low.rd_dc_i_reg[7]_0 ;
  input [7:0]D;
  input rd_clk;
  input [0:0]AS;

  wire [0:0]AS;
  wire [7:0]D;
  wire [3:0]S;
  wire [5:0]WR_PNTR_RD;
  wire [4:0]\dest_out_bin_ff_reg[5] ;
  wire [1:0]diff_wr_rd;
  wire [2:0]\g_rd.gvalid_low.rd_dc_i_reg[7]_0 ;
  wire minusOp_carry__0_n_2;
  wire minusOp_carry__0_n_3;
  wire minusOp_carry_n_0;
  wire minusOp_carry_n_1;
  wire minusOp_carry_n_2;
  wire minusOp_carry_n_3;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire [3:2]NLW_minusOp_carry__0_CO_UNCONNECTED;
  wire [3:3]NLW_minusOp_carry__0_O_UNCONNECTED;

  FDCE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AS),
        .D(D[0]),
        .Q(rd_data_count[0]));
  FDCE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AS),
        .D(D[1]),
        .Q(rd_data_count[1]));
  FDCE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AS),
        .D(D[2]),
        .Q(rd_data_count[2]));
  FDCE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AS),
        .D(D[3]),
        .Q(rd_data_count[3]));
  FDCE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AS),
        .D(D[4]),
        .Q(rd_data_count[4]));
  FDCE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AS),
        .D(D[5]),
        .Q(rd_data_count[5]));
  FDCE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AS),
        .D(D[6]),
        .Q(rd_data_count[6]));
  FDCE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AS),
        .D(D[7]),
        .Q(rd_data_count[7]));
  CARRY4 minusOp_carry
       (.CI(1'b0),
        .CO({minusOp_carry_n_0,minusOp_carry_n_1,minusOp_carry_n_2,minusOp_carry_n_3}),
        .CYINIT(1'b1),
        .DI(WR_PNTR_RD[3:0]),
        .O({\dest_out_bin_ff_reg[5] [2:0],diff_wr_rd[0]}),
        .S(S));
  CARRY4 minusOp_carry__0
       (.CI(minusOp_carry_n_0),
        .CO({NLW_minusOp_carry__0_CO_UNCONNECTED[3:2],minusOp_carry__0_n_2,minusOp_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,WR_PNTR_RD[5:4]}),
        .O({NLW_minusOp_carry__0_O_UNCONNECTED[3],diff_wr_rd[1],\dest_out_bin_ff_reg[5] [4:3]}),
        .S({1'b0,\g_rd.gvalid_low.rd_dc_i_reg[7]_0 }));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module gig_eth_fifo_async_36x128_rd_fwft
   (out,
    empty,
    \gpregsm1.user_valid_reg_0 ,
    tmp_ram_rd_en,
    ram_empty_fb_i_reg,
    E,
    ram_empty_fb_i_reg_0,
    D,
    rd_clk,
    AS,
    rd_en,
    \gpregsm1.curr_fwft_state_reg[1]_0 ,
    comp0,
    comp1,
    \g_rd.gvalid_low.rd_dc_i_reg[5] ,
    diff_wr_rd,
    \g_rd.gvalid_low.rd_dc_i_reg[6] ,
    \g_rd.gvalid_low.rd_dc_i_reg[5]_0 );
  output [0:0]out;
  output empty;
  output \gpregsm1.user_valid_reg_0 ;
  output tmp_ram_rd_en;
  output ram_empty_fb_i_reg;
  output [0:0]E;
  output [0:0]ram_empty_fb_i_reg_0;
  output [5:0]D;
  input rd_clk;
  input [0:0]AS;
  input rd_en;
  input \gpregsm1.curr_fwft_state_reg[1]_0 ;
  input comp0;
  input comp1;
  input [2:0]\g_rd.gvalid_low.rd_dc_i_reg[5] ;
  input [1:0]diff_wr_rd;
  input \g_rd.gvalid_low.rd_dc_i_reg[6] ;
  input \g_rd.gvalid_low.rd_dc_i_reg[5]_0 ;

  wire [0:0]AS;
  wire [5:0]D;
  wire [0:0]E;
  (* DONT_TOUCH *) wire aempty_fwft_fb_i;
  (* DONT_TOUCH *) wire aempty_fwft_i;
  wire aempty_fwft_i0;
  wire comp0;
  wire comp1;
  (* DONT_TOUCH *) wire [1:0]curr_fwft_state;
  wire [1:0]diff_wr_rd;
  (* DONT_TOUCH *) wire empty_fwft_fb_i;
  (* DONT_TOUCH *) wire empty_fwft_fb_o_i;
  wire empty_fwft_fb_o_i0;
  (* DONT_TOUCH *) wire empty_fwft_i;
  wire empty_fwft_i0;
  wire [2:0]\g_rd.gvalid_low.rd_dc_i_reg[5] ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[5]_0 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[6] ;
  wire \gpregsm1.curr_fwft_state_reg[1]_0 ;
  wire [1:0]next_fwft_state;
  wire ram_empty_fb_i_reg;
  wire [0:0]ram_empty_fb_i_reg_0;
  wire rd_clk;
  wire rd_en;
  wire tmp_ram_rd_en;
  (* DONT_TOUCH *) wire user_valid;

  assign empty = empty_fwft_i;
  assign \gpregsm1.user_valid_reg_0  = user_valid;
  assign out[0] = curr_fwft_state[1];
  LUT5 #(
    .INIT(32'hFFFF4555)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_i_1 
       (.I0(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .I4(AS),
        .O(tmp_ram_rd_en));
  LUT5 #(
    .INIT(32'hFFCB8000)) 
    aempty_fwft_fb_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .I4(aempty_fwft_fb_i),
        .O(aempty_fwft_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    aempty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0),
        .PRE(AS),
        .Q(aempty_fwft_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    aempty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0),
        .PRE(AS),
        .Q(aempty_fwft_i));
  LUT4 #(
    .INIT(16'hF320)) 
    empty_fwft_fb_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(empty_fwft_fb_i),
        .O(empty_fwft_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(AS),
        .Q(empty_fwft_fb_i));
  LUT4 #(
    .INIT(16'hF320)) 
    empty_fwft_fb_o_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(empty_fwft_fb_o_i),
        .O(empty_fwft_fb_o_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_o_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_fb_o_i0),
        .PRE(AS),
        .Q(empty_fwft_fb_o_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(AS),
        .Q(empty_fwft_i));
  LUT3 #(
    .INIT(8'hA2)) 
    \g_rd.gvalid_low.rd_dc_i[0]_i_1 
       (.I0(user_valid),
        .I1(curr_fwft_state[1]),
        .I2(diff_wr_rd[0]),
        .O(D[0]));
  LUT3 #(
    .INIT(8'h20)) 
    \g_rd.gvalid_low.rd_dc_i[1]_i_1 
       (.I0(user_valid),
        .I1(\g_rd.gvalid_low.rd_dc_i_reg[5] [0]),
        .I2(curr_fwft_state[1]),
        .O(D[1]));
  LUT4 #(
    .INIT(16'h2800)) 
    \g_rd.gvalid_low.rd_dc_i[2]_i_1 
       (.I0(user_valid),
        .I1(\g_rd.gvalid_low.rd_dc_i_reg[5] [0]),
        .I2(\g_rd.gvalid_low.rd_dc_i_reg[5] [1]),
        .I3(curr_fwft_state[1]),
        .O(D[2]));
  LUT4 #(
    .INIT(16'h2800)) 
    \g_rd.gvalid_low.rd_dc_i[5]_i_1 
       (.I0(user_valid),
        .I1(\g_rd.gvalid_low.rd_dc_i_reg[5]_0 ),
        .I2(\g_rd.gvalid_low.rd_dc_i_reg[5] [2]),
        .I3(curr_fwft_state[1]),
        .O(D[3]));
  LUT4 #(
    .INIT(16'h2800)) 
    \g_rd.gvalid_low.rd_dc_i[6]_i_1 
       (.I0(user_valid),
        .I1(\g_rd.gvalid_low.rd_dc_i_reg[6] ),
        .I2(diff_wr_rd[1]),
        .I3(curr_fwft_state[1]),
        .O(D[4]));
  LUT4 #(
    .INIT(16'h8000)) 
    \g_rd.gvalid_low.rd_dc_i[7]_i_1 
       (.I0(user_valid),
        .I1(diff_wr_rd[1]),
        .I2(\g_rd.gvalid_low.rd_dc_i_reg[6] ),
        .I3(curr_fwft_state[1]),
        .O(D[5]));
  LUT4 #(
    .INIT(16'h4555)) 
    \gc0.count_d1[6]_i_1 
       (.I0(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(ram_empty_fb_i_reg_0));
  LUT3 #(
    .INIT(8'hA2)) 
    \goreg_bm.dout_i[35]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(curr_fwft_state[0]),
        .I2(rd_en),
        .O(E));
  LUT3 #(
    .INIT(8'hBA)) 
    \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state[0]));
  LUT4 #(
    .INIT(16'h20FF)) 
    \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .O(next_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AS),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AS),
        .D(next_fwft_state[1]),
        .Q(curr_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.user_valid_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AS),
        .D(next_fwft_state[0]),
        .Q(user_valid));
  LUT6 #(
    .INIT(64'hBABBBBBBAAAAAAAA)) 
    ram_empty_i_i_1
       (.I0(comp0),
        .I1(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .I2(rd_en),
        .I3(curr_fwft_state[1]),
        .I4(curr_fwft_state[0]),
        .I5(comp1),
        .O(ram_empty_fb_i_reg));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module gig_eth_fifo_async_36x128_rd_logic
   (out,
    empty,
    \gpregsm1.user_valid_reg ,
    \dest_out_bin_ff_reg[5] ,
    tmp_ram_rd_en,
    E,
    Q,
    rd_data_count,
    rd_clk,
    AS,
    WR_PNTR_RD,
    S,
    \g_rd.gvalid_low.rd_dc_i_reg[7] ,
    rd_en,
    comp0,
    \g_rd.gvalid_low.rd_dc_i_reg[6] ,
    \g_rd.gvalid_low.rd_dc_i_reg[5] ,
    D);
  output [0:0]out;
  output empty;
  output \gpregsm1.user_valid_reg ;
  output [4:0]\dest_out_bin_ff_reg[5] ;
  output tmp_ram_rd_en;
  output [0:0]E;
  output [6:0]Q;
  output [7:0]rd_data_count;
  input rd_clk;
  input [0:0]AS;
  input [6:0]WR_PNTR_RD;
  input [3:0]S;
  input [2:0]\g_rd.gvalid_low.rd_dc_i_reg[7] ;
  input rd_en;
  input comp0;
  input \g_rd.gvalid_low.rd_dc_i_reg[6] ;
  input \g_rd.gvalid_low.rd_dc_i_reg[5] ;
  input [1:0]D;

  wire [0:0]AS;
  wire [1:0]D;
  wire [0:0]E;
  wire [6:0]Q;
  wire [3:0]S;
  wire [6:0]WR_PNTR_RD;
  wire comp0;
  wire comp1;
  wire [4:0]\dest_out_bin_ff_reg[5] ;
  wire [6:0]diff_wr_rd;
  wire empty;
  wire \g_rd.gvalid_low.rd_dc_i_reg[5] ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[6] ;
  wire [2:0]\g_rd.gvalid_low.rd_dc_i_reg[7] ;
  wire \gpregsm1.user_valid_reg ;
  wire \gr1.gr1_int.rfwft_n_10 ;
  wire \gr1.gr1_int.rfwft_n_11 ;
  wire \gr1.gr1_int.rfwft_n_12 ;
  wire \gr1.gr1_int.rfwft_n_4 ;
  wire \gr1.gr1_int.rfwft_n_7 ;
  wire \gr1.gr1_int.rfwft_n_8 ;
  wire \gr1.gr1_int.rfwft_n_9 ;
  wire [0:0]out;
  wire p_2_out;
  wire p_8_out;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire tmp_ram_rd_en;

  gig_eth_fifo_async_36x128_rd_fwft \gr1.gr1_int.rfwft 
       (.AS(AS),
        .D({\gr1.gr1_int.rfwft_n_7 ,\gr1.gr1_int.rfwft_n_8 ,\gr1.gr1_int.rfwft_n_9 ,\gr1.gr1_int.rfwft_n_10 ,\gr1.gr1_int.rfwft_n_11 ,\gr1.gr1_int.rfwft_n_12 }),
        .E(E),
        .comp0(comp0),
        .comp1(comp1),
        .diff_wr_rd({diff_wr_rd[6],diff_wr_rd[0]}),
        .empty(empty),
        .\g_rd.gvalid_low.rd_dc_i_reg[5] ({\dest_out_bin_ff_reg[5] [4],\dest_out_bin_ff_reg[5] [1:0]}),
        .\g_rd.gvalid_low.rd_dc_i_reg[5]_0 (\g_rd.gvalid_low.rd_dc_i_reg[5] ),
        .\g_rd.gvalid_low.rd_dc_i_reg[6] (\g_rd.gvalid_low.rd_dc_i_reg[6] ),
        .\gpregsm1.curr_fwft_state_reg[1]_0 (p_2_out),
        .\gpregsm1.user_valid_reg_0 (\gpregsm1.user_valid_reg ),
        .out(out),
        .ram_empty_fb_i_reg(\gr1.gr1_int.rfwft_n_4 ),
        .ram_empty_fb_i_reg_0(p_8_out),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .tmp_ram_rd_en(tmp_ram_rd_en));
  gig_eth_fifo_async_36x128_rd_dc_fwft_ext_as \gr1.grdc2.rdc 
       (.AS(AS),
        .D({\gr1.gr1_int.rfwft_n_7 ,\gr1.gr1_int.rfwft_n_8 ,\gr1.gr1_int.rfwft_n_9 ,D,\gr1.gr1_int.rfwft_n_10 ,\gr1.gr1_int.rfwft_n_11 ,\gr1.gr1_int.rfwft_n_12 }),
        .S(S),
        .WR_PNTR_RD(WR_PNTR_RD[5:0]),
        .\dest_out_bin_ff_reg[5] (\dest_out_bin_ff_reg[5] ),
        .diff_wr_rd({diff_wr_rd[6],diff_wr_rd[0]}),
        .\g_rd.gvalid_low.rd_dc_i_reg[7]_0 (\g_rd.gvalid_low.rd_dc_i_reg[7] ),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count));
  gig_eth_fifo_async_36x128_rd_status_flags_as \gras.rsts 
       (.AS(AS),
        .out(p_2_out),
        .ram_empty_i_reg_0(\gr1.gr1_int.rfwft_n_4 ),
        .rd_clk(rd_clk));
  gig_eth_fifo_async_36x128_rd_bin_cntr rpntr
       (.AS(AS),
        .E(p_8_out),
        .Q(Q),
        .WR_PNTR_RD(WR_PNTR_RD),
        .comp1(comp1),
        .rd_clk(rd_clk));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_as" *) 
module gig_eth_fifo_async_36x128_rd_status_flags_as
   (out,
    ram_empty_i_reg_0,
    rd_clk,
    AS);
  output out;
  input ram_empty_i_reg_0;
  input rd_clk;
  input [0:0]AS;

  wire [0:0]AS;
  (* DONT_TOUCH *) wire ram_empty_fb_i;
  (* DONT_TOUCH *) wire ram_empty_i;
  wire ram_empty_i_reg_0;
  wire rd_clk;

  assign out = ram_empty_fb_i;
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i_reg_0),
        .PRE(AS),
        .Q(ram_empty_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i_reg_0),
        .PRE(AS),
        .Q(ram_empty_i));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module gig_eth_fifo_async_36x128_reset_blk_ramfifo
   (AR,
    SR,
    out,
    \grstd1.grst_full.grst_f.rst_d3_reg_0 ,
    wr_rst_busy,
    rst,
    wr_clk,
    rd_clk);
  output [0:0]AR;
  output [0:0]SR;
  output out;
  output \grstd1.grst_full.grst_f.rst_d3_reg_0 ;
  output wr_rst_busy;
  input rst;
  input wr_clk;
  input rd_clk;

  wire [0:0]AR;
  wire [0:0]SR;
  wire dest_out;
  wire \grstd1.grst_full.grst_f.rst_d3_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ;
  wire rd_clk;
  wire [3:0]rd_rst_wr_ext;
  wire rst;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;
  wire sckt_rd_rst_wr;
  wire wr_clk;
  wire wr_rst_busy;
  wire [1:0]wr_rst_rd_ext;

  assign \grstd1.grst_full.grst_f.rst_d3_reg_0  = rst_d3;
  assign out = rst_d2;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_rst_busy),
        .PRE(rst_wr_reg2),
        .Q(rst_d1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1),
        .PRE(rst_wr_reg2),
        .Q(rst_d2));
  LUT2 #(
    .INIT(4'hE)) 
    \grstd1.grst_full.grst_f.rst_d3_i_1 
       (.I0(rst_d2),
        .I1(AR),
        .O(\grstd1.grst_full.grst_f.rst_d3_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grstd1.grst_full.grst_f.rst_d3_i_1_n_0 ),
        .PRE(rst_wr_reg2),
        .Q(rst_d3));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rd_rst_wr_ext_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(rst_wr_reg2),
        .D(sckt_rd_rst_wr),
        .Q(rd_rst_wr_ext[0]));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rd_rst_wr_ext_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(rst_wr_reg2),
        .D(rd_rst_wr_ext[0]),
        .Q(rd_rst_wr_ext[1]));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rd_rst_wr_ext_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(rst_wr_reg2),
        .D(rd_rst_wr_ext[1]),
        .Q(rd_rst_wr_ext[2]));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rd_rst_wr_ext_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(rst_wr_reg2),
        .D(rd_rst_wr_ext[2]),
        .Q(rd_rst_wr_ext[3]));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* INV_DEF_VAL = "1'b1" *) 
  (* RST_ACTIVE_HIGH = "1" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  gig_eth_fifo_async_36x128_xpm_cdc_async_rst \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rst_rd_reg2_inst 
       (.dest_arst(rst_rd_reg2),
        .dest_clk(rd_clk),
        .src_arst(rst));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1 
       (.I0(SR),
        .I1(wr_rst_rd_ext[1]),
        .O(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ));
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ),
        .PRE(rst_rd_reg2),
        .Q(SR));
  LUT3 #(
    .INIT(8'h8A)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1 
       (.I0(AR),
        .I1(rd_rst_wr_ext[0]),
        .I2(rd_rst_wr_ext[1]),
        .O(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ));
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ),
        .PRE(rst_wr_reg2),
        .Q(AR));
  LUT5 #(
    .INIT(32'hAAAA08AA)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_i_1 
       (.I0(wr_rst_busy),
        .I1(rd_rst_wr_ext[1]),
        .I2(rd_rst_wr_ext[0]),
        .I3(rd_rst_wr_ext[3]),
        .I4(rd_rst_wr_ext[2]),
        .O(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ));
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ),
        .PRE(rst_wr_reg2),
        .Q(wr_rst_busy));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_rd_ext_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(rst_rd_reg2),
        .D(dest_out),
        .Q(wr_rst_rd_ext[0]));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_rd_ext_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(rst_rd_reg2),
        .D(wr_rst_rd_ext[0]),
        .Q(wr_rst_rd_ext[1]));
  (* DEST_SYNC_FF = "4" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  gig_eth_fifo_async_36x128_xpm_cdc_single \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr 
       (.dest_clk(wr_clk),
        .dest_out(sckt_rd_rst_wr),
        .src_clk(rd_clk),
        .src_in(SR));
  (* DEST_SYNC_FF = "4" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  gig_eth_fifo_async_36x128_xpm_cdc_single__2 \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd 
       (.dest_clk(rd_clk),
        .dest_out(dest_out),
        .src_clk(wr_clk),
        .src_in(AR));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* INV_DEF_VAL = "1'b1" *) 
  (* RST_ACTIVE_HIGH = "1" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  gig_eth_fifo_async_36x128_xpm_cdc_async_rst__2 \ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst 
       (.dest_arst(rst_wr_reg2),
        .dest_clk(wr_clk),
        .src_arst(rst));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module gig_eth_fifo_async_36x128_wr_bin_cntr
   (S,
    Q,
    \gic0.gc1.count_d3_reg[6]_0 ,
    \gic0.gc1.count_reg[6]_0 ,
    D,
    \gic0.gc1.count_d1_reg[6]_0 ,
    \gic0.gc1.count_d2_reg[6]_0 ,
    RD_PNTR_WR,
    O,
    \wr_data_count_i_reg[7] ,
    E,
    wr_clk,
    AR);
  output [3:0]S;
  output [6:0]Q;
  output [2:0]\gic0.gc1.count_d3_reg[6]_0 ;
  output [6:0]\gic0.gc1.count_reg[6]_0 ;
  output [6:0]D;
  output [6:0]\gic0.gc1.count_d1_reg[6]_0 ;
  output [6:0]\gic0.gc1.count_d2_reg[6]_0 ;
  input [6:0]RD_PNTR_WR;
  input [2:0]O;
  input [2:0]\wr_data_count_i_reg[7] ;
  input [0:0]E;
  input wr_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [6:0]D;
  wire [0:0]E;
  wire [2:0]O;
  wire [6:0]Q;
  wire [6:0]RD_PNTR_WR;
  wire [3:0]S;
  wire \gic0.gc1.count[6]_i_2_n_0 ;
  wire [6:0]\gic0.gc1.count_d1_reg[6]_0 ;
  wire [6:0]\gic0.gc1.count_d2_reg[6]_0 ;
  wire [2:0]\gic0.gc1.count_d3_reg[6]_0 ;
  wire [6:0]\gic0.gc1.count_reg[6]_0 ;
  wire [6:0]plusOp;
  wire wr_clk;
  wire [2:0]\wr_data_count_i_reg[7] ;

  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gic0.gc1.count[0]_i_1 
       (.I0(\gic0.gc1.count_reg[6]_0 [0]),
        .O(plusOp[0]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc1.count[1]_i_1 
       (.I0(\gic0.gc1.count_reg[6]_0 [0]),
        .I1(\gic0.gc1.count_reg[6]_0 [1]),
        .O(plusOp[1]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc1.count[2]_i_1 
       (.I0(\gic0.gc1.count_reg[6]_0 [0]),
        .I1(\gic0.gc1.count_reg[6]_0 [1]),
        .I2(\gic0.gc1.count_reg[6]_0 [2]),
        .O(plusOp[2]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc1.count[3]_i_1 
       (.I0(\gic0.gc1.count_reg[6]_0 [1]),
        .I1(\gic0.gc1.count_reg[6]_0 [0]),
        .I2(\gic0.gc1.count_reg[6]_0 [2]),
        .I3(\gic0.gc1.count_reg[6]_0 [3]),
        .O(plusOp[3]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gic0.gc1.count[4]_i_1 
       (.I0(\gic0.gc1.count_reg[6]_0 [2]),
        .I1(\gic0.gc1.count_reg[6]_0 [0]),
        .I2(\gic0.gc1.count_reg[6]_0 [1]),
        .I3(\gic0.gc1.count_reg[6]_0 [3]),
        .I4(\gic0.gc1.count_reg[6]_0 [4]),
        .O(plusOp[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gic0.gc1.count[5]_i_1 
       (.I0(\gic0.gc1.count_reg[6]_0 [3]),
        .I1(\gic0.gc1.count_reg[6]_0 [1]),
        .I2(\gic0.gc1.count_reg[6]_0 [0]),
        .I3(\gic0.gc1.count_reg[6]_0 [2]),
        .I4(\gic0.gc1.count_reg[6]_0 [4]),
        .I5(\gic0.gc1.count_reg[6]_0 [5]),
        .O(plusOp[5]));
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc1.count[6]_i_1 
       (.I0(\gic0.gc1.count[6]_i_2_n_0 ),
        .I1(\gic0.gc1.count_reg[6]_0 [5]),
        .I2(\gic0.gc1.count_reg[6]_0 [6]),
        .O(plusOp[6]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \gic0.gc1.count[6]_i_2 
       (.I0(\gic0.gc1.count_reg[6]_0 [4]),
        .I1(\gic0.gc1.count_reg[6]_0 [2]),
        .I2(\gic0.gc1.count_reg[6]_0 [0]),
        .I3(\gic0.gc1.count_reg[6]_0 [1]),
        .I4(\gic0.gc1.count_reg[6]_0 [3]),
        .O(\gic0.gc1.count[6]_i_2_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_reg[6]_0 [0]),
        .Q(\gic0.gc1.count_d1_reg[6]_0 [0]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_d1_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_reg[6]_0 [1]),
        .PRE(AR),
        .Q(\gic0.gc1.count_d1_reg[6]_0 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_reg[6]_0 [2]),
        .Q(\gic0.gc1.count_d1_reg[6]_0 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_reg[6]_0 [3]),
        .Q(\gic0.gc1.count_d1_reg[6]_0 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_reg[6]_0 [4]),
        .Q(\gic0.gc1.count_d1_reg[6]_0 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_reg[6]_0 [5]),
        .Q(\gic0.gc1.count_d1_reg[6]_0 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_reg[6]_0 [6]),
        .Q(\gic0.gc1.count_d1_reg[6]_0 [6]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_d2_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_d1_reg[6]_0 [0]),
        .PRE(AR),
        .Q(\gic0.gc1.count_d2_reg[6]_0 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_d1_reg[6]_0 [1]),
        .Q(\gic0.gc1.count_d2_reg[6]_0 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_d1_reg[6]_0 [2]),
        .Q(\gic0.gc1.count_d2_reg[6]_0 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_d1_reg[6]_0 [3]),
        .Q(\gic0.gc1.count_d2_reg[6]_0 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_d1_reg[6]_0 [4]),
        .Q(\gic0.gc1.count_d2_reg[6]_0 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_d1_reg[6]_0 [5]),
        .Q(\gic0.gc1.count_d2_reg[6]_0 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_d1_reg[6]_0 [6]),
        .Q(\gic0.gc1.count_d2_reg[6]_0 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_d2_reg[6]_0 [0]),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_d2_reg[6]_0 [1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_d2_reg[6]_0 [2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_d2_reg[6]_0 [3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_d2_reg[6]_0 [4]),
        .Q(Q[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_d2_reg[6]_0 [5]),
        .Q(Q[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_d2_reg[6]_0 [6]),
        .Q(Q[6]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp[0]),
        .PRE(AR),
        .Q(\gic0.gc1.count_reg[6]_0 [0]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp[1]),
        .PRE(AR),
        .Q(\gic0.gc1.count_reg[6]_0 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[2]),
        .Q(\gic0.gc1.count_reg[6]_0 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[3]),
        .Q(\gic0.gc1.count_reg[6]_0 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[4]),
        .Q(\gic0.gc1.count_reg[6]_0 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[5]),
        .Q(\gic0.gc1.count_reg[6]_0 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[6]),
        .Q(\gic0.gc1.count_reg[6]_0 [6]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_1
       (.I0(Q[6]),
        .I1(RD_PNTR_WR[6]),
        .O(\gic0.gc1.count_d3_reg[6]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_2
       (.I0(Q[5]),
        .I1(RD_PNTR_WR[5]),
        .O(\gic0.gc1.count_d3_reg[6]_0 [1]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_3
       (.I0(Q[4]),
        .I1(RD_PNTR_WR[4]),
        .O(\gic0.gc1.count_d3_reg[6]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_1
       (.I0(Q[3]),
        .I1(RD_PNTR_WR[3]),
        .O(S[3]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_2
       (.I0(Q[2]),
        .I1(RD_PNTR_WR[2]),
        .O(S[2]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_3
       (.I0(Q[1]),
        .I1(RD_PNTR_WR[1]),
        .O(S[1]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_4
       (.I0(Q[0]),
        .I1(RD_PNTR_WR[0]),
        .O(S[0]));
  LUT1 #(
    .INIT(2'h1)) 
    \wr_data_count_i[1]_i_1 
       (.I0(O[0]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_data_count_i[2]_i_1 
       (.I0(O[0]),
        .I1(O[1]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_data_count_i[3]_i_1 
       (.I0(O[0]),
        .I1(O[1]),
        .I2(O[2]),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wr_data_count_i[4]_i_1 
       (.I0(O[1]),
        .I1(O[0]),
        .I2(O[2]),
        .I3(\wr_data_count_i_reg[7] [0]),
        .O(D[3]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wr_data_count_i[5]_i_1 
       (.I0(O[2]),
        .I1(O[0]),
        .I2(O[1]),
        .I3(\wr_data_count_i_reg[7] [0]),
        .I4(\wr_data_count_i_reg[7] [1]),
        .O(D[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \wr_data_count_i[6]_i_1 
       (.I0(\wr_data_count_i_reg[7] [0]),
        .I1(O[1]),
        .I2(O[0]),
        .I3(O[2]),
        .I4(\wr_data_count_i_reg[7] [1]),
        .I5(\wr_data_count_i_reg[7] [2]),
        .O(D[5]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \wr_data_count_i[7]_i_1 
       (.I0(\wr_data_count_i_reg[7] [2]),
        .I1(\wr_data_count_i_reg[7] [0]),
        .I2(O[1]),
        .I3(O[0]),
        .I4(O[2]),
        .I5(\wr_data_count_i_reg[7] [1]),
        .O(D[6]));
endmodule

(* ORIG_REF_NAME = "wr_dc_fwft_ext_as" *) 
module gig_eth_fifo_async_36x128_wr_dc_fwft_ext_as
   (O,
    \gic0.gc1.count_d3_reg[5] ,
    wr_data_count,
    Q,
    S,
    \wr_data_count_i_reg[7]_0 ,
    D,
    wr_clk,
    AR);
  output [2:0]O;
  output [2:0]\gic0.gc1.count_d3_reg[5] ;
  output [7:0]wr_data_count;
  input [5:0]Q;
  input [3:0]S;
  input [2:0]\wr_data_count_i_reg[7]_0 ;
  input [6:0]D;
  input wr_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [6:0]D;
  wire [2:0]O;
  wire [5:0]Q;
  wire [3:0]S;
  wire [2:0]\gic0.gc1.count_d3_reg[5] ;
  wire minusOp_carry__0_n_2;
  wire minusOp_carry__0_n_3;
  wire minusOp_carry_n_0;
  wire minusOp_carry_n_1;
  wire minusOp_carry_n_2;
  wire minusOp_carry_n_3;
  wire minusOp_carry_n_7;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire [2:0]\wr_data_count_i_reg[7]_0 ;
  wire [3:2]NLW_minusOp_carry__0_CO_UNCONNECTED;
  wire [3:3]NLW_minusOp_carry__0_O_UNCONNECTED;

  CARRY4 minusOp_carry
       (.CI(1'b0),
        .CO({minusOp_carry_n_0,minusOp_carry_n_1,minusOp_carry_n_2,minusOp_carry_n_3}),
        .CYINIT(1'b1),
        .DI(Q[3:0]),
        .O({O,minusOp_carry_n_7}),
        .S(S));
  CARRY4 minusOp_carry__0
       (.CI(minusOp_carry_n_0),
        .CO({NLW_minusOp_carry__0_CO_UNCONNECTED[3:2],minusOp_carry__0_n_2,minusOp_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,Q[5:4]}),
        .O({NLW_minusOp_carry__0_O_UNCONNECTED[3],\gic0.gc1.count_d3_reg[5] }),
        .S({1'b0,\wr_data_count_i_reg[7]_0 }));
  FDCE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(minusOp_carry_n_7),
        .Q(wr_data_count[0]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[0]),
        .Q(wr_data_count[1]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[1]),
        .Q(wr_data_count[2]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[2]),
        .Q(wr_data_count[3]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[3]),
        .Q(wr_data_count[4]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[4]),
        .Q(wr_data_count[5]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[5]),
        .Q(wr_data_count[6]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[6]),
        .Q(wr_data_count[7]));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module gig_eth_fifo_async_36x128_wr_logic
   (full,
    out,
    Q,
    almost_full,
    E,
    \gic0.gc1.count_reg[6] ,
    \gic0.gc1.count_d1_reg[6] ,
    \gic0.gc1.count_d2_reg[6] ,
    wr_data_count,
    ram_full_i_reg,
    wr_clk,
    \gaf.ram_almost_full_i_reg ,
    \gaf.ram_almost_full_i_reg_0 ,
    RD_PNTR_WR,
    wr_en,
    AR);
  output full;
  output out;
  output [6:0]Q;
  output almost_full;
  output [0:0]E;
  output [6:0]\gic0.gc1.count_reg[6] ;
  output [6:0]\gic0.gc1.count_d1_reg[6] ;
  output [6:0]\gic0.gc1.count_d2_reg[6] ;
  output [7:0]wr_data_count;
  input ram_full_i_reg;
  input wr_clk;
  input \gaf.ram_almost_full_i_reg ;
  input \gaf.ram_almost_full_i_reg_0 ;
  input [6:0]RD_PNTR_WR;
  input wr_en;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]E;
  wire [6:0]Q;
  wire [6:0]RD_PNTR_WR;
  wire almost_full;
  wire full;
  wire \gaf.ram_almost_full_i_reg ;
  wire \gaf.ram_almost_full_i_reg_0 ;
  wire [6:0]\gic0.gc1.count_d1_reg[6] ;
  wire [6:0]\gic0.gc1.count_d2_reg[6] ;
  wire [6:0]\gic0.gc1.count_reg[6] ;
  wire \gwas.gwdc1.wdcext_n_0 ;
  wire \gwas.gwdc1.wdcext_n_1 ;
  wire \gwas.gwdc1.wdcext_n_2 ;
  wire \gwas.gwdc1.wdcext_n_3 ;
  wire \gwas.gwdc1.wdcext_n_4 ;
  wire \gwas.gwdc1.wdcext_n_5 ;
  wire out;
  wire ram_full_i_reg;
  wire wpntr_n_0;
  wire wpntr_n_1;
  wire wpntr_n_11;
  wire wpntr_n_12;
  wire wpntr_n_13;
  wire wpntr_n_2;
  wire wpntr_n_21;
  wire wpntr_n_22;
  wire wpntr_n_23;
  wire wpntr_n_24;
  wire wpntr_n_25;
  wire wpntr_n_26;
  wire wpntr_n_27;
  wire wpntr_n_3;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;

  gig_eth_fifo_async_36x128_wr_dc_fwft_ext_as \gwas.gwdc1.wdcext 
       (.AR(AR),
        .D({wpntr_n_21,wpntr_n_22,wpntr_n_23,wpntr_n_24,wpntr_n_25,wpntr_n_26,wpntr_n_27}),
        .O({\gwas.gwdc1.wdcext_n_0 ,\gwas.gwdc1.wdcext_n_1 ,\gwas.gwdc1.wdcext_n_2 }),
        .Q(Q[5:0]),
        .S({wpntr_n_0,wpntr_n_1,wpntr_n_2,wpntr_n_3}),
        .\gic0.gc1.count_d3_reg[5] ({\gwas.gwdc1.wdcext_n_3 ,\gwas.gwdc1.wdcext_n_4 ,\gwas.gwdc1.wdcext_n_5 }),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .\wr_data_count_i_reg[7]_0 ({wpntr_n_11,wpntr_n_12,wpntr_n_13}));
  gig_eth_fifo_async_36x128_wr_status_flags_as \gwas.wsts 
       (.E(E),
        .almost_full(almost_full),
        .full(full),
        .\gaf.ram_almost_full_i_reg_0 (\gaf.ram_almost_full_i_reg ),
        .\gaf.ram_almost_full_i_reg_1 (\gaf.ram_almost_full_i_reg_0 ),
        .out(out),
        .ram_full_i_reg_0(ram_full_i_reg),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  gig_eth_fifo_async_36x128_wr_bin_cntr wpntr
       (.AR(AR),
        .D({wpntr_n_21,wpntr_n_22,wpntr_n_23,wpntr_n_24,wpntr_n_25,wpntr_n_26,wpntr_n_27}),
        .E(E),
        .O({\gwas.gwdc1.wdcext_n_0 ,\gwas.gwdc1.wdcext_n_1 ,\gwas.gwdc1.wdcext_n_2 }),
        .Q(Q),
        .RD_PNTR_WR(RD_PNTR_WR),
        .S({wpntr_n_0,wpntr_n_1,wpntr_n_2,wpntr_n_3}),
        .\gic0.gc1.count_d1_reg[6]_0 (\gic0.gc1.count_d1_reg[6] ),
        .\gic0.gc1.count_d2_reg[6]_0 (\gic0.gc1.count_d2_reg[6] ),
        .\gic0.gc1.count_d3_reg[6]_0 ({wpntr_n_11,wpntr_n_12,wpntr_n_13}),
        .\gic0.gc1.count_reg[6]_0 (\gic0.gc1.count_reg[6] ),
        .wr_clk(wr_clk),
        .\wr_data_count_i_reg[7] ({\gwas.gwdc1.wdcext_n_3 ,\gwas.gwdc1.wdcext_n_4 ,\gwas.gwdc1.wdcext_n_5 }));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_as" *) 
module gig_eth_fifo_async_36x128_wr_status_flags_as
   (full,
    out,
    almost_full,
    E,
    ram_full_i_reg_0,
    wr_clk,
    \gaf.ram_almost_full_i_reg_0 ,
    \gaf.ram_almost_full_i_reg_1 ,
    wr_en);
  output full;
  output out;
  output almost_full;
  output [0:0]E;
  input ram_full_i_reg_0;
  input wr_clk;
  input \gaf.ram_almost_full_i_reg_0 ;
  input \gaf.ram_almost_full_i_reg_1 ;
  input wr_en;

  wire [0:0]E;
  wire almost_full;
  wire \gaf.ram_almost_full_i_reg_0 ;
  wire \gaf.ram_almost_full_i_reg_1 ;
  (* DONT_TOUCH *) wire ram_full_fb_i;
  (* DONT_TOUCH *) wire ram_full_i;
  wire ram_full_i_reg_0;
  wire wr_clk;
  wire wr_en;

  assign full = ram_full_i;
  assign out = ram_full_fb_i;
  LUT2 #(
    .INIT(4'h2)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_i_2 
       (.I0(wr_en),
        .I1(ram_full_fb_i),
        .O(E));
  FDPE #(
    .INIT(1'b1)) 
    \gaf.ram_almost_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gaf.ram_almost_full_i_reg_1 ),
        .PRE(\gaf.ram_almost_full_i_reg_0 ),
        .Q(almost_full));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_fb_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_full_i_reg_0),
        .PRE(\gaf.ram_almost_full_i_reg_0 ),
        .Q(ram_full_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_full_i_reg_0),
        .PRE(\gaf.ram_almost_full_i_reg_0 ),
        .Q(ram_full_i));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module gig_eth_fifo_async_36x256_blk_mem_gen_generic_cstr
   (D,
    rd_clk,
    wr_clk,
    tmp_ram_rd_en,
    E,
    SR,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    Q,
    din);
  output [35:0]D;
  input rd_clk;
  input wr_clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]SR;
  input [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [7:0]Q;
  input [35:0]din;

  wire [35:0]D;
  wire [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire [7:0]Q;
  wire [0:0]SR;
  wire [35:0]din;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  gig_eth_fifo_async_36x256_blk_mem_gen_prim_width \ramloop[0].ram.r 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .Q(Q),
        .SR(SR),
        .din(din),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module gig_eth_fifo_async_36x256_blk_mem_gen_prim_width
   (D,
    rd_clk,
    wr_clk,
    tmp_ram_rd_en,
    E,
    SR,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    Q,
    din);
  output [35:0]D;
  input rd_clk;
  input wr_clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]SR;
  input [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [7:0]Q;
  input [35:0]din;

  wire [35:0]D;
  wire [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire [7:0]Q;
  wire [0:0]SR;
  wire [35:0]din;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  gig_eth_fifo_async_36x256_blk_mem_gen_prim_wrapper \prim_noinit.ram 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .Q(Q),
        .SR(SR),
        .din(din),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module gig_eth_fifo_async_36x256_blk_mem_gen_prim_wrapper
   (D,
    rd_clk,
    wr_clk,
    tmp_ram_rd_en,
    E,
    SR,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ,
    Q,
    din);
  output [35:0]D;
  input rd_clk;
  input wr_clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]SR;
  input [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ;
  input [7:0]Q;
  input [35:0]din;

  wire [35:0]D;
  wire [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ;
  wire [0:0]E;
  wire [7:0]Q;
  wire [0:0]SR;
  wire [35:0]din;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  (* box_type = "PRIMITIVE" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram 
       (.ADDRARDADDR({1'b0,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0 ,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({1'b0,Q,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CLKARDCLK(rd_clk),
        .CLKBWRCLK(wr_clk),
        .DIADI({din[16:9],din[7:0]}),
        .DIBDI({din[34:27],din[25:18]}),
        .DIPADIP({din[17],din[8]}),
        .DIPBDIP({din[35],din[26]}),
        .DOADO({D[16:9],D[7:0]}),
        .DOBDO({D[34:27],D[25:18]}),
        .DOPADOP({D[17],D[8]}),
        .DOPBDOP({D[35],D[26]}),
        .ENARDEN(tmp_ram_rd_en),
        .ENBWREN(E),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(SR),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({E,E,E,E}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module gig_eth_fifo_async_36x256_blk_mem_gen_top
   (D,
    rd_clk,
    wr_clk,
    tmp_ram_rd_en,
    E,
    SR,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    Q,
    din);
  output [35:0]D;
  input rd_clk;
  input wr_clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]SR;
  input [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [7:0]Q;
  input [35:0]din;

  wire [35:0]D;
  wire [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire [7:0]Q;
  wire [0:0]SR;
  wire [35:0]din;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  gig_eth_fifo_async_36x256_blk_mem_gen_generic_cstr \valid.cstr 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .Q(Q),
        .SR(SR),
        .din(din),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_2" *) 
module gig_eth_fifo_async_36x256_blk_mem_gen_v8_4_2
   (D,
    rd_clk,
    wr_clk,
    tmp_ram_rd_en,
    E,
    SR,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    Q,
    din);
  output [35:0]D;
  input rd_clk;
  input wr_clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]SR;
  input [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [7:0]Q;
  input [35:0]din;

  wire [35:0]D;
  wire [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire [7:0]Q;
  wire [0:0]SR;
  wire [35:0]din;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  gig_eth_fifo_async_36x256_blk_mem_gen_v8_4_2_synth inst_blk_mem_gen
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .Q(Q),
        .SR(SR),
        .din(din),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_2_synth" *) 
module gig_eth_fifo_async_36x256_blk_mem_gen_v8_4_2_synth
   (D,
    rd_clk,
    wr_clk,
    tmp_ram_rd_en,
    E,
    SR,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    Q,
    din);
  output [35:0]D;
  input rd_clk;
  input wr_clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]SR;
  input [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [7:0]Q;
  input [35:0]din;

  wire [35:0]D;
  wire [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire [7:0]Q;
  wire [0:0]SR;
  wire [35:0]din;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  gig_eth_fifo_async_36x256_blk_mem_gen_top \gnbram.gnativebmg.native_blk_mem_gen 
       (.D(D),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .Q(Q),
        .SR(SR),
        .din(din),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "clk_x_pntrs" *) 
module gig_eth_fifo_async_36x256_clk_x_pntrs
   (ram_full_fb_i_reg,
    S,
    WR_PNTR_RD,
    \dest_out_bin_ff_reg[3] ,
    RD_PNTR_WR,
    \dest_out_bin_ff_reg[6] ,
    \dest_out_bin_ff_reg[4] ,
    D,
    wr_en_0,
    out,
    wr_en,
    \gaf.ram_almost_full_i_reg ,
    Q,
    ram_full_i_i_4_0,
    \gaf.ram_almost_full_i_i_7_0 ,
    \gaf.ram_almost_full_i_i_5_0 ,
    ram_empty_fb_i_reg,
    ram_empty_i_i_3,
    \g_rd.gvalid_low.rd_dc_i_reg[3] ,
    \g_rd.gvalid_low.rd_dc_i_reg[8] ,
    diff_wr_rd,
    \g_rd.gvalid_low.rd_dc_i_reg[5] ,
    almost_full,
    wr_clk,
    \src_gray_ff_reg[7] ,
    rd_clk);
  output ram_full_fb_i_reg;
  output [3:0]S;
  output [6:0]WR_PNTR_RD;
  output [3:0]\dest_out_bin_ff_reg[3] ;
  output [7:0]RD_PNTR_WR;
  output \dest_out_bin_ff_reg[6] ;
  output \dest_out_bin_ff_reg[4] ;
  output [5:0]D;
  output wr_en_0;
  input out;
  input wr_en;
  input \gaf.ram_almost_full_i_reg ;
  input [7:0]Q;
  input [7:0]ram_full_i_i_4_0;
  input [7:0]\gaf.ram_almost_full_i_i_7_0 ;
  input [7:0]\gaf.ram_almost_full_i_i_5_0 ;
  input ram_empty_fb_i_reg;
  input [2:0]ram_empty_i_i_3;
  input \g_rd.gvalid_low.rd_dc_i_reg[3] ;
  input [0:0]\g_rd.gvalid_low.rd_dc_i_reg[8] ;
  input [6:0]diff_wr_rd;
  input \g_rd.gvalid_low.rd_dc_i_reg[5] ;
  input almost_full;
  input wr_clk;
  input [7:0]\src_gray_ff_reg[7] ;
  input rd_clk;

  wire [5:0]D;
  wire [7:0]Q;
  wire [7:0]RD_PNTR_WR;
  wire [3:0]S;
  wire [6:0]WR_PNTR_RD;
  wire almost_full;
  wire [3:0]\dest_out_bin_ff_reg[3] ;
  wire \dest_out_bin_ff_reg[4] ;
  wire \dest_out_bin_ff_reg[6] ;
  wire [6:0]diff_wr_rd;
  wire \g_rd.gvalid_low.rd_dc_i[8]_i_2_n_0 ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[3] ;
  wire \g_rd.gvalid_low.rd_dc_i_reg[5] ;
  wire [0:0]\g_rd.gvalid_low.rd_dc_i_reg[8] ;
  wire \gaf.ram_almost_full_i_i_4_n_0 ;
  wire [7:0]\gaf.ram_almost_full_i_i_5_0 ;
  wire \gaf.ram_almost_full_i_i_5_n_0 ;
  wire \gaf.ram_almost_full_i_i_6_n_0 ;
  wire [7:0]\gaf.ram_almost_full_i_i_7_0 ;
  wire \gaf.ram_almost_full_i_i_7_n_0 ;
  wire \gaf.ram_almost_full_i_i_8_n_0 ;
  wire \gaf.ram_almost_full_i_i_9_n_0 ;
  wire \gaf.ram_almost_full_i_reg ;
  wire \gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp1 ;
  wire \gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp2 ;
  wire \gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp3 ;
  wire out;
  wire [7:7]p_24_out;
  wire ram_empty_fb_i_reg;
  wire ram_empty_i_i_2_n_0;
  wire [2:0]ram_empty_i_i_3;
  wire ram_empty_i_i_4_n_0;
  wire ram_empty_i_i_5_n_0;
  wire ram_full_fb_i_reg;
  wire ram_full_i_i_3_n_0;
  wire [7:0]ram_full_i_i_4_0;
  wire ram_full_i_i_4_n_0;
  wire ram_full_i_i_5_n_0;
  wire rd_clk;
  wire [7:0]\src_gray_ff_reg[7] ;
  wire wr_clk;
  wire wr_en;
  wire wr_en_0;

  LUT5 #(
    .INIT(32'h08808080)) 
    \g_rd.gvalid_low.rd_dc_i[3]_i_1 
       (.I0(\g_rd.gvalid_low.rd_dc_i_reg[8] ),
        .I1(\g_rd.gvalid_low.rd_dc_i_reg[3] ),
        .I2(diff_wr_rd[2]),
        .I3(diff_wr_rd[0]),
        .I4(diff_wr_rd[1]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h0880808080808080)) 
    \g_rd.gvalid_low.rd_dc_i[4]_i_1 
       (.I0(\g_rd.gvalid_low.rd_dc_i_reg[8] ),
        .I1(\g_rd.gvalid_low.rd_dc_i_reg[3] ),
        .I2(diff_wr_rd[3]),
        .I3(diff_wr_rd[1]),
        .I4(diff_wr_rd[0]),
        .I5(diff_wr_rd[2]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h2888888888888888)) 
    \g_rd.gvalid_low.rd_dc_i[5]_i_1 
       (.I0(\g_rd.gvalid_low.rd_dc_i_reg[5] ),
        .I1(diff_wr_rd[4]),
        .I2(diff_wr_rd[2]),
        .I3(diff_wr_rd[0]),
        .I4(diff_wr_rd[1]),
        .I5(diff_wr_rd[3]),
        .O(D[2]));
  LUT5 #(
    .INIT(32'h08808080)) 
    \g_rd.gvalid_low.rd_dc_i[6]_i_1 
       (.I0(\g_rd.gvalid_low.rd_dc_i_reg[8] ),
        .I1(\g_rd.gvalid_low.rd_dc_i_reg[3] ),
        .I2(diff_wr_rd[5]),
        .I3(\g_rd.gvalid_low.rd_dc_i[8]_i_2_n_0 ),
        .I4(diff_wr_rd[4]),
        .O(D[3]));
  LUT6 #(
    .INIT(64'h0880808080808080)) 
    \g_rd.gvalid_low.rd_dc_i[7]_i_1 
       (.I0(\g_rd.gvalid_low.rd_dc_i_reg[8] ),
        .I1(\g_rd.gvalid_low.rd_dc_i_reg[3] ),
        .I2(diff_wr_rd[6]),
        .I3(diff_wr_rd[5]),
        .I4(diff_wr_rd[4]),
        .I5(\g_rd.gvalid_low.rd_dc_i[8]_i_2_n_0 ),
        .O(D[4]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \g_rd.gvalid_low.rd_dc_i[8]_i_1 
       (.I0(\g_rd.gvalid_low.rd_dc_i_reg[3] ),
        .I1(\g_rd.gvalid_low.rd_dc_i_reg[8] ),
        .I2(diff_wr_rd[6]),
        .I3(diff_wr_rd[5]),
        .I4(diff_wr_rd[4]),
        .I5(\g_rd.gvalid_low.rd_dc_i[8]_i_2_n_0 ),
        .O(D[5]));
  LUT4 #(
    .INIT(16'h8000)) 
    \g_rd.gvalid_low.rd_dc_i[8]_i_2 
       (.I0(diff_wr_rd[2]),
        .I1(diff_wr_rd[0]),
        .I2(diff_wr_rd[1]),
        .I3(diff_wr_rd[3]),
        .O(\g_rd.gvalid_low.rd_dc_i[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00FF00F8000000F8)) 
    \gaf.ram_almost_full_i_i_1 
       (.I0(\gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp3 ),
        .I1(wr_en),
        .I2(\gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp2 ),
        .I3(\gaf.ram_almost_full_i_reg ),
        .I4(out),
        .I5(almost_full),
        .O(wr_en_0));
  LUT6 #(
    .INIT(64'h0000000082000082)) 
    \gaf.ram_almost_full_i_i_2 
       (.I0(\gaf.ram_almost_full_i_i_4_n_0 ),
        .I1(RD_PNTR_WR[0]),
        .I2(\gaf.ram_almost_full_i_i_5_0 [0]),
        .I3(RD_PNTR_WR[1]),
        .I4(\gaf.ram_almost_full_i_i_5_0 [1]),
        .I5(\gaf.ram_almost_full_i_i_5_n_0 ),
        .O(\gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp3 ));
  LUT6 #(
    .INIT(64'h0000000082000082)) 
    \gaf.ram_almost_full_i_i_3 
       (.I0(\gaf.ram_almost_full_i_i_6_n_0 ),
        .I1(RD_PNTR_WR[0]),
        .I2(\gaf.ram_almost_full_i_i_7_0 [0]),
        .I3(RD_PNTR_WR[1]),
        .I4(\gaf.ram_almost_full_i_i_7_0 [1]),
        .I5(\gaf.ram_almost_full_i_i_7_n_0 ),
        .O(\gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp2 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \gaf.ram_almost_full_i_i_4 
       (.I0(RD_PNTR_WR[2]),
        .I1(\gaf.ram_almost_full_i_i_5_0 [2]),
        .I2(RD_PNTR_WR[3]),
        .I3(\gaf.ram_almost_full_i_i_5_0 [3]),
        .O(\gaf.ram_almost_full_i_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h6FF6FFFF)) 
    \gaf.ram_almost_full_i_i_5 
       (.I0(\gaf.ram_almost_full_i_i_5_0 [5]),
        .I1(RD_PNTR_WR[5]),
        .I2(\gaf.ram_almost_full_i_i_5_0 [4]),
        .I3(RD_PNTR_WR[4]),
        .I4(\gaf.ram_almost_full_i_i_8_n_0 ),
        .O(\gaf.ram_almost_full_i_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \gaf.ram_almost_full_i_i_6 
       (.I0(RD_PNTR_WR[2]),
        .I1(\gaf.ram_almost_full_i_i_7_0 [2]),
        .I2(RD_PNTR_WR[3]),
        .I3(\gaf.ram_almost_full_i_i_7_0 [3]),
        .O(\gaf.ram_almost_full_i_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h6FF6FFFF)) 
    \gaf.ram_almost_full_i_i_7 
       (.I0(\gaf.ram_almost_full_i_i_7_0 [5]),
        .I1(RD_PNTR_WR[5]),
        .I2(\gaf.ram_almost_full_i_i_7_0 [4]),
        .I3(RD_PNTR_WR[4]),
        .I4(\gaf.ram_almost_full_i_i_9_n_0 ),
        .O(\gaf.ram_almost_full_i_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \gaf.ram_almost_full_i_i_8 
       (.I0(RD_PNTR_WR[6]),
        .I1(\gaf.ram_almost_full_i_i_5_0 [6]),
        .I2(RD_PNTR_WR[7]),
        .I3(\gaf.ram_almost_full_i_i_5_0 [7]),
        .O(\gaf.ram_almost_full_i_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \gaf.ram_almost_full_i_i_9 
       (.I0(RD_PNTR_WR[6]),
        .I1(\gaf.ram_almost_full_i_i_7_0 [6]),
        .I2(RD_PNTR_WR[7]),
        .I3(\gaf.ram_almost_full_i_i_7_0 [7]),
        .O(\gaf.ram_almost_full_i_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_1__0
       (.I0(p_24_out),
        .I1(Q[7]),
        .O(S[3]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_2__0
       (.I0(WR_PNTR_RD[6]),
        .I1(Q[6]),
        .O(S[2]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_3__0
       (.I0(WR_PNTR_RD[5]),
        .I1(Q[5]),
        .O(S[1]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_4__0
       (.I0(WR_PNTR_RD[4]),
        .I1(Q[4]),
        .O(S[0]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_1__0
       (.I0(WR_PNTR_RD[3]),
        .I1(Q[3]),
        .O(\dest_out_bin_ff_reg[3] [3]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_2__0
       (.I0(WR_PNTR_RD[2]),
        .I1(Q[2]),
        .O(\dest_out_bin_ff_reg[3] [2]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_3__0
       (.I0(WR_PNTR_RD[1]),
        .I1(Q[1]),
        .O(\dest_out_bin_ff_reg[3] [1]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_4__0
       (.I0(WR_PNTR_RD[0]),
        .I1(Q[0]),
        .O(\dest_out_bin_ff_reg[3] [0]));
  LUT6 #(
    .INIT(64'hFFFFFFFF82000082)) 
    ram_empty_i_i_1
       (.I0(ram_empty_i_i_2_n_0),
        .I1(WR_PNTR_RD[6]),
        .I2(Q[6]),
        .I3(p_24_out),
        .I4(Q[7]),
        .I5(ram_empty_fb_i_reg),
        .O(\dest_out_bin_ff_reg[6] ));
  LUT6 #(
    .INIT(64'h8200008200000000)) 
    ram_empty_i_i_2
       (.I0(ram_empty_i_i_4_n_0),
        .I1(WR_PNTR_RD[4]),
        .I2(Q[4]),
        .I3(WR_PNTR_RD[5]),
        .I4(Q[5]),
        .I5(ram_empty_i_i_5_n_0),
        .O(ram_empty_i_i_2_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    ram_empty_i_i_4
       (.I0(WR_PNTR_RD[2]),
        .I1(Q[2]),
        .I2(WR_PNTR_RD[3]),
        .I3(Q[3]),
        .O(ram_empty_i_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    ram_empty_i_i_5
       (.I0(WR_PNTR_RD[0]),
        .I1(Q[0]),
        .I2(WR_PNTR_RD[1]),
        .I3(Q[1]),
        .O(ram_empty_i_i_5_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    ram_empty_i_i_7
       (.I0(WR_PNTR_RD[4]),
        .I1(ram_empty_i_i_3[0]),
        .I2(p_24_out),
        .I3(ram_empty_i_i_3[2]),
        .I4(ram_empty_i_i_3[1]),
        .I5(WR_PNTR_RD[6]),
        .O(\dest_out_bin_ff_reg[4] ));
  LUT5 #(
    .INIT(32'h0000FF20)) 
    ram_full_i_i_1
       (.I0(\gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp2 ),
        .I1(out),
        .I2(wr_en),
        .I3(\gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp1 ),
        .I4(\gaf.ram_almost_full_i_reg ),
        .O(ram_full_fb_i_reg));
  LUT6 #(
    .INIT(64'h0000000082000082)) 
    ram_full_i_i_2
       (.I0(ram_full_i_i_3_n_0),
        .I1(RD_PNTR_WR[0]),
        .I2(ram_full_i_i_4_0[0]),
        .I3(RD_PNTR_WR[1]),
        .I4(ram_full_i_i_4_0[1]),
        .I5(ram_full_i_i_4_n_0),
        .O(\gntv_or_sync_fifo.gl0.wr/gwas.wsts/comp1 ));
  LUT4 #(
    .INIT(16'h9009)) 
    ram_full_i_i_3
       (.I0(RD_PNTR_WR[2]),
        .I1(ram_full_i_i_4_0[2]),
        .I2(RD_PNTR_WR[3]),
        .I3(ram_full_i_i_4_0[3]),
        .O(ram_full_i_i_3_n_0));
  LUT5 #(
    .INIT(32'h6FF6FFFF)) 
    ram_full_i_i_4
       (.I0(ram_full_i_i_4_0[5]),
        .I1(RD_PNTR_WR[5]),
        .I2(ram_full_i_i_4_0[4]),
        .I3(RD_PNTR_WR[4]),
        .I4(ram_full_i_i_5_n_0),
        .O(ram_full_i_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    ram_full_i_i_5
       (.I0(RD_PNTR_WR[6]),
        .I1(ram_full_i_i_4_0[6]),
        .I2(RD_PNTR_WR[7]),
        .I3(ram_full_i_i_4_0[7]),
        .O(ram_full_i_i_5_n_0));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* REG_OUTPUT = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  gig_eth_fifo_async_36x256_xpm_cdc_gray rd_pntr_cdc_inst
       (.dest_clk(wr_clk),
        .dest_out_bin(RD_PNTR_WR),
        .src_clk(rd_clk),
        .src_in_bin(Q));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* REG_OUTPUT = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  gig_eth_fifo_async_36x256_xpm_cdc_gray__2 wr_pntr_cdc_inst
       (.dest_clk(rd_clk),
        .dest_out_bin({p_24_out,WR_PNTR_RD}),
        .src_clk(wr_clk),
        .src_in_bin(\src_gray_ff_reg[7] ));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module gig_eth_fifo_async_36x256_fifo_generator_ramfifo
   (wr_rst_busy,
    AR,
    empty,
    VALID,
    full,
    dout,
    rd_data_count,
    wr_data_count,
    almost_full,
    wr_en,
    rst,
    wr_clk,
    rd_clk,
    din,
    rd_en);
  output wr_rst_busy;
  output [0:0]AR;
  output empty;
  output VALID;
  output full;
  output [35:0]dout;
  output [8:0]rd_data_count;
  output [8:0]wr_data_count;
  output almost_full;
  input wr_en;
  input rst;
  input wr_clk;
  input rd_clk;
  input [35:0]din;
  input rd_en;

  wire [0:0]AR;
  wire VALID;
  wire almost_full;
  wire [7:1]diff_wr_rd;
  wire [35:0]din;
  wire [35:0]dout;
  wire empty;
  wire full;
  wire \gntv_or_sync_fifo.gcx.clkx_n_0 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_1 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_12 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_13 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_14 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_15 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_2 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_24 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_25 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_26 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_27 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_28 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_29 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_3 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_30 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_31 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_32 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_4 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_14 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_16 ;
  wire \gntv_or_sync_fifo.gl0.wr_n_1 ;
  wire [7:0]p_0_out;
  wire [7:0]p_13_out;
  wire [7:0]p_14_out;
  wire p_20_out;
  wire [6:0]p_24_out;
  wire [7:0]p_25_out;
  wire p_3_out;
  wire p_6_out;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire [7:4]rd_pntr_plus1;
  wire rst;
  wire rst_full_ff_i;
  wire rst_full_gen_i;
  wire rstblk_n_0;
  wire tmp_ram_rd_en;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire [7:0]wr_pntr_plus2;
  wire [7:0]wr_pntr_plus3;
  wire wr_rst_busy;

  gig_eth_fifo_async_36x256_clk_x_pntrs \gntv_or_sync_fifo.gcx.clkx 
       (.D({\gntv_or_sync_fifo.gcx.clkx_n_26 ,\gntv_or_sync_fifo.gcx.clkx_n_27 ,\gntv_or_sync_fifo.gcx.clkx_n_28 ,\gntv_or_sync_fifo.gcx.clkx_n_29 ,\gntv_or_sync_fifo.gcx.clkx_n_30 ,\gntv_or_sync_fifo.gcx.clkx_n_31 }),
        .Q(p_0_out),
        .RD_PNTR_WR(p_25_out),
        .S({\gntv_or_sync_fifo.gcx.clkx_n_1 ,\gntv_or_sync_fifo.gcx.clkx_n_2 ,\gntv_or_sync_fifo.gcx.clkx_n_3 ,\gntv_or_sync_fifo.gcx.clkx_n_4 }),
        .WR_PNTR_RD(p_24_out),
        .almost_full(almost_full),
        .\dest_out_bin_ff_reg[3] ({\gntv_or_sync_fifo.gcx.clkx_n_12 ,\gntv_or_sync_fifo.gcx.clkx_n_13 ,\gntv_or_sync_fifo.gcx.clkx_n_14 ,\gntv_or_sync_fifo.gcx.clkx_n_15 }),
        .\dest_out_bin_ff_reg[4] (\gntv_or_sync_fifo.gcx.clkx_n_25 ),
        .\dest_out_bin_ff_reg[6] (\gntv_or_sync_fifo.gcx.clkx_n_24 ),
        .diff_wr_rd(diff_wr_rd),
        .\g_rd.gvalid_low.rd_dc_i_reg[3] (VALID),
        .\g_rd.gvalid_low.rd_dc_i_reg[5] (\gntv_or_sync_fifo.gl0.rd_n_16 ),
        .\g_rd.gvalid_low.rd_dc_i_reg[8] (p_3_out),
        .\gaf.ram_almost_full_i_i_5_0 (wr_pntr_plus3),
        .\gaf.ram_almost_full_i_i_7_0 (wr_pntr_plus2),
        .\gaf.ram_almost_full_i_reg (rst_full_gen_i),
        .out(\gntv_or_sync_fifo.gl0.wr_n_1 ),
        .ram_empty_fb_i_reg(\gntv_or_sync_fifo.gl0.rd_n_14 ),
        .ram_empty_i_i_3({rd_pntr_plus1[7:6],rd_pntr_plus1[4]}),
        .ram_full_fb_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_0 ),
        .ram_full_i_i_4_0(p_14_out),
        .rd_clk(rd_clk),
        .\src_gray_ff_reg[7] (p_13_out),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_en_0(\gntv_or_sync_fifo.gcx.clkx_n_32 ));
  gig_eth_fifo_async_36x256_rd_logic \gntv_or_sync_fifo.gl0.rd 
       (.AR(AR),
        .D({\gntv_or_sync_fifo.gcx.clkx_n_26 ,\gntv_or_sync_fifo.gcx.clkx_n_27 ,\gntv_or_sync_fifo.gcx.clkx_n_28 ,\gntv_or_sync_fifo.gcx.clkx_n_29 ,\gntv_or_sync_fifo.gcx.clkx_n_30 ,\gntv_or_sync_fifo.gcx.clkx_n_31 }),
        .E(p_6_out),
        .Q({rd_pntr_plus1[7:6],rd_pntr_plus1[4]}),
        .S({\gntv_or_sync_fifo.gcx.clkx_n_1 ,\gntv_or_sync_fifo.gcx.clkx_n_2 ,\gntv_or_sync_fifo.gcx.clkx_n_3 ,\gntv_or_sync_fifo.gcx.clkx_n_4 }),
        .WR_PNTR_RD(p_24_out),
        .\dest_out_bin_ff_reg[6] (diff_wr_rd),
        .empty(empty),
        .\g_rd.gvalid_low.rd_dc_i_reg[5] ({\gntv_or_sync_fifo.gcx.clkx_n_12 ,\gntv_or_sync_fifo.gcx.clkx_n_13 ,\gntv_or_sync_fifo.gcx.clkx_n_14 ,\gntv_or_sync_fifo.gcx.clkx_n_15 }),
        .\gc0.count_d1_reg[7] (p_0_out),
        .\gc0.count_reg[1] (\gntv_or_sync_fifo.gl0.rd_n_14 ),
        .\gpregsm1.user_valid_reg (VALID),
        .\gpregsm1.user_valid_reg_0 (\gntv_or_sync_fifo.gl0.rd_n_16 ),
        .out(p_3_out),
        .ram_empty_fb_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_24 ),
        .ram_empty_fb_i_reg_0(\gntv_or_sync_fifo.gcx.clkx_n_25 ),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .tmp_ram_rd_en(tmp_ram_rd_en));
  gig_eth_fifo_async_36x256_wr_logic \gntv_or_sync_fifo.gl0.wr 
       (.AR(rstblk_n_0),
        .E(p_20_out),
        .Q(p_13_out),
        .RD_PNTR_WR(p_25_out),
        .almost_full(almost_full),
        .full(full),
        .\gaf.ram_almost_full_i_reg (rst_full_ff_i),
        .\gaf.ram_almost_full_i_reg_0 (\gntv_or_sync_fifo.gcx.clkx_n_32 ),
        .\gic0.gc1.count_d1_reg[7] (wr_pntr_plus2),
        .\gic0.gc1.count_d2_reg[7] (p_14_out),
        .\gic0.gc1.count_reg[7] (wr_pntr_plus3),
        .out(\gntv_or_sync_fifo.gl0.wr_n_1 ),
        .ram_full_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_0 ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en));
  gig_eth_fifo_async_36x256_memory \gntv_or_sync_fifo.mem 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (p_0_out),
        .E(p_20_out),
        .Q(p_13_out),
        .SR(AR),
        .din(din),
        .dout(dout),
        .\goreg_bm.dout_i_reg[35]_0 (p_6_out),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
  gig_eth_fifo_async_36x256_reset_blk_ramfifo rstblk
       (.AR(rstblk_n_0),
        .SR(AR),
        .\grstd1.grst_full.grst_f.rst_d3_reg_0 (rst_full_gen_i),
        .out(rst_full_ff_i),
        .rd_clk(rd_clk),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module gig_eth_fifo_async_36x256_fifo_generator_top
   (wr_rst_busy,
    AR,
    empty,
    VALID,
    full,
    dout,
    rd_data_count,
    wr_data_count,
    almost_full,
    wr_en,
    rst,
    wr_clk,
    rd_clk,
    din,
    rd_en);
  output wr_rst_busy;
  output [0:0]AR;
  output empty;
  output VALID;
  output full;
  output [35:0]dout;
  output [8:0]rd_data_count;
  output [8:0]wr_data_count;
  output almost_full;
  input wr_en;
  input rst;
  input wr_clk;
  input rd_clk;
  input [35:0]din;
  input rd_en;

  wire [0:0]AR;
  wire VALID;
  wire almost_full;
  wire [35:0]din;
  wire [35:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;

  gig_eth_fifo_async_36x256_fifo_generator_ramfifo \grf.rf 
       (.AR(AR),
        .VALID(VALID),
        .almost_full(almost_full),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* C_ADD_NGC_CONSTRAINT = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) (* C_APPLICATION_TYPE_RACH = "0" *) 
(* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) 
(* C_APPLICATION_TYPE_WRCH = "0" *) (* C_AXIS_TDATA_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "1" *) 
(* C_AXIS_TID_WIDTH = "1" *) (* C_AXIS_TKEEP_WIDTH = "1" *) (* C_AXIS_TSTRB_WIDTH = "1" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TYPE = "0" *) (* C_AXI_ADDR_WIDTH = "32" *) 
(* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_DATA_WIDTH = "64" *) (* C_AXI_ID_WIDTH = "1" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LOCK_WIDTH = "1" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_TYPE = "1" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLOCK = "0" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "8" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "36" *) 
(* C_DIN_WIDTH_AXIS = "1" *) (* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) 
(* C_DIN_WIDTH_WACH = "1" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "36" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_ENABLE_RST_SYNC = "1" *) (* C_EN_SAFETY_CKT = "0" *) (* C_ERROR_INJECTION_TYPE = "0" *) 
(* C_ERROR_INJECTION_TYPE_AXIS = "0" *) (* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_FAMILY = "zynq" *) (* C_FULL_FLAGS_RST_VAL = "1" *) (* C_HAS_ALMOST_EMPTY = "0" *) 
(* C_HAS_ALMOST_FULL = "1" *) (* C_HAS_AXIS_TDATA = "1" *) (* C_HAS_AXIS_TDEST = "0" *) 
(* C_HAS_AXIS_TID = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) (* C_HAS_AXIS_TLAST = "0" *) 
(* C_HAS_AXIS_TREADY = "1" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TUSER = "1" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ID = "0" *) (* C_HAS_AXI_RD_CHANNEL = "1" *) (* C_HAS_AXI_RUSER = "0" *) 
(* C_HAS_AXI_WR_CHANNEL = "1" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_BACKUP = "0" *) 
(* C_HAS_DATA_COUNT = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) (* C_HAS_DATA_COUNTS_RACH = "0" *) 
(* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
(* C_HAS_DATA_COUNTS_WRCH = "0" *) (* C_HAS_INT_CLK = "0" *) (* C_HAS_MASTER_CE = "0" *) 
(* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_WACH = "0" *) 
(* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) (* C_HAS_RD_DATA_COUNT = "1" *) 
(* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "1" *) (* C_HAS_SLAVE_CE = "0" *) 
(* C_HAS_SRST = "0" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "1" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "1" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "2" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_WRCH = "1" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_MEMORY_TYPE = "1" *) (* C_MIF_FILE_NAME = "BlankString" *) (* C_MSGON_VAL = "1" *) 
(* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) (* C_POWER_SAVING_MODE = "0" *) 
(* C_PRELOAD_LATENCY = "0" *) (* C_PRELOAD_REGS = "1" *) (* C_PRIM_FIFO_TYPE = "512x36" *) 
(* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "1kx36" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "1kx36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_EMPTY_TYPE_AXIS = "0" *) (* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "255" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "254" *) (* C_PROG_FULL_TYPE = "0" *) 
(* C_PROG_FULL_TYPE_AXIS = "0" *) (* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_RD_DATA_COUNT_WIDTH = "9" *) 
(* C_RD_DEPTH = "256" *) (* C_RD_FREQ = "1" *) (* C_RD_PNTR_WIDTH = "8" *) 
(* C_REG_SLICE_MODE_AXIS = "0" *) (* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_SELECT_XPM = "0" *) (* C_SYNCHRONIZER_STAGE = "2" *) (* C_UNDERFLOW_LOW = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_USE_DOUT_RST = "1" *) (* C_USE_ECC = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_WACH = "0" *) 
(* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) (* C_USE_EMBEDDED_REG = "0" *) 
(* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "1" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) 
(* C_WRCH_TYPE = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "9" *) 
(* C_WR_DEPTH = "256" *) (* C_WR_DEPTH_AXIS = "1024" *) (* C_WR_DEPTH_RACH = "16" *) 
(* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) 
(* C_WR_DEPTH_WRCH = "16" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "8" *) 
(* C_WR_PNTR_WIDTH_AXIS = "10" *) (* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* ORIG_REF_NAME = "fifo_generator_v13_2_3" *) 
module gig_eth_fifo_async_36x256_fifo_generator_v13_2_3
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [35:0]din;
  input wr_en;
  input rd_en;
  input [7:0]prog_empty_thresh;
  input [7:0]prog_empty_thresh_assert;
  input [7:0]prog_empty_thresh_negate;
  input [7:0]prog_full_thresh;
  input [7:0]prog_full_thresh_assert;
  input [7:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [35:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [7:0]data_count;
  output [8:0]rd_data_count;
  output [8:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [0:0]s_axi_wid;
  input [63:0]s_axi_wdata;
  input [7:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [0:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [0:0]m_axi_wid;
  output [63:0]m_axi_wdata;
  output [7:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [0:0]s_axi_rid;
  output [63:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [0:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [0:0]m_axi_rid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [7:0]s_axis_tdata;
  input [0:0]s_axis_tstrb;
  input [0:0]s_axis_tkeep;
  input s_axis_tlast;
  input [0:0]s_axis_tid;
  input [0:0]s_axis_tdest;
  input [3:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [7:0]m_axis_tdata;
  output [0:0]m_axis_tstrb;
  output [0:0]m_axis_tkeep;
  output m_axis_tlast;
  output [0:0]m_axis_tid;
  output [0:0]m_axis_tdest;
  output [3:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [3:0]axi_ar_prog_full_thresh;
  input [3:0]axi_ar_prog_empty_thresh;
  output [4:0]axi_ar_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [9:0]axis_prog_full_thresh;
  input [9:0]axis_prog_empty_thresh;
  output [10:0]axis_data_count;
  output [10:0]axis_wr_data_count;
  output [10:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire \<const1> ;
  wire almost_full;
  wire [35:0]din;
  wire [35:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire valid;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;

  assign almost_empty = \<const0> ;
  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign data_count[7] = \<const0> ;
  assign data_count[6] = \<const0> ;
  assign data_count[5] = \<const0> ;
  assign data_count[4] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const0> ;
  assign prog_full = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  gig_eth_fifo_async_36x256_fifo_generator_v13_2_3_synth inst_fifo_gen
       (.AR(rd_rst_busy),
        .VALID(valid),
        .almost_full(almost_full),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_2_3_synth" *) 
module gig_eth_fifo_async_36x256_fifo_generator_v13_2_3_synth
   (wr_rst_busy,
    AR,
    empty,
    VALID,
    full,
    dout,
    rd_data_count,
    wr_data_count,
    almost_full,
    wr_en,
    rst,
    wr_clk,
    rd_clk,
    din,
    rd_en);
  output wr_rst_busy;
  output [0:0]AR;
  output empty;
  output VALID;
  output full;
  output [35:0]dout;
  output [8:0]rd_data_count;
  output [8:0]wr_data_count;
  output almost_full;
  input wr_en;
  input rst;
  input wr_clk;
  input rd_clk;
  input [35:0]din;
  input rd_en;

  wire [0:0]AR;
  wire VALID;
  wire almost_full;
  wire [35:0]din;
  wire [35:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;

  gig_eth_fifo_async_36x256_fifo_generator_top \gconvfifo.rf 
       (.AR(AR),
        .VALID(VALID),
        .almost_full(almost_full),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module gig_eth_fifo_async_36x256_memory
   (dout,
    rd_clk,
    wr_clk,
    tmp_ram_rd_en,
    E,
    SR,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ,
    Q,
    din,
    \goreg_bm.dout_i_reg[35]_0 );
  output [35:0]dout;
  input rd_clk;
  input wr_clk;
  input tmp_ram_rd_en;
  input [0:0]E;
  input [0:0]SR;
  input [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  input [7:0]Q;
  input [35:0]din;
  input [0:0]\goreg_bm.dout_i_reg[35]_0 ;

  wire [7:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ;
  wire [0:0]E;
  wire [7:0]Q;
  wire [0:0]SR;
  wire [35:0]din;
  wire [35:0]dout;
  wire [35:0]doutb;
  wire [0:0]\goreg_bm.dout_i_reg[35]_0 ;
  wire rd_clk;
  wire tmp_ram_rd_en;
  wire wr_clk;

  gig_eth_fifo_async_36x256_blk_mem_gen_v8_4_2 \gbm.gbmg.gbmga.ngecc.bmg 
       (.D(doutb),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram ),
        .E(E),
        .Q(Q),
        .SR(SR),
        .din(din),
        .rd_clk(rd_clk),
        .tmp_ram_rd_en(tmp_ram_rd_en),
        .wr_clk(wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[0] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[0]),
        .Q(dout[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[10] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[10]),
        .Q(dout[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[11] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[11]),
        .Q(dout[11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[12] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[12]),
        .Q(dout[12]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[13] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[13]),
        .Q(dout[13]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[14] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[14]),
        .Q(dout[14]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[15] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[15]),
        .Q(dout[15]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[16] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[16]),
        .Q(dout[16]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[17] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[17]),
        .Q(dout[17]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[18] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[18]),
        .Q(dout[18]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[19] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[19]),
        .Q(dout[19]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[1] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[1]),
        .Q(dout[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[20] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[20]),
        .Q(dout[20]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[21] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[21]),
        .Q(dout[21]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[22] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[22]),
        .Q(dout[22]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[23] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[23]),
        .Q(dout[23]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[24] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[24]),
        .Q(dout[24]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[25] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[25]),
        .Q(dout[25]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[26] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[26]),
        .Q(dout[26]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[27] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[27]),
        .Q(dout[27]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[28] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[28]),
        .Q(dout[28]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[29] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[29]),
        .Q(dout[29]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[2] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[2]),
        .Q(dout[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[30] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[30]),
        .Q(dout[30]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[31] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[31]),
        .Q(dout[31]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[32] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[32]),
        .Q(dout[32]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[33] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[33]),
        .Q(dout[33]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[34] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[34]),
        .Q(dout[34]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[35] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[35]),
        .Q(dout[35]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[3] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[3]),
        .Q(dout[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[4] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[4]),
        .Q(dout[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[5] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[5]),
        .Q(dout[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[6] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[6]),
        .Q(dout[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[7] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[7]),
        .Q(dout[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[8] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[8]),
        .Q(dout[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[9] 
       (.C(rd_clk),
        .CE(\goreg_bm.dout_i_reg[35]_0 ),
        .D(doutb[9]),
        .Q(dout[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module gig_eth_fifo_async_36x256_rd_bin_cntr
   (Q,
    \gc0.count_reg[1]_0 ,
    \gc0.count_d1_reg[7]_0 ,
    ram_empty_fb_i_reg,
    ram_empty_fb_i_reg_0,
    WR_PNTR_RD,
    out,
    E,
    rd_clk,
    AR);
  output [2:0]Q;
  output \gc0.count_reg[1]_0 ;
  output [7:0]\gc0.count_d1_reg[7]_0 ;
  input ram_empty_fb_i_reg;
  input ram_empty_fb_i_reg_0;
  input [4:0]WR_PNTR_RD;
  input out;
  input [0:0]E;
  input rd_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]E;
  wire [2:0]Q;
  wire [4:0]WR_PNTR_RD;
  wire \gc0.count[7]_i_2_n_0 ;
  wire [7:0]\gc0.count_d1_reg[7]_0 ;
  wire \gc0.count_reg[1]_0 ;
  wire out;
  wire [7:0]plusOp__0;
  wire ram_empty_fb_i_reg;
  wire ram_empty_fb_i_reg_0;
  wire ram_empty_i_i_8_n_0;
  wire ram_empty_i_i_9_n_0;
  wire rd_clk;
  wire [5:0]rd_pntr_plus1;

  LUT1 #(
    .INIT(2'h1)) 
    \gc0.count[0]_i_1 
       (.I0(rd_pntr_plus1[0]),
        .O(plusOp__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[1]_i_1 
       (.I0(rd_pntr_plus1[0]),
        .I1(rd_pntr_plus1[1]),
        .O(plusOp__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[2]_i_1 
       (.I0(rd_pntr_plus1[1]),
        .I1(rd_pntr_plus1[0]),
        .I2(rd_pntr_plus1[2]),
        .O(plusOp__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc0.count[3]_i_1 
       (.I0(rd_pntr_plus1[2]),
        .I1(rd_pntr_plus1[0]),
        .I2(rd_pntr_plus1[1]),
        .I3(rd_pntr_plus1[3]),
        .O(plusOp__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gc0.count[4]_i_1 
       (.I0(rd_pntr_plus1[3]),
        .I1(rd_pntr_plus1[1]),
        .I2(rd_pntr_plus1[0]),
        .I3(rd_pntr_plus1[2]),
        .I4(Q[0]),
        .O(plusOp__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gc0.count[5]_i_1 
       (.I0(Q[0]),
        .I1(rd_pntr_plus1[2]),
        .I2(rd_pntr_plus1[0]),
        .I3(rd_pntr_plus1[1]),
        .I4(rd_pntr_plus1[3]),
        .I5(rd_pntr_plus1[5]),
        .O(plusOp__0[5]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc0.count[6]_i_1 
       (.I0(\gc0.count[7]_i_2_n_0 ),
        .I1(Q[0]),
        .I2(rd_pntr_plus1[5]),
        .I3(Q[1]),
        .O(plusOp__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gc0.count[7]_i_1 
       (.I0(\gc0.count[7]_i_2_n_0 ),
        .I1(Q[1]),
        .I2(rd_pntr_plus1[5]),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(plusOp__0[7]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \gc0.count[7]_i_2 
       (.I0(rd_pntr_plus1[2]),
        .I1(rd_pntr_plus1[0]),
        .I2(rd_pntr_plus1[1]),
        .I3(rd_pntr_plus1[3]),
        .O(\gc0.count[7]_i_2_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(rd_pntr_plus1[0]),
        .Q(\gc0.count_d1_reg[7]_0 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(rd_pntr_plus1[1]),
        .Q(\gc0.count_d1_reg[7]_0 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(rd_pntr_plus1[2]),
        .Q(\gc0.count_d1_reg[7]_0 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(rd_pntr_plus1[3]),
        .Q(\gc0.count_d1_reg[7]_0 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[0]),
        .Q(\gc0.count_d1_reg[7]_0 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(rd_pntr_plus1[5]),
        .Q(\gc0.count_d1_reg[7]_0 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[1]),
        .Q(\gc0.count_d1_reg[7]_0 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[2]),
        .Q(\gc0.count_d1_reg[7]_0 [7]));
  FDPE #(
    .INIT(1'b1)) 
    \gc0.count_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp__0[0]),
        .PRE(AR),
        .Q(rd_pntr_plus1[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[1]),
        .Q(rd_pntr_plus1[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[2]),
        .Q(rd_pntr_plus1[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[3]),
        .Q(rd_pntr_plus1[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[4]),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[5]),
        .Q(rd_pntr_plus1[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[6]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc0.count_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[7]),
        .Q(Q[2]));
  LUT6 #(
    .INIT(64'h0000800800000000)) 
    ram_empty_i_i_3
       (.I0(ram_empty_fb_i_reg),
        .I1(ram_empty_fb_i_reg_0),
        .I2(rd_pntr_plus1[1]),
        .I3(WR_PNTR_RD[1]),
        .I4(out),
        .I5(ram_empty_i_i_8_n_0),
        .O(\gc0.count_reg[1]_0 ));
  LUT5 #(
    .INIT(32'h90090000)) 
    ram_empty_i_i_8
       (.I0(WR_PNTR_RD[2]),
        .I1(rd_pntr_plus1[2]),
        .I2(WR_PNTR_RD[4]),
        .I3(rd_pntr_plus1[5]),
        .I4(ram_empty_i_i_9_n_0),
        .O(ram_empty_i_i_8_n_0));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT4 #(
    .INIT(16'h9009)) 
    ram_empty_i_i_9
       (.I0(rd_pntr_plus1[3]),
        .I1(WR_PNTR_RD[3]),
        .I2(rd_pntr_plus1[0]),
        .I3(WR_PNTR_RD[0]),
        .O(ram_empty_i_i_9_n_0));
endmodule

(* ORIG_REF_NAME = "rd_dc_fwft_ext_as" *) 
module gig_eth_fifo_async_36x256_rd_dc_fwft_ext_as
   (\dest_out_bin_ff_reg[6] ,
    O,
    rd_data_count,
    WR_PNTR_RD,
    \g_rd.gvalid_low.rd_dc_i_reg[5]_0 ,
    S,
    D,
    rd_clk,
    AR);
  output [6:0]\dest_out_bin_ff_reg[6] ;
  output [0:0]O;
  output [8:0]rd_data_count;
  input [6:0]WR_PNTR_RD;
  input [3:0]\g_rd.gvalid_low.rd_dc_i_reg[5]_0 ;
  input [3:0]S;
  input [8:0]D;
  input rd_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [8:0]D;
  wire [0:0]O;
  wire [3:0]S;
  wire [6:0]WR_PNTR_RD;
  wire [6:0]\dest_out_bin_ff_reg[6] ;
  wire [3:0]\g_rd.gvalid_low.rd_dc_i_reg[5]_0 ;
  wire minusOp_carry__0_n_1;
  wire minusOp_carry__0_n_2;
  wire minusOp_carry__0_n_3;
  wire minusOp_carry_n_0;
  wire minusOp_carry_n_1;
  wire minusOp_carry_n_2;
  wire minusOp_carry_n_3;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire [3:3]NLW_minusOp_carry__0_CO_UNCONNECTED;

  FDCE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[0]),
        .Q(rd_data_count[0]));
  FDCE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[1]),
        .Q(rd_data_count[1]));
  FDCE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[2]),
        .Q(rd_data_count[2]));
  FDCE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[3]),
        .Q(rd_data_count[3]));
  FDCE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[4]),
        .Q(rd_data_count[4]));
  FDCE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[5]),
        .Q(rd_data_count[5]));
  FDCE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[6]),
        .Q(rd_data_count[6]));
  FDCE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[7]),
        .Q(rd_data_count[7]));
  FDCE #(
    .INIT(1'b0)) 
    \g_rd.gvalid_low.rd_dc_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[8]),
        .Q(rd_data_count[8]));
  CARRY4 minusOp_carry
       (.CI(1'b0),
        .CO({minusOp_carry_n_0,minusOp_carry_n_1,minusOp_carry_n_2,minusOp_carry_n_3}),
        .CYINIT(1'b1),
        .DI(WR_PNTR_RD[3:0]),
        .O({\dest_out_bin_ff_reg[6] [2:0],O}),
        .S(\g_rd.gvalid_low.rd_dc_i_reg[5]_0 ));
  CARRY4 minusOp_carry__0
       (.CI(minusOp_carry_n_0),
        .CO({NLW_minusOp_carry__0_CO_UNCONNECTED[3],minusOp_carry__0_n_1,minusOp_carry__0_n_2,minusOp_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,WR_PNTR_RD[6:4]}),
        .O(\dest_out_bin_ff_reg[6] [6:3]),
        .S(S));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module gig_eth_fifo_async_36x256_rd_fwft
   (out,
    empty,
    \gpregsm1.user_valid_reg_0 ,
    E,
    tmp_ram_rd_en,
    \gpregsm1.curr_fwft_state_reg[1]_0 ,
    \gpregsm1.curr_fwft_state_reg[0]_0 ,
    D,
    \gpregsm1.user_valid_reg_1 ,
    rd_clk,
    AR,
    rd_en,
    aempty_fwft_i_reg_0,
    O);
  output [0:0]out;
  output empty;
  output \gpregsm1.user_valid_reg_0 ;
  output [0:0]E;
  output tmp_ram_rd_en;
  output [0:0]\gpregsm1.curr_fwft_state_reg[1]_0 ;
  output \gpregsm1.curr_fwft_state_reg[0]_0 ;
  output [2:0]D;
  output \gpregsm1.user_valid_reg_1 ;
  input rd_clk;
  input [0:0]AR;
  input rd_en;
  input aempty_fwft_i_reg_0;
  input [2:0]O;

  wire [0:0]AR;
  wire [2:0]D;
  wire [0:0]E;
  wire [2:0]O;
  (* DONT_TOUCH *) wire aempty_fwft_fb_i;
  (* DONT_TOUCH *) wire aempty_fwft_i;
  wire aempty_fwft_i0;
  wire aempty_fwft_i_reg_0;
  (* DONT_TOUCH *) wire [1:0]curr_fwft_state;
  (* DONT_TOUCH *) wire empty_fwft_fb_i;
  (* DONT_TOUCH *) wire empty_fwft_fb_o_i;
  wire empty_fwft_fb_o_i0;
  (* DONT_TOUCH *) wire empty_fwft_i;
  wire empty_fwft_i0;
  wire \gpregsm1.curr_fwft_state_reg[0]_0 ;
  wire [0:0]\gpregsm1.curr_fwft_state_reg[1]_0 ;
  wire \gpregsm1.user_valid_reg_1 ;
  wire [1:0]next_fwft_state;
  wire rd_clk;
  wire rd_en;
  wire tmp_ram_rd_en;
  (* DONT_TOUCH *) wire user_valid;

  assign empty = empty_fwft_i;
  assign \gpregsm1.user_valid_reg_0  = user_valid;
  assign out[0] = curr_fwft_state[1];
  LUT5 #(
    .INIT(32'hFFFF5155)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_i_1 
       (.I0(aempty_fwft_i_reg_0),
        .I1(curr_fwft_state[0]),
        .I2(rd_en),
        .I3(curr_fwft_state[1]),
        .I4(AR),
        .O(tmp_ram_rd_en));
  LUT5 #(
    .INIT(32'hF8E0C0F0)) 
    aempty_fwft_fb_i_i_1
       (.I0(rd_en),
        .I1(aempty_fwft_i_reg_0),
        .I2(aempty_fwft_fb_i),
        .I3(curr_fwft_state[1]),
        .I4(curr_fwft_state[0]),
        .O(aempty_fwft_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    aempty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0),
        .PRE(AR),
        .Q(aempty_fwft_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    aempty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0),
        .PRE(AR),
        .Q(aempty_fwft_i));
  LUT4 #(
    .INIT(16'h88EA)) 
    empty_fwft_fb_i_i_1
       (.I0(empty_fwft_fb_i),
        .I1(curr_fwft_state[0]),
        .I2(rd_en),
        .I3(curr_fwft_state[1]),
        .O(empty_fwft_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(AR),
        .Q(empty_fwft_fb_i));
  LUT4 #(
    .INIT(16'h88EA)) 
    empty_fwft_fb_o_i_i_1
       (.I0(empty_fwft_fb_o_i),
        .I1(curr_fwft_state[0]),
        .I2(rd_en),
        .I3(curr_fwft_state[1]),
        .O(empty_fwft_fb_o_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_o_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_fb_o_i0),
        .PRE(AR),
        .Q(empty_fwft_fb_o_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(AR),
        .Q(empty_fwft_i));
  LUT3 #(
    .INIT(8'hB0)) 
    \g_rd.gvalid_low.rd_dc_i[0]_i_1 
       (.I0(O[0]),
        .I1(curr_fwft_state[1]),
        .I2(user_valid),
        .O(D[0]));
  LUT3 #(
    .INIT(8'h08)) 
    \g_rd.gvalid_low.rd_dc_i[1]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(user_valid),
        .I2(O[1]),
        .O(D[1]));
  LUT4 #(
    .INIT(16'h0880)) 
    \g_rd.gvalid_low.rd_dc_i[2]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(user_valid),
        .I2(O[2]),
        .I3(O[1]),
        .O(D[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \g_rd.gvalid_low.rd_dc_i[5]_i_2 
       (.I0(user_valid),
        .I1(curr_fwft_state[1]),
        .O(\gpregsm1.user_valid_reg_1 ));
  LUT4 #(
    .INIT(16'h00DF)) 
    \gc0.count_d1[7]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(aempty_fwft_i_reg_0),
        .O(\gpregsm1.curr_fwft_state_reg[1]_0 ));
  LUT3 #(
    .INIT(8'hD0)) 
    \goreg_bm.dout_i[35]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .O(E));
  LUT3 #(
    .INIT(8'hAE)) 
    \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(curr_fwft_state[0]),
        .I2(rd_en),
        .O(next_fwft_state[0]));
  LUT4 #(
    .INIT(16'h20FF)) 
    \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(aempty_fwft_i_reg_0),
        .O(next_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(next_fwft_state[1]),
        .Q(curr_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.user_valid_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(next_fwft_state[0]),
        .Q(user_valid));
  LUT3 #(
    .INIT(8'hDF)) 
    ram_empty_i_i_6
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .O(\gpregsm1.curr_fwft_state_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module gig_eth_fifo_async_36x256_rd_logic
   (out,
    empty,
    \gpregsm1.user_valid_reg ,
    \dest_out_bin_ff_reg[6] ,
    Q,
    E,
    \gc0.count_reg[1] ,
    tmp_ram_rd_en,
    \gpregsm1.user_valid_reg_0 ,
    \gc0.count_d1_reg[7] ,
    rd_data_count,
    ram_empty_fb_i_reg,
    rd_clk,
    AR,
    WR_PNTR_RD,
    \g_rd.gvalid_low.rd_dc_i_reg[5] ,
    S,
    rd_en,
    ram_empty_fb_i_reg_0,
    D);
  output [0:0]out;
  output empty;
  output \gpregsm1.user_valid_reg ;
  output [6:0]\dest_out_bin_ff_reg[6] ;
  output [2:0]Q;
  output [0:0]E;
  output \gc0.count_reg[1] ;
  output tmp_ram_rd_en;
  output \gpregsm1.user_valid_reg_0 ;
  output [7:0]\gc0.count_d1_reg[7] ;
  output [8:0]rd_data_count;
  input ram_empty_fb_i_reg;
  input rd_clk;
  input [0:0]AR;
  input [6:0]WR_PNTR_RD;
  input [3:0]\g_rd.gvalid_low.rd_dc_i_reg[5] ;
  input [3:0]S;
  input rd_en;
  input ram_empty_fb_i_reg_0;
  input [5:0]D;

  wire [0:0]AR;
  wire [5:0]D;
  wire [0:0]E;
  wire [2:0]Q;
  wire [3:0]S;
  wire [6:0]WR_PNTR_RD;
  wire [6:0]\dest_out_bin_ff_reg[6] ;
  wire [0:0]diff_wr_rd;
  wire empty;
  wire [3:0]\g_rd.gvalid_low.rd_dc_i_reg[5] ;
  wire [7:0]\gc0.count_d1_reg[7] ;
  wire \gc0.count_reg[1] ;
  wire \gpregsm1.user_valid_reg ;
  wire \gpregsm1.user_valid_reg_0 ;
  wire \gr1.gr1_int.rfwft_n_6 ;
  wire \gr1.gr1_int.rfwft_n_7 ;
  wire \gr1.gr1_int.rfwft_n_8 ;
  wire \gr1.gr1_int.rfwft_n_9 ;
  wire [0:0]out;
  wire p_2_out;
  wire p_8_out;
  wire ram_empty_fb_i_reg;
  wire ram_empty_fb_i_reg_0;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire tmp_ram_rd_en;

  gig_eth_fifo_async_36x256_rd_fwft \gr1.gr1_int.rfwft 
       (.AR(AR),
        .D({\gr1.gr1_int.rfwft_n_7 ,\gr1.gr1_int.rfwft_n_8 ,\gr1.gr1_int.rfwft_n_9 }),
        .E(E),
        .O({\dest_out_bin_ff_reg[6] [1:0],diff_wr_rd}),
        .aempty_fwft_i_reg_0(p_2_out),
        .empty(empty),
        .\gpregsm1.curr_fwft_state_reg[0]_0 (\gr1.gr1_int.rfwft_n_6 ),
        .\gpregsm1.curr_fwft_state_reg[1]_0 (p_8_out),
        .\gpregsm1.user_valid_reg_0 (\gpregsm1.user_valid_reg ),
        .\gpregsm1.user_valid_reg_1 (\gpregsm1.user_valid_reg_0 ),
        .out(out),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .tmp_ram_rd_en(tmp_ram_rd_en));
  gig_eth_fifo_async_36x256_rd_dc_fwft_ext_as \gr1.grdc2.rdc 
       (.AR(AR),
        .D({D,\gr1.gr1_int.rfwft_n_7 ,\gr1.gr1_int.rfwft_n_8 ,\gr1.gr1_int.rfwft_n_9 }),
        .O(diff_wr_rd),
        .S(S),
        .WR_PNTR_RD(WR_PNTR_RD),
        .\dest_out_bin_ff_reg[6] (\dest_out_bin_ff_reg[6] ),
        .\g_rd.gvalid_low.rd_dc_i_reg[5]_0 (\g_rd.gvalid_low.rd_dc_i_reg[5] ),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count));
  gig_eth_fifo_async_36x256_rd_status_flags_as \gras.rsts 
       (.AR(AR),
        .out(p_2_out),
        .ram_empty_fb_i_reg_0(ram_empty_fb_i_reg),
        .rd_clk(rd_clk));
  gig_eth_fifo_async_36x256_rd_bin_cntr rpntr
       (.AR(AR),
        .E(p_8_out),
        .Q(Q),
        .WR_PNTR_RD({WR_PNTR_RD[5],WR_PNTR_RD[3:0]}),
        .\gc0.count_d1_reg[7]_0 (\gc0.count_d1_reg[7] ),
        .\gc0.count_reg[1]_0 (\gc0.count_reg[1] ),
        .out(p_2_out),
        .ram_empty_fb_i_reg(\gr1.gr1_int.rfwft_n_6 ),
        .ram_empty_fb_i_reg_0(ram_empty_fb_i_reg_0),
        .rd_clk(rd_clk));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_as" *) 
module gig_eth_fifo_async_36x256_rd_status_flags_as
   (out,
    ram_empty_fb_i_reg_0,
    rd_clk,
    AR);
  output out;
  input ram_empty_fb_i_reg_0;
  input rd_clk;
  input [0:0]AR;

  wire [0:0]AR;
  (* DONT_TOUCH *) wire ram_empty_fb_i;
  wire ram_empty_fb_i_reg_0;
  (* DONT_TOUCH *) wire ram_empty_i;
  wire rd_clk;

  assign out = ram_empty_fb_i;
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_fb_i_reg_0),
        .PRE(AR),
        .Q(ram_empty_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_fb_i_reg_0),
        .PRE(AR),
        .Q(ram_empty_i));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module gig_eth_fifo_async_36x256_reset_blk_ramfifo
   (AR,
    SR,
    out,
    \grstd1.grst_full.grst_f.rst_d3_reg_0 ,
    wr_rst_busy,
    rst,
    wr_clk,
    rd_clk);
  output [0:0]AR;
  output [0:0]SR;
  output out;
  output \grstd1.grst_full.grst_f.rst_d3_reg_0 ;
  output wr_rst_busy;
  input rst;
  input wr_clk;
  input rd_clk;

  wire [0:0]AR;
  wire [0:0]SR;
  wire dest_out;
  wire \grstd1.grst_full.grst_f.rst_d3_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ;
  wire \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ;
  wire rd_clk;
  wire [3:0]rd_rst_wr_ext;
  wire rst;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;
  wire sckt_rd_rst_wr;
  wire wr_clk;
  wire wr_rst_busy;
  wire [1:0]wr_rst_rd_ext;

  assign \grstd1.grst_full.grst_f.rst_d3_reg_0  = rst_d3;
  assign out = rst_d2;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_rst_busy),
        .PRE(rst_wr_reg2),
        .Q(rst_d1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1),
        .PRE(rst_wr_reg2),
        .Q(rst_d2));
  LUT2 #(
    .INIT(4'hE)) 
    \grstd1.grst_full.grst_f.rst_d3_i_1 
       (.I0(rst_d2),
        .I1(AR),
        .O(\grstd1.grst_full.grst_f.rst_d3_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grstd1.grst_full.grst_f.rst_d3_i_1_n_0 ),
        .PRE(rst_wr_reg2),
        .Q(rst_d3));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rd_rst_wr_ext_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(rst_wr_reg2),
        .D(sckt_rd_rst_wr),
        .Q(rd_rst_wr_ext[0]));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rd_rst_wr_ext_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(rst_wr_reg2),
        .D(rd_rst_wr_ext[0]),
        .Q(rd_rst_wr_ext[1]));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rd_rst_wr_ext_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(rst_wr_reg2),
        .D(rd_rst_wr_ext[1]),
        .Q(rd_rst_wr_ext[2]));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rd_rst_wr_ext_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(rst_wr_reg2),
        .D(rd_rst_wr_ext[2]),
        .Q(rd_rst_wr_ext[3]));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* INV_DEF_VAL = "1'b1" *) 
  (* RST_ACTIVE_HIGH = "1" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  gig_eth_fifo_async_36x256_xpm_cdc_async_rst \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.rst_rd_reg2_inst 
       (.dest_arst(rst_rd_reg2),
        .dest_clk(rd_clk),
        .src_arst(rst));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1 
       (.I0(SR),
        .I1(wr_rst_rd_ext[1]),
        .O(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ));
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_i_1_n_0 ),
        .PRE(rst_rd_reg2),
        .Q(SR));
  LUT3 #(
    .INIT(8'h8A)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1 
       (.I0(AR),
        .I1(rd_rst_wr_ext[0]),
        .I2(rd_rst_wr_ext[1]),
        .O(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ));
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_wr_rst_ic_i_1_n_0 ),
        .PRE(rst_wr_reg2),
        .Q(AR));
  LUT5 #(
    .INIT(32'hAAAA08AA)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_i_1 
       (.I0(wr_rst_busy),
        .I1(rd_rst_wr_ext[1]),
        .I2(rd_rst_wr_ext[0]),
        .I3(rd_rst_wr_ext[3]),
        .I4(rd_rst_wr_ext[2]),
        .O(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ));
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_busy_i_i_1_n_0 ),
        .PRE(rst_wr_reg2),
        .Q(wr_rst_busy));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_rd_ext_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(rst_rd_reg2),
        .D(dest_out),
        .Q(wr_rst_rd_ext[0]));
  FDCE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_rd_ext_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(rst_rd_reg2),
        .D(wr_rst_rd_ext[0]),
        .Q(wr_rst_rd_ext[1]));
  (* DEST_SYNC_FF = "4" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  gig_eth_fifo_async_36x256_xpm_cdc_single \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr 
       (.dest_clk(wr_clk),
        .dest_out(sckt_rd_rst_wr),
        .src_clk(rd_clk),
        .src_in(SR));
  (* DEST_SYNC_FF = "4" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  gig_eth_fifo_async_36x256_xpm_cdc_single__2 \ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd 
       (.dest_clk(rd_clk),
        .dest_out(dest_out),
        .src_clk(wr_clk),
        .src_in(AR));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* INV_DEF_VAL = "1'b1" *) 
  (* RST_ACTIVE_HIGH = "1" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  gig_eth_fifo_async_36x256_xpm_cdc_async_rst__2 \ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst 
       (.dest_arst(rst_wr_reg2),
        .dest_clk(wr_clk),
        .src_arst(rst));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module gig_eth_fifo_async_36x256_wr_bin_cntr
   (S,
    Q,
    \gic0.gc1.count_d3_reg[7]_0 ,
    \gic0.gc1.count_reg[7]_0 ,
    D,
    \gic0.gc1.count_d1_reg[7]_0 ,
    \gic0.gc1.count_d2_reg[7]_0 ,
    RD_PNTR_WR,
    O,
    \wr_data_count_i_reg[8] ,
    E,
    wr_clk,
    AR);
  output [3:0]S;
  output [7:0]Q;
  output [3:0]\gic0.gc1.count_d3_reg[7]_0 ;
  output [7:0]\gic0.gc1.count_reg[7]_0 ;
  output [7:0]D;
  output [7:0]\gic0.gc1.count_d1_reg[7]_0 ;
  output [7:0]\gic0.gc1.count_d2_reg[7]_0 ;
  input [7:0]RD_PNTR_WR;
  input [2:0]O;
  input [3:0]\wr_data_count_i_reg[8] ;
  input [0:0]E;
  input wr_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [7:0]D;
  wire [0:0]E;
  wire [2:0]O;
  wire [7:0]Q;
  wire [7:0]RD_PNTR_WR;
  wire [3:0]S;
  wire \gic0.gc1.count[7]_i_2_n_0 ;
  wire [7:0]\gic0.gc1.count_d1_reg[7]_0 ;
  wire [7:0]\gic0.gc1.count_d2_reg[7]_0 ;
  wire [3:0]\gic0.gc1.count_d3_reg[7]_0 ;
  wire [7:0]\gic0.gc1.count_reg[7]_0 ;
  wire [7:0]plusOp;
  wire wr_clk;
  wire \wr_data_count_i[8]_i_2_n_0 ;
  wire [3:0]\wr_data_count_i_reg[8] ;

  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gic0.gc1.count[0]_i_1 
       (.I0(\gic0.gc1.count_reg[7]_0 [0]),
        .O(plusOp[0]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc1.count[1]_i_1 
       (.I0(\gic0.gc1.count_reg[7]_0 [0]),
        .I1(\gic0.gc1.count_reg[7]_0 [1]),
        .O(plusOp[1]));
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc1.count[2]_i_1 
       (.I0(\gic0.gc1.count_reg[7]_0 [0]),
        .I1(\gic0.gc1.count_reg[7]_0 [1]),
        .I2(\gic0.gc1.count_reg[7]_0 [2]),
        .O(plusOp[2]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc1.count[3]_i_1 
       (.I0(\gic0.gc1.count_reg[7]_0 [1]),
        .I1(\gic0.gc1.count_reg[7]_0 [0]),
        .I2(\gic0.gc1.count_reg[7]_0 [2]),
        .I3(\gic0.gc1.count_reg[7]_0 [3]),
        .O(plusOp[3]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gic0.gc1.count[4]_i_1 
       (.I0(\gic0.gc1.count_reg[7]_0 [2]),
        .I1(\gic0.gc1.count_reg[7]_0 [0]),
        .I2(\gic0.gc1.count_reg[7]_0 [1]),
        .I3(\gic0.gc1.count_reg[7]_0 [3]),
        .I4(\gic0.gc1.count_reg[7]_0 [4]),
        .O(plusOp[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gic0.gc1.count[5]_i_1 
       (.I0(\gic0.gc1.count_reg[7]_0 [3]),
        .I1(\gic0.gc1.count_reg[7]_0 [1]),
        .I2(\gic0.gc1.count_reg[7]_0 [0]),
        .I3(\gic0.gc1.count_reg[7]_0 [2]),
        .I4(\gic0.gc1.count_reg[7]_0 [4]),
        .I5(\gic0.gc1.count_reg[7]_0 [5]),
        .O(plusOp[5]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc1.count[6]_i_1 
       (.I0(\gic0.gc1.count[7]_i_2_n_0 ),
        .I1(\gic0.gc1.count_reg[7]_0 [6]),
        .O(plusOp[6]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc1.count[7]_i_1 
       (.I0(\gic0.gc1.count[7]_i_2_n_0 ),
        .I1(\gic0.gc1.count_reg[7]_0 [6]),
        .I2(\gic0.gc1.count_reg[7]_0 [7]),
        .O(plusOp[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gic0.gc1.count[7]_i_2 
       (.I0(\gic0.gc1.count_reg[7]_0 [5]),
        .I1(\gic0.gc1.count_reg[7]_0 [3]),
        .I2(\gic0.gc1.count_reg[7]_0 [1]),
        .I3(\gic0.gc1.count_reg[7]_0 [0]),
        .I4(\gic0.gc1.count_reg[7]_0 [2]),
        .I5(\gic0.gc1.count_reg[7]_0 [4]),
        .O(\gic0.gc1.count[7]_i_2_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_reg[7]_0 [0]),
        .Q(\gic0.gc1.count_d1_reg[7]_0 [0]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_d1_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_reg[7]_0 [1]),
        .PRE(AR),
        .Q(\gic0.gc1.count_d1_reg[7]_0 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_reg[7]_0 [2]),
        .Q(\gic0.gc1.count_d1_reg[7]_0 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_reg[7]_0 [3]),
        .Q(\gic0.gc1.count_d1_reg[7]_0 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_reg[7]_0 [4]),
        .Q(\gic0.gc1.count_d1_reg[7]_0 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_reg[7]_0 [5]),
        .Q(\gic0.gc1.count_d1_reg[7]_0 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_reg[7]_0 [6]),
        .Q(\gic0.gc1.count_d1_reg[7]_0 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d1_reg[7] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_reg[7]_0 [7]),
        .Q(\gic0.gc1.count_d1_reg[7]_0 [7]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_d2_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\gic0.gc1.count_d1_reg[7]_0 [0]),
        .PRE(AR),
        .Q(\gic0.gc1.count_d2_reg[7]_0 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_d1_reg[7]_0 [1]),
        .Q(\gic0.gc1.count_d2_reg[7]_0 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_d1_reg[7]_0 [2]),
        .Q(\gic0.gc1.count_d2_reg[7]_0 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_d1_reg[7]_0 [3]),
        .Q(\gic0.gc1.count_d2_reg[7]_0 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_d1_reg[7]_0 [4]),
        .Q(\gic0.gc1.count_d2_reg[7]_0 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_d1_reg[7]_0 [5]),
        .Q(\gic0.gc1.count_d2_reg[7]_0 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_d1_reg[7]_0 [6]),
        .Q(\gic0.gc1.count_d2_reg[7]_0 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d2_reg[7] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_d1_reg[7]_0 [7]),
        .Q(\gic0.gc1.count_d2_reg[7]_0 [7]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_d2_reg[7]_0 [0]),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_d2_reg[7]_0 [1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_d2_reg[7]_0 [2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_d2_reg[7]_0 [3]),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_d2_reg[7]_0 [4]),
        .Q(Q[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_d2_reg[7]_0 [5]),
        .Q(Q[5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_d2_reg[7]_0 [6]),
        .Q(Q[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_d3_reg[7] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(\gic0.gc1.count_d2_reg[7]_0 [7]),
        .Q(Q[7]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp[0]),
        .PRE(AR),
        .Q(\gic0.gc1.count_reg[7]_0 [0]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc1.count_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp[1]),
        .PRE(AR),
        .Q(\gic0.gc1.count_reg[7]_0 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[2]),
        .Q(\gic0.gc1.count_reg[7]_0 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[3]),
        .Q(\gic0.gc1.count_reg[7]_0 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[4]),
        .Q(\gic0.gc1.count_reg[7]_0 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[5]),
        .Q(\gic0.gc1.count_reg[7]_0 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[6] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[6]),
        .Q(\gic0.gc1.count_reg[7]_0 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc1.count_reg[7] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[7]),
        .Q(\gic0.gc1.count_reg[7]_0 [7]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_1
       (.I0(Q[7]),
        .I1(RD_PNTR_WR[7]),
        .O(\gic0.gc1.count_d3_reg[7]_0 [3]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_2
       (.I0(Q[6]),
        .I1(RD_PNTR_WR[6]),
        .O(\gic0.gc1.count_d3_reg[7]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_3
       (.I0(Q[5]),
        .I1(RD_PNTR_WR[5]),
        .O(\gic0.gc1.count_d3_reg[7]_0 [1]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry__0_i_4
       (.I0(Q[4]),
        .I1(RD_PNTR_WR[4]),
        .O(\gic0.gc1.count_d3_reg[7]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_1
       (.I0(Q[3]),
        .I1(RD_PNTR_WR[3]),
        .O(S[3]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_2
       (.I0(Q[2]),
        .I1(RD_PNTR_WR[2]),
        .O(S[2]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_3
       (.I0(Q[1]),
        .I1(RD_PNTR_WR[1]),
        .O(S[1]));
  LUT2 #(
    .INIT(4'h9)) 
    minusOp_carry_i_4
       (.I0(Q[0]),
        .I1(RD_PNTR_WR[0]),
        .O(S[0]));
  LUT1 #(
    .INIT(2'h1)) 
    \wr_data_count_i[1]_i_1 
       (.I0(O[0]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_data_count_i[2]_i_1 
       (.I0(O[0]),
        .I1(O[1]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_data_count_i[3]_i_1 
       (.I0(O[0]),
        .I1(O[1]),
        .I2(O[2]),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wr_data_count_i[4]_i_1 
       (.I0(O[1]),
        .I1(O[0]),
        .I2(O[2]),
        .I3(\wr_data_count_i_reg[8] [0]),
        .O(D[3]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wr_data_count_i[5]_i_1 
       (.I0(O[2]),
        .I1(O[0]),
        .I2(O[1]),
        .I3(\wr_data_count_i_reg[8] [0]),
        .I4(\wr_data_count_i_reg[8] [1]),
        .O(D[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \wr_data_count_i[6]_i_1 
       (.I0(\wr_data_count_i_reg[8] [0]),
        .I1(O[1]),
        .I2(O[0]),
        .I3(O[2]),
        .I4(\wr_data_count_i_reg[8] [1]),
        .I5(\wr_data_count_i_reg[8] [2]),
        .O(D[5]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_data_count_i[7]_i_1 
       (.I0(\wr_data_count_i[8]_i_2_n_0 ),
        .I1(\wr_data_count_i_reg[8] [3]),
        .O(D[6]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \wr_data_count_i[8]_i_1 
       (.I0(\wr_data_count_i_reg[8] [3]),
        .I1(\wr_data_count_i[8]_i_2_n_0 ),
        .O(D[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \wr_data_count_i[8]_i_2 
       (.I0(\wr_data_count_i_reg[8] [2]),
        .I1(\wr_data_count_i_reg[8] [0]),
        .I2(O[1]),
        .I3(O[0]),
        .I4(O[2]),
        .I5(\wr_data_count_i_reg[8] [1]),
        .O(\wr_data_count_i[8]_i_2_n_0 ));
endmodule

(* ORIG_REF_NAME = "wr_dc_fwft_ext_as" *) 
module gig_eth_fifo_async_36x256_wr_dc_fwft_ext_as
   (O,
    \gic0.gc1.count_d3_reg[6] ,
    wr_data_count,
    Q,
    S,
    \wr_data_count_i_reg[8]_0 ,
    D,
    wr_clk,
    AR);
  output [2:0]O;
  output [3:0]\gic0.gc1.count_d3_reg[6] ;
  output [8:0]wr_data_count;
  input [6:0]Q;
  input [3:0]S;
  input [3:0]\wr_data_count_i_reg[8]_0 ;
  input [7:0]D;
  input wr_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [7:0]D;
  wire [2:0]O;
  wire [6:0]Q;
  wire [3:0]S;
  wire [3:0]\gic0.gc1.count_d3_reg[6] ;
  wire minusOp_carry__0_n_1;
  wire minusOp_carry__0_n_2;
  wire minusOp_carry__0_n_3;
  wire minusOp_carry_n_0;
  wire minusOp_carry_n_1;
  wire minusOp_carry_n_2;
  wire minusOp_carry_n_3;
  wire minusOp_carry_n_7;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire [3:0]\wr_data_count_i_reg[8]_0 ;
  wire [3:3]NLW_minusOp_carry__0_CO_UNCONNECTED;

  CARRY4 minusOp_carry
       (.CI(1'b0),
        .CO({minusOp_carry_n_0,minusOp_carry_n_1,minusOp_carry_n_2,minusOp_carry_n_3}),
        .CYINIT(1'b1),
        .DI(Q[3:0]),
        .O({O,minusOp_carry_n_7}),
        .S(S));
  CARRY4 minusOp_carry__0
       (.CI(minusOp_carry_n_0),
        .CO({NLW_minusOp_carry__0_CO_UNCONNECTED[3],minusOp_carry__0_n_1,minusOp_carry__0_n_2,minusOp_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,Q[6:4]}),
        .O(\gic0.gc1.count_d3_reg[6] ),
        .S(\wr_data_count_i_reg[8]_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(minusOp_carry_n_7),
        .Q(wr_data_count[0]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[0]),
        .Q(wr_data_count[1]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[1]),
        .Q(wr_data_count[2]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[2]),
        .Q(wr_data_count[3]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[3]),
        .Q(wr_data_count[4]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[4]),
        .Q(wr_data_count[5]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[5]),
        .Q(wr_data_count[6]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[6]),
        .Q(wr_data_count[7]));
  FDCE #(
    .INIT(1'b0)) 
    \wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(D[7]),
        .Q(wr_data_count[8]));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module gig_eth_fifo_async_36x256_wr_logic
   (full,
    out,
    Q,
    almost_full,
    E,
    \gic0.gc1.count_reg[7] ,
    \gic0.gc1.count_d1_reg[7] ,
    \gic0.gc1.count_d2_reg[7] ,
    wr_data_count,
    ram_full_i_reg,
    wr_clk,
    \gaf.ram_almost_full_i_reg ,
    \gaf.ram_almost_full_i_reg_0 ,
    RD_PNTR_WR,
    wr_en,
    AR);
  output full;
  output out;
  output [7:0]Q;
  output almost_full;
  output [0:0]E;
  output [7:0]\gic0.gc1.count_reg[7] ;
  output [7:0]\gic0.gc1.count_d1_reg[7] ;
  output [7:0]\gic0.gc1.count_d2_reg[7] ;
  output [8:0]wr_data_count;
  input ram_full_i_reg;
  input wr_clk;
  input \gaf.ram_almost_full_i_reg ;
  input \gaf.ram_almost_full_i_reg_0 ;
  input [7:0]RD_PNTR_WR;
  input wr_en;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]E;
  wire [7:0]Q;
  wire [7:0]RD_PNTR_WR;
  wire almost_full;
  wire full;
  wire \gaf.ram_almost_full_i_reg ;
  wire \gaf.ram_almost_full_i_reg_0 ;
  wire [7:0]\gic0.gc1.count_d1_reg[7] ;
  wire [7:0]\gic0.gc1.count_d2_reg[7] ;
  wire [7:0]\gic0.gc1.count_reg[7] ;
  wire \gwas.gwdc1.wdcext_n_0 ;
  wire \gwas.gwdc1.wdcext_n_1 ;
  wire \gwas.gwdc1.wdcext_n_2 ;
  wire \gwas.gwdc1.wdcext_n_3 ;
  wire \gwas.gwdc1.wdcext_n_4 ;
  wire \gwas.gwdc1.wdcext_n_5 ;
  wire \gwas.gwdc1.wdcext_n_6 ;
  wire out;
  wire ram_full_i_reg;
  wire wpntr_n_0;
  wire wpntr_n_1;
  wire wpntr_n_12;
  wire wpntr_n_13;
  wire wpntr_n_14;
  wire wpntr_n_15;
  wire wpntr_n_2;
  wire wpntr_n_24;
  wire wpntr_n_25;
  wire wpntr_n_26;
  wire wpntr_n_27;
  wire wpntr_n_28;
  wire wpntr_n_29;
  wire wpntr_n_3;
  wire wpntr_n_30;
  wire wpntr_n_31;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;

  gig_eth_fifo_async_36x256_wr_dc_fwft_ext_as \gwas.gwdc1.wdcext 
       (.AR(AR),
        .D({wpntr_n_24,wpntr_n_25,wpntr_n_26,wpntr_n_27,wpntr_n_28,wpntr_n_29,wpntr_n_30,wpntr_n_31}),
        .O({\gwas.gwdc1.wdcext_n_0 ,\gwas.gwdc1.wdcext_n_1 ,\gwas.gwdc1.wdcext_n_2 }),
        .Q(Q[6:0]),
        .S({wpntr_n_0,wpntr_n_1,wpntr_n_2,wpntr_n_3}),
        .\gic0.gc1.count_d3_reg[6] ({\gwas.gwdc1.wdcext_n_3 ,\gwas.gwdc1.wdcext_n_4 ,\gwas.gwdc1.wdcext_n_5 ,\gwas.gwdc1.wdcext_n_6 }),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .\wr_data_count_i_reg[8]_0 ({wpntr_n_12,wpntr_n_13,wpntr_n_14,wpntr_n_15}));
  gig_eth_fifo_async_36x256_wr_status_flags_as \gwas.wsts 
       (.E(E),
        .almost_full(almost_full),
        .full(full),
        .\gaf.ram_almost_full_i_reg_0 (\gaf.ram_almost_full_i_reg ),
        .\gaf.ram_almost_full_i_reg_1 (\gaf.ram_almost_full_i_reg_0 ),
        .out(out),
        .ram_full_i_reg_0(ram_full_i_reg),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  gig_eth_fifo_async_36x256_wr_bin_cntr wpntr
       (.AR(AR),
        .D({wpntr_n_24,wpntr_n_25,wpntr_n_26,wpntr_n_27,wpntr_n_28,wpntr_n_29,wpntr_n_30,wpntr_n_31}),
        .E(E),
        .O({\gwas.gwdc1.wdcext_n_0 ,\gwas.gwdc1.wdcext_n_1 ,\gwas.gwdc1.wdcext_n_2 }),
        .Q(Q),
        .RD_PNTR_WR(RD_PNTR_WR),
        .S({wpntr_n_0,wpntr_n_1,wpntr_n_2,wpntr_n_3}),
        .\gic0.gc1.count_d1_reg[7]_0 (\gic0.gc1.count_d1_reg[7] ),
        .\gic0.gc1.count_d2_reg[7]_0 (\gic0.gc1.count_d2_reg[7] ),
        .\gic0.gc1.count_d3_reg[7]_0 ({wpntr_n_12,wpntr_n_13,wpntr_n_14,wpntr_n_15}),
        .\gic0.gc1.count_reg[7]_0 (\gic0.gc1.count_reg[7] ),
        .wr_clk(wr_clk),
        .\wr_data_count_i_reg[8] ({\gwas.gwdc1.wdcext_n_3 ,\gwas.gwdc1.wdcext_n_4 ,\gwas.gwdc1.wdcext_n_5 ,\gwas.gwdc1.wdcext_n_6 }));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_as" *) 
module gig_eth_fifo_async_36x256_wr_status_flags_as
   (full,
    out,
    almost_full,
    E,
    ram_full_i_reg_0,
    wr_clk,
    \gaf.ram_almost_full_i_reg_0 ,
    \gaf.ram_almost_full_i_reg_1 ,
    wr_en);
  output full;
  output out;
  output almost_full;
  output [0:0]E;
  input ram_full_i_reg_0;
  input wr_clk;
  input \gaf.ram_almost_full_i_reg_0 ;
  input \gaf.ram_almost_full_i_reg_1 ;
  input wr_en;

  wire [0:0]E;
  wire almost_full;
  wire \gaf.ram_almost_full_i_reg_0 ;
  wire \gaf.ram_almost_full_i_reg_1 ;
  (* DONT_TOUCH *) wire ram_full_fb_i;
  (* DONT_TOUCH *) wire ram_full_i;
  wire ram_full_i_reg_0;
  wire wr_clk;
  wire wr_en;

  assign full = ram_full_i;
  assign out = ram_full_fb_i;
  LUT2 #(
    .INIT(4'h2)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_i_2 
       (.I0(wr_en),
        .I1(ram_full_fb_i),
        .O(E));
  FDPE #(
    .INIT(1'b1)) 
    \gaf.ram_almost_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gaf.ram_almost_full_i_reg_1 ),
        .PRE(\gaf.ram_almost_full_i_reg_0 ),
        .Q(almost_full));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_fb_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_full_i_reg_0),
        .PRE(\gaf.ram_almost_full_i_reg_0 ),
        .Q(ram_full_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_full_i_reg_0),
        .PRE(\gaf.ram_almost_full_i_reg_0 ),
        .Q(ram_full_i));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl;// ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
